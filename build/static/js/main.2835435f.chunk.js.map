{"version":3,"sources":["components/Notification.js","services/login.js","services/token.js","components/Login.js","services/task.js","services/series.js","services/rule.js","services/category.js","components/Search.js","components/TaskList.js","services/user.js","components/AddAdmin.js","components/Rule.js","services/language.js","components/Language.js","components/Series.js","components/Category.js","components/AddTaskDropdown.js","services/file.js","components/MDEditor.js","components/AddTask.js","components/TaskListPending.js","components/Admin.js","components/EditUser.js","components/ChangePassword.js","components/User.js","components/ModifyTask.js","components/TaskTextDisplay.js","components/Task.js","App.js","index.js"],"names":["Notification","message","type","className","baseUrl","process","credentials","a","async","axios","post","response","data","token","newToken","Login","setUser","useState","errorMessage","setErrorMessage","username","setUsername","password","setPassword","history","useHistory","onSubmit","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","tokenService","push","setTimeout","value","name","placeholder","onChange","target","baseUrlPending","task","config","headers","Authorization","get","id","search","put","delete","series","serie","console","log","rule","cat","category","Search","setTasks","setAllTasks","setSearch","taskService","defaultValue","TaskList","allTasks","tasks","selectedCategory","setSelectedCategory","selectedSeries","setSelectedSeries","selectedRules","setSelectedRules","categories","setCategories","rules","setRules","isClearable","seriess","setSeriess","useEffect","then","categoryService","seriesService","ruleService","length","array","i","j","includes","filter","getOptionLabel","option","getOptionValue","map","s","options","isMulti","c","key","to","onClick","confirm","t","handleDelete","AddAdmin","setMessage","nameErrorMessage","setNameErrorMessage","usernameErrorMessage","setUsernameErrorMessage","passwordErrorMessage","setPasswordErrorMessage","setName","users","setUsers","userService","some","Rule","newRuleName","setNewRuleName","modifiedRuleName","setModifiedRuleName","modifiedRuleId","setModifiedRuleId","modifyVisible","setModifyVisible","hideWhenModifyFormIsVisible","display","hideWhenAddingFormIsVisible","style","addedRule","concat","r","handleRuleDelete","handleShowModify","modifiedRule","language","Language","languages","setLanguages","languageName","setLanguageName","modifiedLanguageName","setModifiedLanguageName","modifiedLanguageId","setModifiedLanguageId","languageService","addedLanguage","l","handleLanguageDelete","modifiedLanguage","Series","modifiedSerieName","setModifiedSerieName","modifiedSerieId","setModifiedSerieId","modifiedSerieColor","setModifiedSerieColor","setSeries","color","setColor","addedSerie","onChangeComplete","hex","colors","handleSerieDelete","modifiedSerie","Category","newCategoryName","setNewCategoryName","modifiedCategoryName","setModifiedCategoryName","modifiedCategoryId","setModifiedCategoryId","addedCategory","handleCategoryDelete","modifiedCategory","AddTaskDropdown","showCategories","setShowCategories","showRules","setShowRules","showLanguages","setShowLanguages","showSeries","setShowSeries","files","MDEditor","setText","setMD","mdParser","MarkdownIt","renderHTML","text","render","html","AddTask","assignmentText","setAssignmentText","gradingScale","setGradingScale","supervisorInstructions","setSupervisorInstructions","assignmentTextMD","setAssignmentTextMD","gradingScaleMD","setGradingScaleMD","supervisorInstructionsMD","setSupervisorInstructionsMD","setRule","setCategory","setLanguage","creatorName","setCreatorName","creatorEmail","setCreatorEmail","assignmentTextErrorMessage","setAssignmentTextErrorMessage","creatorNameErrorMessage","setCreatorNameErrorMessage","creatorEmailErrorMessage","setCreatorEmailErrorMessage","dropDownErrorMessage","setDropDownErrorMessage","setFiles","formData","FormData","append","addedFiles","fileService","location","reload","multiple","e","values","selected","handleSeriesChange","handleCategoryChange","handleRuleChange","handleLanguageChange","onDrop","newFiles","getRootProps","getInputProps","Fragment","file","stopPropagation","handleDeleteFile","TaskListPending","loggedUserJSON","getItem","loggedUser","parse","exception","handleAccept","find","Admin","EditUser","setShowEdit","editedUser","error","ChangePassword","setShowChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","newPasswordAgain","setNewPasswordAgain","User","showEdit","showChangePassword","ModifyTask","setTask","oldFiles","setOldFiles","setNewFiles","filesToDelete","setFilesToDelete","modifiedTask","placeHolder","substring","indexOf","handleDeleteOldFile","handleDeleteNewFile","TaskTextDisplay","dangerouslySetInnerHTML","__html","Task","match","params","href","pending","App","removeItem","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2835435f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/login`\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","let token = null\n\nconst getToken = () => token\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nexport default { getToken, setToken }\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Notification from './Notification'\nimport loginService from '../services/login'\nimport tokenService from '../services/token'\n\nconst Login = ({ setUser }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const history = useHistory()\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user),\n      )\n      setUser(user)\n      tokenService.setToken(user.token)\n      setUsername('')\n      setPassword('')\n      history.push('/')\n    } catch (exception) {\n      setErrorMessage('Väärä käyttäjätunnus/salasana')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"login-form\">\n      <h2>Kirjaudu sisään</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleLogin}>\n        <div>\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            placeholder=\"Salasana\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"login-button\">Kirjaudu</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Login\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/task`\nconst baseUrlPending = `${process.env.REACT_APP_API_URL}/task/pending`\n\n\nconst getTasks = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getPendingTasks = async () => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  const response = await axios.get(baseUrlPending, config)\n  return response.data\n}\n\nconst getSearchedTasks = async (search) => {\n  const response = await axios.post(`${baseUrl}/search`, search)\n  return response.data\n}\n\nconst getOneTask = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst addtask = async (task) => {\n  let config = null\n  const token = tokenService.getToken()\n\n  if (token) {\n    config = {\n      headers: { Authorization: token }\n    }\n  }\n\n  const response = await axios.post(baseUrl, task, config)\n  return response.data\n}\n\nconst updateTask = async (task) => {\n  let config = null\n  const token = tokenService.getToken()\n\n  if (token) {\n    config = {\n      headers: { Authorization: token },\n    }\n  }\n\n  const response = await axios.put(`${baseUrl}/${task.id}`, task, config)\n  return response.data\n}\n\nconst deleteTask = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nconst acceptTask = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  const response = await axios.put(`${baseUrl}/${id}/accept`, id, config)\n  return response.data\n}\n\nexport default { addtask, getTasks, getOneTask, getSearchedTasks, updateTask, deleteTask, getPendingTasks, acceptTask }\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/series`\n\nconst getSeries = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addSeries = async (series) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, series, config)\n  return response.data\n}\n\nconst editSerie = async (serie) => {\n  console.log(serie)\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${serie.id}`, serie, config)\n  return response.data\n\n}\n\nconst deleteSerie = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addSeries, getSeries, deleteSerie, editSerie }\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/rule`\n\nconst getRules = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addRule = async (rule) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, rule, config)\n  return response.data\n}\n\nconst editRule = async (rule) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${rule.id}`, rule, config)\n  return response.data\n\n}\n\nconst deleteRule = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addRule, getRules, editRule, deleteRule }\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/category`\n\nconst getCategories = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addCategory = async (cat) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, cat, config)\n  return response.data\n}\n\nconst editCategory = async (category) => {\n  console.log(category)\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${category.id}`, category, config)\n  return response.data\n\n}\n\nconst deleteCategory = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\n\nexport default { addCategory, getCategories, editCategory, deleteCategory }\n","import React, { useState } from 'react'\nimport taskService from '../services/task'\nimport Notification from './Notification'\n\nconst Search = ({ setTasks, setAllTasks }) => {\n\n  const [search, setSearch] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const handleSearch = async (event) => {\n    event.preventDefault()\n    try {\n      const response = await taskService.getSearchedTasks({ search })\n      setTasks(response)\n      setAllTasks(response)\n    } catch (exception) {\n      setErrorMessage('Haku ei onnistunut')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleSearch} className=\"search-form\">\n        <input\n          className=\"search-input\"\n          type=\"text\"\n          defaultValue=''\n          name=\"search\"\n          placeholder=\"Hakutermi\"\n          onChange={({ target }) => setSearch(target.value)}\n        />\n        <button type=\"submit\" className=\"search-tasks-button\">Hae</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Search","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport taskService from '../services/task'\nimport seriesService from '../services/series'\nimport ruleService from '../services/rule'\nimport categoryService from '../services/category'\nimport Notification from './Notification'\nimport Select from 'react-select'\nimport Search from './Search'\n\nconst TaskList = ({ user }) => {\n  const [allTasks, setAllTasks] = useState([])\n  const [tasks, setTasks] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [selectedCategory, setSelectedCategory] = useState([])\n  const [selectedSeries, setSelectedSeries] = useState([])\n  const [selectedRules, setSelectedRules] = useState('')\n  const [categories, setCategories] = useState([])\n  const [series, setSeries] = useState([])\n  const [rules, setRules] = useState([])\n  const [isClearable, setIsClearable] = useState(true)\n  const [seriess, setSeriess] = useState([])\n\n  useEffect(() => {\n    taskService.getTasks().then((response) => {\n      setTasks(response)\n      setAllTasks(response)\n    })\n\n    categoryService.getCategories().then((response) => {\n      setCategories(response)\n    })\n\n    seriesService.getSeries().then((response) => {\n      setSeriess(response)\n    })\n\n    ruleService.getRules().then((response) => {\n      setRules(response)\n    })\n  }, [])\n\n  useEffect(() => {\n    if (selectedSeries.length > 0 && selectedCategory.length > 0 && selectedRules) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedSeries.length > 0 && selectedCategory.length > 0) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedSeries.length > 0 && selectedRules) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedCategory.length > 0 && selectedRules) {\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id) && task.rules.id === selectedRules.id))\n    } else if (selectedSeries.length > 0) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedCategory.length > 0) {\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id)))\n    } else if (selectedRules) {\n      setTasks(allTasks.filter(task => task.rules.id === selectedRules.id))\n    } else {\n      setTasks(allTasks)\n    }\n  }, [selectedCategory, selectedSeries, selectedRules])\n\n  const handleDelete = async (task) => {\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\n        await taskService.deleteTask(task.id)\n        setTasks(tasks.filter(t => t.id !== task.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSeriesFiltering = (series) => {\n    if (series && series.length > 0) {\n      setSelectedSeries(series.map(s => s.id))\n    } else {\n      setSelectedSeries([])\n      setTasks(allTasks)\n    }\n  }\n\n  const handleCategoryFiltering = (category) => {\n    if (category && category.length > 0) {\n      setSelectedCategory(category.map(c => c.id))\n    } else {\n      setSelectedCategory([])\n      setTasks(allTasks)\n    }\n  }\n\n  const handleRuleFiltering = (rules) => {\n    if (rules) {\n      setSelectedRules(rules)\n    } else {\n      setSelectedRules('')\n      setTasks(allTasks)\n    }\n  }\n\n  return (\n    <div className=\"task-list\">\n      <h1>Kisatehtäväpankki</h1>\n      <div className=\"search-filter-container\">\n        <div className=\"search\"><Search setTasks={setTasks} setAllTasks={setAllTasks} /></div>\n\n        <div className=\"filter\">\n          <Select\n            name=\"filter-series\"\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleSeriesFiltering}\n            options={seriess}\n            isClearable={isClearable}\n            placeholder={\"Sarja\"}\n            isMulti={true}\n          />\n        </div>\n\n        <div className=\"filter\">\n          <Select\n            name=\"filter-category\"\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleCategoryFiltering}\n            options={categories}\n            isClearable={isClearable}\n            placeholder={\"Kategoria\"}\n            isMulti={true}\n          />\n        </div>\n\n        <div className=\"filter\">\n          <Select\n            name=\"filter-rules\"\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleRuleFiltering}\n            options={rules}\n            isClearable={isClearable}\n            placeholder={\"Säännöt\"}\n          />\n        </div>\n      </div>\n\n      <Notification message={errorMessage} />\n      {tasks && tasks.length > 0 &&\n        <div className=\"task-list-title\">\n          <span>Tehtävän nimi</span>\n          <span>Sarja</span>\n          <span>Kategoria</span>\n          {user && <span></span>}\n        </div>\n      }\n      {tasks.map((task) => (\n        <div className=\"task-list-item\" key={task.id}>\n          <span>\n            <Link to={`/tehtava/${task.id}`}>\n              {task.name}\n            </Link>\n          </span>\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n          <span>{task.category && task.category.name}</span>\n          {user && <span><button className=\"delete-button\" onClick={() => handleDelete(task)}>Poista</button></span>\n          }\n        </div>\n      ))}\n    </div>\n\n  )\n}\n\nexport default TaskList\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/user`\n\nconst getUsers = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addUser = async (credentials) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() }\n  }\n  const response = await axios.post(baseUrl, credentials, config)\n  return response.data\n}\n\nconst editUser = async (user) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() }\n  }\n\n  const response = await axios.put(baseUrl, user, config)\n  return response.data\n}\n\nexport default { addUser, getUsers, editUser }\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst AddAdmin = () => {\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(null)\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [users, setUsers] = useState([])\n\n  useEffect(() => {\n    userService.getUsers().then((response) => {\n      setUsers(response)\n    })\n  }, [])\n\n  const handleAddAdmin = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setUsernameErrorMessage(null)\n    setPasswordErrorMessage(null)\n    if (name.length < 3) {\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\n    }\n    if (username.length < 3) {\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\n    }\n    if (password.length < 3) {\n      setPasswordErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\n    }\n    if (users.some((user) => (user.username === username))) {\n      setUsernameErrorMessage('Käyttäjätunnus on varattu')\n    }\n    if (name.length < 3 || username.length < 3 || password.length < 3\n      || users.some((user) => (user.username === username))) {\n      return\n    }\n    try {\n      await userService.addUser({\n        name, username, password,\n      })\n      setName('')\n      setUsername('')\n      setPassword('')\n      setMessage('Ylläpitäjä lisätty!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setErrorMessage('Lisääminen epäonnistui')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"signup-form\">\n      <h2>Lisää ylläpitäjä</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleAddAdmin}>\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={usernameErrorMessage} type=\"error\" />\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={passwordErrorMessage} type=\"error\" />\n          <input\n            className=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            placeholder=\"Salasana\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"signup-button\">Lisää</button>\n      </form>\n    </div>\n  )\n}\n\nexport default AddAdmin\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport ruleService from '../services/rule'\n\nconst Rule = () => {\n  const [newRuleName, setNewRuleName] = useState('')\n  const [modifiedRuleName, setModifiedRuleName] = useState('')\n  const [modifiedRuleId, setModifiedRuleId] = useState('')\n  const [rules, setRules] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  useEffect(() => {\n    ruleService.getRules().then((response) => {\n      setRules(response)\n    })\n  }, [])\n\n\n  const handleRuleAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedRule = await ruleService.addRule({\n        rules: newRuleName,\n      })\n      setNewRuleName('')\n      setRules(rules.concat(addedRule))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleRuleDelete = async (rule) => {\n    try {\n      if (window.confirm(`Haluatko poistaa säännön: ${rule.name}`)) {\n        await ruleService.deleteRule(rule.id)\n        setRules(rules.filter(r => r.id !== rule.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleRuleModify = async (event) => {\n    event.preventDefault()\n    const modifiedRule = { id: modifiedRuleId, name: modifiedRuleName }\n    try {\n      await ruleService.editRule(modifiedRule)\n      setModifyVisible(false)\n      setRules(rules.map(rule => rule.id !== modifiedRule.id ? rule : modifiedRule))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const hideWhenModifyFormIsVisible = { display: modifyVisible ? 'none' : '' }\n  const hideWhenAddingFormIsVisible = { display: modifyVisible ? '' : 'none' }\n\n  const handleShowModify = (rule) => {\n    setModifyVisible(true)\n    setModifiedRuleId(rule.id)\n    setModifiedRuleName(rule.name)\n  }\n\n  return (\n    <div className=\"rule-form\">\n      <Notification message={errorMessage} type=\"error\" />\n      <form style={hideWhenModifyFormIsVisible} onSubmit={handleRuleAdd}>\n        <div>\n          <input\n            className=\"rule\"\n            type=\"text\"\n            value={newRuleName}\n            name=\"Rules\"\n            placeholder=\"Uusi sääntö\"\n            onChange={({ target }) => setNewRuleName(target.value)}\n          />\n          <button type=\"submit\" className=\"rule-add-button\">Lisää</button>\n        </div>\n      </form>\n\n      {rules.map((rule) => (\n        <div style={hideWhenModifyFormIsVisible} className=\"rule-list-item\" key={rule.id}>\n          <p>{rule.name}</p>\n          <button style={hideWhenModifyFormIsVisible} onClick={() => handleRuleDelete(rule)}>Poista</button>\n          <button style={hideWhenModifyFormIsVisible} onClick={() => handleShowModify(rule)}>Muokkaa</button>\n\n        </div>))\n      }\n      <div style={hideWhenAddingFormIsVisible} className=\"rule-form-item\">\n        < form onSubmit={handleRuleModify} >\n          <div>\n            <input\n              className=\"rule\"\n              type=\"text\"\n              value={modifiedRuleName}\n              name=\"Category\"\n              onChange={({ target }) => setModifiedRuleName(target.value)}\n            />\n            <button type=\"submit\" className=\"rule-save-button\">Tallenna</button>\n            <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n          </div>\n\n          <div>\n\n          </div>\n        </form>\n\n      </div>\n\n\n    </div>\n  )\n}\n\n\nexport default Rule\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/language`\n\nconst getLanguages = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addLanguage = async (language) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, language, config)\n  return response.data\n}\n\nconst editLanguage = async (language) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.put(`${baseUrl}/${language.id}`, language, config)\n  return response.data\n\n}\n\n\nconst deleteLanguage = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addLanguage, getLanguages, deleteLanguage, editLanguage }\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport languageService from '../services/language'\n\nconst Language = () => {\n  const [languages, setLanguages] = useState([])\n  const [languageName, setLanguageName] = useState('')\n  const [modifiedLanguageName, setModifiedLanguageName] = useState('')\n  const [modifiedLanguageId, setModifiedLanguageId] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  useEffect(() => {\n    languageService.getLanguages().then((response) => {\n      setLanguages(response)\n    })\n  }, [])\n\n  const handleLanguageAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedLanguage = await languageService.addLanguage({\n        language: languageName,\n      })\n      setLanguageName('')\n      setLanguages(languages.concat(addedLanguage))\n    } catch (exception) {\n      setErrorMessage('Kielen lisääminen ei onnistunut')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLanguageDelete = async (language) => {\n    try {\n      if (window.confirm(`Haluatko poistaa kielen: ${language.name}`)) {\n        await languageService.deleteLanguage(language.id)\n        setLanguages(languages.filter(l => l.id !== language.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLanguageModify = async (event) => {\n    event.preventDefault()\n    const modifiedLanguage = { id: modifiedLanguageId, name: modifiedLanguageName }\n    try {\n      await languageService.editLanguage(modifiedLanguage)\n      setModifyVisible(false)\n      setLanguages(languages.map(language => language.id !== modifiedLanguage.id ? language : modifiedLanguage))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n\n  const hideWhenModifyFormIsVisible = { display: modifyVisible ? 'none' : '' }\n  const hideWhenAddingFormIsVisible = { display: modifyVisible ? '' : 'none' }\n\n\n  const handleShowModify = (language) => {\n    setModifyVisible(true)\n    setModifiedLanguageId(language.id)\n    setModifiedLanguageName(language.name)\n  }\n\n  return (\n    <div className=\"language-form\">\n      <Notification message={errorMessage} type=\"error\" />\n      <form style={hideWhenModifyFormIsVisible} onSubmit={handleLanguageAdd}>\n        <div>\n          <input\n            className=\"language\"\n            type=\"text\"\n            value={languageName}\n            name=\"Language\"\n            placeholder=\"Uusi kieli\"\n            onChange={({ target }) => setLanguageName(target.value)}\n          />\n          <button type=\"submit\" className=\"language-add-button\">Lisää</button>\n        </div>\n      </form>\n\n      {languages.map((language) => (\n        <div style={hideWhenModifyFormIsVisible} className=\"language-list-item\" key={language.id}>\n          <p>{language.name}</p>\n          <button style={hideWhenModifyFormIsVisible} onClick={() => handleLanguageDelete(language)}>Poista</button>\n          <button style={hideWhenModifyFormIsVisible} onClick={() => handleShowModify(language)}>Muokkaa</button>\n\n        </div>))\n      }\n      <div style={hideWhenAddingFormIsVisible} className=\"language-form-item\">\n        < form onSubmit={handleLanguageModify} >\n          <div>\n            <input\n              className=\"language\"\n              type=\"text\"\n              value={modifiedLanguageName}\n              name=\"Language\"\n              onChange={({ target }) => setModifiedLanguageName(target.value)}\n            />\n            <button type=\"submit\" className=\"language-save-button\">Tallenna</button>\n            <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n          </div>\n\n          <div>\n\n          </div>\n        </form>\n\n      </div>\n\n\n    </div>\n  )\n}\n\n\nexport default Language\n","import React, { useState, useEffect } from 'react'\nimport { CirclePicker } from 'react-color'\nimport Notification from './Notification'\nimport seriesService from '../services/series'\n\nconst Series = () => {\n  const [name, setName] = useState('')\n  const [modifiedSerieName, setModifiedSerieName] = useState('')\n  const [modifiedSerieId, setModifiedSerieId] = useState('')\n  const [modifiedSerieColor, setModifiedSerieColor] = useState('')\n  const [series, setSeries] = useState([])\n  const [color, setColor] = useState('#ffffff')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  useEffect(() => {\n    seriesService.getSeries().then((response) => {\n      setSeries(response)\n    })\n  }, [])\n\n  const handleSeriesAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedSerie = await seriesService.addSeries({ name, color })\n      setName('')\n      setColor('')\n      setSeries(series.concat(addedSerie))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSerieDelete = async (serie) => {\n    try {\n      if (window.confirm(`Haluatko poistaa sarjan: ${serie.name}`)) {\n        await seriesService.deleteSerie(serie.id)\n        setSeries(series.filter(s => s.id !== serie.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n\n  }\n\n  const handleSerieModify = async (event) => {\n    event.preventDefault()\n    const modifiedSerie = { id: modifiedSerieId, name: modifiedSerieName, color: modifiedSerieColor }\n    try {\n      await seriesService.editSerie(modifiedSerie)\n      setModifyVisible(false)\n      setSeries(series.map(serie => serie.id !== modifiedSerie.id ? serie : modifiedSerie))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n\n  }\n\n  const hideWhenModifyFormIsVisible = { display: modifyVisible ? 'none' : '' }\n  const hideWhenAddingFormIsVisible = { display: modifyVisible ? '' : 'none' }\n\n  const handleShowModify = (serie) => {\n    console.log(serie.color)\n    setModifyVisible(true)\n    setModifiedSerieId(serie.id)\n    setModifiedSerieName(serie.name)\n    setModifiedSerieColor(serie.color)\n\n  }\n\n\n  return (\n    <div className=\"series-form\">\n      <Notification message={errorMessage} type=\"error\" />\n      <form style={hideWhenModifyFormIsVisible} onSubmit={handleSeriesAdd}>\n        <div>\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n          <button type=\"submit\" className=\"series-submit-button\">Lisää</button>\n        </div>\n        <div className=\"color-picker\">\n          <CirclePicker\n            color={color}\n            onChangeComplete={color => setColor(color.hex)}\n            colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\n              \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\n          />\n        </div>\n\n      </form>\n      {series.map((serie) => (\n        <div style={hideWhenModifyFormIsVisible} className=\"serie-list-item\" key={serie.id}>\n          <p>{serie.name}</p>\n          <button style={hideWhenModifyFormIsVisible} onClick={() => handleSerieDelete(serie)}>Poista</button>\n          <button style={hideWhenModifyFormIsVisible} onClick={() => handleShowModify(serie)}>Muokkaa</button>\n\n        </div>))\n      }\n      <div style={hideWhenAddingFormIsVisible} className=\"serie-form-item\">\n        < form onSubmit={handleSerieModify} >\n          <div>\n            <input\n              className=\"serie\"\n              type=\"text\"\n              value={modifiedSerieName}\n              name=\"Serie\"\n              onChange={({ target }) => setModifiedSerieName(target.value)}\n            />\n            <div className=\"color-picker\">\n              <CirclePicker\n                color={modifiedSerieColor}\n                onChangeComplete={color => setModifiedSerieColor(color.hex)}\n                colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\n                  \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\n              />\n            </div>\n            <button type=\"submit\" className=\"serie-save-button\">Tallenna</button>\n            <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n          </div>\n\n          <div>\n\n          </div>\n        </form>\n\n      </div>\n\n    </div>\n  )\n}\n\nexport default Series\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport categoryService from '../services/category'\n\n\n\nconst Category = () => {\n  const [newCategoryName, setNewCategoryName] = useState('')\n  const [modifiedCategoryName, setModifiedCategoryName] = useState('')\n  const [modifiedCategoryId, setModifiedCategoryId] = useState('')\n  const [categories, setCategories] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  useEffect(() => {\n    categoryService.getCategories().then((response) => {\n      setCategories(response)\n    })\n  }, [])\n\n  const handleCategoryAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedCategory = await categoryService.addCategory({\n        category: newCategoryName\n      })\n      setNewCategoryName('')\n      setCategories(categories.concat(addedCategory))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCategoryDelete = async (category) => {\n    try {\n      if (window.confirm(`Haluatko poistaa kategorian: ${category.name}`)) {\n        await categoryService.deleteCategory(category.id)\n        setCategories(categories.filter(c => c.id !== category.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCategoryModify = async (event) => {\n    event.preventDefault()\n    const modifiedCategory = { id: modifiedCategoryId, name: modifiedCategoryName }\n    try {\n      await categoryService.editCategory(modifiedCategory)\n      setModifyVisible(false)\n      setCategories(categories.map(category => category.id !== modifiedCategory.id ? category : modifiedCategory))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n \n  const hideWhenModifyFormIsVisible = { display: modifyVisible ? 'none' : '' }\n  const hideWhenAddingFormIsVisible = { display: modifyVisible ? '' : 'none' }\n\n  const handleShowModify = (category) => {\n    setModifyVisible(true)\n    setModifiedCategoryId(category.id)\n    setModifiedCategoryName(category.name)\n  }\n\n\n\n  return (\n    <div className=\"category-form\" >\n\n      <Notification message={errorMessage} type=\"error\" />\n      <form style={hideWhenModifyFormIsVisible} onSubmit={handleCategoryAdd}>\n        <div>\n          <input\n            className=\"category\"\n            type=\"text\"\n            value={newCategoryName}\n            name=\"Category\"\n            placeholder=\"Uusi kategoria\"\n            onChange={({ target }) => setNewCategoryName(target.value)}\n          />\n          <button type=\"submit\" className=\"category-add-button\">Lisää</button>\n        </div>\n\n      </form>\n\n      {categories.map((category) => (\n        <div style={hideWhenModifyFormIsVisible} className=\"category-list-item\" key={category.id}>\n          <p>{category.name}</p>\n          <button style={hideWhenModifyFormIsVisible} onClick={() => handleCategoryDelete(category)}>Poista</button>\n          <button style={hideWhenModifyFormIsVisible} onClick={() => handleShowModify(category)}>Muokkaa</button>\n\n        </div>))\n      }\n      <div style={hideWhenAddingFormIsVisible} className=\"category-form-item\">\n        < form onSubmit={handleCategoryModify} >\n          <div>\n            <input\n              className=\"category\"\n              type=\"text\"\n              value={modifiedCategoryName}\n              name=\"Category\"\n              onChange={({ target }) => setModifiedCategoryName(target.value)}\n            />\n            <button type=\"submit\" className=\"category-save-button\">Tallenna</button>\n            <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n          </div>\n\n          <div>\n\n          </div>\n        </form>\n\n      </div>\n\n    </div>\n\n\n\n  )\n}\n\nexport default Category\n","import React, { useState, Fragment } from 'react'\nimport Rule from './Rule'\nimport Language from './Language'\nimport Series from './Series'\nimport Category from './Category'\n\nconst AddTaskDropdown = () => {\n  const [showCategories, setShowCategories] = useState(false)\n  const [showRules, setShowRules] = useState(false)\n  const [showLanguages, setShowLanguages] = useState(false)\n  const [showSeries, setShowSeries] = useState(false)\n\n\n  return (\n    <div >\n      <div className=\"task-types-menu\">\n        {showCategories ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowCategories(!showCategories)}>Sulje kategoriat</button>\n            <Category />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowCategories(!showCategories)}>Kategoriat</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showLanguages ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowLanguages(!showLanguages)}>Sulje kielet</button>\n            <Language />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowLanguages(!showLanguages)}>Kielet</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showSeries ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowSeries(!showSeries)}>Sulje sarjat</button>\n            <Series />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowSeries(!showSeries)}>Sarjat</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showRules ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowRules(!showRules)}>Sulje säännöt</button>\n            <Rule />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowRules(!showRules)}>Säännöt</button>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default AddTaskDropdown\n","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/file`\n\nconst updateFiles = async (files) => {\n  const config = {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }\n\n  const response = await axios.post(baseUrl, files, config)\n  return response.data\n}\n\nexport default { updateFiles }\n","import React from 'react'\nimport MarkdownIt from 'markdown-it'\nimport MdEditor from 'react-markdown-editor-lite'\nimport 'react-markdown-editor-lite/lib/index.css'\n\nconst MDEditor = ({ setText, setMD, value }) => {\n  const mdParser = new MarkdownIt()\n\n  const handleEditorChange = ({ html, text }) => {\n    setText(html)\n    setMD(text)\n  }\n\n  return (\n    <MdEditor\n      value={value}\n      renderHTML={(text) => mdParser.render(text)}\n      onChange={handleEditorChange}\n    />\n  )\n}\n\nexport default MDEditor\n\n\n\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport taskService from '../services/task'\nimport fileService from '../services/file'\nimport ruleService from '../services/rule'\nimport categoryService from '../services/category'\nimport seriesService from '../services/series'\nimport languageService from '../services/language'\nimport MDEditor from './MDEditor'\nimport Dropzone from 'react-dropzone'\n\nconst AddTask = () => {\n\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [name, setName] = useState('')\n  const [assignmentText, setAssignmentText] = useState('')\n  const [gradingScale, setGradingScale] = useState('')\n  const [supervisorInstructions, setSupervisorInstructions] = useState('')\n  const [assignmentTextMD, setAssignmentTextMD] = useState('')\n  const [gradingScaleMD, setGradingScaleMD] = useState('')\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState('')\n  const [rules, setRules] = useState([])\n  const [rule, setRule] = useState('')\n  const [categories, setCategories] = useState([])\n  const [category, setCategory] = useState('')\n  const [seriess, setSeriess] = useState([])\n  const [series, setSeries] = useState([])\n  const [languages, setLanguages] = useState([])\n  const [language, setLanguage] = useState('')\n  const [creatorName, setCreatorName] = useState('')\n  const [creatorEmail, setCreatorEmail] = useState('')\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\n  const [files, setFiles] = useState([])\n\n  useEffect(() => {\n    ruleService.getRules().then(response => {\n      setRules(response)\n    })\n    categoryService.getCategories().then(response => {\n      setCategories(response)\n    })\n    seriesService.getSeries().then(response => {\n      setSeriess(response)\n    })\n    languageService.getLanguages().then(response => {\n      setLanguages(response)\n    })\n  }, [])\n\n  const handleRuleChange = (e) => {\n    setRule(e.target.value)\n  }\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value)\n  }\n\n  const handleSeriesChange = (e) => {\n    let options = e.target.options\n    let values = []\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected && options[i].value !== '') {\n        values.push(options[i].value)\n      }\n    }\n    setSeries(values)\n  }\n\n  const handleLanguageChange = (e) => {\n    setLanguage(e.target.value)\n  }\n\n  const handleAddTask = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setAssignmentTextErrorMessage(null)\n    setCreatorNameErrorMessage(null)\n    setCreatorEmailErrorMessage(null)\n    setDropDownErrorMessage(null)\n    if (name.length < 1) {\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\n    }\n    if (assignmentText.length < 1) {\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\n    }\n    if (creatorName.length < 1) {\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\n    }\n    if (creatorEmail.length < 1) {\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\n    }\n    if (language === '' || rule === '' || series === '' || category === '') {\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\n    }\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\n            || language === '' || rule === '' || series === '' || category === '') {\n      return\n    }\n    setAssignmentText(JSON.stringify(assignmentText))\n    setGradingScale(JSON.stringify(gradingScale))\n    setSupervisorInstructions(JSON.stringify(supervisorInstructions))\n\n    let formData = new FormData()\n\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n          formData.append('filesToAdd', files[i], files[i].name)\n      }\n    }\n\n    let addedFiles = []\n\n    try {\n      addedFiles = await fileService.updateFiles(formData)\n      await taskService.addtask({\n        name, rule, category, series,\n        language, assignmentText, gradingScale,\n        creatorName, creatorEmail, supervisorInstructions,\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD,\n        files: addedFiles\n      })\n      setName('')\n      setRule('')\n      setCategory('')\n      setSeries('')\n      setLanguage('')\n      setAssignmentText('')\n      setGradingScale('')\n      setCreatorEmail('')\n      setCreatorName('')\n      setSupervisorInstructions('')\n      setMessage('Tehtävä lisätty!')\n      setTimeout(() => {\n        setMessage(null)\n        window.location.reload()\n      }, 2000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const onDrop = (newFiles) => {\n    setFiles(files.concat(newFiles))\n  }\n\n  const handleDeleteFile = (e, name) => {\n    e.stopPropagation()\n    setFiles(files.filter(file => file.name !== name))\n  }\n\n  return (\n    <div className=\"add-task-container\">\n      <h2>Lisää tehtävä</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleAddTask}>\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"task-title\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Tehtävän nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <h4>Tehtävänanto</h4>\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} />\n        </div>\n        <div>\n          <h4>Arvostelu</h4>\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} />\n        </div>\n        <div className=\"instructions\">\n          <h4>Rastimiehen ohje</h4>\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} />\n        </div>\n        <Notification message={dropDownErrorMessage} type=\"error\" />\n        <div className=\"dropdowns\">\n          <div>\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <select value={category} onChange={(e) => handleCategoryChange(e)}>\n              <option value=\"\">Kategoria</option>\n              {categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)}\n            </select>\n            <br/>\n            <select value={rule} onChange={(e) => handleRuleChange(e)}>\n              <option value=\"\">Säännöt</option>\n              {rules.map(rule => <option key={rule.id} value={rule.id}>{rule.name}</option>)}\n            </select>\n            <br/>\n            <select value={language} onChange={(e) => handleLanguageChange(e)}>\n              <option value=\"\">Kieli</option>\n              {languages.map(language => <option key={language.id} value={language.id}>{language.name}</option>)}\n            </select>\n          </div>\n        </div>\n        <div className=\"creator\">\n          <div>\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              value={creatorName}\n              name=\"CreatorName\"\n              placeholder=\"Lisääjän nimi\"\n              onChange={({ target }) => setCreatorName(target.value)}\n            />\n          </div>\n          <div>\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              value={creatorEmail}\n              name=\"CreatorEmail\"\n              placeholder=\"Lisääjän sähköpostiosoite\"\n              onChange={({ target }) => setCreatorEmail(target.value)}\n            />\n          </div>\n        </div>\n\n        <Dropzone onDrop={onDrop}>\n          {({getRootProps, getInputProps}) => (\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              <div className=\"files\">\n                <div className=\"title\">Liitetiedostot</div>\n                {files.length > 0 &&\n                  <React.Fragment>\n                    {files.map((file) => (\n                      <div key={file.name}>{file.name}<b onClick={(e) => handleDeleteFile(e, file.name)}>x</b></div>\n                    ))}\n                  </React.Fragment>\n                }\n              </div>\n            </div>\n          )}\n        </Dropzone>\n\n        <button type=\"submit\" className=\"add-task-button\">Lisää tehtävä</button>\n      </form>\n    </div>\n  )\n}\nexport default AddTask","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport taskService from '../services/task'\nimport Notification from './Notification'\nimport tokenService from '../services/token'\n\n\nconst TaskListPending = () => {\n  const [tasks, setTasks] = useState([])\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    if (!tokenService.getToken()) {\n      const loggedUserJSON = window.localStorage.getItem('loggedUser')\n      if (loggedUserJSON) {\n        const loggedUser = JSON.parse(loggedUserJSON)\n        tokenService.setToken(loggedUser.token)\n      }\n    }\n    taskService.getPendingTasks().then((response) => {\n      setTasks(response)\n    })\n  }, [])\n\n  const handleAccept = (id) => {\n    try {\n      taskService.acceptTask(id)\n      setTasks(tasks.filter(t => t.id !== id))\n      setMessage('Tehtävä hyväksytty')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleDelete = async (id) => {\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${tasks.find(t => t.id === id).name}`)) {\n        await taskService.deleteTask(id)\n        setTasks(tasks.filter(t => t.id !== id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"task-list\">\n      <h1>Hyväksyntää odottavat kisatehtävät</h1>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      {tasks && tasks.length > 0 &&\n        <div className=\"task-list-title\">\n          <span>Tehtävän nimi</span>\n          <span>Sarja</span>\n          <span>Kategoria</span>\n          <span></span>\n        </div>\n      }\n      {tasks.map((task) => (\n        <div className={`task-list-item pending`} key={task.id}>\n          <span>\n            <Link to={`/tehtava/${task.id}`}>\n              {task.name}\n            </Link>\n          </span>\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n          <span>{task.category && task.category.name}</span>\n          <span>\n            <button className=\"accept-button\" onClick={() => handleAccept(task.id)}>Hyväksy</button>\n            <button className=\"delete-button\" onClick={() => handleDelete(task.id)}>Poista</button>\n          </span>\n        </div>\n      ))}\n\n    </div>\n\n  )\n}\n\nexport default TaskListPending\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport TaskListPending from './TaskListPending'\n\nconst Admin = () => (\n  <div>\n    <TaskListPending />\n    <Link to=\"/omasivu\">Omat tiedot</Link>\n    <br />\n    <Link to=\"/lisaa_admin\">Lisää ylläpitäjä</Link>\n    <br />\n    <Link to=\"/lisaa_pudotusvalikkoon\">Hallinnoi sääntöjä/kieliä/sarjoja/kategorioita</Link>\n  </div>\n)\n\nexport default Admin\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst EditUser = ({ setShowEdit, user, setUser, setMessage }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\n  const [name, setName] = useState(user.name)\n  const [username, setUsername] = useState(user.username)\n\n  const handleEditUser = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setUsernameErrorMessage(null)\n    if (name.length < 3) {\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\n    }\n    if (username.length < 3) {\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\n    }\n    if (name.length < 3 || username.length < 3) {\n      return\n    }\n    try {\n      const editedUser = await userService.editUser({\n        name, username\n      })\n      setUser(editedUser)\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(editedUser),\n      )\n      setShowEdit(false)\n      setMessage('Tietoja muokattu!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"username already exists\") {\n        setErrorMessage('Käyttäjätunnus on varattu')\n      } else {\n        setErrorMessage('Muokkaaminen epäonnistui')\n      }\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"edit-user-form\">\n      <h2>Omat tiedot</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleEditUser}>\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <label>Nimi</label><br/>\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={usernameErrorMessage} type=\"error\" />\n          <label>Käyttäjätunnus</label><br/>\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"edit-button\">Tallenna</button>\n        <button onClick={() => setShowEdit(false)} className=\"cancel-button\">Peruuta</button>\n      </form>\n    </div>\n  )\n}\n\nexport default EditUser\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst ChangePassword = ({ setShowChangePassword, setMessage }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [newPasswordAgain, setNewPasswordAgain] = useState('')\n\n  const handleChangePassword = async (event) => {\n    event.preventDefault()\n    setErrorMessage(null)\n    if (newPassword.length < 3) {\n      setErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\n      return\n    }\n    if (newPassword !== newPasswordAgain) {\n      setErrorMessage('Salasanat eivät täsmää')\n      return\n    }\n    try {\n      await userService.editUser({\n        oldPassword, newPassword\n      })\n      setOldPassword('')\n      setNewPassword('')\n      setNewPasswordAgain('')\n      setShowChangePassword(false)\n      setMessage('Salasana vaihdettu!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"incorrect password\") {\n        setErrorMessage('Vanha salasana ei täsmää')\n      } else {\n        setErrorMessage('Salasanan vaihtaminen epäonnistui')\n      }\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"change-password-form\">\n      <h2>Vaihda salasana</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleChangePassword}>\n        <div>\n          <input\n            className=\"old-password\"\n            type=\"password\"\n            value={oldPassword}\n            placeholder=\"Vanha salasana\"\n            onChange={({ target }) => setOldPassword(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"new-password\"\n            type=\"password\"\n            value={newPassword}\n            placeholder=\"Uusi salasana\"\n            onChange={({ target }) => setNewPassword(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"new-password-again\"\n            type=\"password\"\n            value={newPasswordAgain}\n            placeholder=\"Uusi salasana uudelleen\"\n            onChange={({ target }) => setNewPasswordAgain(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"change-password-button\">Tallenna</button>\n        <button onClick={() => setShowChangePassword(false)} className=\"cancel-button\">Peruuta</button>\n      </form>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport EditUser from './EditUser'\nimport ChangePassword from './ChangePassword'\n\nconst User = ({ user, setUser }) => {\n  const [message, setMessage] = useState(null)\n  const [showEdit, setShowEdit] = useState(false)\n  const [showChangePassword, setShowChangePassword] = useState(false)\n\n  const editUser = () => {\n    setShowChangePassword(false)\n    setShowEdit(true)\n  }\n\n  const changePassword = () => {\n    setShowEdit(false)\n    setShowChangePassword(true)\n  }\n\n  return (\n    <div>\n      {user\n        && (\n          <div className=\"user-info\">\n            {!showEdit && !showChangePassword\n            && (\n              <div>\n                <Notification message={message} type=\"success\" />\n                <h2>Omat tiedot</h2>\n                <p>\n                  <b>Nimi: </b>\n                  {user.name}\n                </p>\n                <p>\n                  <b>Käyttäjätunnus: </b>\n                  {user.username}\n                </p>\n                <button className=\"edit-user-button\" onClick={() => editUser()}>Muokkaa</button>\n                <button className=\"change-password-button\" onClick={() => changePassword()}>Vaihda salasana</button>\n              </div>\n            )}\n            {showEdit && <EditUser setShowEdit={setShowEdit} user={user} setUser={setUser} setMessage={setMessage} />}\n            {showChangePassword && <ChangePassword setShowChangePassword={setShowChangePassword} setMessage={setMessage} />}\n          </div>\n        )}\n    </div>\n  )\n}\n\nexport default User\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport taskService from '../services/task'\nimport fileService from '../services/file'\nimport ruleService from '../services/rule'\nimport categoryService from '../services/category'\nimport seriesService from '../services/series'\nimport languageService from '../services/language'\nimport MDEditor from './MDEditor'\nimport Dropzone from 'react-dropzone'\n\nconst ModifyTask = ({ setModifyVisible, task, setTask }) => {\n\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [name, setName] = useState(task.name)\n  const [assignmentText, setAssignmentText] = useState(task.assignmentText)\n  const [gradingScale, setGradingScale] = useState(task.gradingScale)\n  const [supervisorInstructions, setSupervisorInstructions] = useState(task.supervisorInstructions)\n  const [assignmentTextMD, setAssignmentTextMD] = useState(task.assignmentTextMD)\n  const [gradingScaleMD, setGradingScaleMD] = useState(task.gradingScaleMD)\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState(task.supervisorInstructionsMD)\n  const [rules, setRules] = useState([])\n  const [rule, setRule] = useState(task.rules ? task.rules.id : null)\n  const [categories, setCategories] = useState([])\n  const [category, setCategory] = useState(task.category ? task.category.id : null)\n  const [seriess, setSeriess] = useState([])\n  const [series, setSeries] = useState(task.series.map(s => s.id))\n  const [languages, setLanguages] = useState([])\n  const [language, setLanguage] = useState(task.language ? task.language.id : null)\n  const [creatorName, setCreatorName] = useState(task.creatorName)\n  const [creatorEmail, setCreatorEmail] = useState(task.creatorEmail)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\n  const [oldFiles, setOldFiles] = useState(task.files || [])\n  const [newFiles, setNewFiles] = useState([])\n  const [filesToDelete, setFilesToDelete] = useState([])\n\n  let id = task.id\n\n  useEffect(() => {\n    ruleService.getRules().then(response => {\n      setRules(response)\n    })\n    categoryService.getCategories().then(response => {\n      setCategories(response)\n    })\n    seriesService.getSeries().then(response => {\n      setSeriess(response)\n    })\n    languageService.getLanguages().then(response => {\n      setLanguages(response)\n    })\n  }, [])\n\n  const handleRuleChange = (e) => {\n    setRule(e.target.value)\n  }\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value)\n  }\n\n  const handleSeriesChange = (e) => {\n    let options = e.target.options\n    let values = []\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected && options[i].value !== '') {\n        values.push(options[i].value)\n      }\n    }\n    setSeries(values)\n  }\n\n  const handleLanguageChange = (e) => {\n    setLanguage(e.target.value)\n  }\n\n  const handleModifyTask = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setAssignmentTextErrorMessage(null)\n    setCreatorNameErrorMessage(null)\n    setCreatorEmailErrorMessage(null)\n    setDropDownErrorMessage(null)\n    if (name.length < 1) {\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\n    }\n    if (assignmentText.length < 1) {\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\n    }\n    if (creatorName.length < 1) {\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\n    }\n    if (creatorEmail.length < 1) {\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\n    }\n    if (language === '' || rule === '' || series === '' || category === '') {\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\n    }\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\n      || language === '' || rule === '' || series === '' || category === '') {\n      return\n    }\n\n    let formData = new FormData()\n\n    formData.append('filesToDelete', filesToDelete)\n\n    if (newFiles.length > 0) {\n      for (let i = 0; i < newFiles.length; i++) {\n          formData.append('filesToAdd', newFiles[i], newFiles[i].name)\n      }\n    }\n\n    let addedFiles = []\n\n    try {\n      addedFiles = await fileService.updateFiles(formData)\n      const modifiedTask = await taskService.updateTask({\n        name, rule, category, series,\n        language, assignmentText, gradingScale,\n        creatorName, creatorEmail, supervisorInstructions, id,\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD,\n        files: oldFiles.concat(addedFiles)\n      })\n      setMessage('Tehtävä tallennettu!')\n      setTask(modifiedTask)\n      setTimeout(() => {\n        setMessage(null)\n        window.location.reload()\n      }, 1000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCancel = () => {\n    setModifyVisible(false)\n  }\n\n  const onDrop = (files) => {\n    setNewFiles(newFiles.concat(files))\n  }\n\n  const handleDeleteOldFile = (e, name) => {\n    e.stopPropagation()\n    setOldFiles(oldFiles.filter(file => file !== name))\n    setFilesToDelete(filesToDelete.concat(name))\n  }\n\n  const handleDeleteNewFile = (e, name) => {\n    e.stopPropagation()\n    setNewFiles(newFiles.filter(file => file.name !== name))\n  }\n\n  return (\n    <div className=\"modify-task-container\">\n      <h2>Muokkaa tehtävää</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleModifyTask} className=\"modify-form\">\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"task-title\"\n            type=\"text\"\n            defaultValue={name}\n            name=\"Name\"\n            placeholder=\"Tehtävän nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <h4>Tehtävänanto</h4>\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} value={assignmentTextMD} placeHolder=\"Tehtävänanto\" />\n        </div>\n        <div>\n          <h4>Arvostelu</h4>\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} value={gradingScaleMD} placeHolder=\"Arvostelu\" />\n        </div>\n        <div className=\"instructions\">\n          <h4>Rastimiehen ohje</h4>\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} value={supervisorInstructionsMD} placeHolder=\"Rastimiehen ohje\" />\n        </div>\n        <Notification message={dropDownErrorMessage} type=\"error\" />\n        <div className=\"dropdowns\">\n          <div>\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <select value={category} onChange={(e) => handleCategoryChange(e)}>\n              <option value=\"\">Kategoria</option>\n              {categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)}\n            </select>\n            <br/>\n            <select value={rule} onChange={(e) => handleRuleChange(e)}>\n              <option value=\"\">Säännöt</option>\n              {rules.map(rule => <option key={rule.id} value={rule.id}>{rule.name}</option>)}\n            </select>\n            <br/>\n            <select value={language} onChange={(e) => handleLanguageChange(e)}>\n              <option value=\"\">Kieli</option>\n              {languages.map(language => <option key={language.id} value={language.id}>{language.name}</option>)}\n            </select>\n          </div>\n        </div>\n        <div className=\"creator\">\n          <div>\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              defaultValue={creatorName}\n              name=\"CreatorName\"\n              placeholder=\"Muokkaajan nimi\"\n              onChange={({ target }) => setCreatorName(target.value)}\n            />\n          </div>\n          <div>\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              defaultValue={creatorEmail}\n              name=\"CreatorEmail\"\n              placeholder=\"Muokkaajan sähköpostiosoite\"\n              onChange={({ target }) => setCreatorEmail(target.value)}\n            />\n          </div>\n        </div>\n\n        <Dropzone onDrop={onDrop}>\n          {({getRootProps, getInputProps}) => (\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              <div className=\"files\">\n                <div className=\"title\">Liitetiedostot</div>\n                {oldFiles && oldFiles.length > 0 &&\n                  <React.Fragment>\n                    {oldFiles.map((file) => (\n                      <div key={file}>{file.substring(file.indexOf('-') + 1, file.length)}<b onClick={(e) => handleDeleteOldFile(e, file)}>x</b></div>\n                    ))}\n                  </React.Fragment>\n                }\n                {newFiles && newFiles.length > 0 &&\n                  <React.Fragment>\n                    {newFiles.map((file) => (\n                      <div key={file.name}>{file.name}<b onClick={(e) => handleDeleteNewFile(e, file.name)}>x</b></div>\n                    ))}\n                  </React.Fragment>\n                }\n              </div>\n            </div>\n          )}\n        </Dropzone>\n\n        <div>\n          <button type=\"submit\" className=\"save-task-button\">Tallenna</button>\n          <button onClick={() => handleCancel()} className=\"return-button\">Peruuta</button>\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default ModifyTask","import React from 'react'\n\nconst TaskTextDisplay = ({ text }) => {\n  const htmlConverter = () => {\n    return { __html: `${text}` }\n  }\n\n  return (\n    <div dangerouslySetInnerHTML={htmlConverter()} />\n  )\n}\n\nexport default TaskTextDisplay","import React, { useState, useEffect } from 'react'\nimport taskService from '../services/task'\nimport ModifyTask from './ModifyTask'\nimport Notification from './Notification'\nimport TaskTextDisplay from './TaskTextDisplay'\nimport { useHistory } from 'react-router-dom'\n\nconst Task = ({ match, user }) => {\n\n  const [task, setTask] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const history = useHistory()\n\n  useEffect(() => {\n    taskService.getOneTask(match.params.id).then((response) => {\n      setTask(response)\n    })\n  }, [])\n\n  const handleDelete = () => {\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\n        taskService.deleteTask(task.id)\n        setMessage('Tehtävä poistettu')\n        setTimeout(() => {\n          setMessage(null)\n          if (task.pending) {\n            history.push('/admin')\n          } else {\n            history.push('/')\n          }\n        }, 2000)\n      }\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleAccept = () => {\n    try {\n      taskService.acceptTask(task.id)\n      setMessage('Tehtävä hyväksytty')\n      setTimeout(() => {\n        setMessage(null)\n        history.push('/admin')\n      }, 2000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      {modifyVisible ?\n        <ModifyTask setModifyVisible={setModifyVisible} task={task} setTask={setTask} />\n        :\n        <div className=\"task-view-info-background\">\n          <Notification message={message} type=\"success\" />\n          <Notification message={errorMessage} type=\"error\" />\n          {task &&\n            <div className=\"task-view-info\">\n              <h2>{task.name}</h2>\n              <h3>Tehtävänanto:</h3>\n              <TaskTextDisplay text={task.assignmentText} />\n              <h3>Rastimiehen ohjeet:</h3>\n              <TaskTextDisplay text={task.supervisorInstructions} />\n              <h3>Arvosteluasteikko:</h3>\n              <TaskTextDisplay text={task.gradingScale} />\n              <h3>Sarja:</h3>\n              {task.series.map(s => <span key={task.id + s.id}>{s.name}<br /></span>)}\n              <h3>Kategoria:</h3>\n              <p>{task.category && task.category.name}</p>\n              <h3>Sääntöluokka:</h3>\n              <p>{task.rules && task.rules.name}</p>\n              <h3>Tehtävän viimeisin muokkaaja:</h3>\n              <p>{task.creatorName}<br />{task.creatorEmail}</p>\n              <h3>Liitetiedostot:</h3>\n              {task.files && task.files.map((file) => (\n                <div key={file}>\n                  <a href={`https://kisapankki.blob.core.windows.net/files/${file}`}>\n                    {file.substring(file.indexOf('-') + 1, file.length)}\n                  </a>\n                </div>\n              ))}\n              {user &&\n                <div>\n                  <button onClick={() => setModifyVisible(true)} className=\"modify-view-button\">Muokkaa</button>\n                  {task.pending && <button className=\"accept-button\" onClick={() => handleAccept()}>Hyväksy</button>}\n                  <button className=\"delete-button\" onClick={() => handleDelete()}>Poista</button>\n                </div>}\n            </div>\n          }\n        </div>\n\n      }\n    </div>\n\n  )\n}\n\nexport default Task\n","import React, { useState, useEffect, Fragment } from 'react'\nimport { Route, Link, Redirect, useHistory } from 'react-router-dom'\nimport Login from './components/Login'\nimport TaskList from './components/TaskList'\nimport AddAdmin from './components/AddAdmin'\nimport AddTaskDropdown from './components/AddTaskDropdown'\nimport AddTask from './components/AddTask'\nimport Admin from './components/Admin'\nimport User from './components/User'\nimport Task from './components/Task'\nimport tokenService from './services/token'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const history = useHistory()\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const loggedUser = JSON.parse(loggedUserJSON)\n      setUser(loggedUser)\n      tokenService.setToken(loggedUser.token)\n    }\n  }, [])\n\n  const logout = () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n    tokenService.setToken(null)\n    history.push('/')\n    window.location.reload()\n  }\n\n  return (\n    <div>\n      <div className=\"header\">\n        <Link to=\"/\"><div className=\"logo\" /></Link>\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-header\">Lisää tehtävä</button></Link>\n\n        {user === null ?\n          <Fragment>\n            <Link to=\"/kirjautuminen\"><button className=\"login-button-header\">Kirjaudu</button></Link>\n          </Fragment>\n          :\n          <Fragment>\n            <Link to=\"/admin\"><button className=\"admin-button-header\">Admin</button></Link>\n            <div>\n              <div className=\"logged\">Kirjautuneena <Link to=\"/omasivu\" className=\"username-header\">{user.username}</Link></div>\n              <div className=\"logout\"><button className=\"logout-button-header\" onClick={() => logout()}>Kirjaudu ulos</button></div>\n            </div>\n          </Fragment>\n        }\n\n      </div>\n      <div className=\"admin-task-buttons-mobile\">\n        {user !== null && <Link to=\"/admin\"><button className=\"admin-button-mobile\">Admin</button></Link>}\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-mobile\">Lisää tehtävä</button></Link>\n      </div>\n      <div className=\"container\">\n        <Route exact path=\"/\" render={() => <TaskList user={user} />} />\n        <Route exact path=\"/tehtava/:id\" render={(match) => <Task {...match} user={user} />} />\n        <Route path=\"/kirjautuminen\" render={() => <Login setUser={setUser} />} />\n        <Route path=\"/lisaa_tehtava\" render={() => <AddTask />} />\n        <Route path=\"/omasivu\" render={() => (localStorage.getItem('loggedUser') ? <User user={user} setUser={setUser} /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/admin\" render={() => (localStorage.getItem('loggedUser') ? <Admin /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/lisaa_admin\" render={() => (localStorage.getItem('loggedUser') ? <AddAdmin /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/lisaa_pudotusvalikkoon\" render={() => (localStorage.getItem('loggedUser') ? <AddTaskDropdown /> : <Redirect to=\"/\" />)} />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}