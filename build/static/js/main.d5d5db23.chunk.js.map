{"version":3,"sources":["components/misc/Notification.js","services/login.js","services/token.js","components/user/Login.js","components/frontpage/FrontPageInfo.js","services/task.js","components/frontpage/FrontPage.js","components/misc/Search.js","components/misc/Filter.js","components/task/TaskList.js","components/competition/Competition.js","components/competition/Basket.js","services/user.js","components/admin/AddAdmin.js","services/rule.js","components/rulecatlangserie/Rule.js","services/language.js","components/rulecatlangserie/Language.js","services/series.js","components/rulecatlangserie/Series.js","services/category.js","components/rulecatlangserie/Category.js","components/rulecatlangserie/AddTaskDropdown.js","services/file.js","components/misc/MDEditor.js","components/task/AddTask.js","components/task/TaskListPending.js","services/comment.js","components/comments/CommentListPending.js","components/admin/Admin.js","components/user/EditUser.js","components/user/ChangePassword.js","components/user/User.js","components/misc/Rating.js","components/comments/AddComment.js","components/comments/Comment.js","components/task/ModifyTask.js","components/task/TaskTextDisplay.js","components/task/Task.js","App.js","index.js"],"names":["Notification","message","type","className","baseUrl","process","login","credentials","a","axios","post","response","data","token","newToken","Login","setUser","useState","errorMessage","setErrorMessage","username","setUsername","email","setEmail","password","setPassword","history","useHistory","handleLogin","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","tokenService","push","setTimeout","onSubmit","value","name","placeholder","onChange","target","FrontPageInfo","baseUrlPending","getTasks","get","getPendingTasks","config","headers","Authorization","getSearchedTasks","search","getOneTask","id","addtask","task","updateTask","put","deleteTask","delete","acceptTask","addRating","rating","updateViews","makePDF","formData","responseType","makePDFs","FrontPage","tasks","addTaskToBasket","handleUpdateTask","newTasks","setNewTasks","favoriteTasks","setFavoriteTasks","useEffect","sort","compareCreated","slice","compareRatings","handleUpdateViews","taskService","views","b","created","localeCompare","ratingsAVG","map","to","onClick","key","title","e","series","s","category","Search","setTasks","setAllTasks","setSearch","handleSearch","defaultValue","Filter","allTasks","categories","rules","selectedCategory","setSelectedCategory","selectedSeries","setSelectedSeries","selectedRules","setSelectedRules","length","array","i","j","includes","filter","getOptionLabel","option","getOptionValue","options","isClearable","isMulti","c","TaskList","originalTasks","seriess","handleDeleteTask","nameAsc","setNameAsc","ratingDesc","setRatingDesc","dateDesc","setDateDesc","handleDelete","confirm","compareNamesAsc","compareNamesDesc","compareRatingsAsc","compareRatingsDesc","compareCreatedAsc","compareCreatedDesc","concat","starRatedColor","starDimension","starSpacing","format","Competition","date","place","logo","setName","setDate","setPlace","setType","setLogo","onDrop","getRootProps","getInputProps","src","URL","createObjectURL","alt","stopPropagation","handleDeleteLogo","Basket","removeTaskFromBasket","removeAllFromBasket","showLoader","setShowLoader","handleMakePDFs","FormData","competition","t","append","PDFs","url","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","files","file","substring","indexOf","getUsers","addUser","editUser","AddAdmin","setMessage","nameErrorMessage","setNameErrorMessage","usernameErrorMessage","setUsernameErrorMessage","passwordErrorMessage","setPasswordErrorMessage","emailErrorMessage","setEmailErrorMessage","allowNotifications","setAllowNotifications","handleAddAdmin","userService","error","defaultChecked","getRules","addRule","rule","editRule","deleteRule","Rule","setRules","newRuleName","setNewRuleName","modifiedRuleName","setModifiedRuleName","modifiedRuleId","setModifiedRuleId","modifyVisible","setModifyVisible","acceptedCategories","setAcceptedCategories","modifiedCategories","setModifiedCategories","handleRuleAdd","newCategories","ruleService","addedRule","handleRuleDelete","r","handleRuleModify","modifiedRule","handleModifyCategories","handleShowModify","getLanguages","addLanguage","language","editLanguage","deleteLanguage","Language","languages","setLanguages","languageName","setLanguageName","modifiedLanguageName","setModifiedLanguageName","modifiedLanguageId","setModifiedLanguageId","handleLanguageAdd","languageService","addedLanguage","handleLanguageDelete","l","handleLanguageModify","modifiedLanguage","getSeries","addSeries","editSerie","serie","deleteSerie","Series","setSeries","modifiedSerieName","setModifiedSerieName","modifiedSerieId","setModifiedSerieId","modifiedSerieColor","setModifiedSerieColor","color","setColor","handleSeriesAdd","seriesService","addedSerie","handleSerieDelete","handleSerieModify","modifiedSerie","onChangeComplete","hex","colors","style","backgroundColor","display","borderRadius","height","width","marginLeft","getCategories","addCategory","cat","editCategory","console","log","deleteCategory","Category","setCategories","newCategoryName","setNewCategoryName","modifiedCategoryName","setModifiedCategoryName","modifiedCategoryId","setModifiedCategoryId","handleCategoryAdd","categoryService","addedCategory","handleCategoryDelete","handleCategoryModify","modifiedCategory","AddTaskDropdown","showCategories","setShowCategories","showRules","setShowRules","showLanguages","setShowLanguages","showSeries","setShowSeries","updateFiles","MDEditor","setText","setMD","mdParser","MarkdownIt","renderHTML","text","render","html","AddTask","addTask","assignmentText","setAssignmentText","gradingScale","setGradingScale","supervisorInstructions","setSupervisorInstructions","assignmentTextMD","setAssignmentTextMD","gradingScaleMD","setGradingScaleMD","supervisorInstructionsMD","setSupervisorInstructionsMD","setRule","setCategory","setLanguage","creatorName","setCreatorName","creatorEmail","setCreatorEmail","assignmentTextErrorMessage","setAssignmentTextErrorMessage","creatorNameErrorMessage","setCreatorNameErrorMessage","creatorEmailErrorMessage","setCreatorEmailErrorMessage","dropDownErrorMessage","setDropDownErrorMessage","setFiles","fileNames","setFileNames","showChangeFileName","setShowChangeFileName","nameToChange","setNameToChange","changedFileName","setChangedFileName","changedFileExtension","setChangedFileExtension","editor","setEditor","handleAddTask","addedFiles","fileService","scrollTo","top","behavior","multiple","values","selected","handleSeriesChange","foundRule","find","handleRuleChange","handleCategoryChange","handleLanguageChange","newFiles","newFilesArray","newNames","found","Fragment","handleSaveFileName","handleCancelChangeFileName","lastIndexOf","handleChangeFileName","handleDeleteFile","TaskListPending","loggedUserJSON","getItem","loggedUser","parse","then","exception","handleAccept","getComments","getPendingComments","addComment","comment","acceptComment","deleteComment","CommentListPending","comments","setComments","commentService","handleCommentDelete","handleCommentAccept","content","nickname","Admin","EditUser","setShowEdit","handleEditUser","editedUser","ChangePassword","setShowChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","newPasswordAgain","setNewPasswordAgain","handleChangePassword","User","showEdit","showChangePassword","Rating","confirmMessage","setConfirmMessage","ratedMessage","setRatedMessage","setRatingsAVG","ratingsAmount","setRatingsAmount","disabled","setDisabled","votesJSON","changeRating","newRating","updatedValues","votes","newVotes","ratings","Number","AddComment","setNickname","setContent","handleAddComment","addedComment","rows","cols","Comment","ModifyTask","setTask","oldFiles","setOldFiles","setNewFiles","filesToDelete","setFilesToDelete","handleModifyTask","modifiedTask","placeHolder","handleDeleteOldFile","handleDeleteNewFile","TaskTextDisplay","dangerouslySetInnerHTML","__html","Task","match","showMakePDF","setShowMakePDF","params","handleMakePDF","PDF","pending","App","basket","setBasket","setSeriess","basketJSON","foundBasket","removeItem","exact","path","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.d5d5db23.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={type}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/login`\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","let token = null\r\n\r\nconst getToken = () => token\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst setTokenNull = () => {\r\n  token = null\r\n}\r\n\r\nexport default { getToken, setToken, setTokenNull }\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Notification from '../misc/Notification'\r\nimport loginService from '../../services/login'\r\nimport tokenService from '../../services/token'\r\n\r\nconst Login = ({ setUser }) => {\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [username, setUsername] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const history = useHistory()\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, email, password,\r\n      })\r\n      window.localStorage.setItem(\r\n        'loggedUser', JSON.stringify(user),\r\n      )\r\n      setUser(user)\r\n      tokenService.setToken(user.token)\r\n      setUsername('')\r\n      setEmail('')\r\n      setPassword('')\r\n      history.push('/')\r\n    } catch (exception) {\r\n      setErrorMessage('Väärä käyttäjätunnus/salasana')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      <h2>Kirjaudu sisään</h2>\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          <input\r\n            className=\"username\"\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"Username\"\r\n            placeholder=\"Käyttäjätunnus\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Password\"\r\n            placeholder=\"Salasana\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"login-button\">Kirjaudu</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nconst FrontPageInfo = () => {\r\n\r\n  return (\r\n    <div className=\"frontpage-info\">\r\n      <h2>Kisatehtäväpankki</h2>\r\n      <p>Kisatehtäväpankki on arkisto,\r\n      johon voidaan tallettaa tehtäviä.\r\n      Sivustolle voi tallettaa tehtävän,\r\n      sekä siihen liittyvät liitetiedostot.\r\n      </p>\r\n      <p>\r\n        Kirjautumattomana käyttäjänä voit\r\n        koostaa tehtävistä kisaa varten\r\n        kokonaisuuksia, sekä ladata ne\r\n        PDF-tiedostona itsellesi. Tehtävän lisääminen \"kisakoriin\"\r\n        onnistuu painamalla tehtävässä esiintyvää koripainiketta,\r\n        ja jo mukaan otetut tehtävät löydät yläreunan koria painamalla.\r\n      </p>\r\n      <p>\r\n        Voit myöskin selailla tehtäviä, arvostella tehtäviä\r\n        ja lisätä uusia tehtäviä. Uuden tehtävän lisääminen arkistoon\r\n        vaatii ensin ylläpitäjän hyväksynnän uudelle tehtävälle.\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FrontPageInfo","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/task`\r\nconst baseUrlPending = `${process.env.REACT_APP_API_URL}/task/pending`\r\n\r\n\r\nconst getTasks = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst getPendingTasks = async () => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n  const response = await axios.get(baseUrlPending, config)\r\n  return response.data\r\n}\r\n\r\nconst getSearchedTasks = async (search) => {\r\n  const response = await axios.post(`${baseUrl}/search`, search)\r\n  return response.data\r\n}\r\n\r\nconst getOneTask = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`)\r\n  return response.data\r\n}\r\n\r\nconst addtask = async (task) => {\r\n  let config = null\r\n  const token = tokenService.getToken()\r\n\r\n  if (token) {\r\n    config = {\r\n      headers: { Authorization: token }\r\n    }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, task, config)\r\n  return response.data\r\n}\r\n\r\nconst updateTask = async (task) => {\r\n  let config = null\r\n  const token = tokenService.getToken()\r\n\r\n  if (token) {\r\n    config = {\r\n      headers: { Authorization: token },\r\n    }\r\n  }\r\n\r\n  const response = await axios.put(`${baseUrl}/${task.id}`, task, config)\r\n  return response.data\r\n}\r\n\r\nconst deleteTask = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nconst acceptTask = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n  const response = await axios.put(`${baseUrl}/${id}/accept`, id, config)\r\n  return response.data\r\n}\r\n\r\nconst addRating = async (id, rating) => {\r\n\r\n  const response = await axios.post(`${baseUrl}/${id}/rate`, rating)\r\n  return response.data\r\n}\r\n\r\nconst updateViews = async (id) => {\r\n  const response = await axios.post(`${baseUrl}/${id}/views`)\r\n  return response.data\r\n}\r\n\r\nconst makePDF = async (formData, id) => {\r\n  const config = {\r\n    headers: { 'Content-Type': 'multipart/form-data' },\r\n    responseType: 'blob'\r\n  }\r\n\r\n  const response = await axios.post(`${baseUrl}/${id}/pdf`, formData, config)\r\n  return response.data\r\n}\r\n\r\nconst makePDFs = async (formData) => {\r\n  const config = {\r\n    headers: { 'Content-Type': 'multipart/form-data' },\r\n    responseType: 'blob'\r\n  }\r\n\r\n  const response = await axios.post(`${baseUrl}/pdf`, formData, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addtask, getTasks, getOneTask, getSearchedTasks, updateTask, deleteTask, getPendingTasks, acceptTask, updateViews, addRating, makePDF, makePDFs }\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport FrontPageInfo from './FrontPageInfo'\r\nimport taskService from '../../services/task'\r\n\r\nconst FrontPage = ({ tasks, addTaskToBasket, handleUpdateTask }) => {\r\n  const [newTasks, setNewTasks] = useState([])\r\n  const [favoriteTasks, setFavoriteTasks] = useState([])\r\n\r\n  useEffect(() => {\r\n    setNewTasks([...tasks].sort(compareCreated).slice(0, 5))\r\n    setFavoriteTasks([...tasks].sort(compareRatings).slice(0, 5))\r\n  }, [tasks])\r\n\r\n  const handleUpdateViews = async (task) => {\r\n    try {\r\n      await taskService.updateViews(task.id)\r\n      handleUpdateTask({ ...task, views: task.views + 1 })\r\n    } catch (exeption) {\r\n    }\r\n  }\r\n\r\n  const compareCreated = (a, b) => {\r\n    return b.created.localeCompare(a.created)\r\n  }\r\n\r\n  const compareRatings = (a, b) => {\r\n    return b.ratingsAVG - a.ratingsAVG\r\n  }\r\n\r\n  return (\r\n    <div className=\"frontpage\">\r\n      <h1>Tervetuloa Kisatehtäväpankkiin!</h1>\r\n      <div className=\"task-list frontpage-container\">\r\n        <FrontPageInfo />\r\n        <div className=\"new-favorite-lists\">\r\n\r\n          <div className=\"new-list\">\r\n            <div className=\"image-on-background\">\r\n              <h2>Uusimmat tehtävät</h2>\r\n              <div className=\"task-list-title frontpage-item\">\r\n                <span >Tehtävän nimi</span>\r\n                <span>Sarja</span>\r\n                <span>Kategoria</span>\r\n                <span></span>\r\n              </div>\r\n            </div>\r\n            {newTasks.map((task) => (\r\n              <Link className=\"no-underline\" to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task)} key={task.id}>\r\n                <div className=\"task-list-item frontpage-item new-item\">\r\n                  <div className=\"black-basket-mobile\" title=\"Lisää koriin\" onClick={(e) => addTaskToBasket(e, task)} />\r\n                  <span className=\"span-bigger\">\r\n                    <p className=\"bigger-task-name-frontpage\">{task.name}</p>\r\n                    <p>Katselukertoja: {task.views}</p>\r\n                  </span>\r\n                  <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\r\n                  <span>{task.category && task.category.name}</span>\r\n                  <span><div className=\"black-basket\" title=\"Lisää koriin\" onClick={(e) => addTaskToBasket(e, task)} /></span>\r\n                </div>\r\n              </Link>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"favorite-list\">\r\n            <div className=\"image-on-background\">\r\n              <h2>Suosituimmat tehtävät</h2>\r\n              <div className=\"task-list-title frontpage-item\">\r\n                <span>Tehtävän nimi</span>\r\n                <span>Sarja</span>\r\n                <span>Kategoria</span>\r\n                <span></span>\r\n              </div>\r\n            </div>\r\n            {favoriteTasks.map((task) => (\r\n              <Link className=\"no-underline\" to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task)} key={task.id}>\r\n                <div className=\"task-list-item frontpage-item favorite-item\">\r\n                  <div className=\"black-basket-mobile\" title=\"Lisää koriin\" onClick={(e) => addTaskToBasket(e, task)} />\r\n                  <span className=\"span-bigger\">\r\n                    <p className=\"bigger-task-name-frontpage\">{task.name}</p>\r\n                    <p>Katselukertoja: {task.views}</p>\r\n                  </span>\r\n                  <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\r\n                  <span>{task.category && task.category.name}</span>\r\n                  <span><div className=\"black-basket\" title=\"Lisää koriin\" onClick={(e) => addTaskToBasket(e, task)} /></span>\r\n                </div>\r\n              </Link>\r\n            ))}\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <footer>\r\n        <p>Kuva: Suomen Partiolaiset/Eeva Helle</p>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FrontPage\r\n","import React, { useState } from 'react'\r\nimport taskService from '../../services/task'\r\nimport Notification from './Notification'\r\n\r\nconst Search = ({ setTasks, setAllTasks }) => {\r\n\r\n  const [search, setSearch] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  const handleSearch = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const response = await taskService.getSearchedTasks({ search })\r\n      setTasks(response)\r\n      setAllTasks(response)\r\n    } catch (exception) {\r\n      setErrorMessage('Haku ei onnistunut')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleSearch} className=\"search-form\">\r\n        <input\r\n          className=\"search-input\"\r\n          type=\"text\"\r\n          defaultValue=''\r\n          name=\"search\"\r\n          placeholder=\"Hakutermi\"\r\n          onChange={({ target }) => setSearch(target.value)}\r\n        />\r\n        <button type=\"submit\" className=\"search-tasks-button\">Hae</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search","import React, { useState, useEffect, Fragment } from 'react'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst Filter = ({ allTasks, categories, rules, series, tasks, setTasks }) => {\r\n\r\n  const [selectedCategory, setSelectedCategory] = useState([])\r\n  const [selectedSeries, setSelectedSeries] = useState([])\r\n  const [selectedRules, setSelectedRules] = useState('')\r\n\r\n\r\n  useEffect(() => {\r\n    if (selectedSeries.length > 0 && selectedCategory.length > 0 && selectedRules) {\r\n      let array = []\r\n      for (let i = 0; i < allTasks.length; i++) {\r\n        for (let j = 0; j < allTasks[i].series.length; j++) {\r\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\r\n            array.push(allTasks[i])\r\n          }\r\n        }\r\n      }\r\n      setTasks(array)\r\n    } else if (selectedSeries.length > 0 && selectedCategory.length > 0) {\r\n      let array = []\r\n      for (let i = 0; i < allTasks.length; i++) {\r\n        for (let j = 0; j < allTasks[i].series.length; j++) {\r\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && !array.includes(allTasks[i])) {\r\n            array.push(allTasks[i])\r\n          }\r\n        }\r\n      }\r\n      setTasks(array)\r\n    } else if (selectedSeries.length > 0 && selectedRules) {\r\n      let array = []\r\n      for (let i = 0; i < allTasks.length; i++) {\r\n        for (let j = 0; j < allTasks[i].series.length; j++) {\r\n          if (selectedSeries.includes(allTasks[i].series[j].id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\r\n            array.push(allTasks[i])\r\n          }\r\n        }\r\n      }\r\n      setTasks(array)\r\n    } else if (selectedCategory.length > 0 && selectedRules) {\r\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id) && task.rules.id === selectedRules.id))\r\n    } else if (selectedSeries.length > 0) {\r\n      let array = []\r\n      for (let i = 0; i < allTasks.length; i++) {\r\n        for (let j = 0; j < allTasks[i].series.length; j++) {\r\n          if (selectedSeries.includes(allTasks[i].series[j].id) && !array.includes(allTasks[i])) {\r\n            array.push(allTasks[i])\r\n          }\r\n        }\r\n      }\r\n      setTasks(array)\r\n    } else if (selectedCategory.length > 0) {\r\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id)))\r\n    } else if (selectedRules) {\r\n      setTasks(allTasks.filter(task => task.rules.id === selectedRules.id))\r\n    } else {\r\n      setTasks(allTasks)\r\n    }\r\n  }, [selectedCategory, selectedSeries, selectedRules])\r\n\r\n  const handleSeriesFiltering = (series) => {\r\n    if (series && series.length > 0) {\r\n      setSelectedSeries(series.map(s => s.id))\r\n    } else {\r\n      setSelectedSeries([])\r\n      setTasks(allTasks)\r\n    }\r\n  }\r\n\r\n  const handleCategoryFiltering = (category) => {\r\n    if (category && category.length > 0) {\r\n      setSelectedCategory(category.map(c => c.id))\r\n    } else {\r\n      setSelectedCategory([])\r\n      setTasks(allTasks)\r\n    }\r\n  }\r\n\r\n  const handleRuleFiltering = (rules) => {\r\n    if (rules) {\r\n      setSelectedRules(rules)\r\n    } else {\r\n      setSelectedRules('')\r\n      setTasks(allTasks)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"filter\">\r\n        <Select\r\n          name=\"filter-series\"\r\n          getOptionLabel={option => `${option.name}`}\r\n          getOptionValue={option => `${option.id}`}\r\n          onChange={handleSeriesFiltering}\r\n          options={series}\r\n          isClearable={true}\r\n          placeholder={\"Sarja\"}\r\n          isMulti={true}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"filter\">\r\n        <Select\r\n          name=\"filter-category\"\r\n          getOptionLabel={option => `${option.name}`}\r\n          getOptionValue={option => `${option.id}`}\r\n          onChange={handleCategoryFiltering}\r\n          options={categories}\r\n          isClearable={true}\r\n          placeholder={\"Kategoria\"}\r\n          isMulti={true}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"filter\">\r\n        <Select\r\n          name=\"filter-rules\"\r\n          getOptionLabel={option => `${option.name}`}\r\n          getOptionValue={option => `${option.id}`}\r\n          onChange={handleRuleFiltering}\r\n          options={rules}\r\n          isClearable={true}\r\n          placeholder={\"Säännöt\"}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Filter","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport taskService from '../../services/task'\r\nimport Notification from '../misc/Notification'\r\nimport Search from '../misc/Search'\r\nimport StarRatings from 'react-star-ratings'\r\nimport Filter from '../misc/Filter'\r\nimport Moment from 'react-moment'\r\n\r\nconst TaskList = ({ user, originalTasks, categories, rules, seriess, addTaskToBasket, handleUpdateTask, handleDeleteTask }) => {\r\n  const [tasks, setTasks] = useState(originalTasks)\r\n  const [allTasks, setAllTasks] = useState(originalTasks)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [nameAsc, setNameAsc] = useState(false)\r\n  const [ratingDesc, setRatingDesc] = useState(false)\r\n  const [dateDesc, setDateDesc] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setTasks(originalTasks)\r\n    setAllTasks(originalTasks)\r\n  }, [originalTasks])\r\n\r\n  const handleUpdateViews = async (task) => {\r\n    try {\r\n      await taskService.updateViews(task.id)\r\n      handleUpdateTask({ ...task, views: task.views + 1 })\r\n    } catch (exeption) {\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (e, task) => {\r\n    e.preventDefault()\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\r\n        await taskService.deleteTask(task.id)\r\n        handleDeleteTask(task.id)\r\n      }\r\n    } catch (exeption) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleSortByName = () => {\r\n    if (nameAsc) {\r\n      setTasks(tasks.sort(compareNamesDesc).concat([]))\r\n    } else {\r\n      setTasks(tasks.sort(compareNamesAsc).concat([]))\r\n    }\r\n    setNameAsc(!nameAsc)\r\n  }\r\n\r\n  const handleSortByRating = () => {\r\n    if (ratingDesc) {\r\n      setTasks(tasks.sort(compareRatingsAsc).concat([]))\r\n    } else {\r\n      setTasks(tasks.sort(compareRatingsDesc).concat([]))\r\n    }\r\n    setRatingDesc(!ratingDesc)\r\n  }\r\n\r\n  const handleSortByDate = () => {\r\n    if (dateDesc) {\r\n      setTasks(tasks.sort(compareCreatedAsc).concat([]))\r\n    } else {\r\n      setTasks(tasks.sort(compareCreatedDesc).concat([]))\r\n    }\r\n    setDateDesc(!dateDesc)\r\n  }\r\n\r\n  const handleSortByNameAsc = () => {\r\n    setTasks(tasks.sort(compareNamesAsc).concat([]))\r\n  }\r\n\r\n  const handleSortByNameDesc = () => {\r\n    setTasks(tasks.sort(compareNamesDesc).concat([]))\r\n  }\r\n\r\n  const handleSortByRatingsAsc = () => {\r\n    setTasks(tasks.sort(compareRatingsAsc).concat([]))\r\n  }\r\n\r\n  const handleSortByRatingsDesc = () => {\r\n    setTasks(tasks.sort(compareRatingsDesc).concat([]))\r\n  }\r\n\r\n  const handleSortByCreatedAsc = () => {\r\n    setTasks(tasks.sort(compareCreatedAsc).concat([]))\r\n  }\r\n\r\n  const handleSortByCreatedDesc = () => {\r\n    setTasks(tasks.sort(compareCreatedDesc).concat([]))\r\n  }\r\n\r\n  const compareNamesAsc = (a, b) => {\r\n    return a.name.localeCompare(b.name)\r\n  }\r\n\r\n  const compareNamesDesc = (a, b) => {\r\n    return b.name.localeCompare(a.name)\r\n  }\r\n\r\n  const compareRatingsAsc = (a, b) => {\r\n    return a.ratingsAVG - b.ratingsAVG\r\n  }\r\n\r\n  const compareRatingsDesc = (a, b) => {\r\n    return b.ratingsAVG - a.ratingsAVG\r\n  }\r\n\r\n  const compareCreatedAsc = (a, b) => {\r\n    return a.created.localeCompare(b.created)\r\n  }\r\n\r\n  const compareCreatedDesc = (a, b) => {\r\n    return b.created.localeCompare(a.created)\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-list\">\r\n      <h1>Kisatehtäväpankki</h1>\r\n      <div className=\"search-filter-container\">\r\n        <Search\r\n          setTasks={setTasks}\r\n          setAllTasks={setAllTasks}\r\n        />\r\n        <Filter\r\n          tasks={tasks}\r\n          allTasks={allTasks}\r\n          categories={categories}\r\n          rules={rules}\r\n          series={seriess}\r\n          setTasks={setTasks}\r\n        />\r\n      </div>\r\n\r\n      <Notification message={errorMessage} />\r\n      {tasks && tasks.length > 0 &&\r\n        <div className=\"task-list-title\">\r\n          <span className=\"arrow-inline\"><div onClick={handleSortByName}>Tehtävän nimi</div><div className=\"arrow-container\"><i className=\"name-arrow-up\" onClick={handleSortByNameDesc} /><i className=\"name-arrow-down\" onClick={handleSortByNameAsc} /></div></span>\r\n          <span>Sarja</span>\r\n          <span>Kategoria</span>\r\n          <span className=\"arrow-inline\"><div onClick={handleSortByRating}>Arvostelu</div><div className=\"arrow-container\"><i className=\"rating-arrow-up\" onClick={handleSortByRatingsAsc} /><i className=\"rating-arrow-down\" onClick={handleSortByRatingsDesc} /></div></span>\r\n          <span className=\"arrow-inline\"><div onClick={handleSortByDate}>Lisätty</div><div className=\"arrow-container\"><i className=\"created-arrow-up\" onClick={handleSortByCreatedAsc} /><i className=\"created-arrow-down\" onClick={handleSortByCreatedDesc} /></div></span>\r\n          {user && <span></span>}\r\n          <span></span>\r\n        </div>\r\n      }\r\n      {tasks.map((task) => (\r\n        <Link className=\"no-underline\" to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task)} key={task.id}>\r\n          <div className=\"task-list-item\">\r\n            <div className=\"black-basket-mobile\" title=\"Lisää koriin\" onClick={(e) => addTaskToBasket(e, task)} />\r\n            <span className=\"span-bigger\">\r\n              <p className=\"bigger-task-name\">{task.name}</p>\r\n              <p>Katselukertoja: {task.views}</p>\r\n            </span>\r\n            <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\r\n            <span>{task.category && task.category.name}</span>\r\n            <span>\r\n              <StarRatings\r\n                rating={task.ratingsAVG}\r\n                starRatedColor=\"#f0e105\"\r\n                starDimension=\"20px\"\r\n                starSpacing=\"10px\"\r\n              />\r\n            </span>\r\n            {task.created && <span><Moment format=\"DD.MM.YYYY HH:mm\">{task.created}</Moment></span>}\r\n            {user && <span className=\"task-list-delete\"><button className=\"delete-button\" onClick={(e) => handleDelete(e, task)}>Poista</button></span>}\r\n            <span><div className=\"black-basket\" title=\"Lisää koriin\" onClick={(e) => addTaskToBasket(e, task)} /></span>\r\n          </div>\r\n        </Link>\r\n      ))}\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default TaskList\r\n\r\n","import React from 'react'\r\nimport Dropzone from 'react-dropzone'\r\n\r\nconst Competition = ({ name, date, place, type, logo, setName, setDate, setPlace, setType, setLogo }) => {\r\n\r\n  const onDrop = (logo) => {\r\n    setLogo(logo[0])\r\n  }\r\n\r\n  const handleDeleteLogo = (e) => {\r\n    e.stopPropagation()\r\n    setLogo(null)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"basket-title\">Kisan tiedot</h2>\r\n\r\n      <div className=\"competition-container\">\r\n\r\n        <div className=\"competition\">\r\n          <div>\r\n            <input\r\n              className=\"competition-name\"\r\n              type=\"text\"\r\n              value={name}\r\n              name=\"Name\"\r\n              placeholder=\"Kisan nimi\"\r\n              onChange={({ target }) => setName(target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <input\r\n              className=\"competition-date\"\r\n              type=\"text\"\r\n              value={date}\r\n              name=\"Name\"\r\n              placeholder=\"Kisan päivämäärä\"\r\n              onChange={({ target }) => setDate(target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <input\r\n              className=\"competition-place\"\r\n              type=\"text\"\r\n              value={place}\r\n              name=\"Name\"\r\n              placeholder=\"Kisapaikka\"\r\n              onChange={({ target }) => setPlace(target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <input\r\n              className=\"competition-type\"\r\n              type=\"text\"\r\n              value={type}\r\n              name=\"Name\"\r\n              placeholder=\"Kisan laji\"\r\n              onChange={({ target }) => setType(target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"competition-dropzone\">\r\n          <Dropzone onDrop={onDrop}>\r\n            {({getRootProps, getInputProps}) => (\r\n              <div {...getRootProps()}>\r\n                <input {...getInputProps()} />\r\n                <div className=\"files competition-files\">\r\n                  {!logo && <div className=\"title\">Logo</div>}\r\n                  {logo && <div key={logo.name}><img src={URL.createObjectURL(logo)} alt=\"Logo\"/><span onClick={(e) => handleDeleteLogo(e)} className=\"remove-file\" /></div>}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Dropzone>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Competition\r\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Notification from '../misc/Notification'\r\nimport Competition from './Competition'\r\nimport taskService from '../../services/task'\r\n\r\nconst Basket = ({ tasks, removeTaskFromBasket, handleUpdateTask, removeAllFromBasket }) => {\r\n\r\n  const handleUpdateViews = async (task) => {\r\n    try {\r\n      await taskService.updateViews(task.id)\r\n      handleUpdateTask({ ...task, views: task.views + 1 })\r\n    } catch (exeption) {\r\n    }\r\n  }\r\n\r\n  const [name, setName] = useState('')\r\n  const [date, setDate] = useState('')\r\n  const [place, setPlace] = useState('')\r\n  const [type, setType] = useState('')\r\n  const [logo, setLogo] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [showLoader, setShowLoader] = useState(false)\r\n\r\n  const handleMakePDFs = async (e) => {\r\n    setShowLoader(true)\r\n    let formData = new FormData()\r\n\r\n    const competition = JSON.stringify({ name, date, place, type, tasks: tasks.map(t => t.id) })\r\n    formData.append('competition', competition)\r\n\r\n    if (logo) {\r\n      formData.append('logo', logo, logo.name)\r\n    }\r\n\r\n    try {\r\n      const PDFs = await taskService.makePDFs(formData)\r\n      setName('')\r\n      setDate('')\r\n      setPlace('')\r\n      setType('')\r\n      setLogo(null)\r\n      const url = window.URL.createObjectURL(new Blob([PDFs], {\r\n        type: 'application/zip'\r\n      }))\r\n      const link = document.createElement('a')\r\n      link.href = url\r\n      link.setAttribute('download', 'Rastit.zip')\r\n      document.body.appendChild(link)\r\n      link.click()\r\n      setShowLoader(false)\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-list\">\r\n      <Notification message={errorMessage} type=\"error\" />\r\n\r\n      {tasks && tasks.length > 0 &&\r\n        <Competition\r\n          name={name}\r\n          date={date}\r\n          place={place}\r\n          type={type}\r\n          logo={logo}\r\n          setName={setName}\r\n          setDate={setDate}\r\n          setPlace={setPlace}\r\n          setType={setType}\r\n          setLogo={setLogo}\r\n        />\r\n      }\r\n\r\n      <h2 className=\"basket-title\">Kisaan valitut tehtävät</h2>\r\n\r\n      {tasks && tasks.length > 0 && <button className=\"basket-delete-all\" onClick={removeAllFromBasket}>Poista kaikki</button>}\r\n\r\n      {tasks && tasks.length === 0 && <div className=\"empty-basket\">Ei valittuja tehtäviä</div>}\r\n\r\n      {tasks && tasks.length > 0 &&\r\n        <div className=\"task-list-title\">\r\n          <span>Tehtävän nimi</span>\r\n          <span>Sarja</span>\r\n          <span>Kategoria</span>\r\n          <span>Liitetiedostot</span>\r\n          <span></span>\r\n        </div>\r\n      }\r\n\r\n      {tasks.map((task) => (\r\n        <div className=\"task-list-item\" key={task.id}>\r\n          <div className=\"delete-task-from-basket-mobile\" onClick={() => removeTaskFromBasket(task.id)} />\r\n          <span>\r\n            <Link to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task)}>\r\n              {task.name}\r\n            </Link>\r\n            <p>Katselukertoja: {task.views}</p>\r\n          </span>\r\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\r\n          <span>{task.category && task.category.name}</span>\r\n          <span>\r\n            {task.files && task.files.map((file) => (\r\n              <div key={file}>\r\n                <a href={`https://kisapankkifiles.blob.core.windows.net/files/${file}`}>\r\n                  {file.substring(file.indexOf('-') + 1, file.length)}\r\n                </a>\r\n              </div>\r\n            ))}\r\n          </span>\r\n          <span className=\"delete-task-from-basket\" onClick={() => removeTaskFromBasket(task.id)} />\r\n        </div>\r\n      ))}\r\n      {tasks && tasks.length > 0 && <div className=\"make-pdfs\">\r\n        {showLoader ?\r\n          <div className=\"loader in-basket\"></div>\r\n          :\r\n          <button onClick={handleMakePDFs}>Tee PDF-tiedostot</button>\r\n        }\r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Basket\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/user`\r\n\r\nconst getUsers = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addUser = async (credentials) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() }\r\n  }\r\n  const response = await axios.post(baseUrl, credentials, config)\r\n  return response.data\r\n}\r\n\r\nconst editUser = async (user) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() }\r\n  }\r\n\r\n  const response = await axios.put(baseUrl, user, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addUser, getUsers, editUser }\r\n","import React, { useState } from 'react'\r\nimport Notification from '../misc/Notification'\r\nimport userService from '../../services/user'\r\n\r\nconst AddAdmin = () => {\r\n  const [message, setMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\r\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\r\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(null)\r\n  const [emailErrorMessage, setEmailErrorMessage] = useState(null)\r\n  const [name, setName] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [allowNotifications, setAllowNotifications] = useState(true)\r\n\r\n  const handleAddAdmin = async (event) => {\r\n    event.preventDefault()\r\n    setNameErrorMessage(null)\r\n    setUsernameErrorMessage(null)\r\n    setPasswordErrorMessage(null)\r\n    setEmailErrorMessage(null)\r\n    if (name.length < 3) {\r\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\r\n    }\r\n    if (username.length < 3) {\r\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\r\n    }\r\n    if (email.length < 5) {\r\n      setEmailErrorMessage('Sähköpostissa pitää olla vähintään 5 kirjainta')\r\n    }\r\n    if (password.length < 3) {\r\n      setPasswordErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\r\n    }\r\n    if (name.length < 3 || username.length < 3 || email.length < 5 || password.length < 3) {\r\n      return\r\n    }\r\n    try {\r\n      await userService.addUser({\r\n        name, username, email, password, allowNotifications\r\n      })\r\n      setName('')\r\n      setUsername('')\r\n      setEmail('')\r\n      setPassword('')\r\n      setAllowNotifications(true)\r\n      setMessage('Ylläpitäjä lisätty!')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    } catch (error) {\r\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"username already exists\") {\r\n        setErrorMessage('Käyttäjätunnus on varattu')\r\n      } else {\r\n        setErrorMessage('Lisääminen epäonnistui')\r\n      }\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"signup-form\">\r\n      <h2>Lisää ylläpitäjä</h2>\r\n      <Notification message={message} type=\"success\" />\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleAddAdmin}>\r\n        <div className=\"Testi\">\r\n          <Notification message={nameErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"Name\"\r\n            placeholder=\"Nimi\"\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Notification message={usernameErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"username\"\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"Username\"\r\n            placeholder=\"Käyttäjätunnus\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Notification message={emailErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"email\"\r\n            type=\"email\"\r\n            value={email}\r\n            name=\"email\"\r\n            placeholder=\"Sähköpostiosoite\"\r\n            onChange={({ target }) => setEmail(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Notification message={passwordErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Password\"\r\n            placeholder=\"Salasana\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Vastaanota ilmoituksia:\r\n            <div className=\"admin-radio\" onChange={({ target }) => setAllowNotifications(target.value)}>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"notifications\"\r\n                  value={true}\r\n                  defaultChecked\r\n                />\r\n                Kyllä\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"notifications\"\r\n                  value={false}\r\n                />\r\n                Ei\r\n              </label>\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\" className=\"signup-button\">Lisää</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddAdmin\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/rule`\r\n\r\nconst getRules = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addRule = async (rule) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, rule, config)\r\n  return response.data\r\n}\r\n\r\nconst editRule = async (rule) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n  \r\n  const response = await axios.put(`${baseUrl}/${rule.id}`, rule, config)\r\n  return response.data\r\n\r\n}\r\n\r\nconst deleteRule = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addRule, getRules, editRule, deleteRule }\r\n","import React, { useState, Fragment } from 'react'\r\nimport Notification from '../misc/Notification'\r\nimport ruleService from '../../services/rule'\r\nimport Select from 'react-select'\r\n\r\nconst Rule = ({ rules, setRules, categories }) => {\r\n  const [newRuleName, setNewRuleName] = useState('')\r\n  const [modifiedRuleName, setModifiedRuleName] = useState('')\r\n  const [modifiedRuleId, setModifiedRuleId] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [modifyVisible, setModifyVisible] = useState(false)\r\n  const [acceptedCategories, setAcceptedCategories] = useState([])\r\n  const [modifiedCategories, setModifiedCategories] = useState([])\r\n  const isClearable = true\r\n\r\n  const handleRuleAdd = async (event) => {\r\n    event.preventDefault()\r\n    const newCategories = acceptedCategories\r\n    try {\r\n      const addedRule = await ruleService.addRule({\r\n        rules: newRuleName, acceptedCategories: acceptedCategories.map(category => category.id)\r\n      })\r\n      setNewRuleName('')\r\n      setAcceptedCategories([])\r\n      setRules(rules.concat({ ...addedRule, acceptedCategories: newCategories }))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleRuleDelete = async (rule) => {\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa säännön: ${rule.name}`)) {\r\n        await ruleService.deleteRule(rule.id)\r\n        setRules(rules.filter(r => r.id !== rule.id))\r\n      }\r\n    } catch (exeption) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleRuleModify = async (event) => {\r\n    event.preventDefault()\r\n    const modifiedRule = { id: modifiedRuleId, name: modifiedRuleName, acceptedCategories: modifiedCategories }\r\n    try {\r\n      await ruleService.editRule({ id: modifiedRuleId, name: modifiedRuleName, acceptedCategories: modifiedCategories.map(category => category.id) })\r\n      setModifyVisible(false)\r\n      setRules(rules.map(rule => rule.id !== modifiedRule.id ? rule : modifiedRule))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleShowModify = (rule) => {\r\n    setModifyVisible(true)\r\n    setModifiedRuleId(rule.id)\r\n    setModifiedRuleName(rule.name)\r\n    setModifiedCategories(rule.acceptedCategories)\r\n  }\r\n\r\n  const handleAddCategories = (categories) => {\r\n    setAcceptedCategories(categories)\r\n  }\r\n\r\n  const handleModifyCategories = (categories) => {\r\n    setModifiedCategories(categories)\r\n  }\r\n\r\n  return (\r\n    <div className=\"rule-form\">\r\n      <Notification message={errorMessage} type=\"error\" />\r\n\r\n      {rules && rules.map((rule) => (\r\n        <div className=\"rule-list-item\" key={rule.id}>\r\n          {modifyVisible && modifiedRuleId === rule.id ?\r\n            <div className=\"rule-form-item\">\r\n              <form onSubmit={handleRuleModify}>\r\n                <div className=\"item-modify\">\r\n                  <input\r\n                    className=\"rule\"\r\n                    type=\"text\"\r\n                    value={modifiedRuleName}\r\n                    name=\"Category\"\r\n                    onChange={({ target }) => setModifiedRuleName(target.value)}\r\n                  />\r\n                  <div className=\"item-buttons-save\">\r\n                    <button type=\"submit\" className=\"rule-save-button\">Tallenna</button>\r\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modify-acceptedCategories\">\r\n                  <Select\r\n                    name=\"accepted-categories\"\r\n                    value={modifiedCategories}\r\n                    getOptionLabel={option => `${option.name}`}\r\n                    getOptionValue={option => `${option.id}`}\r\n                    onChange={handleModifyCategories}\r\n                    options={categories}\r\n                    isClearable={isClearable}\r\n                    placeholder={\"Säännön kategoriat\"}\r\n                    isMulti={true}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n          :\r\n          <Fragment>\r\n            <p className=\"item-name\">{rule.name}</p>\r\n            <div className=\"item-buttons\">\r\n              <button onClick={() => handleShowModify(rule)} className=\"modify-button\">Muokkaa</button>\r\n              <button onClick={() => handleRuleDelete(rule)} className=\"delete-button\">Poista</button>\r\n            </div>\r\n            <div className=\"break\"></div>\r\n            <div className=\"accepted-categories-list\">\r\n              {rule.acceptedCategories && rule.acceptedCategories.map(category => (\r\n                  <span key={category.id}>{category.name} </span>\r\n                ))}\r\n            </div>\r\n          </Fragment>\r\n          }\r\n        </div>))\r\n      }\r\n\r\n      <form onSubmit={handleRuleAdd} className=\"add-form\">\r\n        <div className=\"item-add\">\r\n          <input\r\n            className=\"rule\"\r\n            type=\"text\"\r\n            value={newRuleName}\r\n            name=\"Rules\"\r\n            placeholder=\"Uusi sääntö\"\r\n            onChange={({ target }) => setNewRuleName(target.value)}\r\n          />\r\n          <button type=\"submit\" className=\"rule-add-button\">Lisää</button>\r\n        </div>\r\n\r\n        <div className=\"add-acceptedCategories\">\r\n          <Select\r\n            name=\"accepted-categories\"\r\n            value={acceptedCategories}\r\n            getOptionLabel={option => `${option.name}`}\r\n            getOptionValue={option => `${option.id}`}\r\n            onChange={handleAddCategories}\r\n            options={categories}\r\n            isClearable={isClearable}\r\n            placeholder={\"Uuden säännön kategoriat\"}\r\n            isMulti={true}\r\n          />\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Rule\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/language`\r\n\r\nconst getLanguages = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addLanguage = async (language) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, language, config)\r\n  return response.data\r\n}\r\n\r\nconst editLanguage = async (language) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.put(`${baseUrl}/${language.id}`, language, config)\r\n  return response.data\r\n\r\n}\r\n\r\n\r\nconst deleteLanguage = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addLanguage, getLanguages, deleteLanguage, editLanguage }\r\n","import React, { useState, Fragment } from 'react'\r\nimport Notification from '../misc/Notification'\r\nimport languageService from '../../services/language'\r\n\r\nconst Language = ({ languages, setLanguages }) => {\r\n  const [languageName, setLanguageName] = useState('')\r\n  const [modifiedLanguageName, setModifiedLanguageName] = useState('')\r\n  const [modifiedLanguageId, setModifiedLanguageId] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [modifyVisible, setModifyVisible] = useState(false)\r\n\r\n  const handleLanguageAdd = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const addedLanguage = await languageService.addLanguage({\r\n        language: languageName,\r\n      })\r\n      setLanguageName('')\r\n      setLanguages(languages.concat(addedLanguage))\r\n    } catch (exception) {\r\n      setErrorMessage('Kielen lisääminen ei onnistunut')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleLanguageDelete = async (language) => {\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa kielen: ${language.name}`)) {\r\n        await languageService.deleteLanguage(language.id)\r\n        setLanguages(languages.filter(l => l.id !== language.id))\r\n      }\r\n    } catch (exeption) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleLanguageModify = async (event) => {\r\n    event.preventDefault()\r\n    const modifiedLanguage = { id: modifiedLanguageId, name: modifiedLanguageName }\r\n    try {\r\n      await languageService.editLanguage(modifiedLanguage)\r\n      setModifyVisible(false)\r\n      setLanguages(languages.map(language => language.id !== modifiedLanguage.id ? language : modifiedLanguage))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleShowModify = (language) => {\r\n    setModifyVisible(true)\r\n    setModifiedLanguageId(language.id)\r\n    setModifiedLanguageName(language.name)\r\n  }\r\n\r\n  return (\r\n    <div className=\"language-form\">\r\n      <Notification message={errorMessage} type=\"error\" />\r\n\r\n      {languages && languages.map((language) => (\r\n        <div className=\"language-list-item\" key={language.id}>\r\n          {modifyVisible && modifiedLanguageId === language.id ?\r\n            <div className=\"language-form-item\">\r\n              <form onSubmit={handleLanguageModify} >\r\n                <div className=\"item-modify\">\r\n                  <input\r\n                    className=\"language\"\r\n                    type=\"text\"\r\n                    value={modifiedLanguageName}\r\n                    name=\"Language\"\r\n                    onChange={({ target }) => setModifiedLanguageName(target.value)}\r\n                  />\r\n                  <div className=\"item-buttons-save\">\r\n                    <button type=\"submit\" className=\"language-save-button\">Tallenna</button>\r\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            :\r\n            <Fragment>\r\n              <p className=\"item-name\">{language.name}</p>\r\n              <div className=\"item-buttons\">\r\n                <button onClick={() => handleShowModify(language)} className=\"modify-button\">Muokkaa</button>\r\n                <button onClick={() => handleLanguageDelete(language)} className=\"delete-button\">Poista</button>\r\n              </div>\r\n            </Fragment>\r\n            }\r\n        </div>))\r\n      }\r\n\r\n      <form onSubmit={handleLanguageAdd} className=\"add-form\">\r\n        <div className=\"item-add\">\r\n          <input\r\n            className=\"language\"\r\n            type=\"text\"\r\n            value={languageName}\r\n            name=\"Language\"\r\n            placeholder=\"Uusi kieli\"\r\n            onChange={({ target }) => setLanguageName(target.value)}\r\n          />\r\n          <button type=\"submit\" className=\"language-add-button\">Lisää</button>\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Language\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/series`\r\n\r\nconst getSeries = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addSeries = async (series) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, series, config)\r\n  return response.data\r\n}\r\n\r\nconst editSerie = async (serie) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n  \r\n  const response = await axios.put(`${baseUrl}/${serie.id}`, serie, config)\r\n  return response.data\r\n\r\n}\r\n\r\nconst deleteSerie = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addSeries, getSeries, deleteSerie, editSerie }\r\n","import React, { useState, Fragment } from 'react'\r\nimport { CirclePicker } from 'react-color'\r\nimport Notification from '../misc/Notification'\r\nimport seriesService from '../../services/series'\r\n\r\nconst Series = ({ series, setSeries }) => {\r\n  const [name, setName] = useState('')\r\n  const [modifiedSerieName, setModifiedSerieName] = useState('')\r\n  const [modifiedSerieId, setModifiedSerieId] = useState('')\r\n  const [modifiedSerieColor, setModifiedSerieColor] = useState('')\r\n  const [color, setColor] = useState('#ffffff')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [modifyVisible, setModifyVisible] = useState(false)\r\n\r\n  const handleSeriesAdd = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const addedSerie = await seriesService.addSeries({ name, color })\r\n      setName('')\r\n      setColor('')\r\n      setSeries(series.concat(addedSerie))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleSerieDelete = async (serie) => {\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa sarjan: ${serie.name}`)) {\r\n        await seriesService.deleteSerie(serie.id)\r\n        setSeries(series.filter(s => s.id !== serie.id))\r\n      }\r\n    } catch (exeption) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleSerieModify = async (event) => {\r\n    event.preventDefault()\r\n    const modifiedSerie = { id: modifiedSerieId, name: modifiedSerieName, color: modifiedSerieColor }\r\n    try {\r\n      await seriesService.editSerie(modifiedSerie)\r\n      setModifyVisible(false)\r\n      setSeries(series.map(serie => serie.id !== modifiedSerie.id ? serie : modifiedSerie))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleShowModify = (serie) => {\r\n    setModifyVisible(true)\r\n    setModifiedSerieId(serie.id)\r\n    setModifiedSerieName(serie.name)\r\n    setModifiedSerieColor(serie.color)\r\n  }\r\n\r\n  return (\r\n    <div className=\"series-form\">\r\n      <Notification message={errorMessage} type=\"error\" />\r\n\r\n      {series && series.map((serie) => (\r\n        <div className=\"serie-list-item\" key={serie.id}>\r\n          {modifyVisible && modifiedSerieId === serie.id ?\r\n            <div className=\"serie-form-item\">\r\n              <form onSubmit={handleSerieModify} >\r\n                <div className=\"item-modify\">\r\n                  <input\r\n                    className=\"serie\"\r\n                    type=\"text\"\r\n                    value={modifiedSerieName}\r\n                    name=\"Serie\"\r\n                    onChange={({ target }) => setModifiedSerieName(target.value)}\r\n                  />\r\n                  <div className=\"item-buttons-save\">\r\n                    <button type=\"submit\" className=\"serie-save-button\">Tallenna</button>\r\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\r\n                  </div>\r\n                  <div className=\"color-picker\">\r\n                    <CirclePicker\r\n                      color={modifiedSerieColor}\r\n                      onChangeComplete={color => setModifiedSerieColor(color.hex)}\r\n                      colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\r\n                        \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          :\r\n          <Fragment>\r\n            <p className=\"item-name\"><span>{serie.name}</span><span style={{ backgroundColor: serie.color, display: 'inline-block', borderRadius: '50%', height: '27px', width: '27px', marginLeft: '5px' }} /></p>\r\n            <div className=\"item-buttons\">\r\n              <button onClick={() => handleShowModify(serie)} className=\"modify-button\">Muokkaa</button>\r\n              <button onClick={() => handleSerieDelete(serie)} className=\"delete-button\">Poista</button>\r\n            </div>\r\n          </Fragment>\r\n          }\r\n        </div>))\r\n      }\r\n\r\n      <form onSubmit={handleSeriesAdd} className=\"add-form\">\r\n        <div className=\"item-add\">\r\n          <input\r\n            className=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"Name\"\r\n            placeholder=\"Uusi sarja\"\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n          <button type=\"submit\" className=\"series-submit-button\">Lisää</button>\r\n        </div>\r\n        <div className=\"color-picker\">\r\n          <CirclePicker\r\n            color={color}\r\n            onChangeComplete={color => setColor(color.hex)}\r\n            colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\r\n              \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\r\n          />\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Series\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/category`\r\n\r\nconst getCategories = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addCategory = async (cat) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, cat, config)\r\n  return response.data\r\n}\r\n\r\nconst editCategory = async (category) => {\r\n  console.log(category)\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n  \r\n  const response = await axios.put(`${baseUrl}/${category.id}`, category, config)\r\n  return response.data\r\n\r\n}\r\n\r\nconst deleteCategory = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\n\r\nexport default { addCategory, getCategories, editCategory, deleteCategory }\r\n","import React, { useState, Fragment } from 'react'\r\nimport Notification from '../misc/Notification'\r\nimport categoryService from '../../services/category'\r\n\r\nconst Category = ({ categories, setCategories }) => {\r\n  const [newCategoryName, setNewCategoryName] = useState('')\r\n  const [modifiedCategoryName, setModifiedCategoryName] = useState('')\r\n  const [modifiedCategoryId, setModifiedCategoryId] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [modifyVisible, setModifyVisible] = useState(false)\r\n\r\n  const handleCategoryAdd = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const addedCategory = await categoryService.addCategory({\r\n        category: newCategoryName\r\n      })\r\n      setNewCategoryName('')\r\n      setCategories(categories.concat(addedCategory))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleCategoryDelete = async (category) => {\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa kategorian: ${category.name}`)) {\r\n        await categoryService.deleteCategory(category.id)\r\n        setCategories(categories.filter(c => c.id !== category.id))\r\n      }\r\n    } catch (exeption) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleCategoryModify = async (event) => {\r\n    event.preventDefault()\r\n    const modifiedCategory = { id: modifiedCategoryId, name: modifiedCategoryName }\r\n    try {\r\n      await categoryService.editCategory(modifiedCategory)\r\n      setModifyVisible(false)\r\n      setCategories(categories.map(category => category.id !== modifiedCategory.id ? category : modifiedCategory))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleShowModify = (category) => {\r\n    setModifyVisible(true)\r\n    setModifiedCategoryId(category.id)\r\n    setModifiedCategoryName(category.name)\r\n  }\r\n\r\n  return (\r\n    <div className=\"category-form\" >\r\n      <Notification message={errorMessage} type=\"error\" />\r\n\r\n      {categories && categories.map((category) => (\r\n        <div className=\"category-list-item\" key={category.id}>\r\n          {modifyVisible && modifiedCategoryId === category.id ?\r\n            <div className=\"category-form-item\">\r\n              <form onSubmit={handleCategoryModify} >\r\n                <div className=\"item-modify\">\r\n                  <input\r\n                    className=\"category\"\r\n                    type=\"text\"\r\n                    value={modifiedCategoryName}\r\n                    name=\"Category\"\r\n                    onChange={({ target }) => setModifiedCategoryName(target.value)}\r\n                  />\r\n                  <div className=\"item-buttons-save\">\r\n                    <button type=\"submit\" className=\"category-save-button\">Tallenna</button>\r\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            :\r\n            <Fragment>\r\n              <p className=\"item-name\">{category.name}</p>\r\n              <div className=\"item-buttons\">\r\n                <button onClick={() => handleShowModify(category)} className=\"modify-button\">Muokkaa</button>\r\n                <button onClick={() => handleCategoryDelete(category)} className=\"delete-button\">Poista</button>\r\n              </div>\r\n            </Fragment>\r\n          }\r\n        </div>))\r\n      }\r\n\r\n      <form onSubmit={handleCategoryAdd} className=\"add-form\">\r\n        <div className=\"item-add\">\r\n          <input\r\n            className=\"category\"\r\n            type=\"text\"\r\n            value={newCategoryName}\r\n            name=\"Category\"\r\n            placeholder=\"Uusi kategoria\"\r\n            onChange={({ target }) => setNewCategoryName(target.value)}\r\n          />\r\n          <button type=\"submit\" className=\"category-add-button\">Lisää</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Category\r\n","import React, { useState, Fragment } from 'react'\r\nimport Rule from './Rule'\r\nimport Language from './Language'\r\nimport Series from './Series'\r\nimport Category from './Category'\r\n\r\nconst AddTaskDropdown = ({ rules, categories, languages, series, setRules, setCategories, setLanguages, setSeries }) => {\r\n  const [showCategories, setShowCategories] = useState(false)\r\n  const [showRules, setShowRules] = useState(false)\r\n  const [showLanguages, setShowLanguages] = useState(false)\r\n  const [showSeries, setShowSeries] = useState(false)\r\n\r\n  return (\r\n    <div className=\"crls-container\">\r\n      <div className=\"task-types-menu\">\r\n        {showSeries ?\r\n          <Fragment>\r\n            <button className=\"task-types\" onClick={() => setShowSeries(!showSeries)}>Sulje sarjat</button>\r\n            <Series series={series} setSeries={setSeries} />\r\n          </Fragment>\r\n          :\r\n          <button className=\"task-types\" onClick={() => setShowSeries(!showSeries)}>Sarjat</button>\r\n        }\r\n      </div>\r\n      <div className=\"task-types-menu\">\r\n        {showRules ?\r\n          <Fragment>\r\n            <button className=\"task-types\" onClick={() => setShowRules(!showRules)}>Sulje säännöt</button>\r\n            <Rule rules={rules} setRules={setRules} categories={categories} />\r\n          </Fragment>\r\n          :\r\n          <button className=\"task-types\" onClick={() => setShowRules(!showRules)}>Säännöt</button>\r\n        }\r\n      </div>\r\n      <div className=\"task-types-menu\">\r\n        {showCategories ?\r\n          <Fragment>\r\n            <button className=\"task-types\" onClick={() => setShowCategories(!showCategories)}>Sulje kategoriat</button>\r\n            <Category categories={categories} setCategories={setCategories} />\r\n          </Fragment>\r\n          :\r\n          <button className=\"task-types\" onClick={() => setShowCategories(!showCategories)}>Kategoriat</button>\r\n        }\r\n      </div>\r\n      <div className=\"task-types-menu\">\r\n        {showLanguages ?\r\n          <Fragment>\r\n            <button className=\"task-types\" onClick={() => setShowLanguages(!showLanguages)}>Sulje kielet</button>\r\n            <Language languages={languages} setLanguages={setLanguages} />\r\n          </Fragment>\r\n          :\r\n          <button className=\"task-types\" onClick={() => setShowLanguages(!showLanguages)}>Kielet</button>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddTaskDropdown\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/file`\r\n\r\nconst updateFiles = async (files) => {\r\n  const config = {\r\n    headers: { 'Content-Type': 'multipart/form-data' }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, files, config)\r\n  return response.data\r\n}\r\n\r\nexport default { updateFiles }\r\n","import React from 'react'\r\nimport MarkdownIt from 'markdown-it'\r\nimport MdEditor from 'react-markdown-editor-lite'\r\nimport 'react-markdown-editor-lite/lib/index.css'\r\n\r\nconst MDEditor = ({ setText, setMD, value }) => {\r\n  const mdParser = new MarkdownIt()\r\n\r\n  const handleEditorChange = ({ html, text }) => {\r\n    setText(html)\r\n    setMD(text)\r\n  }\r\n\r\n  return (\r\n    <MdEditor\r\n      value={value}\r\n      renderHTML={(text) => mdParser.render(text)}\r\n      onChange={handleEditorChange}\r\n    />\r\n  )\r\n}\r\n\r\nexport default MDEditor\r\n\r\n\r\n\r\n","import React, { useState, Fragment } from 'react'\r\nimport Notification from '../misc/Notification'\r\nimport taskService from '../../services/task'\r\nimport fileService from '../../services/file'\r\nimport MDEditor from '../misc/MDEditor'\r\nimport Dropzone from 'react-dropzone'\r\n\r\nconst AddTask = ({ user, addTask, rules, seriess, languages }) => {\r\n\r\n  const [message, setMessage] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [assignmentText, setAssignmentText] = useState('')\r\n  const [gradingScale, setGradingScale] = useState('')\r\n  const [supervisorInstructions, setSupervisorInstructions] = useState('')\r\n  const [assignmentTextMD, setAssignmentTextMD] = useState('')\r\n  const [gradingScaleMD, setGradingScaleMD] = useState('')\r\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState('')\r\n  const [rule, setRule] = useState('')\r\n  const [categories, setCategories] = useState([])\r\n  const [category, setCategory] = useState('')\r\n  const [series, setSeries] = useState([])\r\n  const [language, setLanguage] = useState('')\r\n  const [creatorName, setCreatorName] = useState('')\r\n  const [creatorEmail, setCreatorEmail] = useState('')\r\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\r\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\r\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\r\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\r\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\r\n  const [files, setFiles] = useState([])\r\n  const [fileNames, setFileNames] = useState({})\r\n  const [showChangeFileName, setShowChangeFileName] = useState(false)\r\n  const [nameToChange, setNameToChange] = useState('')\r\n  const [changedFileName, setChangedFileName] = useState('')\r\n  const [changedFileExtension, setChangedFileExtension] = useState('')\r\n  const [editor, setEditor] = useState(0)\r\n\r\n  const handleRuleChange = (e) => {\r\n    setRule(e.target.value)\r\n    setCategory('')\r\n    if (e.target.value) {\r\n      const foundRule = rules.find(r => r.id === e.target.value)\r\n      setCategories(foundRule.acceptedCategories)\r\n    } else {\r\n      setCategories([])\r\n    }\r\n  }\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setCategory(e.target.value)\r\n  }\r\n\r\n  const handleSeriesChange = (e) => {\r\n    let options = e.target.options\r\n    let values = []\r\n    for (var i = 0, l = options.length; i < l; i++) {\r\n      if (options[i].selected && options[i].value !== '') {\r\n        values.push(options[i].value)\r\n      }\r\n    }\r\n    setSeries(values)\r\n  }\r\n\r\n  const handleLanguageChange = (e) => {\r\n    setLanguage(e.target.value)\r\n  }\r\n\r\n  const handleAddTask = async (event) => {\r\n    event.preventDefault()\r\n    setNameErrorMessage(null)\r\n    setAssignmentTextErrorMessage(null)\r\n    setCreatorNameErrorMessage(null)\r\n    setCreatorEmailErrorMessage(null)\r\n    setDropDownErrorMessage(null)\r\n    if (name.length < 1) {\r\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\r\n    }\r\n    if (assignmentText.length < 1) {\r\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\r\n    }\r\n    if (creatorName.length < 1) {\r\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\r\n    }\r\n    if (creatorEmail.length < 1) {\r\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\r\n    }\r\n    if (language === '' || rule === '' || series === '' || category === '') {\r\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\r\n    }\r\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\r\n            || language === '' || rule === '' || series === '' || category === '') {\r\n      return\r\n    }\r\n    setAssignmentText(JSON.stringify(assignmentText))\r\n    setGradingScale(JSON.stringify(gradingScale))\r\n    setSupervisorInstructions(JSON.stringify(supervisorInstructions))\r\n\r\n    let formData = new FormData()\r\n\r\n    if (files.length > 0) {\r\n      for (let i = 0; i < files.length; i++) {\r\n          formData.append('filesToAdd', files[i], fileNames[files[i].name])\r\n      }\r\n    }\r\n\r\n    let addedFiles = []\r\n\r\n    try {\r\n      addedFiles = await fileService.updateFiles(formData)\r\n      const task = await taskService.addtask({\r\n        name, rule, category, series,\r\n        language, assignmentText, gradingScale,\r\n        creatorName, creatorEmail, supervisorInstructions,\r\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD,\r\n        files: addedFiles\r\n      })\r\n      setName('')\r\n      setRule('')\r\n      setCategory('')\r\n      setSeries('')\r\n      setLanguage('')\r\n      setAssignmentText('')\r\n      setGradingScale('')\r\n      setCreatorEmail('')\r\n      setCreatorName('')\r\n      setSupervisorInstructions('')\r\n      setFiles([])\r\n      setFileNames({})\r\n      setEditor(editor + 1)\r\n      if (user) {\r\n        addTask(task)\r\n      }\r\n      window.scrollTo({ top: 0, behavior: 'smooth'})\r\n      setMessage('Tehtävä lisätty!')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 2000)\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const onDrop = (newFiles) => {\r\n    let newFilesArray = []\r\n    let newNames = {}\r\n    for (let i = 0; i < newFiles.length; i++) {\r\n      let found = false\r\n      for (let j = 0; j < files.length; j++) {\r\n        if (files[j].name === newFiles[i].name) {\r\n          found = true\r\n        }\r\n      }\r\n      if (!found) {\r\n        newFilesArray.push(newFiles[i])\r\n        newNames[newFiles[i].name] = newFiles[i].name\r\n      }\r\n    }\r\n    setFiles(files.concat(newFilesArray))\r\n    setFileNames({ ...fileNames, ...newNames })\r\n  }\r\n\r\n  const handleDeleteFile = (e, name) => {\r\n    e.stopPropagation()\r\n    setFiles(files.filter(file => file.name !== name))\r\n  }\r\n\r\n  const handleChangeFileName = (e, name) => {\r\n    e.stopPropagation()\r\n    setShowChangeFileName(true)\r\n    setNameToChange(name)\r\n    setChangedFileName(name.substring(0, name.lastIndexOf('.')))\r\n    setChangedFileExtension(name.substring(name.lastIndexOf('.')))\r\n  }\r\n\r\n  const handleSaveFileName = (e, name) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setFileNames({ ...fileNames, [name]: changedFileName + changedFileExtension })\r\n    setShowChangeFileName(false)\r\n    setNameToChange('')\r\n    setChangedFileName('')\r\n    setChangedFileExtension('')\r\n  }\r\n\r\n  const handleCancelChangeFileName = (e) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setShowChangeFileName(false)\r\n    setNameToChange('')\r\n    setChangedFileName('')\r\n    setChangedFileExtension('')\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-task-container\">\r\n      <h2>Lisää tehtävä</h2>\r\n      <Notification message={message} type=\"success\" />\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleAddTask}>\r\n        <div>\r\n          <Notification message={nameErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"task-title\"\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"Name\"\r\n            placeholder=\"Tehtävän nimi\"\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h4>Tehtävänanto</h4>\r\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\r\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} key={editor + 1} />\r\n        </div>\r\n        <div>\r\n          <h4>Arvostelu</h4>\r\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} key={editor + 2} />\r\n        </div>\r\n        <div className=\"instructions\">\r\n          <h4>Rastimiehen ohje</h4>\r\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} key={editor + 3} />\r\n        </div>\r\n        <Notification message={dropDownErrorMessage} type=\"error\" />\r\n        <div className=\"dropdowns\">\r\n          <div>\r\n            <h4 className=\"series-mobile\">Sarja</h4>\r\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\r\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\r\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <select className=\"rule-select\" value={rule} onChange={(e) => handleRuleChange(e)}>\r\n              <option value=\"\">Säännöt</option>\r\n              {rules.map(rule => <option className=\"rule-options\" key={rule.id} value={rule.id}>{rule.name}</option>)}\r\n            </select>\r\n            <br/>\r\n            <select className=\"category-select\" value={category} onChange={(e) => handleCategoryChange(e)}>\r\n              <option value=\"\">Kategoria</option>\r\n              {categories.map(category => <option className=\"category-options\" key={category.id} value={category.id}>{category.name}</option>)}\r\n            </select>\r\n            <br/>\r\n            <select className=\"language-select\" value={language} onChange={(e) => handleLanguageChange(e)}>\r\n              <option value=\"\">Kieli</option>\r\n              {languages.map(language => <option className=\"language-options\" key={language.id} value={language.id}>{language.name}</option>)}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"creator\">\r\n          <div>\r\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\r\n            <input\r\n              className=\"\"\r\n              type=\"text\"\r\n              value={creatorName}\r\n              name=\"CreatorName\"\r\n              placeholder=\"Lisääjän nimi\"\r\n              onChange={({ target }) => setCreatorName(target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\r\n            <input\r\n              className=\"\"\r\n              type=\"text\"\r\n              value={creatorEmail}\r\n              name=\"CreatorEmail\"\r\n              placeholder=\"Lisääjän sähköposti\"\r\n              onChange={({ target }) => setCreatorEmail(target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <Dropzone onDrop={onDrop}>\r\n          {({getRootProps, getInputProps}) => (\r\n            <div {...getRootProps()}>\r\n              <input {...getInputProps()} />\r\n              <div className=\"files\">\r\n                <div className=\"title\">Liitetiedostot</div>\r\n                {files.length > 0 &&\r\n                  <React.Fragment>\r\n                    {files.map((file) => (\r\n                      <div key={file.name}>\r\n                        {showChangeFileName && file.name === nameToChange ?\r\n                          <div>\r\n                            <input\r\n                              className=\"\"\r\n                              type=\"text\"\r\n                              value={changedFileName}\r\n                              name=\"ChangedFileName\"\r\n                              onChange={({ target }) => setChangedFileName(target.value)}\r\n                              onClick={e => e.stopPropagation()}\r\n                            />\r\n                            {changedFileExtension}\r\n                            <div className=\"button-container\">\r\n                              <button onClick={(e) => handleSaveFileName(e, file.name)}>Tallenna</button>\r\n                              <button onClick={(e) => handleCancelChangeFileName(e)}>Peruuta</button>\r\n                            </div>\r\n                          </div>\r\n                          :\r\n                          <Fragment>\r\n                            {fileNames[file.name]}\r\n                            <span onClick={(e) => handleChangeFileName(e, file.name)}className=\"edit-file\" />\r\n                            <span onClick={(e) => handleDeleteFile(e, file.name)}className=\"remove-file\" />\r\n                          </Fragment>\r\n                        }\r\n                      </div>\r\n                    ))}\r\n                  </React.Fragment>\r\n                }\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Dropzone>\r\n\r\n        <button type=\"submit\" className=\"add-task-button\">Lisää tehtävä</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default AddTask","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport taskService from '../../services/task'\r\nimport Notification from '../misc/Notification'\r\nimport tokenService from '../../services/token'\r\n\r\n\r\nconst TaskListPending = ({ handleAddTask, handleUpdateTask, handleDeleteTask }) => {\r\n  const [tasks, setTasks] = useState([])\r\n  const [message, setMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (!tokenService.getToken()) {\r\n      const loggedUserJSON = window.localStorage.getItem('loggedUser')\r\n      if (loggedUserJSON) {\r\n        const loggedUser = JSON.parse(loggedUserJSON)\r\n        tokenService.setToken(loggedUser.token)\r\n      }\r\n    }\r\n    taskService.getPendingTasks().then((response) => {\r\n      setTasks(response)\r\n    })\r\n  }, [])\r\n\r\n  const handleAccept = (e, task) => {\r\n    e.preventDefault()\r\n    try {\r\n      taskService.acceptTask(task.id)\r\n      setTasks(tasks.filter(t => t.id !== task.id))\r\n      handleAddTask(task)\r\n      setMessage('Tehtävä hyväksytty')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleUpdateViews = async (task) => {\r\n    try {\r\n      await taskService.updateViews(task.id)\r\n      handleUpdateTask({ ...task, views: task.views + 1 })\r\n    } catch (exeption) {\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (e, task) => {\r\n    e.preventDefault()\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\r\n        await taskService.deleteTask(task.id)\r\n        handleDeleteTask(task.id)\r\n      }\r\n    } catch (exeption) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-list\">\r\n      <h1>Hyväksyntää odottavat kisatehtävät</h1>\r\n      <Notification message={message} type=\"success\" />\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      {tasks && tasks.length > 0 ?\r\n        <div className=\"task-list-title\">\r\n          <span>Tehtävän nimi</span>\r\n          <span>Sarja</span>\r\n          <span>Kategoria</span>\r\n          <span className=\"accept-and-delete-buttons\"></span>\r\n          <span></span>\r\n        </div>\r\n        :\r\n        <div>Ei tehtäviä</div>\r\n      }\r\n      \r\n      {tasks.map((task) => (\r\n        <Link className=\"no-underline\" to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task)} key={task.id}>\r\n        <div className=\"task-list-item\">\r\n          <span>\r\n            {task.name}\r\n            <p>Katselukertoja: {task.views}</p>\r\n          </span>\r\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\r\n          <span>{task.category && task.category.name}</span>\r\n          <span className=\"accept-and-delete-buttons\">\r\n            <button className=\"accept-button\" onClick={(e) => handleAccept(e, task)}>Hyväksy</button>\r\n            <button className=\"delete-button\" onClick={(e) => handleDelete(e, task)}>Poista</button>\r\n          </span>\r\n          <span></span>\r\n        </div>\r\n      </Link>\r\n      ))}\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default TaskListPending\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/comment`\r\n\r\nconst getComments = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`)\r\n  return response.data\r\n}\r\n\r\nconst getPendingComments = async () => {\r\n  let config = null\r\n  const token = tokenService.getToken()\r\n\r\n  if (token) {\r\n    config = {\r\n      headers: { Authorization: token }\r\n    }\r\n  }\r\n  const response = await axios.get(`${baseUrl}/pending`, config)\r\n  return response.data\r\n}\r\n\r\nconst addComment = async (comment) => {\r\n  let config = null\r\n  const token = tokenService.getToken()\r\n\r\n  console.log(token)\r\n  if (token) {\r\n    config = {\r\n      headers: { Authorization: token }\r\n    }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, comment, config)\r\n  return response.data\r\n}\r\n\r\nconst acceptComment = async (id) => {\r\n  let config = null\r\n  const token = tokenService.getToken()\r\n\r\n  if (token) {\r\n    config = {\r\n      headers: { Authorization: token }\r\n    }\r\n  }\r\n \r\n  const response = await axios.put(`${baseUrl}/${id}/accept`, id, config)\r\n  return response.data\r\n}\r\n\r\nconst deleteComment = async (id) => {\r\n  let config = null\r\n  const token = tokenService.getToken()\r\n\r\n  if (token) {\r\n    config = {\r\n      headers: { Authorization: token }\r\n    }\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { getComments, getPendingComments, addComment, deleteComment, acceptComment }","import React, { useState, useEffect } from 'react'\r\nimport commentService from '../../services/comment'\r\nimport Notification from '../misc/Notification'\r\nimport tokenService from '../../services/token'\r\n\r\nconst CommentListPending = () => {\r\n  const [comments, setComments] = useState([])\r\n  const [message, setMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (!tokenService.getToken()) {\r\n      const loggedUserJSON = window.localStorage.getItem('loggedUser')\r\n      if (loggedUserJSON) {\r\n        const loggedUser = JSON.parse(loggedUserJSON)\r\n        tokenService.setToken(loggedUser.token)\r\n      }\r\n    }\r\n    commentService.getPendingComments().then((response) => {\r\n      setComments(response)\r\n    })\r\n  }, [])\r\n\r\n  const handleCommentDelete = async (comment) => {\r\n    try {\r\n      await commentService.deleteComment(comment.id)\r\n      setComments(comments.filter(c => c.id !== comment.id))\r\n    } catch (exeption) {\r\n      setErrorMessage('Kommentin poistaminen ei onnistunut')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleCommentAccept = async (comment) => {\r\n    try {\r\n      await commentService.acceptComment(comment.id)\r\n      setComments(comments.filter(c => c.id !== comment.id))\r\n      setMessage('Kommentin hyväksyminen onnistui')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    } catch (exeption) {\r\n      setErrorMessage('Kommentin hyväksyminen ei onnistunut')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-list\">\r\n      <h1>Hyväksyntää odottavat kommentit</h1>\r\n      <Notification message={message} type=\"success\" />\r\n      <Notification message={errorMessage} type=\"error\" />\r\n\r\n      {comments && comments.length > 0 ?\r\n        <div className=\"task-list-title\">\r\n          <span>Kommentti</span>\r\n          <span></span>\r\n          <span>Kommentoija</span>\r\n          <span className=\"accept-and-delete-buttons\"></span>\r\n          <span></span>\r\n        </div>\r\n        :\r\n        <div className=\"no-comments\">Ei kommentteja</div>\r\n      }\r\n\r\n      {comments.map((comment) => (\r\n        <div className=\"no-underline\" key={comment.id}>\r\n          <div className=\"task-list-item\">\r\n            <span>{comment.content}</span>\r\n            <span></span>\r\n            <span>{comment.nickname}</span>\r\n            <span className=\"accept-and-delete-buttons\">\r\n              <button className=\"accept-button\" onClick={() => handleCommentAccept(comment)}>Hyväksy</button>\r\n              <button className=\"delete-button\" onClick={() => handleCommentDelete(comment)}>Poista</button>\r\n            </span>\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default CommentListPending\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport TaskListPending from '../task/TaskListPending'\r\nimport CommentListPending from '../comments/CommentListPending'\r\n\r\nconst Admin = ({ handleAddTask, handleUpdateTask, handleDeleteTask }) => (\r\n  <div>\r\n    <TaskListPending handleAddTask={handleAddTask} handleUpdateTask={handleUpdateTask} handleDeleteTask={handleDeleteTask} />\r\n    <CommentListPending/>\r\n    <div className=\"admin-list\"><Link className=\"no-underline\" to=\"/omasivu\">Omat tiedot</Link></div>\r\n    <div className=\"admin-list\"><Link className=\"no-underline\" to=\"/lisaa_admin\">Lisää ylläpitäjä</Link></div>\r\n    <div className=\"admin-list\"><Link className=\"no-underline\" to=\"/lisaa_pudotusvalikkoon\">Hallinnoi sääntöjä, kieliä, sarjoja ja kategorioita</Link></div>\r\n  </div>\r\n)\r\n\r\nexport default Admin\r\n","import React, { useState } from 'react'\r\nimport Notification from '../misc/Notification'\r\nimport userService from '../../services/user'\r\n\r\nconst EditUser = ({ setShowEdit, user, setUser, setMessage }) => {\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\r\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\r\n  const [emailErrorMessage, setEmailErrorMessage] = useState(null)\r\n  const [name, setName] = useState(user.name)\r\n  const [username, setUsername] = useState(user.username)\r\n  const [email, setEmail] = useState(user.email)\r\n  const [allowNotifications, setAllowNotifications] = useState(user.allowNotifications)\r\n\r\n  const handleEditUser = async (event) => {\r\n\r\n\r\n    event.preventDefault()\r\n    setNameErrorMessage(null)\r\n    setUsernameErrorMessage(null)\r\n    setEmailErrorMessage(null)\r\n    if (name.length < 3) {\r\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\r\n    }\r\n    if (username.length < 3) {\r\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\r\n    }\r\n    if (email.length < 5) {\r\n      setEmailErrorMessage('Sähköpostissa pitää olla vähintään 5 kirjainta')\r\n    }\r\n    if (name.length < 3 || username.length < 3) {\r\n      return\r\n    }\r\n    try {\r\n      const editedUser = await userService.editUser({\r\n        name, username, email, allowNotifications\r\n      })\r\n      setUser(editedUser)\r\n      window.localStorage.setItem(\r\n        'loggedUser', JSON.stringify(editedUser),\r\n      )\r\n      setShowEdit(false)\r\n      setMessage('Tietoja muokattu!')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    } catch (error) {\r\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"username already exists\") {\r\n        setErrorMessage('Käyttäjätunnus on varattu')\r\n      } else {\r\n        setErrorMessage('Muokkaaminen epäonnistui')\r\n      }\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"edit-user-form\">\r\n      <h2>Omat tiedot</h2>\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleEditUser}>\r\n        <div>\r\n          <Notification message={nameErrorMessage} type=\"error\" />\r\n          <label>Nimi</label><br />\r\n          <input\r\n            className=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"Name\"\r\n            placeholder=\"Nimi\"\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Notification message={usernameErrorMessage} type=\"error\" />\r\n          <label>Käyttäjätunnus</label><br />\r\n          <input\r\n            className=\"username\"\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"Username\"\r\n            placeholder=\"Käyttäjätunnus\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Notification message={emailErrorMessage} type=\"error\" />\r\n          <label>Sähköposti</label><br />\r\n          <input\r\n            className=\"email\"\r\n            type=\"text\"\r\n            value={email}\r\n            name=\"Email\"\r\n            placeholder=\"Sähköposti\"\r\n            onChange={({ target }) => setEmail(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Vastaanota ilmoituksia:\r\n            <div className=\"admin-radio\" onChange={({ target }) => setAllowNotifications(target.value)}>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"notifications\"\r\n                  value={true}\r\n                  defaultChecked={allowNotifications}\r\n                />\r\n                Kyllä\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"notifications\"\r\n                  value={false}\r\n                  defaultChecked={!allowNotifications}\r\n                />\r\n                Ei\r\n              </label>\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\" className=\"edit-button\">Tallenna</button>\r\n        <button onClick={() => setShowEdit(false)} className=\"cancel-button\">Peruuta</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditUser\r\n","import React, { useState } from 'react'\r\nimport Notification from '../misc/Notification'\r\nimport userService from '../../services/user'\r\n\r\nconst ChangePassword = ({ setShowChangePassword, setMessage }) => {\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [oldPassword, setOldPassword] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const [newPasswordAgain, setNewPasswordAgain] = useState('')\r\n\r\n  const handleChangePassword = async (event) => {\r\n    event.preventDefault()\r\n    setErrorMessage(null)\r\n    if (newPassword.length < 3) {\r\n      setErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\r\n      return\r\n    }\r\n    if (newPassword !== newPasswordAgain) {\r\n      setErrorMessage('Salasanat eivät täsmää')\r\n      return\r\n    }\r\n    try {\r\n      await userService.editUser({\r\n        oldPassword, newPassword\r\n      })\r\n      setOldPassword('')\r\n      setNewPassword('')\r\n      setNewPasswordAgain('')\r\n      setShowChangePassword(false)\r\n      setMessage('Salasana vaihdettu!')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    } catch (error) {\r\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"incorrect password\") {\r\n        setErrorMessage('Vanha salasana ei täsmää')\r\n      } else {\r\n        setErrorMessage('Salasanan vaihtaminen epäonnistui')\r\n      }\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"change-password-form\">\r\n      <h2>Vaihda salasana</h2>\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleChangePassword}>\r\n        <div>\r\n          <input\r\n            className=\"old-password\"\r\n            type=\"password\"\r\n            value={oldPassword}\r\n            placeholder=\"Vanha salasana\"\r\n            onChange={({ target }) => setOldPassword(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"new-password\"\r\n            type=\"password\"\r\n            value={newPassword}\r\n            placeholder=\"Uusi salasana\"\r\n            onChange={({ target }) => setNewPassword(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"new-password-again\"\r\n            type=\"password\"\r\n            value={newPasswordAgain}\r\n            placeholder=\"Uusi salasana uudelleen\"\r\n            onChange={({ target }) => setNewPasswordAgain(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"change-password-button\">Tallenna</button>\r\n        <button onClick={() => setShowChangePassword(false)} className=\"cancel-button\">Peruuta</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChangePassword\r\n","import React, { useState } from 'react'\r\nimport Notification from '../misc/Notification'\r\nimport EditUser from './EditUser'\r\nimport ChangePassword from './ChangePassword'\r\n\r\nconst User = ({ user, setUser }) => {\r\n  const [message, setMessage] = useState(null)\r\n  const [showEdit, setShowEdit] = useState(false)\r\n  const [showChangePassword, setShowChangePassword] = useState(false)\r\n\r\n  const editUser = () => {\r\n    setShowChangePassword(false)\r\n    setShowEdit(true)\r\n  }\r\n\r\n\r\n  const changePassword = () => {\r\n    setShowEdit(false)\r\n    setShowChangePassword(true)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {user\r\n        && (\r\n          <div className=\"user-info\">\r\n            {!showEdit && !showChangePassword\r\n              && (\r\n                <div>\r\n                  <Notification message={message} type=\"success\" />\r\n                  <h2>Omat tiedot</h2>\r\n                  <p>\r\n                    <b>Nimi: </b>\r\n                    {user.name}\r\n                  </p>\r\n                  <p>\r\n                    <b>Käyttäjätunnus: </b>\r\n                    {user.username}\r\n                  </p>\r\n                  <p>\r\n                    <b>Sähköpostiosoite: </b>\r\n                    {user.email}\r\n                  </p>\r\n                  <p>\r\n                    <b>Ilmoitukset: </b>\r\n                    {user.allowNotifications ?\r\n                      <span>Päällä</span>\r\n                      :\r\n                      <span>Pois päältä</span>\r\n                    }\r\n                  </p>\r\n                  <button className=\"edit-user-button\" onClick={() => editUser()}>Muokkaa</button>\r\n                  <button className=\"change-password-button\" onClick={() => changePassword()}>Vaihda salasana</button>\r\n                </div>\r\n              )}\r\n            {showEdit && <EditUser setShowEdit={setShowEdit} user={user} setUser={setUser} setMessage={setMessage} />}\r\n            {showChangePassword && <ChangePassword setShowChangePassword={setShowChangePassword} setMessage={setMessage} />}\r\n          </div>\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import React, { useState, useEffect } from 'react'\r\nimport StarRatings from 'react-star-ratings'\r\nimport taskService from '../../services/task'\r\nimport Notification from './Notification'\r\n\r\nconst Rating = ({ task, handleUpdateTask }) => {\r\n  const [rating, setRating] = useState()\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [confirmMessage, setConfirmMessage] = useState(null)\r\n  const [ratedMessage, setRatedMessage] = useState(null)\r\n  const [ratingsAVG, setRatingsAVG] = useState(task.ratingsAVG)\r\n  const [ratingsAmount, setRatingsAmount] = useState(task.ratingsAmount)\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    const votesJSON = window.localStorage.getItem('votes')\r\n    if (votesJSON) {\r\n      const votes = JSON.parse(votesJSON)\r\n      const foundVote = votes.find(t => t === task.id)\r\n      if (foundVote) {\r\n        setDisabled(true)\r\n        setRatedMessage('Kiitos! Olet jo arvioinut tämän rastin.')\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  const changeRating = async (newRating) => {\r\n    try {\r\n      const updatedValues = await taskService.addRating(task.id, {\r\n        rating: newRating\r\n      })\r\n      const votesJSON = window.localStorage.getItem('votes')\r\n      if (votesJSON) {\r\n        const votes = JSON.parse(votesJSON)\r\n        const newVotes = votes.concat(task.id)\r\n        window.localStorage.setItem('votes', JSON.stringify(newVotes))\r\n      }\r\n      setRatingsAVG(updatedValues.ratingsAVG)\r\n      setRatingsAmount(updatedValues.ratingsAmount)\r\n      handleUpdateTask({ ...task, ratings: task.ratings[newRating - 1] + 1, ratingsAVG: updatedValues.ratingsAVG, ratingsAmount: updatedValues.ratingsAmount })\r\n      setDisabled(true)\r\n      setConfirmMessage('Arvostelu lähetetty')\r\n    }\r\n    catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-rating\">\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <Notification message={confirmMessage} type=\"success\" />\r\n      <div className=\"rating\">\r\n        <div>\r\n          <h4>Keskiarvo:</h4>\r\n          <StarRatings\r\n            rating={Number(ratingsAVG)}\r\n            starRatedColor=\"yellow\"\r\n            starDimension=\"20px\"\r\n            starSpacing=\"10px\"\r\n          />\r\n        </div>\r\n        <div className=\"rating-amount\">\r\n          ({ratingsAmount})\r\n        </div>\r\n      </div>\r\n      <Notification message={ratedMessage} type=\"rated\" />\r\n      {!disabled &&\r\n        <div>\r\n          <h4>Arvostele:</h4>\r\n          <StarRatings\r\n            rating={rating}\r\n            changeRating={changeRating}\r\n            starDimension=\"30px\"\r\n            starSpacing=\"10px\"\r\n          />\r\n        </div>\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Rating\r\n","import React, { useState } from 'react'\r\nimport commentService from '../../services/comment'\r\nimport Notification from '../misc/Notification'\r\n\r\nconst AddComment = ({ task, user, setComments, comments }) => {\r\n  const [nickname, setNickname] = useState(\"\")\r\n  const [content, setContent] = useState(\"\")\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const handleAddComment = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n\r\n      const addedComment = await commentService.addComment({\r\n        content: content,\r\n        nickname: nickname,\r\n        task: task.id,\r\n      })\r\n      if (user) {\r\n        setComments(comments.concat(addedComment))\r\n      } \r\n      setMessage('Kommentin lisääminen onnistui')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n\r\n      setNickname('')\r\n      setContent('')\r\n    } catch (exception) {\r\n      setErrorMessage('Kommentin lisääminen ei onnistunut')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={message} type=\"success\" />\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleAddComment}>\r\n        <div>\r\n          <input\r\n            className=\"\"\r\n            type=\"text\"\r\n            value={nickname}\r\n            name=\"nickname\"\r\n            placeholder=\"Nimimerkki\"\r\n            onChange={({ target }) => setNickname(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <textarea\r\n            className=\"textarea\"\r\n            type=\"textarea\"\r\n            value={content}\r\n            name=\"content\"\r\n            placeholder=\"Kommentti\"\r\n            onChange={({ target }) => setContent(target.value)}\r\n            rows=\"5\"\r\n            cols=\"50\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"add-task-button\">Lisää kommentti</button>\r\n\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default AddComment\r\n","import React, { useState, useEffect } from 'react'\r\nimport commentService from '../../services/comment'\r\nimport Notification from '../misc/Notification'\r\nimport Moment from 'react-moment'\r\nimport AddComment from './AddComment'\r\n\r\n\r\nconst Comment = ({ task, user }) => {\r\n  const [comments, setComments] = useState([])\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    commentService.getComments(task.id).then((response) => {\r\n      setComments(response)\r\n\r\n    })\r\n  }, [])\r\n\r\n  const handleCommentDelete = async ( comment) => {\r\n    try {\r\n      await commentService.deleteComment(comment.id)\r\n      setComments(comments.filter(c => c.id !== comment.id))\r\n    } catch (exeption) {\r\n      setErrorMessage('Kommentin poistaminen ei onnistunut')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      {comments.map((comment) => (\r\n        <div key={comment.id}>\r\n          <div className=\"comment-date\">\r\n            <Moment format=\"DD.MM.YYYY HH:mm\">{comment.created}</Moment>\r\n            {user &&\r\n              <button className=\"button-delete-comment\" onClick={() => handleCommentDelete( comment)}>Poista</button>\r\n            }\r\n          </div>\r\n          <div className=\"comment-content\">\r\n            {comment.content}\r\n          </div>\r\n          <div>\r\n            <div className=\"comment-container\">\r\n              <div>\r\n                <div className=\"user\" />\r\n              </div>\r\n              <div className=\"user-right\" >\r\n                <p className=\"user-left\">{comment.nickname}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"space2\"></div>\r\n        </div>\r\n      ))}\r\n      <div className=\"space\"></div>\r\n      <AddComment task={task} user={user} setComments={setComments} comments={comments} />\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\nexport default Comment\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport Notification from '../misc/Notification'\r\nimport taskService from '../../services/task'\r\nimport fileService from '../../services/file'\r\nimport MDEditor from '../misc/MDEditor'\r\nimport Dropzone from 'react-dropzone'\r\n\r\nconst ModifyTask = ({ setModifyVisible, task, setTask, handleUpdateTask, rules, seriess, languages }) => {\r\n\r\n  const [message, setMessage] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [name, setName] = useState(task.name)\r\n  const [assignmentText, setAssignmentText] = useState(task.assignmentText)\r\n  const [gradingScale, setGradingScale] = useState(task.gradingScale)\r\n  const [supervisorInstructions, setSupervisorInstructions] = useState(task.supervisorInstructions)\r\n  const [assignmentTextMD, setAssignmentTextMD] = useState(task.assignmentTextMD)\r\n  const [gradingScaleMD, setGradingScaleMD] = useState(task.gradingScaleMD)\r\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState(task.supervisorInstructionsMD)\r\n  const [categories, setCategories] = useState([])\r\n  const [rule, setRule] = useState(task.rules ? task.rules.id : null)\r\n  const [category, setCategory] = useState(task.category ? task.category.id : null)\r\n  const [series, setSeries] = useState(task.series.map(s => s.id))\r\n  const [language, setLanguage] = useState(task.language ? task.language.id : null)\r\n  const [creatorName, setCreatorName] = useState(task.creatorName)\r\n  const [creatorEmail, setCreatorEmail] = useState(task.creatorEmail)\r\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\r\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\r\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\r\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\r\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\r\n  const [oldFiles, setOldFiles] = useState(task.files || [])\r\n  const [newFiles, setNewFiles] = useState([])\r\n  const [nameToChange, setNameToChange] = useState('')\r\n  const [fileNames, setFileNames] = useState({})\r\n  const [showChangeFileName, setShowChangeFileName] = useState(false)\r\n  const [changedFileName, setChangedFileName] = useState('')\r\n  const [changedFileExtension, setChangedFileExtension] = useState('')\r\n  const [filesToDelete, setFilesToDelete] = useState([])\r\n\r\n  let id = task.id\r\n\r\n  useEffect(() => {\r\n    if (rules && task.rules && task.rules.id) {\r\n      const foundRule = rules.find(r => r.id === task.rules.id)\r\n      if (foundRule) {\r\n        setCategories(foundRule.acceptedCategories)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  const handleRuleChange = (e) => {\r\n    setRule(e.target.value)\r\n    setCategory('')\r\n    if (e.target.value) {\r\n      const foundRule = rules.find(r => r.id === e.target.value)\r\n      setCategories(foundRule.acceptedCategories)\r\n    } else {\r\n      setCategories([])\r\n    }\r\n  }\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setCategory(e.target.value)\r\n  }\r\n\r\n  const handleSeriesChange = (e) => {\r\n    let options = e.target.options\r\n    let values = []\r\n    for (var i = 0, l = options.length; i < l; i++) {\r\n      if (options[i].selected && options[i].value !== '') {\r\n        values.push(options[i].value)\r\n      }\r\n    }\r\n    setSeries(values)\r\n  }\r\n\r\n  const handleLanguageChange = (e) => {\r\n    setLanguage(e.target.value)\r\n  }\r\n\r\n  const handleModifyTask = async (event) => {\r\n    event.preventDefault()\r\n    setNameErrorMessage(null)\r\n    setAssignmentTextErrorMessage(null)\r\n    setCreatorNameErrorMessage(null)\r\n    setCreatorEmailErrorMessage(null)\r\n    setDropDownErrorMessage(null)\r\n    if (name.length < 1) {\r\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\r\n    }\r\n    if (assignmentText.length < 1) {\r\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\r\n    }\r\n    if (creatorName.length < 1) {\r\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\r\n    }\r\n    if (creatorEmail.length < 1) {\r\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\r\n    }\r\n    if (language === '' || rule === '' || series === '' || category === '') {\r\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\r\n    }\r\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\r\n      || language === '' || rule === '' || series === '' || category === '') {\r\n      return\r\n    }\r\n\r\n    let formData = new FormData()\r\n\r\n    formData.append('filesToDelete', filesToDelete)\r\n\r\n    if (newFiles.length > 0) {\r\n      for (let i = 0; i < newFiles.length; i++) {\r\n          formData.append('filesToAdd', newFiles[i], fileNames[newFiles[i].name])\r\n      }\r\n    }\r\n\r\n    let addedFiles = []\r\n\r\n    try {\r\n      addedFiles = await fileService.updateFiles(formData)\r\n      const modifiedTask = await taskService.updateTask({\r\n        name, rule, category, series,\r\n        language, assignmentText, gradingScale,\r\n        creatorName, creatorEmail, supervisorInstructions, id,\r\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD,\r\n        files: oldFiles.concat(addedFiles)\r\n      })\r\n      setMessage('Tehtävä tallennettu!')\r\n      setTask(modifiedTask)\r\n      handleUpdateTask(modifiedTask)\r\n      setModifyVisible(false)\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 1000)\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setModifyVisible(false)\r\n  }\r\n\r\n  const onDrop = (files) => {\r\n    let newFilesArray = []\r\n    let newNames = {}\r\n    for (let i = 0; i < files.length; i++) {\r\n      let found = false\r\n      for (let j = 0; j < newFiles.length; j++) {\r\n        if (newFiles[j].name === files[i].name) {\r\n          found = true\r\n        }\r\n      }\r\n      if (!found) {\r\n        newFilesArray.push(files[i])\r\n        newNames[files[i].name] = files[i].name\r\n      }\r\n    }\r\n    setNewFiles(newFiles.concat(newFilesArray))\r\n    setFileNames({ ...fileNames, ...newNames })\r\n  }\r\n\r\n  const handleDeleteOldFile = (e, name) => {\r\n    e.stopPropagation()\r\n    setOldFiles(oldFiles.filter(file => file !== name))\r\n    setFilesToDelete(filesToDelete.concat(name))\r\n  }\r\n\r\n  const handleDeleteNewFile = (e, name) => {\r\n    e.stopPropagation()\r\n    setNewFiles(newFiles.filter(file => file.name !== name))\r\n  }\r\n\r\n  const handleChangeFileName = (e, name) => {\r\n    e.stopPropagation()\r\n    setShowChangeFileName(true)\r\n    setNameToChange(name)\r\n    setChangedFileName(name.substring(0, name.lastIndexOf('.')))\r\n    setChangedFileExtension(name.substring(name.lastIndexOf('.')))\r\n  }\r\n\r\n  const handleSaveFileName = (e, name) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setFileNames({ ...fileNames, [name]: changedFileName + changedFileExtension })\r\n    setShowChangeFileName(false)\r\n    setNameToChange('')\r\n    setChangedFileName('')\r\n    setChangedFileExtension('')\r\n  }\r\n\r\n  const handleCancelChangeFileName = (e) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setShowChangeFileName(false)\r\n    setNameToChange('')\r\n    setChangedFileName('')\r\n    setChangedFileExtension('')\r\n  }\r\n\r\n  return (\r\n    <div className=\"modify-task-container\">\r\n      <h2>Muokkaa tehtävää</h2>\r\n      <Notification message={message} type=\"success\" />\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleModifyTask} className=\"modify-form\">\r\n        <div>\r\n          <Notification message={nameErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"task-title\"\r\n            type=\"text\"\r\n            defaultValue={name}\r\n            name=\"Name\"\r\n            placeholder=\"Tehtävän nimi\"\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h4>Tehtävänanto</h4>\r\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\r\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} value={assignmentTextMD} placeHolder=\"Tehtävänanto\" />\r\n        </div>\r\n        <div>\r\n          <h4>Arvostelu</h4>\r\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} value={gradingScaleMD} placeHolder=\"Arvostelu\" />\r\n        </div>\r\n        <div className=\"instructions\">\r\n          <h4>Rastimiehen ohje</h4>\r\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} value={supervisorInstructionsMD} placeHolder=\"Rastimiehen ohje\" />\r\n        </div>\r\n        <Notification message={dropDownErrorMessage} type=\"error\" />\r\n        <div className=\"dropdowns\">\r\n          <div>\r\n            <h4 className=\"series-mobile\">Sarja</h4>\r\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\r\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\r\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <select value={rule} onChange={(e) => handleRuleChange(e)}>\r\n              <option value=\"\">Säännöt</option>\r\n              {rules.map(rule => <option key={rule.id} value={rule.id}>{rule.name}</option>)}\r\n            </select>\r\n            <br/>\r\n            <select value={category} onChange={(e) => handleCategoryChange(e)}>\r\n              <option value=\"\">Kategoria</option>\r\n              {categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)}\r\n            </select>\r\n            <br/>\r\n            <select value={language} onChange={(e) => handleLanguageChange(e)}>\r\n              <option value=\"\">Kieli</option>\r\n              {languages.map(language => <option key={language.id} value={language.id}>{language.name}</option>)}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"creator\">\r\n          <div>\r\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\r\n            <input\r\n              className=\"\"\r\n              type=\"text\"\r\n              defaultValue={creatorName}\r\n              name=\"CreatorName\"\r\n              placeholder=\"Muokkaajan nimi\"\r\n              onChange={({ target }) => setCreatorName(target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\r\n            <input\r\n              className=\"\"\r\n              type=\"text\"\r\n              defaultValue={creatorEmail}\r\n              name=\"CreatorEmail\"\r\n              placeholder=\"Muokkaajan sähköposti\"\r\n              onChange={({ target }) => setCreatorEmail(target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <Dropzone onDrop={onDrop}>\r\n          {({getRootProps, getInputProps}) => (\r\n            <div {...getRootProps()}>\r\n              <input {...getInputProps()} />\r\n              <div className=\"files\">\r\n                <div className=\"title\">Liitetiedostot</div>\r\n                {oldFiles && oldFiles.length > 0 &&\r\n                  <React.Fragment>\r\n                    {oldFiles.map((file) => (\r\n                      <div key={file}>{file.substring(file.indexOf('-') + 1, file.length)}<span onClick={(e) => handleDeleteOldFile(e, file)} className=\"remove-file\" /></div>\r\n                    ))}\r\n                  </React.Fragment>\r\n                }\r\n                {newFiles && newFiles.length > 0 &&\r\n                  <React.Fragment>\r\n                    {newFiles.map((file) => (\r\n                      <div key={file.name}>\r\n                        {showChangeFileName && file.name === nameToChange ?\r\n                          <div>\r\n                            <input\r\n                              className=\"\"\r\n                              type=\"text\"\r\n                              value={changedFileName}\r\n                              name=\"ChangedFileName\"\r\n                              onChange={({ target }) => setChangedFileName(target.value)}\r\n                              onClick={e => e.stopPropagation()}\r\n                            />\r\n                            {changedFileExtension}\r\n                            <div className=\"button-container\">\r\n                              <button onClick={(e) => handleSaveFileName(e, file.name)}>Tallenna</button>\r\n                              <button onClick={(e) => handleCancelChangeFileName(e)}>Peruuta</button>\r\n                            </div>\r\n                          </div>\r\n                          :\r\n                          <Fragment>\r\n                            {fileNames[file.name]}\r\n                            <span onClick={(e) => handleChangeFileName(e, file.name)}className=\"edit-file\" />\r\n                            <span onClick={(e) => handleDeleteNewFile(e, file.name)}className=\"remove-file\" />\r\n                          </Fragment>\r\n                        }\r\n                      </div>\r\n                    ))}\r\n                  </React.Fragment>\r\n                }\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Dropzone>\r\n\r\n        <div>\r\n          <button type=\"submit\" className=\"save-task-button\">Tallenna</button>\r\n          <button onClick={() => handleCancel()} className=\"return-button\">Peruuta</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default ModifyTask","import React from 'react'\r\n\r\nconst TaskTextDisplay = ({ text }) => {\r\n  const htmlConverter = () => {\r\n    return { __html: `${text}` }\r\n  }\r\n\r\n  return (\r\n    <div dangerouslySetInnerHTML={htmlConverter()} />\r\n  )\r\n}\r\n\r\nexport default TaskTextDisplay","import React, { useState, useEffect } from 'react'\r\nimport taskService from '../../services/task'\r\nimport Rating from '../misc/Rating'\r\nimport Comment from '../comments/Comment'\r\nimport ModifyTask from './ModifyTask'\r\nimport Notification from '../misc/Notification'\r\nimport TaskTextDisplay from './TaskTextDisplay'\r\nimport Competition from '../competition/Competition'\r\nimport Moment from 'react-moment'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Task = ({ match, user, rules, seriess, languages, addTaskToBasket, handleAddTask, handleUpdateTask, handleDeleteTask }) => {\r\n\r\n  const [task, setTask] = useState(null)\r\n  const [modifyVisible, setModifyVisible] = useState(false)\r\n  const [message, setMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [name, setName] = useState('')\r\n  const [date, setDate] = useState('')\r\n  const [place, setPlace] = useState('')\r\n  const [type, setType] = useState('')\r\n  const [logo, setLogo] = useState(null)\r\n  const [showMakePDF, setShowMakePDF] = useState(false)\r\n  const [showLoader, setShowLoader] = useState(false)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    taskService.getOneTask(match.params.id).then((response) => {\r\n      setTask(response)\r\n    })\r\n  }, [])\r\n\r\n  const handleDelete = () => {\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\r\n        taskService.deleteTask(task.id)\r\n        handleDeleteTask(task.id)\r\n        setMessage('Tehtävä poistettu')\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n          if (task.pending) {\r\n            history.push('/admin')\r\n          } else {\r\n            history.push('/')\r\n          }\r\n        }, 2000)\r\n      }\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleAccept = () => {\r\n    try {\r\n      taskService.acceptTask(task.id)\r\n      setMessage('Tehtävä hyväksytty')\r\n      handleAddTask(task)\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n        history.push('/admin')\r\n      }, 2000)\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleMakePDF = async () => {\r\n    setShowLoader(true)\r\n    let formData = new FormData()\r\n\r\n    const competition = JSON.stringify({ name, date, place, type, task: task.id })\r\n    formData.append('competition', competition)\r\n\r\n    if (logo) {\r\n      formData.append('logo', logo, logo.name)\r\n    }\r\n\r\n    try {\r\n      const PDF = await taskService.makePDF(formData, task.id)\r\n      setName('')\r\n      setDate('')\r\n      setPlace('')\r\n      setType('')\r\n      setLogo(null)\r\n      const url = window.URL.createObjectURL(new Blob([PDF], {\r\n        type: 'application/pdf'\r\n      }))\r\n      const link = document.createElement('a')\r\n      link.href = url\r\n      link.setAttribute('download', `${task.name}.pdf`)\r\n      document.body.appendChild(link)\r\n      link.click()\r\n      setShowLoader(false)\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {modifyVisible ?\r\n        <ModifyTask setModifyVisible={setModifyVisible} task={task} rules={rules} seriess={seriess} languages={languages} setTask={setTask} handleUpdateTask={handleUpdateTask} />\r\n        :\r\n\r\n        <div>\r\n          <Notification message={message} type=\"success\" />\r\n          <Notification message={errorMessage} type=\"error\" />\r\n          {task &&\r\n            <div>\r\n              <div className=\"task-view-info-background\">\r\n                <div className=\"task-view-info\">\r\n                  <h2>{task.name}</h2>\r\n                  <span><div className=\"black-basket-task-view\" title=\"Lisää koriin\" onClick={(e) => addTaskToBasket(e, task)} /></span>\r\n                  <Rating task={task} handleUpdateTask={handleUpdateTask} />\r\n                </div>\r\n                <h3>Tehtävänanto</h3>\r\n                <TaskTextDisplay text={task.assignmentText} />\r\n                <h3>Rastimiehen ohjeet</h3>\r\n                <TaskTextDisplay text={task.supervisorInstructions} />\r\n                <h3>Arvosteluasteikko</h3>\r\n                <TaskTextDisplay text={task.gradingScale} />\r\n                <h3>Sarja</h3>\r\n                {task.series.map(s => <span key={task.id + s.id}>{s.name}<br /></span>)}\r\n                <h3>Kategoria</h3>\r\n                <p>{task.category && task.category.name}</p>\r\n                <h3>Sääntöluokka</h3>\r\n                <p>{task.rules && task.rules.name}</p>\r\n                <h3>Tehtävän viimeisin muokkaaja</h3>\r\n                <p>{task.creatorName}<br />{task.creatorEmail}</p>\r\n                <h3>Tehtävä lisätty</h3>\r\n                {task.created && <p><Moment format=\"DD.MM.YYYY HH:mm\">{task.created}</Moment></p>}\r\n                <h3>Liitetiedostot</h3>\r\n                {task.files && task.files.length === 0 && <p>-</p>}\r\n                {task.files && task.files.map((file) => (\r\n                  <div key={file}>\r\n                    <a href={`https://kisapankkifiles.blob.core.windows.net/files/${file}`}>\r\n                      {file.substring(file.indexOf('-') + 1, file.length)}\r\n                    </a>\r\n                  </div>\r\n                ))}\r\n\r\n                {showMakePDF ?\r\n                  <div className=\"competition-task\">\r\n                    <div className=\"make-pdf close\" onClick={() => setShowMakePDF(false)}>Sulje</div>\r\n                    <Competition\r\n                      name={name}\r\n                      date={date}\r\n                      place={place}\r\n                      type={type}\r\n                      logo={logo}\r\n                      setName={setName}\r\n                      setDate={setDate}\r\n                      setPlace={setPlace}\r\n                      setType={setType}\r\n                      setLogo={setLogo}\r\n                    />\r\n                    {showLoader ?\r\n                      <div className=\"loader in-task\"></div>\r\n                      :\r\n                      <button onClick={() => handleMakePDF()}>Tee PDF-tiedosto</button>\r\n                    }\r\n                  </div>\r\n                  :\r\n                  <div className=\"make-pdf\" onClick={() => setShowMakePDF(true)}>Lisää kisan tiedot/Tee PDF</div>\r\n                }\r\n                {user &&\r\n                  <div className=\"buttons\">\r\n                    <button onClick={() => setModifyVisible(true)} className=\"modify-view-button\">Muokkaa</button>\r\n                    {task.pending && <button className=\"accept-button\" onClick={() => handleAccept()}>Hyväksy</button>}\r\n                    <button className=\"delete-button\" onClick={() => handleDelete()}>Poista</button>\r\n                  </div>}\r\n              </div>\r\n\r\n              <div className=\"task-view-info-background\">\r\n                <h3>Kommentit</h3>\r\n\r\n                <Comment task={task} user={user}/>\r\n                \r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n      }\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { Route, Link, Redirect, useHistory } from 'react-router-dom'\r\nimport Login from './components/user/Login'\r\nimport FrontPage from './components/frontpage/FrontPage'\r\nimport TaskList from './components/task/TaskList'\r\nimport Basket from './components/competition/Basket'\r\nimport AddAdmin from './components/admin/AddAdmin'\r\nimport AddTaskDropdown from './components/rulecatlangserie/AddTaskDropdown'\r\nimport AddTask from './components/task/AddTask'\r\nimport Admin from './components/admin/Admin'\r\nimport User from './components/user/User'\r\nimport Task from './components/task/Task'\r\nimport tokenService from './services/token'\r\nimport taskService from './services/task'\r\nimport seriesService from './services/series'\r\nimport ruleService from './services/rule'\r\nimport categoryService from './services/category'\r\nimport languageService from './services/language'\r\n\r\nconst App = () => {\r\n  const [basket, setBasket] = useState([])\r\n  const [tasks, setTasks] = useState([])\r\n  const [user, setUser] = useState(null)\r\n  const [categories, setCategories] = useState([])\r\n  const [rules, setRules] = useState([])\r\n  const [seriess, setSeriess] = useState([])\r\n  const [languages, setLanguages] = useState([])\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    taskService.getTasks().then((response) => {\r\n      setTasks(response)\r\n    })\r\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\r\n    if (loggedUserJSON) {\r\n      const loggedUser = JSON.parse(loggedUserJSON)\r\n      setUser(loggedUser)\r\n      tokenService.setToken(loggedUser.token)\r\n    }\r\n    const votes = window.localStorage.getItem('votes')\r\n    if (!votes) {\r\n      const votes = []\r\n      window.localStorage.setItem('votes', JSON.stringify(votes))\r\n    }\r\n    const basketJSON = window.localStorage.getItem('basket')\r\n\r\n    if (basketJSON) {\r\n      const foundBasket = JSON.parse(basketJSON)\r\n      setBasket(foundBasket)\r\n    }\r\n\r\n    categoryService.getCategories().then((response) => {\r\n      setCategories(response)\r\n    })\r\n\r\n    seriesService.getSeries().then((response) => {\r\n      setSeriess(response)\r\n    })\r\n\r\n    ruleService.getRules().then((response) => {\r\n      setRules(response)\r\n    })\r\n\r\n    languageService.getLanguages().then(response => {\r\n      setLanguages(response)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\r\n      'basket', JSON.stringify(basket)\r\n    )\r\n  }, [basket])\r\n\r\n  const logout = () => {\r\n    window.localStorage.removeItem('loggedUser')\r\n    setUser(null)\r\n    tokenService.setTokenNull()\r\n    history.push('/')\r\n  }\r\n\r\n  const handleAddTask = (task) => {\r\n    setTasks(tasks.concat(task))\r\n  }\r\n\r\n  const handleUpdateTask = (modifiedTask) => {\r\n    setTasks(tasks.map(task => task.id !== modifiedTask.id ? task : modifiedTask))\r\n    setBasket(basket.map(task => task.id !== modifiedTask.id ? task : modifiedTask))\r\n  }\r\n\r\n  const handleDeleteTask = (id) => {\r\n    setTasks(tasks.filter(t => t.id !== id))\r\n    setBasket(basket.filter(t => t.id !== id))\r\n  }\r\n\r\n  const addTaskToBasket = (e, task) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    const foundTask = basket.find(t => t.id === task.id)\r\n    if (!foundTask) {\r\n      setBasket(basket.concat(task))\r\n    }\r\n  }\r\n\r\n  const removeTaskFromBasket = (id) => {\r\n    setBasket(basket.filter(task => task.id !== id))\r\n  }\r\n\r\n  const removeAllFromBasket = () => {\r\n    setBasket([])\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <Link to=\"/\"><div className=\"logo\" /></Link>\r\n        <Link to=\"/tehtavat\"><button className=\"addtask-button-header\">Tehtävät</button></Link>\r\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-header\">Lisää tehtävä</button></Link>\r\n\r\n        {user === null ?\r\n          <Fragment>\r\n            <Link to=\"/kirjautuminen\"><button className=\"login-button-header\">Kirjaudu</button></Link>\r\n          </Fragment>\r\n          :\r\n          <Fragment>\r\n            <Link to=\"/admin\"><button className=\"admin-button-header\">Admin</button></Link>\r\n            <div>\r\n              <div className=\"logged\">Kirjautuneena <Link to=\"/omasivu\" className=\"username-header\">{user.username}</Link></div>\r\n              <div className=\"logout\"><button className=\"logout-button-header\" onClick={() => logout()}>Kirjaudu ulos</button></div>\r\n            </div>\r\n          </Fragment>\r\n        }\r\n        <Link to=\"/valitut_tehtavat\"><div className=\"white-basket\">{basket.length > 0 && <span className=\"number-of-tasks-in-basket\">{basket.length}</span>}</div></Link>\r\n      </div>\r\n      <div className=\"admin-task-buttons-mobile\">\r\n        <Link to=\"/tehtavat\"><button className=\"addtask-button-mobile\">Tehtävät</button></Link>\r\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-mobile\">Lisää tehtävä</button></Link>\r\n        {user !== null && <Link to=\"/admin\"><button className=\"admin-button-mobile\">Admin</button></Link>}\r\n      </div>\r\n      <div className=\"container\">\r\n        <Route exact path=\"/\" render={() => <FrontPage tasks={tasks} addTaskToBasket={addTaskToBasket} handleUpdateTask={handleUpdateTask} />} />\r\n        <Route exact path=\"/tehtava/:id\" render={(match) => <Task {...match} user={user} rules={rules} seriess={seriess} languages={languages} addTaskToBasket={addTaskToBasket} handleAddTask={handleAddTask} handleUpdateTask={handleUpdateTask} handleDeleteTask={handleDeleteTask} />} />\r\n        <Route path=\"/tehtavat\" render={() => <TaskList user={user} originalTasks={tasks} categories={categories} rules={rules} seriess={seriess} addTaskToBasket={addTaskToBasket} handleUpdateTask={handleUpdateTask} handleDeleteTask={handleDeleteTask} />} />\r\n        <Route path=\"/valitut_tehtavat\" render={() => <Basket tasks={basket} removeTaskFromBasket={removeTaskFromBasket} removeAllFromBasket={removeAllFromBasket} handleUpdateTask={handleUpdateTask} />} />\r\n        <Route path=\"/kirjautuminen\" render={() => <Login setUser={setUser} />} />\r\n        <Route path=\"/lisaa_tehtava\" render={() => <AddTask user={user} addTask={handleAddTask} rules={rules} seriess={seriess} languages={languages} />} />\r\n        <Route path=\"/omasivu\" render={() => (localStorage.getItem('loggedUser') ? <User user={user} setUser={setUser} /> : <Redirect to=\"/\" />)} />\r\n        <Route path=\"/admin\" render={() => (localStorage.getItem('loggedUser') ? <Admin handleAddTask={handleAddTask} handleUpdateTask={handleUpdateTask} handleDeleteTask={handleDeleteTask} /> : <Redirect to=\"/\" />)} />\r\n        <Route path=\"/lisaa_admin\" render={() => (localStorage.getItem('loggedUser') ? <AddAdmin /> : <Redirect to=\"/\" />)} />\r\n        <Route path=\"/lisaa_pudotusvalikkoon\" render={() => (localStorage.getItem('loggedUser') ? <AddTaskDropdown rules={rules} categories={categories} languages={languages} series={seriess} setRules={setRules} setCategories={setCategories} setLanguages={setLanguages} setSeries={setSeriess} /> : <Redirect to=\"/\" />)} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root'),\r\n)\r\n"],"sourceRoot":""}