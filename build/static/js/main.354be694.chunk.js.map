{"version":3,"sources":["components/Notification.js","services/login.js","services/token.js","components/Login.js","services/task.js","services/series.js","services/rule.js","services/category.js","components/Search.js","components/TaskList.js","services/user.js","components/AddAdmin.js","components/Rule.js","services/language.js","components/Language.js","components/Series.js","components/Category.js","components/AddTaskDropdown.js","components/MDEditor.js","components/AddTask.js","components/TaskListPending.js","components/Admin.js","components/EditUser.js","components/ChangePassword.js","components/User.js","components/ModifyTask.js","components/TaskTextDisplay.js","components/Task.js","App.js","index.js"],"names":["Notification","message","type","className","baseUrl","process","credentials","a","async","axios","post","response","data","token","newToken","Login","setUser","useState","errorMessage","setErrorMessage","username","setUsername","password","setPassword","history","useHistory","onSubmit","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","tokenService","push","setTimeout","value","name","placeholder","onChange","target","baseUrlPending","task","config","headers","Authorization","get","id","search","put","delete","series","rule","cat","Search","setTasks","setAllTasks","setSearch","taskService","defaultValue","TaskList","allTasks","tasks","selectedCategory","setSelectedCategory","selectedSeries","setSelectedSeries","selectedRules","setSelectedRules","categories","setCategories","rules","setRules","isClearable","seriess","setSeriess","useEffect","then","categoryService","seriesService","ruleService","length","array","i","j","includes","category","filter","getOptionLabel","option","getOptionValue","map","s","options","isMulti","c","key","to","onClick","t","handleDelete","AddAdmin","setMessage","nameErrorMessage","setNameErrorMessage","usernameErrorMessage","setUsernameErrorMessage","passwordErrorMessage","setPasswordErrorMessage","setName","users","setUsers","userService","some","Rule","language","Language","setLanguage","languageService","Series","color","setColor","onChangeComplete","hex","colors","Category","setCategory","AddTaskDropdown","MDEditor","setText","setMD","mdParser","MarkdownIt","renderHTML","text","render","html","AddTask","assignmentText","setAssignmentText","gradingScale","setGradingScale","supervisorInstructions","setSupervisorInstructions","assignmentTextMD","setAssignmentTextMD","gradingScaleMD","setGradingScaleMD","supervisorInstructionsMD","setSupervisorInstructionsMD","setRule","setSeries","languages","setLanguages","creatorName","setCreatorName","creatorEmail","setCreatorEmail","assignmentTextErrorMessage","setAssignmentTextErrorMessage","creatorNameErrorMessage","setCreatorNameErrorMessage","creatorEmailErrorMessage","setCreatorEmailErrorMessage","dropDownErrorMessage","setDropDownErrorMessage","addtaskService","location","reload","multiple","e","values","l","selected","handleSeriesChange","handleCategoryChange","handleRuleChange","handleLanguageChange","TaskListPending","loggedUserJSON","getItem","loggedUser","parse","exception","handleAccept","Admin","EditUser","setShowEdit","editedUser","error","ChangePassword","setShowChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","newPasswordAgain","setNewPasswordAgain","User","showEdit","showChangePassword","ModifyTask","setModifyVisible","setTask","modifiedTask","placeHolder","TaskTextDisplay","dangerouslySetInnerHTML","__html","Task","match","modifyVisible","params","pending","App","removeItem","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.354be694.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={type}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/login`\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","let token = null\r\n\r\nconst getToken = () => token\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nexport default { getToken, setToken }\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Notification from './Notification'\r\nimport loginService from '../services/login'\r\nimport tokenService from '../services/token'\r\n\r\nconst Login = ({ setUser }) => {\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const history = useHistory()\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n      window.localStorage.setItem(\r\n        'loggedUser', JSON.stringify(user),\r\n      )\r\n      setUser(user)\r\n      tokenService.setToken(user.token)\r\n      setUsername('')\r\n      setPassword('')\r\n      history.push('/')\r\n    } catch (exception) {\r\n      setErrorMessage('Väärä käyttäjätunnus/salasana')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      <h2>Kirjaudu sisään</h2>\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          <input\r\n            className=\"username\"\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"Username\"\r\n            placeholder=\"Käyttäjätunnus\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Password\"\r\n            placeholder=\"Salasana\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"login-button\">Kirjaudu</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/task`\r\nconst baseUrlPending = `${process.env.REACT_APP_API_URL}/task/pending`\r\n\r\n\r\nconst getTasks = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst getPendingTasks = async () => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n  const response = await axios.get(baseUrlPending, config)\r\n  return response.data\r\n}\r\n\r\nconst getSearchedTasks = async (search) => {\r\n  const response = await axios.post(`${baseUrl}/search`, search)\r\n  return response.data\r\n}\r\n\r\nconst getOneTask = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`)\r\n  return response.data\r\n}\r\n\r\nconst addtask = async (task) => {\r\n  let config = null\r\n  const token = tokenService.getToken()\r\n\r\n  if (token) {\r\n    config = {\r\n      headers: { Authorization: token },\r\n    }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, task, config)\r\n  return response.data\r\n}\r\n\r\nconst updateTask = async (task) => {\r\n  let config = null\r\n  const token = tokenService.getToken()\r\n\r\n  if (token) {\r\n    config = {\r\n      headers: { Authorization: token },\r\n    }\r\n  }\r\n\r\n  const response = await axios.put(`${baseUrl}/${task.id}`, task, config)\r\n  return response.data\r\n}\r\n\r\nconst deleteTask = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nconst acceptTask = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n  const response = await axios.put(`${baseUrl}/${id}/accept`, id, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addtask, getTasks, getOneTask, getSearchedTasks, updateTask, deleteTask, getPendingTasks, acceptTask }\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/series`\r\n\r\nconst getSeries = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addSeries = async (series) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, series, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addSeries, getSeries }\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/rule`\r\n\r\nconst getRules = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addRule = async (rule) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, rule, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addRule, getRules }\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/category`\r\n\r\nconst getCategories = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addCategory = async (cat) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, cat, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addCategory, getCategories }\r\n","import React, { useState } from 'react'\r\nimport taskService from '../services/task'\r\nimport Notification from './Notification'\r\n\r\nconst Search = ({ setTasks, setAllTasks }) => {\r\n\r\n  const [search, setSearch] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  const handleSearch = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const response = await taskService.getSearchedTasks({ search })\r\n      setTasks(response)\r\n      setAllTasks(response)\r\n    } catch (exception) {\r\n      setErrorMessage('Haku ei onnistunut')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleSearch} className=\"search-form\">\r\n        <input\r\n          className=\"search-input\"\r\n          type=\"text\"\r\n          defaultValue=''\r\n          name=\"search\"\r\n          placeholder=\"Hakutermi\"\r\n          onChange={({ target }) => setSearch(target.value)}\r\n        />\r\n        <button type=\"submit\" className=\"search-tasks-button\">Hae</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport taskService from '../services/task'\r\nimport seriesService from '../services/series'\r\nimport ruleService from '../services/rule'\r\nimport categoryService from '../services/category'\r\nimport Notification from './Notification'\r\nimport Select from 'react-select'\r\nimport Search from './Search'\r\n\r\nconst TaskList = ({ user }) => {\r\n  const [allTasks, setAllTasks] = useState([])\r\n  const [tasks, setTasks] = useState([])\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [selectedCategory, setSelectedCategory] = useState([])\r\n  const [selectedSeries, setSelectedSeries] = useState([])\r\n  const [selectedRules, setSelectedRules] = useState('')\r\n  const [categories, setCategories] = useState([])\r\n  const [series, setSeries] = useState([])\r\n  const [rules, setRules] = useState([])\r\n  const [isClearable, setIsClearable] = useState(true)\r\n  const [seriess, setSeriess] = useState([])\r\n\r\n  useEffect(() => {\r\n    taskService.getTasks().then((response) => {\r\n      setTasks(response)\r\n      setAllTasks(response)\r\n    })\r\n\r\n    categoryService.getCategories().then((response) => {\r\n      setCategories(response)\r\n    })\r\n\r\n    seriesService.getSeries().then((response) => {\r\n      setSeriess(response)\r\n    })\r\n\r\n    ruleService.getRules().then((response) => {\r\n      setRules(response)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedSeries.length > 0 && selectedCategory.length > 0 && selectedRules) {\r\n      let array = []\r\n      for (let i = 0; i < allTasks.length; i++) {\r\n        for (let j = 0; j < allTasks[i].series.length; j++) {\r\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\r\n            array.push(allTasks[i])\r\n          }\r\n        }\r\n      }\r\n      setTasks(array)\r\n    } else if (selectedSeries.length > 0 && selectedCategory.length > 0) {\r\n      let array = []\r\n      for (let i = 0; i < allTasks.length; i++) {\r\n        for (let j = 0; j < allTasks[i].series.length; j++) {\r\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && !array.includes(allTasks[i])) {\r\n            array.push(allTasks[i])\r\n          }\r\n        }\r\n      }\r\n      setTasks(array)\r\n    } else if (selectedSeries.length > 0 && selectedRules) {\r\n      let array = []\r\n      for (let i = 0; i < allTasks.length; i++) {\r\n        for (let j = 0; j < allTasks[i].series.length; j++) {\r\n          if (selectedSeries.includes(allTasks[i].series[j].id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\r\n            array.push(allTasks[i])\r\n          }\r\n        }\r\n      }\r\n      setTasks(array)\r\n    } else if (selectedCategory.length > 0 && selectedRules) {\r\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id) && task.rules.id === selectedRules.id))\r\n    } else if (selectedSeries.length > 0) {\r\n      let array = []\r\n      for (let i = 0; i < allTasks.length; i++) {\r\n        for (let j = 0; j < allTasks[i].series.length; j++) {\r\n          if (selectedSeries.includes(allTasks[i].series[j].id) && !array.includes(allTasks[i])) {\r\n            array.push(allTasks[i])\r\n          }\r\n        }\r\n      }\r\n      setTasks(array)\r\n    } else if (selectedCategory.length > 0) {\r\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id)))\r\n    } else if (selectedRules) {\r\n      setTasks(allTasks.filter(task => task.rules.id === selectedRules.id))\r\n    } else {\r\n      setTasks(allTasks)\r\n    }\r\n  }, [selectedCategory, selectedSeries, selectedRules])\r\n\r\n  const handleDelete = async (task) => {\r\n    try {\r\n      await taskService.deleteTask(task.id)\r\n      setTasks(tasks.filter(t => t.id !== task.id))\r\n    } catch (exeption) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleSeriesFiltering = (series) => {\r\n    if (series && series.length > 0) {\r\n      setSelectedSeries(series.map(s => s.id))\r\n    } else {\r\n      setSelectedSeries([])\r\n      setTasks(allTasks)\r\n    }\r\n  }\r\n\r\n  const handleCategoryFiltering = (category) => {\r\n    if (category && category.length > 0) {\r\n      setSelectedCategory(category.map(c => c.id))\r\n    } else {\r\n      setSelectedCategory([])\r\n      setTasks(allTasks)\r\n    }\r\n  }\r\n\r\n  const handleRuleFiltering = (rules) => {\r\n    if (rules) {\r\n      setSelectedRules(rules)\r\n    } else {\r\n      setSelectedRules('')\r\n      setTasks(allTasks)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-list\">\r\n      <h1>Kisatehtäväpankki</h1>\r\n      <div className=\"search-filter-container\">\r\n        <div className=\"search\"><Search setTasks={setTasks} setAllTasks={setAllTasks} /></div>\r\n\r\n        <div className=\"filter\">\r\n          <Select\r\n            name=\"filter-series\"\r\n            getOptionLabel={option => `${option.name}`}\r\n            getOptionValue={option => `${option.id}`}\r\n            onChange={handleSeriesFiltering}\r\n            options={seriess}\r\n            isClearable={isClearable}\r\n            placeholder={\"Sarja\"}\r\n            isMulti={true}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"filter\">\r\n          <Select\r\n            name=\"filter-category\"\r\n            getOptionLabel={option => `${option.name}`}\r\n            getOptionValue={option => `${option.id}`}\r\n            onChange={handleCategoryFiltering}\r\n            options={categories}\r\n            isClearable={isClearable}\r\n            placeholder={\"Kategoria\"}\r\n            isMulti={true}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"filter\">\r\n          <Select\r\n            name=\"filter-rules\"\r\n            getOptionLabel={option => `${option.name}`}\r\n            getOptionValue={option => `${option.id}`}\r\n            onChange={handleRuleFiltering}\r\n            options={rules}\r\n            isClearable={isClearable}\r\n            placeholder={\"Säännöt\"}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Notification message={errorMessage} />\r\n      {tasks && tasks.length > 0 &&\r\n      <div className=\"task-list-title\">\r\n        <span>Tehtävän nimi</span>\r\n        <span>Sarja</span>\r\n        <span>Kategoria</span>\r\n        {user && <span></span>}\r\n      </div>\r\n      }\r\n      {tasks.map((task) => (\r\n        <div className=\"task-list-item\" key={task.id}>\r\n          <span>\r\n            <Link to={`/tehtava/${task.id}`}>\r\n              {task.name}\r\n            </Link>\r\n          </span>\r\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\r\n          <span>{task.category && task.category.name}</span>\r\n          {user && <span><button className=\"delete-button\" onClick={() => handleDelete(task)}>Poista</button></span>\r\n          }\r\n        </div>\r\n      ))}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default TaskList\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/user`\r\n\r\nconst getUsers = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addUser = async (credentials) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() }\r\n  }\r\n  const response = await axios.post(baseUrl, credentials, config)\r\n  return response.data\r\n}\r\n\r\nconst editUser = async (user) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() }\r\n  }\r\n\r\n  const response = await axios.put(baseUrl, user, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addUser, getUsers, editUser }\r\n","import React, { useState, useEffect } from 'react'\r\nimport Notification from './Notification'\r\nimport userService from '../services/user'\r\n\r\nconst AddAdmin = () => {\r\n  const [message, setMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\r\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\r\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(null)\r\n  const [name, setName] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [users, setUsers] = useState([])\r\n\r\n  useEffect(() => {\r\n    userService.getUsers().then((response) => {\r\n      setUsers(response)\r\n    })\r\n  }, [])\r\n\r\n  const handleAddAdmin = async (event) => {\r\n    event.preventDefault()\r\n    setNameErrorMessage(null)\r\n    setUsernameErrorMessage(null)\r\n    setPasswordErrorMessage(null)\r\n    if (name.length < 3) {\r\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\r\n    }\r\n    if (username.length < 3) {\r\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\r\n    }\r\n    if (password.length < 3) {\r\n      setPasswordErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\r\n    }\r\n    if (users.some((user) => (user.username === username))) {\r\n      setUsernameErrorMessage('Käyttäjätunnus on varattu')\r\n    }\r\n    if (name.length < 3 || username.length < 3 || password.length < 3\r\n      || users.some((user) => (user.username === username))) {\r\n      return\r\n    }\r\n    try {\r\n      await userService.addUser({\r\n        name, username, password,\r\n      })\r\n      setName('')\r\n      setUsername('')\r\n      setPassword('')\r\n      setMessage('Ylläpitäjä lisätty!')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    } catch (exception) {\r\n      setErrorMessage('Lisääminen epäonnistui')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"signup-form\">\r\n      <h2>Lisää ylläpitäjä</h2>\r\n      <Notification message={message} type=\"success\" />\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleAddAdmin}>\r\n        <div>\r\n          <Notification message={nameErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"Name\"\r\n            placeholder=\"Nimi\"\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Notification message={usernameErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"username\"\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"Username\"\r\n            placeholder=\"Käyttäjätunnus\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Notification message={passwordErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Password\"\r\n            placeholder=\"Salasana\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"signup-button\">Lisää</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddAdmin\r\n","import React, { useState } from 'react'\r\nimport Notification from './Notification'\r\nimport ruleService from '../services/rule'\r\n\r\nconst Rule = () => {\r\n  const [rules, setRules] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const handleRuleAdd = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      await ruleService.addRule({\r\n        rules,\r\n      })\r\n      setRules('')\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"rule-form\">\r\n      <h2>Lisää sääntö</h2>\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleRuleAdd}>\r\n        <div>\r\n          <input\r\n            className=\"rule\"\r\n            type=\"text\"\r\n            value={rules}\r\n            name=\"Rules\"\r\n            placeholder=\"Sääntö\"\r\n            onChange={({ target }) => setRules(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"task-add-button\">Lisää</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Rule\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/language`\r\n\r\nconst getLanguages = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addLanguage = async (language) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, language, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addLanguage, getLanguages }\r\n","import React, { useState } from 'react'\r\nimport Notification from './Notification'\r\nimport languageService from '../services/language'\r\n\r\nconst Language = () => {\r\n  const [language, setLanguage] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const handleLanguageAdd = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      await languageService.addLanguage({\r\n        language,\r\n      })\r\n      setLanguage('')\r\n    } catch (exception) {\r\n      setErrorMessage('Kielen lisääminen ei onnistunut')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"language-form\">\r\n      <h2>Lisää kieli</h2>\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleLanguageAdd}>\r\n        <div>\r\n          <input\r\n            className=\"language\"\r\n            type=\"text\"\r\n            value={language}\r\n            name=\"Language\"\r\n            placeholder=\"Kieli\"\r\n            onChange={({ target }) => setLanguage(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"language-add-button\">Lisää</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Language\r\n","import React, { useState } from 'react'\r\nimport { CirclePicker } from 'react-color'\r\nimport Notification from './Notification'\r\nimport seriesService from '../services/series'\r\n\r\nconst Series = () => {\r\n  const [name, setName] = useState('')\r\n  const [color, setColor] = useState('#ffffff')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const handleSeriesAdd = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      await seriesService.addSeries({ name, color })\r\n      setName('')\r\n      setColor('')\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"series-form\">\r\n      <h2>Lisää sarja</h2>\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleSeriesAdd}>\r\n        <div>\r\n          <input\r\n            className=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"Name\"\r\n            placeholder=\"Nimi\"\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"color-picker\">\r\n          <CirclePicker \r\n            color={color}\r\n            onChangeComplete={color => setColor(color.hex)}\r\n            colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\r\n                    \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"series-submit-button\">Lisää</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Series\r\n","import React, { useState } from 'react'\r\nimport Notification from './Notification'\r\nimport categoryService from '../services/category'\r\n\r\nconst Category = () => {\r\n  const [category, setCategory] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const handleCategoryAdd = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      await categoryService.addCategory({\r\n        category,\r\n      })\r\n      setCategory('')\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"category-form\">\r\n      <h2>Lisää kategoria</h2>\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleCategoryAdd}>\r\n        <div>\r\n          <input\r\n            className=\"category\"\r\n            type=\"text\"\r\n            value={category}\r\n            name=\"Category\"\r\n            placeholder=\"Kategoria\"\r\n            onChange={({ target }) => setCategory(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"category-add-button\">Lisää</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Category\r\n","import React from 'react'\r\nimport Rule from './Rule'\r\nimport Language from './Language'\r\nimport Series from './Series'\r\nimport Category from './Category'\r\n\r\nconst AddTaskDropdown = () => (\r\n  <div>\r\n    <Rule />\r\n    <Language />\r\n    <Series />\r\n    <Category />\r\n  </div>\r\n)\r\n\r\nexport default AddTaskDropdown\r\n","import React from 'react'\r\nimport MarkdownIt from 'markdown-it'\r\nimport MdEditor from 'react-markdown-editor-lite'\r\nimport 'react-markdown-editor-lite/lib/index.css'\r\n\r\nconst MDEditor = ({ setText, setMD, value }) => {\r\n  const mdParser = new MarkdownIt()\r\n\r\n  const handleEditorChange = ({ html, text }) => {\r\n    setText(html)\r\n    setMD(text)\r\n  }\r\n\r\n  return (\r\n    <MdEditor\r\n      value={value}\r\n      renderHTML={(text) => mdParser.render(text)}\r\n      onChange={handleEditorChange}\r\n    />\r\n  )\r\n}\r\n\r\nexport default MDEditor\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport Notification from './Notification'\r\nimport addtaskService from '../services/task'\r\nimport ruleService from '../services/rule'\r\nimport categoryService from '../services/category'\r\nimport seriesService from '../services/series'\r\nimport languageService from '../services/language'\r\nimport MDEditor from './MDEditor'\r\n\r\n\r\nconst AddTask = () => {\r\n\r\n  const [message, setMessage] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [assignmentText, setAssignmentText] = useState('')\r\n  const [gradingScale, setGradingScale] = useState('')\r\n  const [supervisorInstructions, setSupervisorInstructions] = useState('')\r\n  const [assignmentTextMD, setAssignmentTextMD] = useState('')\r\n  const [gradingScaleMD, setGradingScaleMD] = useState('')\r\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState('')\r\n  const [rules, setRules] = useState([])\r\n  const [rule, setRule] = useState('')\r\n  const [categories, setCategories] = useState([])\r\n  const [category, setCategory] = useState('')\r\n  const [seriess, setSeriess] = useState([])\r\n  const [series, setSeries] = useState([])\r\n  const [languages, setLanguages] = useState([])\r\n  const [language, setLanguage] = useState('')\r\n  const [creatorName, setCreatorName] = useState('')\r\n  const [creatorEmail, setCreatorEmail] = useState('')\r\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\r\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\r\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\r\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\r\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    ruleService.getRules().then(response => {\r\n      setRules(response)\r\n    })\r\n    categoryService.getCategories().then(response => {\r\n      setCategories(response)\r\n    })\r\n    seriesService.getSeries().then(response => {\r\n      setSeriess(response)\r\n    })\r\n    languageService.getLanguages().then(response => {\r\n      setLanguages(response)\r\n    })\r\n  }, [])\r\n\r\n  const handleRuleChange = (e) => {\r\n    setRule(e.target.value)\r\n  }\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setCategory(e.target.value)\r\n  }\r\n\r\n  const handleSeriesChange = (e) => {\r\n    let options = e.target.options\r\n    let values = []\r\n    for (var i = 0, l = options.length; i < l; i++) {\r\n      if (options[i].selected && options[i].value !== '') {\r\n        values.push(options[i].value)\r\n      }\r\n    }\r\n    setSeries(values)\r\n  }\r\n\r\n  const handleLanguageChange = (e) => {\r\n    setLanguage(e.target.value)\r\n  }\r\n\r\n  const handleAddTask = async (event) => {\r\n    event.preventDefault()\r\n    setNameErrorMessage(null)\r\n    setAssignmentTextErrorMessage(null)\r\n    setCreatorNameErrorMessage(null)\r\n    setCreatorEmailErrorMessage(null)\r\n    setDropDownErrorMessage(null)\r\n    if (name.length < 1) {\r\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\r\n    }\r\n    if (assignmentText.length < 1) {\r\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\r\n    }\r\n    if (creatorName.length < 1) {\r\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\r\n    }\r\n    if (creatorEmail.length < 1) {\r\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\r\n    }\r\n    if (language === '' || rule === '' || series === '' || category === '') {\r\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\r\n    }\r\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\r\n            || language === '' || rule === '' || series === '' || category === '') {\r\n      return\r\n    }\r\n    setAssignmentText(JSON.stringify(assignmentText))\r\n    setGradingScale(JSON.stringify(gradingScale))\r\n    setSupervisorInstructions(JSON.stringify(supervisorInstructions))\r\n\r\n    try {\r\n      await addtaskService.addtask({\r\n        name, rule, category, series,\r\n        language, assignmentText, gradingScale,\r\n        creatorName, creatorEmail, supervisorInstructions,\r\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD\r\n      })\r\n      setName('')\r\n      setRule('')\r\n      setCategory('')\r\n      setSeries('')\r\n      setLanguage('')\r\n      setAssignmentText('')\r\n      setGradingScale('')\r\n      setCreatorEmail('')\r\n      setCreatorName('')\r\n      setSupervisorInstructions('')\r\n      setMessage('Tehtävä lisätty!')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n        window.location.reload()\r\n      }, 2000)\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"add-task-container\">\r\n      <h2>Lisää tehtävä</h2>\r\n      <Notification message={message} type=\"success\" />\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleAddTask}>\r\n        <div>\r\n          <Notification message={nameErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"task-title\"\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"Name\"\r\n            placeholder=\"Tehtävän nimi\"\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h4>Tehtävänanto</h4>\r\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\r\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} />\r\n        </div>\r\n        <div>\r\n          <h4>Arvostelu</h4>\r\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} />\r\n        </div>\r\n        <div className=\"instructions\">\r\n          <h4>Rastimiehen ohje</h4>\r\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} />\r\n        </div>\r\n        <Notification message={dropDownErrorMessage} type=\"error\" />\r\n        <div className=\"dropdowns\">\r\n          <div>\r\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\r\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\r\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <select value={category} onChange={(e) => handleCategoryChange(e)}>\r\n              <option value=\"\">Kategoria</option>\r\n              {categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)}\r\n            </select>\r\n            <br/>\r\n            <select value={rule} onChange={(e) => handleRuleChange(e)}>\r\n              <option value=\"\">Säännöt</option>\r\n              {rules.map(rule => <option key={rule.id} value={rule.id}>{rule.name}</option>)}\r\n            </select>\r\n            <br/>\r\n            <select value={language} onChange={(e) => handleLanguageChange(e)}>\r\n              <option value=\"\">Kieli</option>\r\n              {languages.map(language => <option key={language.id} value={language.id}>{language.name}</option>)}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"creator\">\r\n          <div>\r\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\r\n            <input\r\n              className=\"\"\r\n              type=\"text\"\r\n              value={creatorName}\r\n              name=\"CreatorName\"\r\n              placeholder=\"Lisääjän nimi\"\r\n              onChange={({ target }) => setCreatorName(target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\r\n            <input\r\n              className=\"\"\r\n              type=\"text\"\r\n              value={creatorEmail}\r\n              name=\"CreatorEmail\"\r\n              placeholder=\"Lisääjän sähköpostiosoite\"\r\n              onChange={({ target }) => setCreatorEmail(target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" className=\"add-task-button\">Lisää tehtävä</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default AddTask","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport taskService from '../services/task'\r\nimport Notification from './Notification'\r\nimport tokenService from '../services/token'\r\n\r\n\r\nconst TaskListPending = () => {\r\n  const [tasks, setTasks] = useState([])\r\n  const [message, setMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (!tokenService.getToken()) {\r\n      const loggedUserJSON = window.localStorage.getItem('loggedUser')\r\n      if (loggedUserJSON) {\r\n        const loggedUser = JSON.parse(loggedUserJSON)\r\n        tokenService.setToken(loggedUser.token)\r\n      }\r\n    }\r\n    taskService.getPendingTasks().then((response) => {\r\n      setTasks(response)\r\n    })\r\n  }, [])\r\n\r\n  const handleAccept = (id) => {\r\n    try {\r\n      taskService.acceptTask(id)\r\n      setTasks(tasks.filter(t => t.id !== id))\r\n      setMessage('Tehtävä hyväksytty')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await taskService.deleteTask(id)\r\n      setTasks(tasks.filter(t => t.id !== id))\r\n    } catch (exeption) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-list\">\r\n      <h1>Hyväksyntää odottavat kisatehtävät</h1>\r\n      <Notification message={message} type=\"success\" />\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      {tasks && tasks.length > 0 &&\r\n      <div className=\"task-list-title\">\r\n        <span>Tehtävän nimi</span>\r\n        <span>Sarja</span>\r\n        <span>Kategoria</span>\r\n        <span></span>\r\n      </div>\r\n      }\r\n      {tasks.map((task) => (\r\n        <div className={`task-list-item pending`} key={task.id}>\r\n          <span>\r\n            <Link to={`/tehtava/${task.id}`}>\r\n              {task.name}\r\n            </Link>\r\n          </span>\r\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\r\n          <span>{task.category && task.category.name}</span>\r\n          <span>\r\n            <button className=\"accept-button\" onClick={() => handleAccept(task.id)}>Hyväksy</button>\r\n            <button className=\"delete-button\" onClick={() => handleDelete(task.id)}>Poista</button>\r\n          </span>\r\n        </div>\r\n      ))}\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default TaskListPending\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport TaskListPending from './TaskListPending'\r\n\r\nconst Admin = () => (\r\n  <div>\r\n    <TaskListPending />\r\n    <Link to=\"/omasivu\">Omat tiedot</Link>\r\n    <br />\r\n    <Link to=\"/lisaa_admin\">Lisää ylläpitäjä</Link>\r\n    <br />\r\n    <Link to=\"/lisaa_pudotusvalikkoon\">Lisää sääntö/kieli/sarja/kategoria</Link>\r\n  </div>\r\n)\r\n\r\nexport default Admin\r\n","import React, { useState } from 'react'\r\nimport Notification from './Notification'\r\nimport userService from '../services/user'\r\n\r\nconst EditUser = ({ setShowEdit, user, setUser, setMessage }) => {\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\r\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\r\n  const [name, setName] = useState(user.name)\r\n  const [username, setUsername] = useState(user.username)\r\n\r\n  const handleEditUser = async (event) => {\r\n    event.preventDefault()\r\n    setNameErrorMessage(null)\r\n    setUsernameErrorMessage(null)\r\n    if (name.length < 3) {\r\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\r\n    }\r\n    if (username.length < 3) {\r\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\r\n    }\r\n    if (name.length < 3 || username.length < 3) {\r\n      return\r\n    }\r\n    try {\r\n      const editedUser = await userService.editUser({\r\n        name, username\r\n      })\r\n      setUser(editedUser)\r\n      window.localStorage.setItem(\r\n        'loggedUser', JSON.stringify(editedUser),\r\n      )\r\n      setShowEdit(false)\r\n      setMessage('Tietoja muokattu!')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    } catch (error) {\r\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"username already exists\") {\r\n        setErrorMessage('Käyttäjätunnus on varattu')\r\n      } else {\r\n        setErrorMessage('Muokkaaminen epäonnistui')\r\n      }\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"edit-user-form\">\r\n      <h2>Omat tiedot</h2>\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleEditUser}>\r\n        <div>\r\n          <Notification message={nameErrorMessage} type=\"error\" />\r\n          <label>Nimi</label><br/>\r\n          <input\r\n            className=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"Name\"\r\n            placeholder=\"Nimi\"\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Notification message={usernameErrorMessage} type=\"error\" />\r\n          <label>Käyttäjätunnus</label><br/>\r\n          <input\r\n            className=\"username\"\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"Username\"\r\n            placeholder=\"Käyttäjätunnus\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"edit-button\">Tallenna</button>\r\n        <button onClick={() => setShowEdit(false)} className=\"cancel-button\">Peruuta</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditUser\r\n","import React, { useState } from 'react'\r\nimport Notification from './Notification'\r\nimport userService from '../services/user'\r\n\r\nconst ChangePassword = ({ setShowChangePassword, setMessage }) => {\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [oldPassword, setOldPassword] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const [newPasswordAgain, setNewPasswordAgain] = useState('')\r\n\r\n  const handleChangePassword = async (event) => {\r\n    event.preventDefault()\r\n    setErrorMessage(null)\r\n    if (newPassword.length < 3) {\r\n      setErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\r\n      return\r\n    }\r\n    if (newPassword !== newPasswordAgain) {\r\n      setErrorMessage('Salasanat eivät täsmää')\r\n      return\r\n    }\r\n    try {\r\n      await userService.editUser({\r\n        oldPassword, newPassword\r\n      })\r\n      setOldPassword('')\r\n      setNewPassword('')\r\n      setNewPasswordAgain('')\r\n      setShowChangePassword(false)\r\n      setMessage('Salasana vaihdettu!')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    } catch (error) {\r\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"incorrect password\") {\r\n        setErrorMessage('Vanha salasana ei täsmää')\r\n      } else {\r\n        setErrorMessage('Salasanan vaihtaminen epäonnistui')\r\n      }\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"change-password-form\">\r\n      <h2>Vaihda salasana</h2>\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleChangePassword}>\r\n        <div>\r\n          <input\r\n            className=\"old-password\"\r\n            type=\"password\"\r\n            value={oldPassword}\r\n            placeholder=\"Vanha salasana\"\r\n            onChange={({ target }) => setOldPassword(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"new-password\"\r\n            type=\"password\"\r\n            value={newPassword}\r\n            placeholder=\"Uusi salasana\"\r\n            onChange={({ target }) => setNewPassword(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"new-password-again\"\r\n            type=\"password\"\r\n            value={newPasswordAgain}\r\n            placeholder=\"Uusi salasana uudelleen\"\r\n            onChange={({ target }) => setNewPasswordAgain(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"change-password-button\">Tallenna</button>\r\n        <button onClick={() => setShowChangePassword(false)} className=\"cancel-button\">Peruuta</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChangePassword\r\n","import React, { useState } from 'react'\r\nimport Notification from './Notification'\r\nimport EditUser from './EditUser'\r\nimport ChangePassword from './ChangePassword'\r\n\r\nconst User = ({ user, setUser }) => {\r\n  const [message, setMessage] = useState(null)\r\n  const [showEdit, setShowEdit] = useState(false)\r\n  const [showChangePassword, setShowChangePassword] = useState(false)\r\n\r\n  const editUser = () => {\r\n    setShowChangePassword(false)\r\n    setShowEdit(true)\r\n  }\r\n\r\n  const changePassword = () => {\r\n    setShowEdit(false)\r\n    setShowChangePassword(true)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {user\r\n        && (\r\n          <div className=\"user-info\">\r\n            {!showEdit && !showChangePassword\r\n            && (\r\n              <div>\r\n                <Notification message={message} type=\"success\" />\r\n                <h2>Omat tiedot</h2>\r\n                <p>\r\n                  <b>Nimi: </b>\r\n                  {user.name}\r\n                </p>\r\n                <p>\r\n                  <b>Käyttäjätunnus: </b>\r\n                  {user.username}\r\n                </p>\r\n                <button className=\"edit-user-button\" onClick={() => editUser()}>Muokkaa</button>\r\n                <button className=\"change-password-button\" onClick={() => changePassword()}>Vaihda salasana</button>\r\n              </div>\r\n            )}\r\n            {showEdit && <EditUser setShowEdit={setShowEdit} user={user} setUser={setUser} setMessage={setMessage} />}\r\n            {showChangePassword && <ChangePassword setShowChangePassword={setShowChangePassword} setMessage={setMessage} />}\r\n          </div>\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import React, { useState, useEffect } from 'react'\r\nimport Notification from './Notification'\r\nimport taskService from '../services/task'\r\nimport ruleService from '../services/rule'\r\nimport categoryService from '../services/category'\r\nimport seriesService from '../services/series'\r\nimport languageService from '../services/language'\r\nimport MDEditor from './MDEditor'\r\n\r\nconst ModifyTask = ({ setModifyVisible, task, setTask }) => {\r\n\r\n  const [message, setMessage] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [name, setName] = useState(task.name)\r\n  const [assignmentText, setAssignmentText] = useState(task.assignmentText)\r\n  const [gradingScale, setGradingScale] = useState(task.gradingScale)\r\n  const [supervisorInstructions, setSupervisorInstructions] = useState(task.supervisorInstructions)\r\n  const [assignmentTextMD, setAssignmentTextMD] = useState(task.assignmentTextMD)\r\n  const [gradingScaleMD, setGradingScaleMD] = useState(task.gradingScaleMD)\r\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState(task.supervisorInstructionsMD)\r\n  const [rules, setRules] = useState([])\r\n  const [rule, setRule] = useState(task.rules ? task.rules.id : null)\r\n  const [categories, setCategories] = useState([])\r\n  const [category, setCategory] = useState(task.category ? task.category.id : null)\r\n  const [seriess, setSeriess] = useState([])\r\n  const [series, setSeries] = useState(task.series.map(s => s.id))\r\n  const [languages, setLanguages] = useState([])\r\n  const [language, setLanguage] = useState(task.language ? task.language.id : null)\r\n  const [creatorName, setCreatorName] = useState(task.creatorName)\r\n  const [creatorEmail, setCreatorEmail] = useState(task.creatorEmail)\r\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\r\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\r\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\r\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\r\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\r\n\r\n  let id = task.id\r\n\r\n  useEffect(() => {\r\n    ruleService.getRules().then(response => {\r\n      setRules(response)\r\n    })\r\n    categoryService.getCategories().then(response => {\r\n      setCategories(response)\r\n    })\r\n    seriesService.getSeries().then(response => {\r\n      setSeriess(response)\r\n    })\r\n    languageService.getLanguages().then(response => {\r\n      setLanguages(response)\r\n    })\r\n  }, [])\r\n\r\n  const handleRuleChange = (e) => {\r\n    setRule(e.target.value)\r\n  }\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setCategory(e.target.value)\r\n  }\r\n\r\n  const handleSeriesChange = (e) => {\r\n    let options = e.target.options\r\n    let values = []\r\n    for (var i = 0, l = options.length; i < l; i++) {\r\n      if (options[i].selected && options[i].value !== '') {\r\n        values.push(options[i].value)\r\n      }\r\n    }\r\n    setSeries(values)\r\n  }\r\n\r\n  const handleLanguageChange = (e) => {\r\n    setLanguage(e.target.value)\r\n  }\r\n\r\n  const handleModifyTask = async (event) => {\r\n    event.preventDefault()\r\n    setNameErrorMessage(null)\r\n    setAssignmentTextErrorMessage(null)\r\n    setCreatorNameErrorMessage(null)\r\n    setCreatorEmailErrorMessage(null)\r\n    setDropDownErrorMessage(null)\r\n    if (name.length < 1) {\r\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\r\n    }\r\n    if (assignmentText.length < 1) {\r\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\r\n    }\r\n    if (creatorName.length < 1) {\r\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\r\n    }\r\n    if (creatorEmail.length < 1) {\r\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\r\n    }\r\n    if (language === '' || rule === '' || series === '' || category === '') {\r\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\r\n    }\r\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\r\n      || language === '' || rule === '' || series === '' || category === '') {\r\n      return\r\n    }\r\n    try {\r\n      const modifiedTask = await taskService.updateTask({\r\n        name, rule, category, series,\r\n        language, assignmentText, gradingScale,\r\n        creatorName, creatorEmail, supervisorInstructions, id,\r\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD\r\n      })\r\n      setMessage('Tehtävä tallennettu!')\r\n      setTask(modifiedTask)\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n        window.location.reload()\r\n      }, 1000)\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setModifyVisible(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"modify-task-container\">\r\n      <h2>Muokkaa tehtävää</h2>\r\n      <Notification message={message} type=\"success\" />\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleModifyTask} className=\"modify-form\">\r\n        <div>\r\n          <Notification message={nameErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"task-title\"\r\n            type=\"text\"\r\n            defaultValue={name}\r\n            name=\"Name\"\r\n            placeholder=\"Tehtävän nimi\"\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h4>Tehtävänanto</h4>\r\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\r\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} value={assignmentTextMD} placeHolder=\"Tehtävänanto\" />\r\n        </div>\r\n        <div>\r\n          <h4>Arvostelu</h4>\r\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} value={gradingScaleMD} placeHolder=\"Arvostelu\" />\r\n        </div>\r\n        <div className=\"instructions\">\r\n          <h4>Rastimiehen ohje</h4>\r\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} value={supervisorInstructionsMD} placeHolder=\"Rastimiehen ohje\" />\r\n        </div>\r\n        <Notification message={dropDownErrorMessage} type=\"error\" />\r\n        <div className=\"dropdowns\">\r\n          <div>\r\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\r\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\r\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <select value={category} onChange={(e) => handleCategoryChange(e)}>\r\n              <option value=\"\">Kategoria</option>\r\n              {categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)}\r\n            </select>\r\n            <br/>\r\n            <select value={rule} onChange={(e) => handleRuleChange(e)}>\r\n              <option value=\"\">Säännöt</option>\r\n              {rules.map(rule => <option key={rule.id} value={rule.id}>{rule.name}</option>)}\r\n            </select>\r\n            <br/>\r\n            <select value={language} onChange={(e) => handleLanguageChange(e)}>\r\n              <option value=\"\">Kieli</option>\r\n              {languages.map(language => <option key={language.id} value={language.id}>{language.name}</option>)}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"creator\">\r\n          <div>\r\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\r\n            <input\r\n              className=\"\"\r\n              type=\"text\"\r\n              defaultValue={creatorName}\r\n              name=\"CreatorName\"\r\n              placeholder=\"Muokkaajan nimi\"\r\n              onChange={({ target }) => setCreatorName(target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\r\n            <input\r\n              className=\"\"\r\n              type=\"text\"\r\n              defaultValue={creatorEmail}\r\n              name=\"CreatorEmail\"\r\n              placeholder=\"Muokkaajan sähköpostiosoite\"\r\n              onChange={({ target }) => setCreatorEmail(target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" className=\"save-task-button\">Tallenna</button>\r\n          <button onClick={() => handleCancel()} className=\"return-button\">Peruuta</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default ModifyTask","import React from 'react'\r\n\r\nconst TaskTextDisplay = ({ text }) => {\r\n  const htmlConverter = () => {\r\n    return { __html: `${text}` }\r\n  }\r\n\r\n  return (\r\n    <div dangerouslySetInnerHTML={htmlConverter()} />\r\n  )\r\n}\r\n\r\nexport default TaskTextDisplay","import React, { useState, useEffect } from 'react'\r\nimport taskService from '../services/task'\r\nimport ModifyTask from './ModifyTask'\r\nimport Notification from './Notification'\r\nimport TaskTextDisplay from './TaskTextDisplay'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Task = ({ match, user }) => {\r\n  const [task, setTask] = useState(null)\r\n  const [modifyVisible, setModifyVisible] = useState(false)\r\n  const [message, setMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    taskService.getOneTask(match.params.id).then((response) => {\r\n      setTask(response)\r\n    })\r\n  }, [])\r\n\r\n  const handleDelete = () => {\r\n    try {\r\n      taskService.deleteTask(task.id)\r\n      setMessage('Tehtävä poistettu')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n        if (task.pending) {\r\n          history.push('/admin')\r\n        } else {\r\n          history.push('/')\r\n        }\r\n      }, 2000)\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleAccept = () => {\r\n    try {\r\n      taskService.acceptTask(task.id)\r\n      setMessage('Tehtävä hyväksytty')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n        history.push('/admin')\r\n      }, 2000)\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {modifyVisible ?\r\n        <ModifyTask setModifyVisible={setModifyVisible} task={task} setTask={setTask} />\r\n        :\r\n        <div className=\"info-background\">\r\n          <Notification message={message} type=\"success\" />\r\n          <Notification message={errorMessage} type=\"error\" />\r\n          {task &&\r\n            <div className=\"info\">\r\n              <h2>{task.name}</h2>\r\n              <h3>Tehtävänanto:</h3>\r\n              <TaskTextDisplay text={task.assignmentText} />\r\n              <h3>Rastimiehen ohjeet:</h3>\r\n              <TaskTextDisplay text={task.supervisorInstructions} />\r\n              <h3>Arvosteluasteikko:</h3>\r\n              <TaskTextDisplay text={task.gradingScale} />\r\n              <h3>Sarja:</h3>\r\n              {task.series.map(s => <span key={task.id + s.id}>{s.name}<br /></span>)}\r\n              <h3>Kategoria:</h3>\r\n              <p>{task.category && task.category.name}</p>\r\n              <h3>Sääntöluokka:</h3>\r\n              <p>{task.rules && task.rules.name}</p>\r\n              <h3>Tehtävän viimeisin muokkaaja:</h3>\r\n              <p>{task.creatorName}<br />{task.creatorEmail}</p>\r\n\r\n              {user !== null &&\r\n                <div>\r\n                  <button onClick={() => setModifyVisible(true)} className=\"modify-view-button\">Muokkaa</button>\r\n                  {task.pending && <button className=\"accept-button\" onClick={() => handleAccept()}>Hyväksy</button>}\r\n                  <button className=\"delete-button\" onClick={() => handleDelete()}>Poista</button>\r\n                </div>}\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n      }\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { Route, Link, Redirect, useHistory } from 'react-router-dom'\r\nimport Login from './components/Login'\r\nimport TaskList from './components/TaskList'\r\nimport AddAdmin from './components/AddAdmin'\r\nimport AddTaskDropdown from './components/AddTaskDropdown'\r\nimport AddTask from './components/AddTask'\r\nimport Admin from './components/Admin'\r\nimport User from './components/User'\r\nimport Task from './components/Task'\r\nimport tokenService from './services/token'\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(null)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\r\n    if (loggedUserJSON) {\r\n      const loggedUser = JSON.parse(loggedUserJSON)\r\n      setUser(loggedUser)\r\n      tokenService.setToken(loggedUser.token)\r\n    }\r\n  }, [])\r\n\r\n  const logout = () => {\r\n    window.localStorage.removeItem('loggedUser')\r\n    setUser(null)\r\n    tokenService.setToken(null)\r\n    history.push('/')\r\n    window.location.reload()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <Link to=\"/\"><div className=\"logo\" /></Link>\r\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-header\">Lisää tehtävä</button></Link>\r\n\r\n        {user === null ?\r\n          <Fragment>\r\n            <Link to=\"/kirjautuminen\"><button className=\"login-button-header\">Kirjaudu</button></Link>\r\n          </Fragment>\r\n          :\r\n          <Fragment>\r\n            <Link to=\"/admin\"><button className=\"admin-button-header\">Admin</button></Link>\r\n            <div>\r\n              <div className=\"logged\">Kirjautuneena <Link to=\"/admin\" className=\"username-header\">{user.username}</Link></div>\r\n              <div className=\"logout\"><button className=\"logout-button-header\" onClick={() => logout()}>Kirjaudu ulos</button></div>\r\n            </div>\r\n          </Fragment>\r\n        }\r\n\r\n      </div>\r\n      <div className=\"admin-task-buttons-mobile\">\r\n        {user !== null && <Link to=\"/admin\"><button className=\"admin-button-mobile\">Admin</button></Link>}\r\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-mobile\">Lisää tehtävä</button></Link>\r\n      </div>\r\n      <div className=\"container\">\r\n        <Route exact path=\"/\" render={() => <TaskList user={user} />} />\r\n        <Route exact path=\"/tehtava/:id\" render={(match) => <Task {...match} user={user} />} />\r\n        <Route path=\"/kirjautuminen\" render={() => <Login setUser={setUser} />} />\r\n        <Route path=\"/lisaa_tehtava\" render={() => <AddTask />} />\r\n        <Route path=\"/omasivu\" render={() => (localStorage.getItem('loggedUser') ? <User user={user} setUser={setUser} /> : <Redirect to=\"/\" />)} />\r\n        <Route path=\"/admin\" render={() => (localStorage.getItem('loggedUser') ? <Admin /> : <Redirect to=\"/\" />)} />\r\n        <Route path=\"/lisaa_admin\" render={() => (localStorage.getItem('loggedUser') ? <AddAdmin /> : <Redirect to=\"/\" />)} />\r\n        <Route path=\"/lisaa_pudotusvalikkoon\" render={() => (localStorage.getItem('loggedUser') ? <AddTaskDropdown /> : <Redirect to=\"/\" />)} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root'),\r\n)\r\n"],"sourceRoot":""}