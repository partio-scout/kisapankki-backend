{"version":3,"sources":["components/Notification.js","services/login.js","services/token.js","components/Login.js","components/FrontPageInfo.js","services/task.js","components/FrontPage.js","components/Search.js","components/Filter.js","components/TaskList.js","components/Competition.js","components/Basket.js","services/user.js","components/AddAdmin.js","services/rule.js","components/Rule.js","services/language.js","components/Language.js","services/series.js","components/Series.js","services/category.js","components/Category.js","components/AddTaskDropdown.js","services/file.js","components/MDEditor.js","components/AddTask.js","components/TaskListPending.js","components/Admin.js","components/EditUser.js","components/ChangePassword.js","components/User.js","components/Rating.js","components/ModifyTask.js","components/TaskTextDisplay.js","components/Task.js","App.js","index.js"],"names":["Notification","message","type","className","baseUrl","process","login","credentials","a","axios","post","response","data","token","newToken","Login","setUser","useState","errorMessage","setErrorMessage","username","setUsername","email","setEmail","password","setPassword","history","useHistory","handleLogin","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","tokenService","push","setTimeout","onSubmit","value","name","placeholder","onChange","target","FrontPageInfo","baseUrlPending","getTasks","get","getPendingTasks","config","headers","Authorization","getSearchedTasks","search","getOneTask","id","addtask","task","updateTask","put","deleteTask","delete","acceptTask","addRating","rating","updateViews","makePDF","formData","responseType","makePDFs","FrontPage","tasks","addTaskToBasket","handleUpdateTask","newTasks","setNewTasks","favoriteTasks","setFavoriteTasks","useEffect","sort","compareCreated","slice","compareRatings","handleUpdateViews","taskService","views","b","created","localeCompare","ratingsAVG","map","to","onClick","key","title","e","series","s","category","Search","setTasks","setAllTasks","setSearch","handleSearch","defaultValue","Filter","allTasks","categories","rules","selectedCategory","setSelectedCategory","selectedSeries","setSelectedSeries","selectedRules","setSelectedRules","length","array","i","j","includes","filter","getOptionLabel","option","getOptionValue","options","isClearable","isMulti","c","TaskList","originalTasks","seriess","handleDeleteTask","nameAsc","setNameAsc","ratingDesc","setRatingDesc","dateDesc","setDateDesc","handleDelete","confirm","compareNamesAsc","compareNamesDesc","compareRatingsAsc","compareRatingsDesc","compareCreatedAsc","compareCreatedDesc","concat","starRatedColor","starDimension","starSpacing","format","Competition","date","place","logo","setName","setDate","setPlace","setType","setLogo","onDrop","getRootProps","getInputProps","stopPropagation","handleDeleteLogo","Basket","removeTaskFromBasket","removeAllFromBasket","handleMakePDFs","FormData","competition","t","append","PDFs","url","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","files","file","substring","indexOf","getUsers","addUser","editUser","AddAdmin","setMessage","nameErrorMessage","setNameErrorMessage","usernameErrorMessage","setUsernameErrorMessage","passwordErrorMessage","setPasswordErrorMessage","emailErrorMessage","setEmailErrorMessage","users","setUsers","allowNotifications","setAllowNotifications","userService","then","handleAddAdmin","some","defaultChecked","getRules","addRule","rule","editRule","deleteRule","Rule","setRules","newRuleName","setNewRuleName","modifiedRuleName","setModifiedRuleName","modifiedRuleId","setModifiedRuleId","modifyVisible","setModifyVisible","acceptedCategories","setAcceptedCategories","modifiedCategories","setModifiedCategories","handleRuleAdd","newCategories","ruleService","addedRule","handleRuleDelete","r","handleRuleModify","modifiedRule","handleModifyCategories","handleShowModify","getLanguages","addLanguage","language","editLanguage","deleteLanguage","Language","languages","setLanguages","languageName","setLanguageName","modifiedLanguageName","setModifiedLanguageName","modifiedLanguageId","setModifiedLanguageId","handleLanguageAdd","languageService","addedLanguage","handleLanguageDelete","l","handleLanguageModify","modifiedLanguage","getSeries","addSeries","editSerie","serie","deleteSerie","Series","setSeries","modifiedSerieName","setModifiedSerieName","modifiedSerieId","setModifiedSerieId","modifiedSerieColor","setModifiedSerieColor","color","setColor","handleSeriesAdd","seriesService","addedSerie","handleSerieDelete","handleSerieModify","modifiedSerie","onChangeComplete","hex","colors","style","backgroundColor","display","borderRadius","height","width","marginLeft","getCategories","addCategory","cat","editCategory","console","log","deleteCategory","Category","setCategories","newCategoryName","setNewCategoryName","modifiedCategoryName","setModifiedCategoryName","modifiedCategoryId","setModifiedCategoryId","handleCategoryAdd","categoryService","addedCategory","handleCategoryDelete","handleCategoryModify","modifiedCategory","AddTaskDropdown","showCategories","setShowCategories","showRules","setShowRules","showLanguages","setShowLanguages","showSeries","setShowSeries","updateFiles","MDEditor","setText","setMD","mdParser","MarkdownIt","renderHTML","text","render","html","AddTask","assignmentText","setAssignmentText","gradingScale","setGradingScale","supervisorInstructions","setSupervisorInstructions","assignmentTextMD","setAssignmentTextMD","gradingScaleMD","setGradingScaleMD","supervisorInstructionsMD","setSupervisorInstructionsMD","setRule","setCategory","setLanguage","creatorName","setCreatorName","creatorEmail","setCreatorEmail","assignmentTextErrorMessage","setAssignmentTextErrorMessage","creatorNameErrorMessage","setCreatorNameErrorMessage","creatorEmailErrorMessage","setCreatorEmailErrorMessage","dropDownErrorMessage","setDropDownErrorMessage","setFiles","handleAddTask","addedFiles","fileService","location","reload","multiple","values","selected","handleSeriesChange","foundRule","find","handleRuleChange","handleCategoryChange","handleLanguageChange","newFiles","Fragment","handleDeleteFile","TaskListPending","loggedUserJSON","getItem","loggedUser","parse","exception","handleAccept","Admin","EditUser","setShowEdit","handleEditUser","editedUser","error","ChangePassword","setShowChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","newPasswordAgain","setNewPasswordAgain","handleChangePassword","User","showEdit","showChangePassword","Rating","confirmMessage","setConfirmMessage","ratedMessage","setRatedMessage","setRatingsAVG","ratingsAmount","setRatingsAmount","disabled","setDisabled","votesJSON","changeRating","newRating","updatedValues","votes","newVotes","ratings","Number","ModifyTask","setTask","oldFiles","setOldFiles","setNewFiles","filesToDelete","setFilesToDelete","handleModifyTask","modifiedTask","placeHolder","handleDeleteOldFile","handleDeleteNewFile","TaskTextDisplay","dangerouslySetInnerHTML","__html","Task","match","showMakePDF","setShowMakePDF","params","handleMakePDF","PDF","pending","App","basket","setBasket","setSeriess","basketJSON","foundBasket","removeItem","exact","path","ReactDOM","getElementById"],"mappings":"+PAceA,EAZM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAC/B,OAAgB,OAAZD,EACK,KAIP,yBAAKE,UAAWD,GACbD,I,gBCPDG,EAAO,UAAMC,OAAN,UAOE,GAAEC,MALN,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACWC,IAAMC,KAAKN,EAASG,GAD/B,cACNI,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDCJPC,EAAQ,KAQG,EANE,kBAAMA,GAMR,EAJE,SAACC,GAChBD,EAAK,iBAAaC,IC8DLC,EA7DD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACWC,mBAAS,MADpB,mBACtBC,EADsB,KACRC,EADQ,OAEGF,mBAAS,IAFZ,mBAEtBG,EAFsB,KAEZC,EAFY,OAGHJ,mBAAS,IAHN,mBAGtBK,EAHsB,KAGfC,EAHe,OAIGN,mBAAS,IAJZ,mBAItBO,EAJsB,KAIZC,EAJY,KAKvBC,EAAUC,cAEVC,EAAW,uCAAG,WAAOC,GAAP,eAAArB,EAAA,6DAClBqB,EAAMC,iBADY,kBAGGC,EAAazB,MAAM,CACpCc,WAAUE,QAAOE,aAJH,OAGVQ,EAHU,OAMhBC,OAAOC,aAAaC,QAClB,aAAcC,KAAKC,UAAUL,IAE/BhB,EAAQgB,GACRM,EAAsBN,EAAKnB,OAC3BQ,EAAY,IACZE,EAAS,IACTE,EAAY,IACZC,EAAQa,KAAK,KAdG,kDAgBhBpB,EAAgB,mDAChBqB,YAAW,WACTrB,EAAgB,QACf,KAnBa,0DAAH,sDAuBjB,OACE,yBAAKhB,UAAU,cACb,qDACA,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAC1C,0BAAMuC,SAAUb,GACd,6BACE,2BACEzB,UAAU,WACVD,KAAK,OACLwC,MAAOtB,EACPuB,KAAK,WACLC,YAAY,0BACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBzB,EAAYyB,EAAOJ,WAGjD,6BACE,2BACEvC,UAAU,WACVD,KAAK,WACLwC,MAAOlB,EACPmB,KAAK,WACLC,YAAY,WACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBrB,EAAYqB,EAAOJ,WAGjD,4BAAQxC,KAAK,SAASC,UAAU,gBAAhC,e,gBChCO4C,EA3BO,WAEpB,OACE,yBAAK5C,UAAU,kBACb,uDACA,+LAKA,mXAQA,uQCjBAC,EAAO,UAAMC,OAAN,SACP2C,EAAc,UAAM3C,OAAN,iBAGd4C,EAAQ,uCAAG,4BAAAzC,EAAA,sEACQC,IAAMyC,IAAI9C,GADlB,cACTO,EADS,yBAERA,EAASC,MAFD,2CAAH,qDAKRuC,EAAe,uCAAG,8BAAA3C,EAAA,6DAChB4C,EAAS,CACbC,QAAS,CAAEC,cAAehB,MAFN,SAIC7B,IAAMyC,IAAIF,EAAgBI,GAJ3B,cAIhBzC,EAJgB,yBAKfA,EAASC,MALM,2CAAH,qDAQf2C,EAAgB,uCAAG,WAAOC,GAAP,eAAAhD,EAAA,sEACAC,IAAMC,KAAN,UAAcN,EAAd,WAAgCoD,GADhC,cACjB7C,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,sDAKhB6C,EAAU,uCAAG,WAAOC,GAAP,eAAAlD,EAAA,sEACMC,IAAMyC,IAAN,UAAa9C,EAAb,YAAwBsD,IAD9B,cACX/C,EADW,yBAEVA,EAASC,MAFC,2CAAH,sDAKV+C,EAAO,uCAAG,WAAOC,GAAP,mBAAApD,EAAA,6DACV4C,EAAS,MACPvC,EAAQyB,OAGZc,EAAS,CACPC,QAAS,CAAEC,cAAezC,KANhB,SAUSJ,IAAMC,KAAKN,EAASwD,EAAMR,GAVnC,cAURzC,EAVQ,yBAWPA,EAASC,MAXF,2CAAH,sDAcPiD,EAAU,uCAAG,WAAOD,GAAP,mBAAApD,EAAA,6DACb4C,EAAS,MACPvC,EAAQyB,OAGZc,EAAS,CACPC,QAAS,CAAEC,cAAezC,KANb,SAUMJ,IAAMqD,IAAN,UAAa1D,EAAb,YAAwBwD,EAAKF,IAAME,EAAMR,GAV/C,cAUXzC,EAVW,yBAWVA,EAASC,MAXC,2CAAH,sDAcVmD,EAAU,uCAAG,WAAOL,GAAP,iBAAAlD,EAAA,6DACX4C,EAAS,CACbC,QAAS,CAAEC,cAAehB,MAFX,SAKM7B,IAAMuD,OAAN,UAAgB5D,EAAhB,YAA2BsD,GAAMN,GALvC,cAKXzC,EALW,yBAMVA,EAASC,MANC,2CAAH,sDASVqD,EAAU,uCAAG,WAAOP,GAAP,iBAAAlD,EAAA,6DACX4C,EAAS,CACbC,QAAS,CAAEC,cAAehB,MAFX,SAIM7B,IAAMqD,IAAN,UAAa1D,EAAb,YAAwBsD,EAAxB,WAAqCA,EAAIN,GAJ/C,cAIXzC,EAJW,yBAKVA,EAASC,MALC,2CAAH,sDAQVsD,EAAS,uCAAG,WAAOR,EAAIS,GAAX,eAAA3D,EAAA,sEAEOC,IAAMC,KAAN,UAAcN,EAAd,YAAyBsD,EAAzB,SAAoCS,GAF3C,cAEVxD,EAFU,yBAGTA,EAASC,MAHA,2CAAH,wDA+BA,GAAE+C,UAASV,WAAUQ,aAAYF,mBAAkBM,aAAYE,aAAYZ,kBAAiBc,aAAYG,YAzBtG,uCAAG,WAAOV,GAAP,eAAAlD,EAAA,sEACKC,IAAMC,KAAN,UAAcN,EAAd,YAAyBsD,EAAzB,WADL,cACZ/C,EADY,yBAEXA,EAASC,MAFE,2CAAH,sDAyBmHsD,YAAWG,QApBlI,uCAAG,WAAOC,EAAUZ,GAAjB,iBAAAlD,EAAA,6DACR4C,EAAS,CACbC,QAAS,CAAE,eAAgB,uBAC3BkB,aAAc,QAHF,SAMS9D,IAAMC,KAAN,UAAcN,EAAd,YAAyBsD,EAAzB,QAAmCY,EAAUlB,GANtD,cAMRzC,EANQ,yBAOPA,EAASC,MAPF,2CAAH,wDAoB2I4D,SAV1I,uCAAG,WAAOF,GAAP,iBAAA9D,EAAA,6DACT4C,EAAS,CACbC,QAAS,CAAE,eAAgB,uBAC3BkB,aAAc,QAHD,SAMQ9D,IAAMC,KAAN,UAAcN,EAAd,QAA6BkE,EAAUlB,GAN/C,cAMTzC,EANS,yBAORA,EAASC,MAPD,2CAAH,uDCEC6D,EA7FG,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,gBAAiBC,EAAuB,EAAvBA,iBAAuB,EAClC3D,mBAAS,IADyB,mBAC3D4D,EAD2D,KACjDC,EADiD,OAExB7D,mBAAS,IAFe,mBAE3D8D,EAF2D,KAE5CC,EAF4C,KAIlEC,qBAAU,WACRH,EAAY,YAAIJ,GAAOQ,KAAKC,GAAgBC,MAAM,EAAG,IACrDJ,EAAiB,YAAIN,GAAOQ,KAAKG,GAAgBD,MAAM,EAAG,MACzD,CAACV,IAEJ,IAAMY,EAAiB,uCAAG,WAAO1B,GAAP,SAAApD,EAAA,+EAEhB+E,EAAYnB,YAAYR,EAAKF,IAFb,OAGtBkB,EAAiB,eAAKhB,EAAN,CAAY4B,MAAO5B,EAAK4B,MAAQ,KAH1B,uGAAH,sDAQjBL,EAAiB,SAAC3E,EAAGiF,GACzB,OAAOA,EAAEC,QAAQC,cAAcnF,EAAEkF,UAG7BL,EAAiB,SAAC7E,EAAGiF,GACzB,OAAOA,EAAEG,WAAapF,EAAEoF,YAG1B,OACE,yBAAKzF,UAAU,aACb,qEACA,yBAAKA,UAAU,iCACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,sBAEb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,uBACb,uDACA,yBAAKA,UAAU,kCACb,qDACA,uCACA,2CACA,iCAGH0E,EAASgB,KAAI,SAACjC,GAAD,OACZ,kBAAC,IAAD,CAAMzD,UAAU,eAAe2F,GAAE,mBAAclC,EAAKF,IAAMqC,QAAS,kBAAMT,EAAkB1B,IAAOoC,IAAKpC,EAAKF,IAC1G,yBAAKvD,UAAU,0CACb,yBAAKA,UAAU,sBAAsB8F,MAAM,qBAAeF,QAAS,SAACG,GAAD,OAAOvB,EAAgBuB,EAAGtC,MAC7F,0BAAMzD,UAAU,eACd,uBAAGA,UAAU,8BAA8ByD,EAAKjB,MAChD,8CAAoBiB,EAAK4B,QAE3B,8BAAO5B,EAAKuC,OAAON,KAAI,SAAAO,GAAC,OAAI,yBAAKJ,IAAKpC,EAAKF,GAAK0C,EAAE1C,IAAK0C,EAAEzD,KAA7B,SAC5B,8BAAOiB,EAAKyC,UAAYzC,EAAKyC,SAAS1D,MACtC,8BAAM,yBAAKxC,UAAU,eAAe8F,MAAM,qBAAeF,QAAS,SAACG,GAAD,OAAOvB,EAAgBuB,EAAGtC,aAMpG,yBAAKzD,UAAU,iBACb,yBAAKA,UAAU,uBACb,2DACA,yBAAKA,UAAU,kCACb,qDACA,uCACA,2CACA,iCAGH4E,EAAcc,KAAI,SAACjC,GAAD,OACjB,kBAAC,IAAD,CAAMzD,UAAU,eAAe2F,GAAE,mBAAclC,EAAKF,IAAMqC,QAAS,kBAAMT,EAAkB1B,IAAOoC,IAAKpC,EAAKF,IAC1G,yBAAKvD,UAAU,+CACb,yBAAKA,UAAU,sBAAsB8F,MAAM,qBAAeF,QAAS,SAACG,GAAD,OAAOvB,EAAgBuB,EAAGtC,MAC7F,0BAAMzD,UAAU,eACd,uBAAGA,UAAU,8BAA8ByD,EAAKjB,MAChD,8CAAoBiB,EAAK4B,QAE3B,8BAAO5B,EAAKuC,OAAON,KAAI,SAAAO,GAAC,OAAI,yBAAKJ,IAAKpC,EAAKF,GAAK0C,EAAE1C,IAAK0C,EAAEzD,KAA7B,SAC5B,8BAAOiB,EAAKyC,UAAYzC,EAAKyC,SAAS1D,MACtC,8BAAM,yBAAKxC,UAAU,eAAe8F,MAAM,qBAAeF,QAAS,SAACG,GAAD,OAAOvB,EAAgBuB,EAAGtC,eAQxG,gCACE,sECnDO0C,EArCA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAAkB,EAEhBvF,mBAAS,IAFO,mBAErCuC,EAFqC,KAE7BiD,EAF6B,OAGJxF,mBAAS,IAHL,mBAGrCC,EAHqC,KAGvBC,EAHuB,KAKtCuF,EAAY,uCAAG,WAAO7E,GAAP,eAAArB,EAAA,6DACnBqB,EAAMC,iBADa,kBAGMyD,EAAYhC,iBAAiB,CAAEC,WAHrC,OAGX7C,EAHW,OAIjB4F,EAAS5F,GACT6F,EAAY7F,GALK,gDAOjBQ,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAVc,yDAAH,sDAclB,OACE,yBAAKhB,UAAU,UACb,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAC1C,0BAAMuC,SAAUiE,EAAcvG,UAAU,eACtC,2BACEA,UAAU,eACVD,KAAK,OACLyG,aAAa,GACbhE,KAAK,SACLC,YAAY,YACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB2D,EAAU3D,EAAOJ,UAE7C,4BAAQxC,KAAK,SAASC,UAAU,uBAAhC,U,yBCkGOyG,EAjIA,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,SAAUC,EAAiD,EAAjDA,WAAYC,EAAqC,EAArCA,MAAOZ,EAA8B,EAA9BA,OAAeI,GAAe,EAAtB7B,MAAsB,EAAf6B,UAAe,EAE3BtF,mBAAS,IAFkB,mBAEpE+F,EAFoE,KAElDC,EAFkD,OAG/BhG,mBAAS,IAHsB,mBAGpEiG,EAHoE,KAGpDC,EAHoD,OAIjClG,mBAAS,IAJwB,mBAIpEmG,EAJoE,KAIrDC,EAJqD,KAO3EpC,qBAAU,WACR,GAAIiC,EAAeI,OAAS,GAAKN,EAAiBM,OAAS,GAAKF,EAAe,CAE7E,IADA,IAAIG,EAAQ,GACHC,EAAI,EAAGA,EAAIX,EAASS,OAAQE,IACnC,IAAK,IAAIC,EAAI,EAAGA,EAAIZ,EAASW,GAAGrB,OAAOmB,OAAQG,IACzCP,EAAeQ,SAASb,EAASW,GAAGrB,OAAOsB,GAAG/D,KAAOsD,EAAiBU,SAASb,EAASW,GAAGnB,SAAS3C,KAAOmD,EAASW,GAAGT,MAAMrD,KAAO0D,EAAc1D,KAAO6D,EAAMG,SAASb,EAASW,KACnLD,EAAMhF,KAAKsE,EAASW,IAI1BjB,EAASgB,QACJ,GAAIL,EAAeI,OAAS,GAAKN,EAAiBM,OAAS,EAAG,CAEnE,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,EAAIX,EAASS,OAAQE,IACnC,IAAK,IAAIC,EAAI,EAAGA,EAAIZ,EAASW,GAAGrB,OAAOmB,OAAQG,IACzCP,EAAeQ,SAASb,EAASW,GAAGrB,OAAOsB,GAAG/D,KAAOsD,EAAiBU,SAASb,EAASW,GAAGnB,SAAS3C,MAAQ6D,EAAMG,SAASb,EAASW,KACtID,EAAMhF,KAAKsE,EAASW,IAI1BjB,EAASgB,QACJ,GAAIL,EAAeI,OAAS,GAAKF,EAAe,CAErD,IADA,IAAIG,EAAQ,GACHC,EAAI,EAAGA,EAAIX,EAASS,OAAQE,IACnC,IAAK,IAAIC,EAAI,EAAGA,EAAIZ,EAASW,GAAGrB,OAAOmB,OAAQG,IACzCP,EAAeQ,SAASb,EAASW,GAAGrB,OAAOsB,GAAG/D,KAAOmD,EAASW,GAAGT,MAAMrD,KAAO0D,EAAc1D,KAAO6D,EAAMG,SAASb,EAASW,KAC7HD,EAAMhF,KAAKsE,EAASW,IAI1BjB,EAASgB,QACJ,GAAIP,EAAiBM,OAAS,GAAKF,EACxCb,EAASM,EAASc,QAAO,SAAA/D,GAAI,OAAIoD,EAAiBU,SAAS9D,EAAKyC,SAAS3C,KAAOE,EAAKmD,MAAMrD,KAAO0D,EAAc1D,YAC3G,GAAIwD,EAAeI,OAAS,EAAG,CAEpC,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,EAAIX,EAASS,OAAQE,IACnC,IAAK,IAAIC,EAAI,EAAGA,EAAIZ,EAASW,GAAGrB,OAAOmB,OAAQG,IACzCP,EAAeQ,SAASb,EAASW,GAAGrB,OAAOsB,GAAG/D,MAAQ6D,EAAMG,SAASb,EAASW,KAChFD,EAAMhF,KAAKsE,EAASW,IAI1BjB,EAASgB,QACAP,EAAiBM,OAAS,EACnCf,EAASM,EAASc,QAAO,SAAA/D,GAAI,OAAIoD,EAAiBU,SAAS9D,EAAKyC,SAAS3C,QAEzE6C,EADSa,EACAP,EAASc,QAAO,SAAA/D,GAAI,OAAIA,EAAKmD,MAAMrD,KAAO0D,EAAc1D,MAExDmD,KAEV,CAACG,EAAkBE,EAAgBE,IA6BtC,OACE,kBAAC,WAAD,KACE,yBAAKjH,UAAU,UACb,kBAAC,IAAD,CACEwC,KAAK,gBACLiF,eAAgB,SAAAC,GAAM,gBAAOA,EAAOlF,OACpCmF,eAAgB,SAAAD,GAAM,gBAAOA,EAAOnE,KACpCb,SAlCsB,SAACsD,GACzBA,GAAUA,EAAOmB,OAAS,EAC5BH,EAAkBhB,EAAON,KAAI,SAAAO,GAAC,OAAIA,EAAE1C,QAEpCyD,EAAkB,IAClBZ,EAASM,KA8BLkB,QAAS5B,EACT6B,aAAa,EACbpF,YAAa,QACbqF,SAAS,KAIb,yBAAK9H,UAAU,UACb,kBAAC,IAAD,CACEwC,KAAK,kBACLiF,eAAgB,SAAAC,GAAM,gBAAOA,EAAOlF,OACpCmF,eAAgB,SAAAD,GAAM,gBAAOA,EAAOnE,KACpCb,SAtCwB,SAACwD,GAC3BA,GAAYA,EAASiB,OAAS,EAChCL,EAAoBZ,EAASR,KAAI,SAAAqC,GAAC,OAAIA,EAAExE,QAExCuD,EAAoB,IACpBV,EAASM,KAkCLkB,QAASjB,EACTkB,aAAa,EACbpF,YAAa,YACbqF,SAAS,KAIb,yBAAK9H,UAAU,UACb,kBAAC,IAAD,CACEwC,KAAK,eACLiF,eAAgB,SAAAC,GAAM,gBAAOA,EAAOlF,OACpCmF,eAAgB,SAAAD,GAAM,gBAAOA,EAAOnE,KACpCb,SA1CoB,SAACkE,GACvBA,EACFM,EAAiBN,IAEjBM,EAAiB,IACjBd,EAASM,KAsCLkB,QAAShB,EACTiB,aAAa,EACbpF,YAAa,wB,iBCsDRuF,EA3KE,SAAC,GAA8G,IAA5GnG,EAA2G,EAA3GA,KAAMoG,EAAqG,EAArGA,cAAetB,EAAsF,EAAtFA,WAAYC,EAA0E,EAA1EA,MAAOsB,EAAmE,EAAnEA,QAAS1D,EAA0D,EAA1DA,gBAAiBC,EAAyC,EAAzCA,iBAAkB0D,EAAuB,EAAvBA,iBAAuB,EACnGrH,mBAASmH,GAD0F,mBACtH1D,EADsH,KAC/G6B,EAD+G,OAE7FtF,mBAASmH,GAFoF,mBAEtHvB,EAFsH,KAE5GL,EAF4G,OAGrFvF,mBAAS,MAH4E,mBAGtHC,EAHsH,KAGxGC,EAHwG,OAI/FF,oBAAS,GAJsF,mBAItHsH,EAJsH,KAI7GC,EAJ6G,OAKzFvH,oBAAS,GALgF,mBAKtHwH,EALsH,KAK1GC,EAL0G,OAM7FzH,oBAAS,GANoF,mBAMtH0H,EANsH,KAM5GC,EAN4G,KAQ7H3D,qBAAU,WACRsB,EAAS6B,GACT5B,EAAY4B,KACX,CAACA,IAEJ,IAAM9C,EAAiB,uCAAG,WAAO1B,GAAP,SAAApD,EAAA,+EAEhB+E,EAAYnB,YAAYR,EAAKF,IAFb,OAGtBkB,EAAiB,eAAKhB,EAAN,CAAY4B,MAAO5B,EAAK4B,MAAQ,KAH1B,uGAAH,sDAQjBqD,EAAY,uCAAG,WAAO3C,EAAGtC,GAAV,SAAApD,EAAA,yDACnB0F,EAAEpE,iBADiB,UAGbG,OAAO6G,QAAP,2CAA6ClF,EAAKjB,OAHrC,gCAIT4C,EAAYxB,WAAWH,EAAKF,IAJnB,OAKf4E,EAAiB1E,EAAKF,IALP,uDAQjBvC,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAXc,yDAAH,wDAkEZ4H,EAAkB,SAACvI,EAAGiF,GAC1B,OAAOjF,EAAEmC,KAAKgD,cAAcF,EAAE9C,OAG1BqG,EAAmB,SAACxI,EAAGiF,GAC3B,OAAOA,EAAE9C,KAAKgD,cAAcnF,EAAEmC,OAG1BsG,EAAoB,SAACzI,EAAGiF,GAC5B,OAAOjF,EAAEoF,WAAaH,EAAEG,YAGpBsD,EAAqB,SAAC1I,EAAGiF,GAC7B,OAAOA,EAAEG,WAAapF,EAAEoF,YAGpBuD,EAAoB,SAAC3I,EAAGiF,GAC5B,OAAOjF,EAAEkF,QAAQC,cAAcF,EAAEC,UAG7B0D,EAAqB,SAAC5I,EAAGiF,GAC7B,OAAOA,EAAEC,QAAQC,cAAcnF,EAAEkF,UAGnC,OACE,yBAAKvF,UAAU,aACb,uDACA,yBAAKA,UAAU,2BACb,kBAAC,EAAD,CACEoG,SAAUA,EACVC,YAAaA,IAEf,kBAAC,EAAD,CACE9B,MAAOA,EACPmC,SAAUA,EACVC,WAAYA,EACZC,MAAOA,EACPZ,OAAQkC,EACR9B,SAAUA,KAId,kBAAC,EAAD,CAActG,QAASiB,IACtBwD,GAASA,EAAM4C,OAAS,GACvB,yBAAKnH,UAAU,mBACb,0BAAMA,UAAU,gBAAe,yBAAK4F,QAhGnB,WAErBQ,EADEgC,EACO7D,EAAMQ,KAAK8D,GAAkBK,OAAO,IAEpC3E,EAAMQ,KAAK6D,GAAiBM,OAAO,KAE9Cb,GAAYD,KA0FyB,uBAAmD,yBAAKpI,UAAU,mBAAkB,uBAAGA,UAAU,gBAAgB4F,QAjE3H,WAC3BQ,EAAS7B,EAAMQ,KAAK8D,GAAkBK,OAAO,QAgE0I,uBAAGlJ,UAAU,kBAAkB4F,QArE5L,WAC1BQ,EAAS7B,EAAMQ,KAAK6D,GAAiBM,OAAO,UAqEtC,uCACA,2CACA,0BAAMlJ,UAAU,gBAAe,yBAAK4F,QA1FjB,WAEvBQ,EADEkC,EACO/D,EAAMQ,KAAK+D,GAAmBI,OAAO,IAErC3E,EAAMQ,KAAKgE,GAAoBG,OAAO,KAEjDX,GAAeD,KAoFsB,aAAiD,yBAAKtI,UAAU,mBAAkB,uBAAGA,UAAU,kBAAkB4F,QAhEzH,WAC7BQ,EAAS7B,EAAMQ,KAAK+D,GAAmBI,OAAO,QA+D2I,uBAAGlJ,UAAU,oBAAoB4F,QA5D5L,WAC9BQ,EAAS7B,EAAMQ,KAAKgE,GAAoBG,OAAO,UA4DzC,0BAAMlJ,UAAU,gBAAe,yBAAK4F,QAlFnB,WAErBQ,EADEoC,EACOjE,EAAMQ,KAAKiE,GAAmBE,OAAO,IAErC3E,EAAMQ,KAAKkE,GAAoBC,OAAO,KAEjDT,GAAaD,KA4EwB,cAA6C,yBAAKxI,UAAU,mBAAkB,uBAAGA,UAAU,mBAAmB4F,QAzDtH,WAC7BQ,EAAS7B,EAAMQ,KAAKiE,GAAmBE,OAAO,QAwDwI,uBAAGlJ,UAAU,qBAAqB4F,QArD1L,WAC9BQ,EAAS7B,EAAMQ,KAAKkE,GAAoBC,OAAO,UAqDxCrH,GAAQ,+BACT,gCAGH0C,EAAMmB,KAAI,SAACjC,GAAD,OACT,kBAAC,IAAD,CAAMzD,UAAU,eAAe2F,GAAE,mBAAclC,EAAKF,IAAMqC,QAAS,kBAAMT,EAAkB1B,IAAOoC,IAAKpC,EAAKF,IAC1G,yBAAKvD,UAAU,kBACb,yBAAKA,UAAU,sBAAsB8F,MAAM,qBAAeF,QAAS,SAACG,GAAD,OAAOvB,EAAgBuB,EAAGtC,MAC7F,0BAAMzD,UAAU,eACd,uBAAGA,UAAU,oBAAoByD,EAAKjB,MACtC,8CAAoBiB,EAAK4B,QAE3B,8BAAO5B,EAAKuC,OAAON,KAAI,SAAAO,GAAC,OAAI,yBAAKJ,IAAKpC,EAAKF,GAAK0C,EAAE1C,IAAK0C,EAAEzD,KAA7B,SAC5B,8BAAOiB,EAAKyC,UAAYzC,EAAKyC,SAAS1D,MACtC,8BACE,kBAAC,IAAD,CACEwB,OAAQP,EAAKgC,WACb0D,eAAe,UACfC,cAAc,OACdC,YAAY,UAGf5F,EAAK8B,SAAW,8BAAM,kBAAC,IAAD,CAAQ+D,OAAO,oBAAoB7F,EAAK8B,UAC9D1D,GAAQ,0BAAM7B,UAAU,oBAAmB,4BAAQA,UAAU,gBAAgB4F,QAAS,SAACG,GAAD,OAAO2C,EAAa3C,EAAGtC,KAAlE,WAC5C,8BAAM,yBAAKzD,UAAU,eAAe8F,MAAM,qBAAeF,QAAS,SAACG,GAAD,OAAOvB,EAAgBuB,EAAGtC,c,QChGzF8F,EAtEK,SAAC,GAAqF,IAAnF/G,EAAkF,EAAlFA,KAAMgH,EAA4E,EAA5EA,KAAMC,EAAsE,EAAtEA,MAAO1J,EAA+D,EAA/DA,KAAM2J,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAWzF,OACE,6BACE,wBAAI/J,UAAU,gBAAd,gBAEA,yBAAKA,UAAU,eACb,2BACEA,UAAU,mBACVD,KAAK,OACLwC,MAAOC,EACPA,KAAK,OACLC,YAAY,aACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBgH,EAAQhH,EAAOJ,UAG3C,2BACEvC,UAAU,mBACVD,KAAK,OACLwC,MAAOiH,EACPhH,KAAK,OACLC,YAAY,kCACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBiH,EAAQjH,EAAOJ,UAG3C,2BACEvC,UAAU,oBACVD,KAAK,OACLwC,MAAOkH,EACPjH,KAAK,OACLC,YAAY,aACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBkH,EAASlH,EAAOJ,UAG5C,2BACEvC,UAAU,mBACVD,KAAK,OACLwC,MAAOxC,EACPyC,KAAK,OACLC,YAAY,aACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBmH,EAAQnH,EAAOJ,WAI7C,kBAAC,IAAD,CAAUyH,OAnDC,SAACN,GACdK,EAAQL,EAAK,OAmDR,gBAAEO,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACC,wBAASD,IACP,0BAAWC,KACX,yBAAKlK,UAAU,SACb,yBAAKA,UAAU,SAAf,QACC0J,GAAQ,yBAAK7D,IAAK6D,EAAKlH,MAAOkH,EAAKlH,KAAK,0BAAMoD,QAAS,SAACG,GAAD,OArD3C,SAACA,GACxBA,EAAEoE,kBACFJ,EAAQ,MAmDiEK,CAAiBrE,IAAI/F,UAAU,wBCwD7FqK,EAjHA,SAAC,GAA4E,IAA1E9F,EAAyE,EAAzEA,MAAO+F,EAAkE,EAAlEA,qBAAsB7F,EAA4C,EAA5CA,iBAAkB8F,EAA0B,EAA1BA,oBAEzDpF,EAAiB,uCAAG,WAAO1B,GAAP,SAAApD,EAAA,+EAEhB+E,EAAYnB,YAAYR,EAAKF,IAFb,OAGtBkB,EAAiB,eAAKhB,EAAN,CAAY4B,MAAO5B,EAAK4B,MAAQ,KAH1B,uGAAH,sDAFkE,EAUjEvE,mBAAS,IAVwD,mBAUlF0B,EAVkF,KAU5EmH,EAV4E,OAWjE7I,mBAAS,IAXwD,mBAWlF0I,EAXkF,KAW5EI,EAX4E,OAY/D9I,mBAAS,IAZsD,mBAYlF2I,EAZkF,KAY3EI,EAZ2E,OAajE/I,mBAAS,IAbwD,mBAalFf,EAbkF,KAa5E+J,EAb4E,OAcjEhJ,mBAAS,MAdwD,mBAclF4I,EAdkF,KAc5EK,EAd4E,OAejDjJ,mBAAS,IAfwC,mBAelFC,EAfkF,KAepEC,EAfoE,KAiBnFwJ,EAAc,uCAAG,WAAOzE,GAAP,uBAAA1F,EAAA,6DACjB8D,EAAW,IAAIsG,SAEbC,EAAczI,KAAKC,UAAU,CAAEM,OAAMgH,OAAMC,QAAO1J,OAAMwE,MAAOA,EAAMmB,KAAI,SAAAiF,GAAC,OAAIA,EAAEpH,QACtFY,EAASyG,OAAO,cAAeF,GAE3BhB,GACFvF,EAASyG,OAAO,OAAQlB,EAAMA,EAAKlH,MAPhB,kBAWA4C,EAAYf,SAASF,GAXrB,OAWb0G,EAXa,OAYnBlB,EAAQ,IACRC,EAAQ,IACRC,EAAS,IACTC,EAAQ,IACRC,EAAQ,MACFe,EAAMhJ,OAAOiJ,IAAIC,gBAAgB,IAAIC,KAAK,CAACJ,GAAO,CACtD9K,KAAM,sBAEFmL,EAAOC,SAASC,cAAc,MAC/BC,KAAOP,EACZI,EAAKI,aAAa,WAAY,cAC9BH,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QAxBc,kDA0BnBzK,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KA7BgB,0DAAH,sDAiCpB,OACE,yBAAKhB,UAAU,aACb,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAEzCwE,GAASA,EAAM4C,OAAS,GACvB,kBAAC,EAAD,CACE3E,KAAMA,EACNgH,KAAMA,EACNC,MAAOA,EACP1J,KAAMA,EACN2J,KAAMA,EACNC,QAASA,EACTC,QAASA,EACTC,SAAUA,EACVC,QAASA,EACTC,QAASA,IAIb,wBAAI/J,UAAU,gBAAd,iCAECuE,GAASA,EAAM4C,OAAS,GAAK,4BAAQnH,UAAU,oBAAoB4F,QAAS2E,GAA/C,iBAE7BhG,GAA0B,IAAjBA,EAAM4C,QAAgB,yBAAKnH,UAAU,gBAAf,+BAE/BuE,GAASA,EAAM4C,OAAS,GACvB,yBAAKnH,UAAU,mBACb,qDACA,uCACA,2CACA,gDACA,gCAIHuE,EAAMmB,KAAI,SAACjC,GAAD,OACT,yBAAKzD,UAAU,iBAAiB6F,IAAKpC,EAAKF,IACxC,yBAAKvD,UAAU,iCAAiC4F,QAAS,kBAAM0E,EAAqB7G,EAAKF,OACzF,8BACE,kBAAC,IAAD,CAAMoC,GAAE,mBAAclC,EAAKF,IAAMqC,QAAS,kBAAMT,EAAkB1B,KAC/DA,EAAKjB,MAER,8CAAoBiB,EAAK4B,QAE3B,8BAAO5B,EAAKuC,OAAON,KAAI,SAAAO,GAAC,OAAI,yBAAKJ,IAAKpC,EAAKF,GAAK0C,EAAE1C,IAAK0C,EAAEzD,KAA7B,SAC5B,8BAAOiB,EAAKyC,UAAYzC,EAAKyC,SAAS1D,MACtC,8BACGiB,EAAKiI,OAASjI,EAAKiI,MAAMhG,KAAI,SAACiG,GAAD,OAC1B,yBAAK9F,IAAK8F,GACR,uBAAGN,KAAI,yDAAoDM,IACxDA,EAAKC,UAAUD,EAAKE,QAAQ,KAAO,EAAGF,EAAKxE,cAKtD,0BAAMnH,UAAU,0BAA0B4F,QAAS,kBAAM0E,EAAqB7G,EAAKF,WAGtFgB,GAASA,EAAM4C,OAAS,GAAK,yBAAKnH,UAAU,aAAY,4BAAQ4F,QAAS4E,GAAjB,wBC/GzDvK,EAAO,UAAMC,OAAN,SAEP4L,EAAQ,uCAAG,4BAAAzL,EAAA,sEACQC,IAAMyC,IAAI9C,GADlB,cACTO,EADS,yBAERA,EAASC,MAFD,2CAAH,qDAsBC,GAAEsL,QAjBJ,uCAAG,WAAO3L,GAAP,iBAAAC,EAAA,6DACR4C,EAAS,CACbC,QAAS,CAAEC,cAAehB,MAFd,SAIS7B,IAAMC,KAAKN,EAASG,EAAa6C,GAJ1C,cAIRzC,EAJQ,yBAKPA,EAASC,MALF,2CAAH,sDAiBaqL,WAAUE,SATtB,uCAAG,WAAOnK,GAAP,iBAAAxB,EAAA,6DACT4C,EAAS,CACbC,QAAS,CAAEC,cAAehB,MAFb,SAKQ7B,IAAMqD,IAAI1D,EAAS4B,EAAMoB,GALjC,cAKTzC,EALS,yBAMRA,EAASC,MAND,2CAAH,uDCkICwL,EAhJE,WAAO,IAAD,EACSnL,mBAAS,MADlB,mBACdhB,EADc,KACLoM,EADK,OAEmBpL,mBAAS,MAF5B,mBAEdC,EAFc,KAEAC,EAFA,OAG2BF,mBAAS,MAHpC,mBAGdqL,EAHc,KAGIC,EAHJ,OAImCtL,mBAAS,MAJ5C,mBAIduL,EAJc,KAIQC,EAJR,OAKmCxL,mBAAS,MAL5C,mBAKdyL,EALc,KAKQC,EALR,OAM6B1L,mBAAS,MANtC,mBAMd2L,EANc,KAMKC,EANL,OAOG5L,mBAAS,IAPZ,mBAOd0B,EAPc,KAORmH,EAPQ,OAQW7I,mBAAS,IARpB,mBAQdG,EARc,KAQJC,EARI,OASWJ,mBAAS,IATpB,mBASdO,EATc,KASJC,EATI,OAUKR,mBAAS,IAVd,mBAUd6L,EAVc,KAUPC,EAVO,OAWK9L,mBAAS,IAXd,mBAWdK,EAXc,KAWPC,EAXO,OAY+BN,oBAAS,GAZxC,mBAYd+L,EAZc,KAYMC,GAZN,KAcrBhI,qBAAU,WACRiI,EAAYjB,WAAWkB,MAAK,SAACxM,GAC3BoM,EAASpM,QAEV,IAEH,IAAMyM,GAAc,uCAAG,WAAOvL,GAAP,SAAArB,EAAA,yDACrBqB,EAAMC,iBACNyK,EAAoB,MACpBE,EAAwB,MACxBE,EAAwB,MACxBE,EAAqB,MACjBlK,EAAK2E,OAAS,GAChBiF,EAAoB,8DAElBnL,EAASkG,OAAS,GACpBmF,EAAwB,gFAEtBjL,EAAS8F,OAAS,GACpBqF,EAAwB,+DAEtBG,EAAMO,MAAK,SAACrL,GAAD,OAAWA,EAAKZ,WAAaA,MAC1CqL,EAAwB,wCAGtB9J,EAAK2E,OAAS,GAAKlG,EAASkG,OAAS,GAAK9F,EAAS8F,OAAS,GAC3DwF,EAAMO,MAAK,SAACrL,GAAD,OAAWA,EAAKZ,WAAaA,MApBxB,8EAwBb8L,EAAYhB,QAAQ,CACxBvJ,OAAMvB,WAAUE,QAAOE,WAAUwL,uBAzBhB,QA2BnBlD,EAAQ,IACRzI,EAAY,IACZE,EAAS,IACTE,EAAY,IACZwL,IAAsB,GACtBZ,EAAW,mCACX7J,YAAW,WACT6J,EAAW,QACV,KAnCgB,mDAqCnBlL,EAAgB,mCAChBqB,YAAW,WACTrB,EAAgB,QACf,KAxCgB,2DAAH,sDA4CpB,OACE,yBAAKhB,UAAU,eACb,+DACA,kBAAC,EAAD,CAAcF,QAASA,EAASC,KAAK,YACrC,kBAAC,EAAD,CAAcD,QAASiB,EAAchB,KAAK,UAC1C,0BAAMuC,SAAU2K,IACd,yBAAKjN,UAAU,SACb,kBAAC,EAAD,CAAcF,QAASqM,EAAkBpM,KAAK,UAC9C,2BACEC,UAAU,OACVD,KAAK,OACLwC,MAAOC,EACPA,KAAK,OACLC,YAAY,OACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBgH,EAAQhH,EAAOJ,WAG7C,6BACE,kBAAC,EAAD,CAAczC,QAASuM,EAAsBtM,KAAK,UAClD,2BACEC,UAAU,WACVD,KAAK,OACLwC,MAAOtB,EACPuB,KAAK,WACLC,YAAY,0BACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBzB,EAAYyB,EAAOJ,WAGjD,6BACE,kBAAC,EAAD,CAAczC,QAAS2M,EAAmB1M,KAAK,UAC/C,2BACEC,UAAU,QACVD,KAAK,QACLwC,MAAOpB,EACPqB,KAAK,QACLC,YAAY,yBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBvB,EAASuB,EAAOJ,WAG9C,6BACE,kBAAC,EAAD,CAAczC,QAASyM,EAAsBxM,KAAK,UAClD,2BACEC,UAAU,WACVD,KAAK,WACLwC,MAAOlB,EACPmB,KAAK,WACLC,YAAY,WACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBrB,EAAYqB,EAAOJ,WAGjD,6BACE,yDAEE,yBAAKvC,UAAU,cAAc0C,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBmK,GAAsBnK,EAAOJ,SAClF,+BACE,2BACExC,KAAK,QACLyC,KAAK,gBACLD,OAAO,EACP4K,gBAAc,IALlB,YASA,+BACE,2BACEpN,KAAK,QACLyC,KAAK,gBACLD,OAAO,IAJX,SAWN,4BAAQxC,KAAK,SAASC,UAAU,iBAAhC,kBC3IFC,EAAO,UAAMC,OAAN,SAEPkN,GAAQ,uCAAG,4BAAA/M,EAAA,sEACQC,IAAMyC,IAAI9C,GADlB,cACTO,EADS,yBAERA,EAASC,MAFD,2CAAH,qDAiCC,IAAE4M,QA5BJ,uCAAG,WAAOC,GAAP,iBAAAjN,EAAA,6DACR4C,EAAS,CACbC,QAAS,CAAEC,cAAehB,MAFd,SAKS7B,IAAMC,KAAKN,EAASqN,EAAMrK,GALnC,cAKRzC,EALQ,yBAMPA,EAASC,MANF,2CAAH,sDA4Ba2M,YAAUG,SAnBtB,uCAAG,WAAOD,GAAP,iBAAAjN,EAAA,6DACT4C,EAAS,CACbC,QAAS,CAAEC,cAAehB,MAFb,SAKQ7B,IAAMqD,IAAN,UAAa1D,EAAb,YAAwBqN,EAAK/J,IAAM+J,EAAMrK,GALjD,cAKTzC,EALS,yBAMRA,EAASC,MAND,2CAAH,sDAmBgC+M,WAT9B,uCAAG,WAAOjK,GAAP,iBAAAlD,EAAA,6DACX4C,EAAS,CACbC,QAAS,CAAEC,cAAehB,MAFX,SAKM7B,IAAMuD,OAAN,UAAgB5D,EAAhB,YAA2BsD,GAAMN,GALvC,cAKXzC,EALW,yBAMVA,EAASC,MANC,2CAAH,uDCwIDgN,GAhKF,SAAC,GAAqC,IAAnC7G,EAAkC,EAAlCA,MAAO8G,EAA2B,EAA3BA,SAAU/G,EAAiB,EAAjBA,WAAiB,EACV7F,mBAAS,IADC,mBACzC6M,EADyC,KAC5BC,EAD4B,OAEA9M,mBAAS,IAFT,mBAEzC+M,EAFyC,KAEvBC,EAFuB,OAGJhN,mBAAS,IAHL,mBAGzCiN,EAHyC,KAGzBC,EAHyB,OAIRlN,mBAAS,MAJD,mBAIzCC,EAJyC,KAI3BC,EAJ2B,OAKNF,oBAAS,GALH,mBAKzCmN,EALyC,KAK1BC,EAL0B,OAMIpN,mBAAS,IANb,mBAMzCqN,EANyC,KAMrBC,EANqB,OAOItN,mBAAS,IAPb,mBAOzCuN,EAPyC,KAOrBC,EAPqB,OAQVxN,oBAAS,GARC,mBAQzC+G,EARyC,KAU1C0G,GAV0C,KAU7B,uCAAG,WAAO7M,GAAP,iBAAArB,EAAA,6DACpBqB,EAAMC,iBACA6M,EAAgBL,EAFF,kBAIMM,GAAYpB,QAAQ,CAC1CzG,MAAO+G,EAAaQ,mBAAoBA,EAAmBzI,KAAI,SAAAQ,GAAQ,OAAIA,EAAS3C,QALpE,OAIZmL,EAJY,OAOlBd,EAAe,IACfQ,EAAsB,IACtBV,EAAS9G,EAAMsC,OAAN,eAAkBwF,EAAlB,CAA6BP,mBAAoBK,MATxC,kDAWlBxN,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAde,0DAAH,uDAkBb2N,EAAgB,uCAAG,WAAOrB,GAAP,SAAAjN,EAAA,mEAEjByB,OAAO6G,QAAP,6CAA4C2E,EAAK9K,OAFhC,gCAGbiM,GAAYjB,WAAWF,EAAK/J,IAHf,OAInBmK,EAAS9G,EAAMY,QAAO,SAAAoH,GAAC,OAAIA,EAAErL,KAAO+J,EAAK/J,OAJtB,uDAOrBvC,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAVkB,yDAAH,sDAchB6N,EAAgB,uCAAG,WAAOnN,GAAP,eAAArB,EAAA,6DACvBqB,EAAMC,iBACAmN,EAAe,CAAEvL,GAAIwK,EAAgBvL,KAAMqL,EAAkBM,mBAAoBE,GAFhE,kBAIfI,GAAYlB,SAAS,CAAEhK,GAAIwK,EAAgBvL,KAAMqL,EAAkBM,mBAAoBE,EAAmB3I,KAAI,SAAAQ,GAAQ,OAAIA,EAAS3C,QAJpH,OAKrB2K,GAAiB,GACjBR,EAAS9G,EAAMlB,KAAI,SAAA4H,GAAI,OAAIA,EAAK/J,KAAOuL,EAAavL,GAAK+J,EAAOwB,MAN3C,gDAQrB9N,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAXkB,yDAAH,sDA0BhB+N,EAAyB,SAACpI,GAC9B2H,EAAsB3H,IAGxB,OACE,yBAAK3G,UAAU,aACb,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAEzC6G,GAASA,EAAMlB,KAAI,SAAC4H,GAAD,OAClB,yBAAKtN,UAAU,iBAAiB6F,IAAKyH,EAAK/J,IACvC0K,GAAiBF,IAAmBT,EAAK/J,GACxC,yBAAKvD,UAAU,kBACb,0BAAMsC,SAAUuM,GACd,yBAAK7O,UAAU,eACb,2BACEA,UAAU,OACVD,KAAK,OACLwC,MAAOsL,EACPrL,KAAK,WACLE,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBmL,EAAoBnL,EAAOJ,UAEvD,yBAAKvC,UAAU,qBACb,4BAAQD,KAAK,SAASC,UAAU,oBAAhC,YACA,4BAAQ4F,QAAS,kBAAMsI,GAAiB,KAAxC,aAGJ,yBAAKlO,UAAU,6BACb,kBAAC,IAAD,CACEwC,KAAK,sBACLD,MAAO8L,EACP5G,eAAgB,SAAAC,GAAM,gBAAOA,EAAOlF,OACpCmF,eAAgB,SAAAD,GAAM,gBAAOA,EAAOnE,KACpCb,SAAUqM,EACVnH,QAASjB,EACTkB,YAAaA,EACbpF,YAAa,8BACbqF,SAAS,OAMnB,kBAAC,WAAD,KACE,uBAAG9H,UAAU,aAAasN,EAAK9K,MAC/B,yBAAKxC,UAAU,gBACb,4BAAQ4F,QAAS,kBAxDJ,SAAC0H,GACxBY,GAAiB,GACjBF,EAAkBV,EAAK/J,IACvBuK,EAAoBR,EAAK9K,MACzB8L,EAAsBhB,EAAKa,oBAoDMa,CAAiB1B,IAAOtN,UAAU,iBAAzD,WACA,4BAAQ4F,QAAS,kBAAM+I,EAAiBrB,IAAOtN,UAAU,iBAAzD,WAEF,yBAAKA,UAAU,UACf,yBAAKA,UAAU,4BACZsN,EAAKa,oBAAsBb,EAAKa,mBAAmBzI,KAAI,SAAAQ,GAAQ,OAC5D,0BAAML,IAAKK,EAAS3C,IAAK2C,EAAS1D,KAAlC,cAQZ,0BAAMF,SAAUiM,EAAevO,UAAU,YACvC,yBAAKA,UAAU,YACb,2BACEA,UAAU,OACVD,KAAK,OACLwC,MAAOoL,EACPnL,KAAK,QACLC,YAAY,uBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBiL,EAAejL,EAAOJ,UAElD,4BAAQxC,KAAK,SAASC,UAAU,mBAAhC,gBAGF,yBAAKA,UAAU,0BACb,kBAAC,IAAD,CACEwC,KAAK,sBACLD,MAAO4L,EACP1G,eAAgB,SAAAC,GAAM,gBAAOA,EAAOlF,OACpCmF,eAAgB,SAAAD,GAAM,gBAAOA,EAAOnE,KACpCb,SAlFkB,SAACiE,GAC3ByH,EAAsBzH,IAkFdiB,QAASjB,EACTkB,YAAaA,EACbpF,YAAa,oCACbqF,SAAS,QCxJf7H,GAAO,UAAMC,OAAN,aAEP+O,GAAY,uCAAG,4BAAA5O,EAAA,sEACIC,IAAMyC,IAAI9C,IADd,cACbO,EADa,yBAEZA,EAASC,MAFG,2CAAH,qDAKZyO,GAAW,uCAAG,WAAOC,GAAP,iBAAA9O,EAAA,6DACZ4C,EAAS,CACbC,QAAS,CAAEC,cAAehB,MAFV,SAKK7B,IAAMC,KAAKN,GAASkP,EAAUlM,GALnC,cAKZzC,EALY,yBAMXA,EAASC,MANE,2CAAH,sDASX2O,GAAY,uCAAG,WAAOD,GAAP,iBAAA9O,EAAA,6DACb4C,EAAS,CACbC,QAAS,CAAEC,cAAehB,MAFT,SAKI7B,IAAMqD,IAAN,UAAa1D,GAAb,YAAwBkP,EAAS5L,IAAM4L,EAAUlM,GALrD,cAKbzC,EALa,yBAMZA,EAASC,MANG,2CAAH,sDAoBH,IAAEyO,eAAaD,gBAAcI,eATxB,uCAAG,WAAO9L,GAAP,iBAAAlD,EAAA,6DACf4C,EAAS,CACbC,QAAS,CAAEC,cAAehB,MAFP,SAKE7B,IAAMuD,OAAN,UAAgB5D,GAAhB,YAA2BsD,GAAMN,GALnC,cAKfzC,EALe,yBAMdA,EAASC,MANK,2CAAH,sDASwC2O,iBC8E7CE,GAjHE,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAAmB,EACR1O,mBAAS,IADD,mBACzC2O,EADyC,KAC3BC,EAD2B,OAEQ5O,mBAAS,IAFjB,mBAEzC6O,EAFyC,KAEnBC,EAFmB,OAGI9O,mBAAS,IAHb,mBAGzC+O,EAHyC,KAGrBC,EAHqB,OAIRhP,mBAAS,MAJD,mBAIzCC,EAJyC,KAI3BC,EAJ2B,OAKNF,oBAAS,GALH,mBAKzCmN,EALyC,KAK1BC,EAL0B,KAO1C6B,EAAiB,uCAAG,WAAOrO,GAAP,eAAArB,EAAA,6DACxBqB,EAAMC,iBADkB,kBAGMqO,GAAgBd,YAAY,CACtDC,SAAUM,IAJU,OAGhBQ,EAHgB,OAMtBP,EAAgB,IAChBF,EAAaD,EAAUrG,OAAO+G,IAPR,gDAStBjP,EAAgB,yCAChBqB,YAAW,WACTrB,EAAgB,QACf,KAZmB,yDAAH,sDAgBjBkP,EAAoB,uCAAG,WAAOf,GAAP,SAAA9O,EAAA,mEAErByB,OAAO6G,QAAP,mCAA2CwG,EAAS3M,OAF/B,gCAGjBwN,GAAgBX,eAAeF,EAAS5L,IAHvB,OAIvBiM,EAAaD,EAAU/H,QAAO,SAAA2I,GAAC,OAAIA,EAAE5M,KAAO4L,EAAS5L,OAJ9B,uDAOzBvC,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAVsB,yDAAH,sDAcpBoP,EAAoB,uCAAG,WAAO1O,GAAP,eAAArB,EAAA,6DAC3BqB,EAAMC,iBACA0O,EAAmB,CAAE9M,GAAIsM,EAAoBrN,KAAMmN,GAF9B,kBAInBK,GAAgBZ,aAAaiB,GAJV,OAKzBnC,GAAiB,GACjBsB,EAAaD,EAAU7J,KAAI,SAAAyJ,GAAQ,OAAIA,EAAS5L,KAAO8M,EAAiB9M,GAAK4L,EAAWkB,MAN/D,gDAQzBrP,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAXsB,yDAAH,sDAqB1B,OACE,yBAAKhB,UAAU,iBACb,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAEzCwP,GAAaA,EAAU7J,KAAI,SAACyJ,GAAD,OAC1B,yBAAKnP,UAAU,qBAAqB6F,IAAKsJ,EAAS5L,IAC/C0K,GAAiB4B,IAAuBV,EAAS5L,GAChD,yBAAKvD,UAAU,sBACb,0BAAMsC,SAAU8N,GACd,yBAAKpQ,UAAU,eACb,2BACEA,UAAU,WACVD,KAAK,OACLwC,MAAOoN,EACPnN,KAAK,WACLE,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBiN,EAAwBjN,EAAOJ,UAE3D,yBAAKvC,UAAU,qBACb,4BAAQD,KAAK,SAASC,UAAU,wBAAhC,YACA,4BAAQ4F,QAAS,kBAAMsI,GAAiB,KAAxC,eAMR,kBAAC,WAAD,KACE,uBAAGlO,UAAU,aAAamP,EAAS3M,MACnC,yBAAKxC,UAAU,gBACb,4BAAQ4F,QAAS,kBAlCN,SAACuJ,GACxBjB,GAAiB,GACjB4B,EAAsBX,EAAS5L,IAC/BqM,EAAwBT,EAAS3M,MA+BEwM,CAAiBG,IAAWnP,UAAU,iBAA7D,WACA,4BAAQ4F,QAAS,kBAAMsK,EAAqBf,IAAWnP,UAAU,iBAAjE,gBAOV,0BAAMsC,SAAUyN,EAAmB/P,UAAU,YAC3C,yBAAKA,UAAU,YACb,2BACEA,UAAU,WACVD,KAAK,OACLwC,MAAOkN,EACPjN,KAAK,WACLC,YAAY,aACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB+M,EAAgB/M,EAAOJ,UAEnD,4BAAQxC,KAAK,SAASC,UAAU,uBAAhC,mB,SCzGJC,GAAO,UAAMC,OAAN,WAEPoQ,GAAS,uCAAG,4BAAAjQ,EAAA,sEACOC,IAAMyC,IAAI9C,IADjB,cACVO,EADU,yBAETA,EAASC,MAFA,2CAAH,qDAKT8P,GAAS,uCAAG,WAAOvK,GAAP,iBAAA3F,EAAA,6DACV4C,EAAS,CACbC,QAAS,CAAEC,cAAehB,MAFZ,SAKO7B,IAAMC,KAAKN,GAAS+F,EAAQ/C,GALnC,cAKVzC,EALU,yBAMTA,EAASC,MANA,2CAAH,sDAST+P,GAAS,uCAAG,WAAOC,GAAP,iBAAApQ,EAAA,6DACV4C,EAAS,CACbC,QAAS,CAAEC,cAAehB,MAFZ,SAKO7B,IAAMqD,IAAN,UAAa1D,GAAb,YAAwBwQ,EAAMlN,IAAMkN,EAAOxN,GALlD,cAKVzC,EALU,yBAMTA,EAASC,MANA,2CAAH,sDAmBA,IAAE8P,aAAWD,aAAWI,YATtB,uCAAG,WAAOnN,GAAP,iBAAAlD,EAAA,6DACZ4C,EAAS,CACbC,QAAS,CAAEC,cAAehB,MAFV,SAKK7B,IAAMuD,OAAN,UAAgB5D,GAAhB,YAA2BsD,GAAMN,GALtC,cAKZzC,EALY,yBAMXA,EAASC,MANE,2CAAH,sDASmC+P,cCiGrCG,GAlIA,SAAC,GAA2B,IAAzB3K,EAAwB,EAAxBA,OAAQ4K,EAAgB,EAAhBA,UAAgB,EAChB9P,mBAAS,IADO,mBACjC0B,EADiC,KAC3BmH,EAD2B,OAEU7I,mBAAS,IAFnB,mBAEjC+P,EAFiC,KAEdC,EAFc,OAGMhQ,mBAAS,IAHf,mBAGjCiQ,EAHiC,KAGhBC,EAHgB,OAIYlQ,mBAAS,IAJrB,mBAIjCmQ,EAJiC,KAIbC,EAJa,OAKdpQ,mBAAS,WALK,mBAKjCqQ,EALiC,KAK1BC,EAL0B,OAMAtQ,mBAAS,MANT,mBAMjCC,EANiC,KAMnBC,EANmB,OAOEF,oBAAS,GAPX,mBAOjCmN,EAPiC,KAOlBC,EAPkB,KASlCmD,EAAe,uCAAG,WAAO3P,GAAP,eAAArB,EAAA,6DACtBqB,EAAMC,iBADgB,kBAGK2P,GAAcf,UAAU,CAAE/N,OAAM2O,UAHrC,OAGdI,EAHc,OAIpB5H,EAAQ,IACRyH,EAAS,IACTR,EAAU5K,EAAOkD,OAAOqI,IANJ,kDAQpBvQ,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAXiB,0DAAH,sDAefwQ,EAAiB,uCAAG,WAAOf,GAAP,SAAApQ,EAAA,mEAElByB,OAAO6G,QAAP,mCAA2C8H,EAAMjO,OAF/B,gCAGd8O,GAAcZ,YAAYD,EAAMlN,IAHlB,OAIpBqN,EAAU5K,EAAOwB,QAAO,SAAAvB,GAAC,OAAIA,EAAE1C,KAAOkN,EAAMlN,OAJxB,uDAOtBvC,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAVmB,yDAAH,sDAcjByQ,EAAiB,uCAAG,WAAO/P,GAAP,eAAArB,EAAA,6DACxBqB,EAAMC,iBACA+P,EAAgB,CAAEnO,GAAIwN,EAAiBvO,KAAMqO,EAAmBM,MAAOF,GAFrD,kBAIhBK,GAAcd,UAAUkB,GAJR,OAKtBxD,GAAiB,GACjB0C,EAAU5K,EAAON,KAAI,SAAA+K,GAAK,OAAIA,EAAMlN,KAAOmO,EAAcnO,GAAKkN,EAAQiB,MANhD,gDAQtB1Q,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAXmB,yDAAH,sDAsBvB,OACE,yBAAKhB,UAAU,eACb,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAEzCiG,GAAUA,EAAON,KAAI,SAAC+K,GAAD,OACpB,yBAAKzQ,UAAU,kBAAkB6F,IAAK4K,EAAMlN,IACzC0K,GAAiB8C,IAAoBN,EAAMlN,GAC1C,yBAAKvD,UAAU,mBACb,0BAAMsC,SAAUmP,GACd,yBAAKzR,UAAU,eACb,2BACEA,UAAU,QACVD,KAAK,OACLwC,MAAOsO,EACPrO,KAAK,QACLE,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBmO,EAAqBnO,EAAOJ,UAExD,yBAAKvC,UAAU,qBACb,4BAAQD,KAAK,SAASC,UAAU,qBAAhC,YACA,4BAAQ4F,QAAS,kBAAMsI,GAAiB,KAAxC,YAEF,yBAAKlO,UAAU,gBACb,kBAAC,gBAAD,CACEmR,MAAOF,EACPU,iBAAkB,SAAAR,GAAK,OAAID,EAAsBC,EAAMS,MACvDC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAC9D,UAAW,UAAW,UAAW,UAAW,UAAW,iBAOrE,kBAAC,WAAD,KACE,uBAAG7R,UAAU,aAAY,8BAAOyQ,EAAMjO,MAAY,0BAAMsP,MAAO,CAAEC,gBAAiBtB,EAAMU,MAAOa,QAAS,eAAgBC,aAAc,MAAOC,OAAQ,OAAQC,MAAO,OAAQC,WAAY,UACxL,yBAAKpS,UAAU,gBACb,4BAAQ4F,QAAS,kBA3CJ,SAAC6K,GACxBvC,GAAiB,GACjB8C,EAAmBP,EAAMlN,IACzBuN,EAAqBL,EAAMjO,MAC3B0O,EAAsBT,EAAMU,OAuCKnC,CAAiByB,IAAQzQ,UAAU,iBAA1D,WACA,4BAAQ4F,QAAS,kBAAM4L,EAAkBf,IAAQzQ,UAAU,iBAA3D,gBAOR,0BAAMsC,SAAU+O,EAAiBrR,UAAU,YACzC,yBAAKA,UAAU,YACb,2BACEA,UAAU,OACVD,KAAK,OACLwC,MAAOC,EACPA,KAAK,OACLC,YAAY,aACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBgH,EAAQhH,EAAOJ,UAE3C,4BAAQxC,KAAK,SAASC,UAAU,wBAAhC,gBAEF,yBAAKA,UAAU,gBACb,kBAAC,gBAAD,CACEmR,MAAOA,EACPQ,iBAAkB,SAAAR,GAAK,OAAIC,EAASD,EAAMS,MAC1CC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAC9D,UAAW,UAAW,UAAW,UAAW,UAAW,iBC3H/D5R,GAAO,UAAMC,OAAN,aAEPmS,GAAa,uCAAG,4BAAAhS,EAAA,sEACGC,IAAMyC,IAAI9C,IADb,cACdO,EADc,yBAEbA,EAASC,MAFI,2CAAH,qDAmCJ,IAAE6R,YA9BA,uCAAG,WAAOC,GAAP,iBAAAlS,EAAA,6DACZ4C,EAAS,CACbC,QAAS,CAAEC,cAAehB,MAFV,SAKK7B,IAAMC,KAAKN,GAASsS,EAAKtP,GAL9B,cAKZzC,EALY,yBAMXA,EAASC,MANE,2CAAH,sDA8Ba4R,iBAAeG,aArB3B,uCAAG,WAAOtM,GAAP,iBAAA7F,EAAA,6DACnBoS,QAAQC,IAAIxM,GACNjD,EAAS,CACbC,QAAS,CAAEC,cAAehB,MAHT,SAMI7B,IAAMqD,IAAN,UAAa1D,GAAb,YAAwBiG,EAAS3C,IAAM2C,EAAUjD,GANrD,cAMbzC,EANa,yBAOZA,EAASC,MAPG,2CAAH,sDAqByCkS,eAVvC,uCAAG,WAAOpP,GAAP,iBAAAlD,EAAA,6DACf4C,EAAS,CACbC,QAAS,CAAEC,cAAehB,MAFP,SAKE7B,IAAMuD,OAAN,UAAgB5D,GAAhB,YAA2BsD,GAAMN,GALnC,cAKfzC,EALe,yBAMdA,EAASC,MANK,2CAAH,uDCsFLmS,GAhHE,SAAC,GAAmC,IAAjCjM,EAAgC,EAAhCA,WAAYkM,EAAoB,EAApBA,cAAoB,EACJ/R,mBAAS,IADL,mBAC3CgS,EAD2C,KAC1BC,EAD0B,OAEMjS,mBAAS,IAFf,mBAE3CkS,EAF2C,KAErBC,EAFqB,OAGEnS,mBAAS,IAHX,mBAG3CoS,EAH2C,KAGvBC,EAHuB,OAIVrS,mBAAS,MAJC,mBAI3CC,EAJ2C,KAI7BC,EAJ6B,OAKRF,oBAAS,GALD,mBAK3CmN,EAL2C,KAK5BC,EAL4B,KAO5CkF,EAAiB,uCAAG,WAAO1R,GAAP,eAAArB,EAAA,6DACxBqB,EAAMC,iBADkB,kBAGM0R,GAAgBf,YAAY,CACtDpM,SAAU4M,IAJU,OAGhBQ,EAHgB,OAMtBP,EAAmB,IACnBF,EAAclM,EAAWuC,OAAOoK,IAPV,gDAStBtS,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAZmB,yDAAH,sDAgBjBuS,EAAoB,uCAAG,WAAOrN,GAAP,SAAA7F,EAAA,mEAErByB,OAAO6G,QAAP,uCAA+CzC,EAAS1D,OAFnC,gCAGjB6Q,GAAgBV,eAAezM,EAAS3C,IAHvB,OAIvBsP,EAAclM,EAAWa,QAAO,SAAAO,GAAC,OAAIA,EAAExE,KAAO2C,EAAS3C,OAJhC,uDAOzBvC,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAVsB,yDAAH,sDAcpBwS,EAAoB,uCAAG,WAAO9R,GAAP,eAAArB,EAAA,6DAC3BqB,EAAMC,iBACA8R,EAAmB,CAAElQ,GAAI2P,EAAoB1Q,KAAMwQ,GAF9B,kBAInBK,GAAgBb,aAAaiB,GAJV,OAKzBvF,GAAiB,GACjB2E,EAAclM,EAAWjB,KAAI,SAAAQ,GAAQ,OAAIA,EAAS3C,KAAOkQ,EAAiBlQ,GAAK2C,EAAWuN,MANjE,gDAQzBzS,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAXsB,yDAAH,sDAqB1B,OACE,yBAAKhB,UAAU,iBACb,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAEzC4G,GAAcA,EAAWjB,KAAI,SAACQ,GAAD,OAC5B,yBAAKlG,UAAU,qBAAqB6F,IAAKK,EAAS3C,IAC/C0K,GAAiBiF,IAAuBhN,EAAS3C,GAChD,yBAAKvD,UAAU,sBACb,0BAAMsC,SAAUkR,GACd,yBAAKxT,UAAU,eACb,2BACEA,UAAU,WACVD,KAAK,OACLwC,MAAOyQ,EACPxQ,KAAK,WACLE,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBsQ,EAAwBtQ,EAAOJ,UAE3D,yBAAKvC,UAAU,qBACb,4BAAQD,KAAK,SAASC,UAAU,wBAAhC,YACA,4BAAQ4F,QAAS,kBAAMsI,GAAiB,KAAxC,eAMR,kBAAC,WAAD,KACE,uBAAGlO,UAAU,aAAakG,EAAS1D,MACnC,yBAAKxC,UAAU,gBACb,4BAAQ4F,QAAS,kBAlCN,SAACM,GACxBgI,GAAiB,GACjBiF,EAAsBjN,EAAS3C,IAC/B0P,EAAwB/M,EAAS1D,MA+BEwM,CAAiB9I,IAAWlG,UAAU,iBAA7D,WACA,4BAAQ4F,QAAS,kBAAM2N,EAAqBrN,IAAWlG,UAAU,iBAAjE,gBAOV,0BAAMsC,SAAU8Q,EAAmBpT,UAAU,YAC3C,yBAAKA,UAAU,YACb,2BACEA,UAAU,WACVD,KAAK,OACLwC,MAAOuQ,EACPtQ,KAAK,WACLC,YAAY,iBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBoQ,EAAmBpQ,EAAOJ,UAEtD,4BAAQxC,KAAK,SAASC,UAAU,uBAAhC,mBClDK0T,GApDS,SAAC,GAAgG,IAA9F9M,EAA6F,EAA7FA,MAAOD,EAAsF,EAAtFA,WAAY4I,EAA0E,EAA1EA,UAAWvJ,EAA+D,EAA/DA,OAAQ0H,EAAuD,EAAvDA,SAAUmF,EAA6C,EAA7CA,cAAerD,EAA8B,EAA9BA,aAAcoB,EAAgB,EAAhBA,UAAgB,EAC1E9P,oBAAS,GADiE,mBAC/G6S,EAD+G,KAC/FC,EAD+F,OAEpF9S,oBAAS,GAF2E,mBAE/G+S,EAF+G,KAEpGC,EAFoG,OAG5EhT,oBAAS,GAHmE,mBAG/GiT,EAH+G,KAGhGC,EAHgG,OAIlFlT,oBAAS,GAJyE,mBAI/GmT,EAJ+G,KAInGC,EAJmG,KAMtH,OACE,yBAAKlU,UAAU,kBACb,yBAAKA,UAAU,mBACZiU,EACC,kBAAC,WAAD,KACE,4BAAQjU,UAAU,aAAa4F,QAAS,kBAAMsO,GAAeD,KAA7D,gBACA,kBAAC,GAAD,CAAQjO,OAAQA,EAAQ4K,UAAWA,KAGrC,4BAAQ5Q,UAAU,aAAa4F,QAAS,kBAAMsO,GAAeD,KAA7D,WAGJ,yBAAKjU,UAAU,mBACZ6T,EACC,kBAAC,WAAD,KACE,4BAAQ7T,UAAU,aAAa4F,QAAS,kBAAMkO,GAAcD,KAA5D,0BACA,kBAAC,GAAD,CAAMjN,MAAOA,EAAO8G,SAAUA,EAAU/G,WAAYA,KAGtD,4BAAQ3G,UAAU,aAAa4F,QAAS,kBAAMkO,GAAcD,KAA5D,qBAGJ,yBAAK7T,UAAU,mBACZ2T,EACC,kBAAC,WAAD,KACE,4BAAQ3T,UAAU,aAAa4F,QAAS,kBAAMgO,GAAmBD,KAAjE,oBACA,kBAAC,GAAD,CAAUhN,WAAYA,EAAYkM,cAAeA,KAGnD,4BAAQ7S,UAAU,aAAa4F,QAAS,kBAAMgO,GAAmBD,KAAjE,eAGJ,yBAAK3T,UAAU,mBACZ+T,EACC,kBAAC,WAAD,KACE,4BAAQ/T,UAAU,aAAa4F,QAAS,kBAAMoO,GAAkBD,KAAhE,gBACA,kBAAC,GAAD,CAAUxE,UAAWA,EAAWC,aAAcA,KAGhD,4BAAQxP,UAAU,aAAa4F,QAAS,kBAAMoO,GAAkBD,KAAhE,aCjDJ9T,GAAO,UAAMC,OAAN,SAWE,IAAEiU,YATA,uCAAG,WAAOzI,GAAP,iBAAArL,EAAA,6DACZ4C,EAAS,CACbC,QAAS,CAAE,eAAgB,wBAFX,SAKK5C,IAAMC,KAAKN,GAASyL,EAAOzI,GALhC,cAKZzC,EALY,yBAMXA,EAASC,MANE,2CAAH,uD,0CCkBF2T,I,OAjBE,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,MAAO/R,EAAY,EAAZA,MAC5BgS,EAAW,IAAIC,KAOrB,OACE,kBAAC,KAAD,CACEjS,MAAOA,EACPkS,WAAY,SAACC,GAAD,OAAUH,EAASI,OAAOD,IACtChS,SATuB,SAAC,GAAoB,IAAlBkS,EAAiB,EAAjBA,KAAMF,EAAW,EAAXA,KAClCL,EAAQO,GACRN,EAAMI,QC4OKG,GA/OC,SAAC,GAAmC,IAAjCjO,EAAgC,EAAhCA,MAAOsB,EAAyB,EAAzBA,QAASqH,EAAgB,EAAhBA,UAAgB,EAEnBzO,mBAAS,IAFU,mBAE1ChB,EAF0C,KAEjCoM,EAFiC,OAGTpL,mBAAS,IAHA,mBAG1CC,EAH0C,KAG5BC,EAH4B,OAIzBF,mBAAS,IAJgB,mBAI1C0B,EAJ0C,KAIpCmH,EAJoC,OAKL7I,mBAAS,IALJ,mBAK1CgU,EAL0C,KAK1BC,EAL0B,OAMTjU,mBAAS,IANA,mBAM1CkU,EAN0C,KAM5BC,EAN4B,OAOWnU,mBAAS,IAPpB,mBAO1CoU,EAP0C,KAOlBC,EAPkB,OAQDrU,mBAAS,IARR,mBAQ1CsU,EAR0C,KAQxBC,EARwB,OASLvU,mBAAS,IATJ,mBAS1CwU,EAT0C,KAS1BC,EAT0B,OAUezU,mBAAS,IAVxB,mBAU1C0U,EAV0C,KAUhBC,EAVgB,OAWzB3U,mBAAS,IAXgB,mBAW1CwM,EAX0C,KAWpCoI,EAXoC,OAYb5U,mBAAS,IAZI,mBAY1C6F,GAZ0C,KAY9BkM,GAZ8B,QAajB/R,mBAAS,IAbQ,qBAa1CoF,GAb0C,MAahCyP,GAbgC,SAcrB7U,mBAAS,IAdY,qBAc1CkF,GAd0C,MAclC4K,GAdkC,SAejB9P,mBAAS,IAfQ,qBAe1CqO,GAf0C,MAehCyG,GAfgC,SAgBX9U,mBAAS,IAhBE,qBAgB1C+U,GAhB0C,MAgB7BC,GAhB6B,SAiBThV,mBAAS,IAjBA,qBAiB1CiV,GAjB0C,MAiB5BC,GAjB4B,SAkBDlV,mBAAS,MAlBR,qBAkB1CqL,GAlB0C,MAkBxBC,GAlBwB,SAmBmBtL,mBAAS,MAnB5B,qBAmB1CmV,GAnB0C,MAmBdC,GAnBc,SAoBapV,mBAAS,MApBtB,qBAoB1CqV,GApB0C,MAoBjBC,GApBiB,SAqBetV,mBAAS,MArBxB,qBAqB1CuV,GArB0C,MAqBhBC,GArBgB,SAsBOxV,mBAAS,MAtBhB,qBAsB1CyV,GAtB0C,MAsBpBC,GAtBoB,SAuBvB1V,mBAAS,IAvBc,qBAuB1C4K,GAvB0C,MAuBnC+K,GAvBmC,MAuD3CC,GAAa,uCAAG,WAAOhV,GAAP,mBAAArB,EAAA,yDACpBqB,EAAMC,iBACNyK,GAAoB,MACpB8J,GAA8B,MAC9BE,GAA2B,MAC3BE,GAA4B,MAC5BE,GAAwB,MACpBhU,EAAK2E,OAAS,GAChBiF,GAAoB,6BAElB0I,EAAe3N,OAAS,GAC1B+O,GAA8B,2CAE5BL,GAAY1O,OAAS,GACvBiP,GAA2B,+CAEzBL,GAAa5O,OAAS,GACxBmP,GAA4B,2DAEb,KAAbnH,IAA4B,KAAT7B,GAA0B,KAAXtH,IAA8B,KAAbE,IACrDsQ,GAAwB,gDAEtBhU,EAAK2E,OAAS,GAAK2N,EAAe3N,OAAS,GAAK0O,GAAY1O,OAAS,GAAK4O,GAAa5O,OAAS,GAC5E,KAAbgI,IAA4B,KAAT7B,GAA0B,KAAXtH,IAA8B,KAAbE,IAvB1C,mDAgCpB,GANA6O,EAAkB9S,KAAKC,UAAU4S,IACjCG,EAAgBhT,KAAKC,UAAU8S,IAC/BG,EAA0BlT,KAAKC,UAAUgT,IAErC/Q,EAAW,IAAIsG,SAEfiB,GAAMvE,OAAS,EACjB,IAASE,EAAI,EAAGA,EAAIqE,GAAMvE,OAAQE,IAC9BlD,EAASyG,OAAO,aAAcc,GAAMrE,GAAIqE,GAAMrE,GAAG7E,MAlCnC,OAsChBmU,EAAa,GAtCG,oBAyCCC,GAAYzC,YAAYhQ,GAzCzB,eAyClBwS,EAzCkB,iBA0CZvR,EAAY5B,QAAQ,CACxBhB,OAAM8K,OAAMpH,YAAUF,UACtBmJ,YAAU2F,iBAAgBE,eAC1Ba,eAAaE,gBAAcb,yBAC3BE,mBAAkBE,iBAAgBE,2BAClC9J,MAAOiL,IA/CS,QAiDlBhN,EAAQ,IACR+L,EAAQ,IACRC,GAAY,IACZ/E,GAAU,IACVgF,GAAY,IACZb,EAAkB,IAClBE,EAAgB,IAChBe,GAAgB,IAChBF,GAAe,IACfX,EAA0B,IAC1BjJ,EAAW,6BACX7J,YAAW,WACT6J,EAAW,MACXpK,OAAO+U,SAASC,WACf,KA/De,mDAiElB9V,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KApEe,2DAAH,sDAiFnB,OACE,yBAAKhB,UAAU,sBACb,yDACA,kBAAC,EAAD,CAAcF,QAASA,EAASC,KAAK,YACrC,kBAAC,EAAD,CAAcD,QAASiB,EAAchB,KAAK,UAC1C,0BAAMuC,SAAUoU,IACd,6BACE,kBAAC,EAAD,CAAc5W,QAASqM,GAAkBpM,KAAK,UAC9C,2BACEC,UAAU,aACVD,KAAK,OACLwC,MAAOC,EACPA,KAAK,OACLC,YAAY,sBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBgH,EAAQhH,EAAOJ,WAG7C,6BACE,kDACA,kBAAC,EAAD,CAAczC,QAASmW,GAA4BlW,KAAK,UACxD,kBAAC,GAAD,CAAUsU,QAASU,EAAmBT,MAAOe,KAE/C,6BACE,yCACA,kBAAC,GAAD,CAAUhB,QAASY,EAAiBX,MAAOiB,KAE7C,yBAAKvV,UAAU,gBACb,gDACA,kBAAC,GAAD,CAAUqU,QAASc,EAA2Bb,MAAOmB,KAEvD,kBAAC,EAAD,CAAc3V,QAASyW,GAAsBxW,KAAK,UAClD,yBAAKC,UAAU,aACb,6BACE,4BAAQ+W,UAAQ,EAACxU,MAAOyD,GAAQtD,SAAU,SAACqD,GAAD,OAjIzB,SAACA,GAG1B,IAFA,IAAI6B,EAAU7B,EAAEpD,OAAOiF,QACnBoP,EAAS,GACJ3P,EAAI,EAAG8I,EAAIvI,EAAQT,OAAQE,EAAI8I,EAAG9I,IACrCO,EAAQP,GAAG4P,UAAiC,KAArBrP,EAAQP,GAAG9E,OACpCyU,EAAO5U,KAAKwF,EAAQP,GAAG9E,OAG3BqO,GAAUoG,GAyH+CE,CAAmBnR,IAAI/F,UAAU,mBAChF,4BAAQuC,MAAM,GAAGvC,UAAU,eAA3B,kCACCkI,EAAQxC,KAAI,SAAAM,GAAM,OAAI,4BAAQH,IAAKG,EAAOzC,GAAIhB,MAAOyD,EAAOzC,IAAKyC,EAAOxD,WAG7E,6BACE,4BAAQxC,UAAU,cAAcuC,MAAO+K,EAAM5K,SAAU,SAACqD,GAAD,OAtJxC,SAACA,GAGxB,GAFA2P,EAAQ3P,EAAEpD,OAAOJ,OACjBoT,GAAY,IACR5P,EAAEpD,OAAOJ,MAAO,CAClB,IAAM4U,EAAYvQ,EAAMwQ,MAAK,SAAAxI,GAAC,OAAIA,EAAErL,KAAOwC,EAAEpD,OAAOJ,SACpDsQ,GAAcsE,EAAUhJ,yBAExB0E,GAAc,IA+IsDwE,CAAiBtR,KAC7E,4BAAQxD,MAAM,IAAd,oBACCqE,EAAMlB,KAAI,SAAA4H,GAAI,OAAI,4BAAQtN,UAAU,eAAe6F,IAAKyH,EAAK/J,GAAIhB,MAAO+K,EAAK/J,IAAK+J,EAAK9K,UAE1F,6BACA,4BAAQxC,UAAU,kBAAkBuC,MAAO2D,GAAUxD,SAAU,SAACqD,GAAD,OAhJ5C,SAACA,GAC5B4P,GAAY5P,EAAEpD,OAAOJ,OA+IyD+U,CAAqBvR,KACzF,4BAAQxD,MAAM,IAAd,aACCoE,GAAWjB,KAAI,SAAAQ,GAAQ,OAAI,4BAAQlG,UAAU,mBAAmB6F,IAAKK,EAAS3C,GAAIhB,MAAO2D,EAAS3C,IAAK2C,EAAS1D,UAEnH,6BACA,4BAAQxC,UAAU,kBAAkBuC,MAAO4M,GAAUzM,SAAU,SAACqD,GAAD,OAtI5C,SAACA,GAC5B6P,GAAY7P,EAAEpD,OAAOJ,OAqIyDgV,CAAqBxR,KACzF,4BAAQxD,MAAM,IAAd,SACCgN,EAAU7J,KAAI,SAAAyJ,GAAQ,OAAI,4BAAQnP,UAAU,mBAAmB6F,IAAKsJ,EAAS5L,GAAIhB,MAAO4M,EAAS5L,IAAK4L,EAAS3M,YAItH,yBAAKxC,UAAU,WACb,6BACE,kBAAC,EAAD,CAAcF,QAASqW,GAAyBpW,KAAK,UACrD,2BACEC,UAAU,GACVD,KAAK,OACLwC,MAAOsT,GACPrT,KAAK,cACLC,YAAY,yBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBmT,GAAenT,EAAOJ,WAGpD,6BACE,kBAAC,EAAD,CAAczC,QAASuW,GAA0BtW,KAAK,UACtD,2BACEC,UAAU,GACVD,KAAK,OACLwC,MAAOwT,GACPvT,KAAK,eACLC,YAAY,qCACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBqT,GAAgBrT,EAAOJ,YAKvD,kBAAC,IAAD,CAAUyH,OAzFD,SAACwN,GACdf,GAAS/K,GAAMxC,OAAOsO,OAyFf,gBAAEvN,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACC,wBAASD,IACP,0BAAWC,KACX,yBAAKlK,UAAU,SACb,yBAAKA,UAAU,SAAf,kBACC0L,GAAMvE,OAAS,GACd,kBAAC,IAAMsQ,SAAP,KACG/L,GAAMhG,KAAI,SAACiG,GAAD,OACT,yBAAK9F,IAAK8F,EAAKnJ,MAAOmJ,EAAKnJ,KAAK,0BAAMoD,QAAS,SAACG,GAAD,OA9F1C,SAACA,EAAGvD,GAC3BuD,EAAEoE,kBACFsM,GAAS/K,GAAMlE,QAAO,SAAAmE,GAAI,OAAIA,EAAKnJ,OAASA,MA4F4BkV,CAAiB3R,EAAG4F,EAAKnJ,OAAMxC,UAAU,0BAS7G,4BAAQD,KAAK,SAASC,UAAU,mBAAhC,gCC5IO2X,GA9FS,SAAC,GAA2D,IAAzDjB,EAAwD,EAAxDA,cAAejS,EAAyC,EAAzCA,iBAAkB0D,EAAuB,EAAvBA,iBAAuB,EACvDrH,mBAAS,IAD8C,mBAC1EyD,EAD0E,KACnE6B,EADmE,OAEnDtF,mBAAS,MAF0C,mBAE1EhB,EAF0E,KAEjEoM,EAFiE,OAGzCpL,mBAAS,MAHgC,mBAG1EC,EAH0E,KAG5DC,EAH4D,KAKjF8D,qBAAU,WACR,IAAK3C,IAAyB,CAC5B,IAAMyV,EAAiB9V,OAAOC,aAAa8V,QAAQ,cACnD,GAAID,EAAgB,CAClB,IAAME,EAAa7V,KAAK8V,MAAMH,GAC9BzV,EAAsB2V,EAAWpX,QAGrC0E,EAAYpC,kBAAkBgK,MAAK,SAACxM,GAClC4F,EAAS5F,QAEV,IAEH,IAkBM2E,EAAiB,uCAAG,WAAO1B,GAAP,SAAApD,EAAA,+EAEhB+E,EAAYnB,YAAYR,EAAKF,IAFb,OAGtBkB,EAAiB,eAAKhB,EAAN,CAAY4B,MAAO5B,EAAK4B,MAAQ,KAH1B,uGAAH,sDAQjBqD,EAAY,uCAAG,WAAO3C,EAAGtC,GAAV,SAAApD,EAAA,yDACnB0F,EAAEpE,iBADiB,UAGbG,OAAO6G,QAAP,2CAA6ClF,EAAKjB,OAHrC,gCAIT4C,EAAYxB,WAAWH,EAAKF,IAJnB,OAKf4E,EAAiB1E,EAAKF,IALP,uDAQjBvC,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAXc,yDAAH,wDAelB,OACE,yBAAKhB,UAAU,aACb,iFACA,kBAAC,EAAD,CAAcF,QAASA,EAASC,KAAK,YACrC,kBAAC,EAAD,CAAcD,QAASiB,EAAchB,KAAK,UACzCwE,GAASA,EAAM4C,OAAS,GACvB,yBAAKnH,UAAU,mBACb,qDACA,uCACA,2CACA,+BACA,gCAIHuE,EAAMmB,KAAI,SAACjC,GAAD,OACT,kBAAC,IAAD,CAAMzD,UAAU,eAAe2F,GAAE,mBAAclC,EAAKF,IAAMqC,QAAS,kBAAMT,EAAkB1B,IAAOoC,IAAKpC,EAAKF,IAC5G,yBAAKvD,UAAU,kBACb,8BACGyD,EAAKjB,KACN,8CAAoBiB,EAAK4B,QAE3B,8BAAO5B,EAAKuC,OAAON,KAAI,SAAAO,GAAC,OAAI,yBAAKJ,IAAKpC,EAAKF,GAAK0C,EAAE1C,IAAK0C,EAAEzD,KAA7B,SAC5B,8BAAOiB,EAAKyC,UAAYzC,EAAKyC,SAAS1D,MACtC,4BAAQxC,UAAU,gBAAgB4F,QAAS,SAACG,GAAD,OAjE9B,SAACA,EAAGtC,GACvBsC,EAAEpE,iBACF,IACEyD,EAAYtB,WAAWL,EAAKF,IAC5B6C,EAAS7B,EAAMiD,QAAO,SAAAmD,GAAC,OAAIA,EAAEpH,KAAOE,EAAKF,OACzCmT,EAAcjT,GACdyI,EAAW,+BACX7J,YAAW,WACT6J,EAAW,QACV,KACH,MAAO8L,GACPhX,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,MAmDmDiX,CAAalS,EAAGtC,KAAlE,cACE,4BAAQzD,UAAU,gBAAgB4F,QAAS,SAACG,GAAD,OAAO2C,EAAa3C,EAAGtC,KAAlE,iBC5EGyU,GAXD,SAAC,GAAD,IAAGxB,EAAH,EAAGA,cAAejS,EAAlB,EAAkBA,iBAAkB0D,EAApC,EAAoCA,iBAApC,OACZ,6BACE,kBAAC,GAAD,CAAiBuO,cAAeA,EAAejS,iBAAkBA,EAAkB0D,iBAAkBA,IACrG,kBAAC,IAAD,CAAMnI,UAAU,eAAe2F,GAAG,YAAlC,eACA,6BACA,kBAAC,IAAD,CAAM3F,UAAU,eAAe2F,GAAG,gBAAlC,mCACA,6BACA,kBAAC,IAAD,CAAM3F,UAAU,eAAe2F,GAAG,2BAAlC,mECyHWwS,GAhIE,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAavW,EAAgC,EAAhCA,KAAMhB,EAA0B,EAA1BA,QAASqL,EAAiB,EAAjBA,WAAiB,EACvBpL,mBAAS,MADc,mBACxDC,EADwD,KAC1CC,EAD0C,OAEfF,mBAAS,MAFM,mBAExDqL,EAFwD,KAEtCC,EAFsC,OAGPtL,mBAAS,MAHF,mBAGxDuL,EAHwD,KAGlCC,EAHkC,OAIbxL,mBAAS,MAJI,mBAIxD2L,EAJwD,KAIrCC,EAJqC,OAKvC5L,mBAASe,EAAKW,MALyB,mBAKxDA,EALwD,KAKlDmH,EALkD,OAM/B7I,mBAASe,EAAKZ,UANiB,mBAMxDA,EANwD,KAM9CC,EAN8C,OAOrCJ,mBAASe,EAAKV,OAPuB,mBAOxDA,EAPwD,KAOjDC,EAPiD,OAQXN,mBAASe,EAAKgL,oBARH,mBAQxDA,EARwD,KAQpCC,EARoC,KAUzDuL,EAAc,uCAAG,WAAO3W,GAAP,eAAArB,EAAA,yDAGrBqB,EAAMC,iBACNyK,EAAoB,MACpBE,EAAwB,MACxBI,EAAqB,MACjBlK,EAAK2E,OAAS,GAChBiF,EAAoB,8DAElBnL,EAASkG,OAAS,GACpBmF,EAAwB,gFAEtBnL,EAAMgG,OAAS,GACjBuF,EAAqB,yEAEnBlK,EAAK2E,OAAS,GAAKlG,EAASkG,OAAS,GAhBpB,2EAoBM4F,EAAYf,SAAS,CAC5CxJ,OAAMvB,WAAUE,QAAO0L,uBArBN,QAoBbyL,EApBa,OAuBnBzX,EAAQyX,GACRxW,OAAOC,aAAaC,QAClB,aAAcC,KAAKC,UAAUoW,IAE/BF,GAAY,GACZlM,EAAW,qBACX7J,YAAW,WACT6J,EAAW,QACV,KA/BgB,kDAiCf,KAAM1L,UAAY,KAAMA,SAASC,MAAQ,KAAMD,SAASC,KAAK8X,OAAuC,4BAA9B,KAAM/X,SAASC,KAAK8X,MAC5FvX,EAAgB,sCAEhBA,EAAgB,+BAElBqB,YAAW,WACTrB,EAAgB,QACf,KAxCgB,0DAAH,sDA4CpB,OAEE,yBAAKhB,UAAU,kBACb,2CACA,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAC1C,0BAAMuC,SAAU+V,GACd,6BACE,kBAAC,EAAD,CAAcvY,QAASqM,EAAkBpM,KAAK,UAC9C,uCAAmB,6BACnB,2BACEC,UAAU,OACVD,KAAK,OACLwC,MAAOC,EACPA,KAAK,OACLC,YAAY,OACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBgH,EAAQhH,EAAOJ,WAG7C,6BACE,kBAAC,EAAD,CAAczC,QAASuM,EAAsBtM,KAAK,UAClD,0DAA6B,6BAC7B,2BACEC,UAAU,WACVD,KAAK,OACLwC,MAAOtB,EACPuB,KAAK,WACLC,YAAY,0BACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBzB,EAAYyB,EAAOJ,WAGjD,6BACE,kBAAC,EAAD,CAAczC,QAAS2M,EAAmB1M,KAAK,UAC/C,mDAAyB,6BACzB,2BACEC,UAAU,QACVD,KAAK,OACLwC,MAAOpB,EACPqB,KAAK,QACLC,YAAY,mBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBvB,EAASuB,EAAOJ,WAG9C,6BACE,yDAEE,yBAAKvC,UAAU,cAAc0C,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBmK,EAAsBnK,EAAOJ,SAClF,+BACE,2BACExC,KAAK,QACLyC,KAAK,gBACLD,OAAO,EACP4K,eAAgBN,IALpB,YASA,+BACE,2BACE9M,KAAK,QACLyC,KAAK,gBACLD,OAAO,EACP4K,gBAAiBN,IALrB,SAYN,4BAAQ9M,KAAK,SAASC,UAAU,eAAhC,YACA,4BAAQ4F,QAAS,kBAAMwS,GAAY,IAAQpY,UAAU,iBAArD,cC1COwY,GAhFQ,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,sBAAuBvM,EAAiB,EAAjBA,WAAiB,EACxBpL,mBAAS,MADe,mBACzDC,EADyD,KAC3CC,EAD2C,OAE1BF,mBAAS,IAFiB,mBAEzD4X,EAFyD,KAE5CC,EAF4C,OAG1B7X,mBAAS,IAHiB,mBAGzD8X,EAHyD,KAG5CC,EAH4C,OAIhB/X,mBAAS,IAJO,mBAIzDgY,EAJyD,KAIvCC,EAJuC,KAM1DC,EAAoB,uCAAG,WAAOtX,GAAP,SAAArB,EAAA,yDAC3BqB,EAAMC,iBACNX,EAAgB,QACZ4X,EAAYzR,OAAS,GAHE,uBAIzBnG,EAAgB,+DAJS,6BAOvB4X,IAAgBE,EAPO,uBAQzB9X,EAAgB,sCARS,oDAYnB+L,EAAYf,SAAS,CACzB0M,cAAaE,gBAbU,QAezBD,EAAe,IACfE,EAAe,IACfE,EAAoB,IACpBN,GAAsB,GACtBvM,EAAW,uBACX7J,YAAW,WACT6J,EAAW,QACV,KAtBsB,kDAwBrB,KAAM1L,UAAY,KAAMA,SAASC,MAAQ,KAAMD,SAASC,KAAK8X,OAAuC,uBAA9B,KAAM/X,SAASC,KAAK8X,MAC5FvX,EAAgB,qCAEhBA,EAAgB,wCAElBqB,YAAW,WACTrB,EAAgB,QACf,KA/BsB,0DAAH,sDAmC1B,OACE,yBAAKhB,UAAU,wBACb,+CACA,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAC1C,0BAAMuC,SAAU0W,GACd,6BACE,2BACEhZ,UAAU,eACVD,KAAK,WACLwC,MAAOmW,EACPjW,YAAY,iBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBgW,EAAehW,EAAOJ,WAGpD,6BACE,2BACEvC,UAAU,eACVD,KAAK,WACLwC,MAAOqW,EACPnW,YAAY,gBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBkW,EAAelW,EAAOJ,WAGpD,6BACE,2BACEvC,UAAU,qBACVD,KAAK,WACLwC,MAAOuW,EACPrW,YAAY,0BACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBoW,EAAoBpW,EAAOJ,WAGzD,4BAAQxC,KAAK,SAASC,UAAU,0BAAhC,YACA,4BAAQ4F,QAAS,kBAAM6S,GAAsB,IAAQzY,UAAU,iBAA/D,cCfOiZ,GA1DF,SAAC,GAAuB,IAArBpX,EAAoB,EAApBA,KAAMhB,EAAc,EAAdA,QAAc,EACJC,mBAAS,MADL,mBAC3BhB,EAD2B,KAClBoM,EADkB,OAEFpL,oBAAS,GAFP,mBAE3BoY,EAF2B,KAEjBd,EAFiB,OAGkBtX,oBAAS,GAH3B,mBAG3BqY,EAH2B,KAGPV,EAHO,KAgBlC,OACE,6BACG5W,GAEG,yBAAK7B,UAAU,cACXkZ,IAAaC,GAEX,6BACE,kBAAC,EAAD,CAAcrZ,QAASA,EAASC,KAAK,YACrC,2CACA,2BACE,qCACC8B,EAAKW,MAER,2BACE,wDACCX,EAAKZ,UAER,2BACE,uDACCY,EAAKV,OAER,2BACE,4CACCU,EAAKgL,mBACJ,iDAEA,uDAGJ,4BAAQ7M,UAAU,mBAAmB4F,QAAS,kBAxC5D6S,GAAsB,QACtBL,GAAY,KAuCE,WACA,4BAAQpY,UAAU,yBAAyB4F,QAAS,kBAnClEwS,GAAY,QACZK,GAAsB,KAkCR,oBAGLS,GAAY,kBAAC,GAAD,CAAUd,YAAaA,EAAavW,KAAMA,EAAMhB,QAASA,EAASqL,WAAYA,IAC1FiN,GAAsB,kBAAC,GAAD,CAAgBV,sBAAuBA,EAAuBvM,WAAYA,OC+B9FkN,GAlFA,SAAC,GAAgC,IAA9B3V,EAA6B,EAA7BA,KAAMgB,EAAuB,EAAvBA,iBAAuB,EACjB3D,qBADiB,mBACtCkD,EADsC,aAELlD,mBAAS,OAFJ,mBAEtCC,EAFsC,KAExBC,EAFwB,OAGDF,mBAAS,MAHR,mBAGtCuY,EAHsC,KAGtBC,EAHsB,OAILxY,mBAAS,MAJJ,mBAItCyY,EAJsC,KAIxBC,EAJwB,OAKT1Y,mBAAS2C,EAAKgC,YALL,mBAKtCA,EALsC,KAK1BgU,EAL0B,OAMH3Y,mBAAS2C,EAAKiW,eANX,mBAMtCA,EANsC,KAMvBC,EANuB,OAOb7Y,oBAAS,GAPI,mBAOtC8Y,EAPsC,KAO5BC,EAP4B,KAU7C/U,qBAAU,WACR,IAAMgV,EAAYhY,OAAOC,aAAa8V,QAAQ,SAC1CiC,IACY7X,KAAK8V,MAAM+B,GACD1C,MAAK,SAAAzM,GAAC,OAAIA,IAAMlH,EAAKF,QAE3CsW,GAAY,GACZL,EAAgB,qDAGnB,IAEH,IAAMO,EAAY,uCAAG,WAAOC,GAAP,qBAAA3Z,EAAA,+EAEW+E,EAAYrB,UAAUN,EAAKF,GAAI,CACzDS,OAAQgW,IAHO,OAEXC,EAFW,QAKXH,EAAYhY,OAAOC,aAAa8V,QAAQ,YAEtCqC,EAAQjY,KAAK8V,MAAM+B,GACnBK,EAAWD,EAAMhR,OAAOzF,EAAKF,IACnCzB,OAAOC,aAAaC,QAAQ,QAASC,KAAKC,UAAUiY,KAEtDV,EAAcQ,EAAcxU,YAC5BkU,EAAiBM,EAAcP,eAC/BjV,EAAiB,eAAKhB,EAAN,CAAY2W,QAAS3W,EAAK2W,QAAQJ,EAAY,GAAK,EAAGvU,WAAYwU,EAAcxU,WAAYiU,cAAeO,EAAcP,iBACzIG,GAAY,GACZP,EAAkB,0BAfD,kDAkBjBtY,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KArBc,0DAAH,sDAyBlB,OACE,yBAAKhB,UAAU,eACb,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAC1C,kBAAC,EAAD,CAAcD,QAASuZ,EAAgBtZ,KAAK,YAC5C,yBAAKC,UAAU,UACb,6BACE,0CACA,kBAAC,IAAD,CACEgE,OAAQqW,OAAO5U,GACf0D,eAAe,SACfC,cAAc,OACdC,YAAY,UAGhB,yBAAKrJ,UAAU,iBAAf,IACI0Z,EADJ,MAIF,kBAAC,EAAD,CAAc5Z,QAASyZ,EAAcxZ,KAAK,WACxC6Z,GACA,6BACE,0CACA,kBAAC,IAAD,CACE5V,OAAQA,EACR+V,aAAcA,EACd3Q,cAAc,OACdC,YAAY,YCiMTiR,GAxQI,SAAC,GAAsF,IAApFpM,EAAmF,EAAnFA,iBAAkBzK,EAAiE,EAAjEA,KAAM8W,EAA2D,EAA3DA,QAAS9V,EAAkD,EAAlDA,iBAAkBmC,EAAgC,EAAhCA,MAAOsB,EAAyB,EAAzBA,QAASqH,EAAgB,EAAhBA,UAAgB,EAEzEzO,mBAAS,IAFgE,mBAEhGhB,EAFgG,KAEvFoM,EAFuF,OAG/DpL,mBAAS,IAHsD,mBAGhGC,EAHgG,KAGlFC,EAHkF,OAI/EF,mBAAS2C,EAAKjB,MAJiE,mBAIhGA,EAJgG,KAI1FmH,EAJ0F,OAK3D7I,mBAAS2C,EAAKqR,gBAL6C,mBAKhGA,EALgG,KAKhFC,EALgF,OAM/DjU,mBAAS2C,EAAKuR,cANiD,mBAMhGA,EANgG,KAMlFC,EANkF,OAO3CnU,mBAAS2C,EAAKyR,wBAP6B,mBAOhGA,EAPgG,KAOxEC,EAPwE,OAQvDrU,mBAAS2C,EAAK2R,kBARyC,mBAQhGA,EARgG,KAQ9EC,EAR8E,OAS3DvU,mBAAS2C,EAAK6R,gBAT6C,mBAShGA,EATgG,KAShFC,EATgF,OAUvCzU,mBAAS2C,EAAK+R,0BAVyB,mBAUhGA,EAVgG,KAUtEC,EAVsE,OAWnE3U,mBAAS,IAX0D,mBAWhG6F,GAXgG,KAWpFkM,GAXoF,QAY/E/R,mBAAS2C,EAAKmD,MAAQnD,EAAKmD,MAAMrD,GAAK,MAZyC,qBAYhG+J,GAZgG,MAY1FoI,GAZ0F,SAavE5U,mBAAS2C,EAAKyC,SAAWzC,EAAKyC,SAAS3C,GAAK,MAb2B,qBAahG2C,GAbgG,MAatFyP,GAbsF,SAc3E7U,mBAAS2C,EAAKuC,OAAON,KAAI,SAAAO,GAAC,OAAIA,EAAE1C,OAd2C,qBAchGyC,GAdgG,MAcxF4K,GAdwF,SAevE9P,mBAAS2C,EAAK0L,SAAW1L,EAAK0L,SAAS5L,GAAK,MAf2B,qBAehG4L,GAfgG,MAetFyG,GAfsF,SAgBjE9U,mBAAS2C,EAAKoS,aAhBmD,qBAgBhGA,GAhBgG,MAgBnFC,GAhBmF,SAiB/DhV,mBAAS2C,EAAKsS,cAjBiD,qBAiBhGA,GAjBgG,MAiBlFC,GAjBkF,SAkBvDlV,mBAAS,MAlB8C,qBAkBhGqL,GAlBgG,MAkB9EC,GAlB8E,SAmBnCtL,mBAAS,MAnB0B,qBAmBhGmV,GAnBgG,MAmBpEC,GAnBoE,SAoBzCpV,mBAAS,MApBgC,qBAoBhGqV,GApBgG,MAoBvEC,GApBuE,SAqBvCtV,mBAAS,MArB8B,qBAqBhGuV,GArBgG,MAqBtEC,GArBsE,SAsB/CxV,mBAAS,MAtBsC,qBAsBhGyV,GAtBgG,MAsB1EC,GAtB0E,SAuBvE1V,mBAAS2C,EAAKiI,OAAS,IAvBgD,qBAuBhG8O,GAvBgG,MAuBtFC,GAvBsF,SAwBvE3Z,mBAAS,IAxB8D,qBAwBhG0W,GAxBgG,MAwBtFkD,GAxBsF,SAyB7D5Z,mBAAS,IAzBoD,qBAyBhG6Z,GAzBgG,MAyBjFC,GAzBiF,MA2BnGrX,GAAKE,EAAKF,GAEduB,qBAAU,WACR,GAAI8B,GAASnD,EAAKmD,OAASnD,EAAKmD,MAAMrD,GAAI,CACxC,IAAM4T,EAAYvQ,EAAMwQ,MAAK,SAAAxI,GAAC,OAAIA,EAAErL,KAAOE,EAAKmD,MAAMrD,MAClD4T,GACFtE,GAAcsE,EAAUhJ,uBAG3B,IAEH,IA8BM0M,GAAgB,uCAAG,WAAOnZ,GAAP,qBAAArB,EAAA,yDACvBqB,EAAMC,iBACNyK,GAAoB,MACpB8J,GAA8B,MAC9BE,GAA2B,MAC3BE,GAA4B,MAC5BE,GAAwB,MACpBhU,EAAK2E,OAAS,GAChBiF,GAAoB,6BAElB0I,EAAe3N,OAAS,GAC1B+O,GAA8B,2CAE5BL,GAAY1O,OAAS,GACvBiP,GAA2B,+CAEzBL,GAAa5O,OAAS,GACxBmP,GAA4B,2DAEb,KAAbnH,IAA4B,KAAT7B,IAA0B,KAAXtH,IAA8B,KAAbE,IACrDsQ,GAAwB,gDAEtBhU,EAAK2E,OAAS,GAAK2N,EAAe3N,OAAS,GAAK0O,GAAY1O,OAAS,GAAK4O,GAAa5O,OAAS,GAClF,KAAbgI,IAA4B,KAAT7B,IAA0B,KAAXtH,IAA8B,KAAbE,IAvBjC,mDA+BvB,IAJI/B,EAAW,IAAIsG,UAEVG,OAAO,gBAAiB+P,IAE7BnD,GAASrQ,OAAS,EACpB,IAASE,EAAI,EAAGA,EAAImQ,GAASrQ,OAAQE,IACjClD,EAASyG,OAAO,aAAc4M,GAASnQ,GAAImQ,GAASnQ,GAAG7E,MAjCtC,OAqCnBmU,EAAa,GArCM,oBAwCFC,GAAYzC,YAAYhQ,GAxCtB,eAwCrBwS,EAxCqB,iBAyCMvR,EAAY1B,WAAW,CAChDlB,OAAM8K,QAAMpH,YAAUF,UACtBmJ,YAAU2F,iBAAgBE,eAC1Ba,eAAaE,gBAAcb,yBAAwB3R,MACnD6R,mBAAkBE,iBAAgBE,2BAClC9J,MAAO8O,GAAStR,OAAOyN,KA9CJ,QAyCfmE,EAzCe,OAgDrBrI,QAAQC,IAAIoI,GACZ5O,EAAW,8BACXqO,EAAQO,GACRrW,EAAiBqW,GACjBzY,YAAW,WACT6J,EAAW,MACXpK,OAAO+U,SAASC,WACf,KAvDkB,mDAyDrB9V,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KA5DkB,2DAAH,sDAmFtB,OACE,yBAAKhB,UAAU,yBACb,yDACA,kBAAC,EAAD,CAAcF,QAASA,EAASC,KAAK,YACrC,kBAAC,EAAD,CAAcD,QAASiB,EAAchB,KAAK,UAC1C,0BAAMuC,SAAUuY,GAAkB7a,UAAU,eAC1C,6BACE,kBAAC,EAAD,CAAcF,QAASqM,GAAkBpM,KAAK,UAC9C,2BACEC,UAAU,aACVD,KAAK,OACLyG,aAAchE,EACdA,KAAK,OACLC,YAAY,sBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBgH,EAAQhH,EAAOJ,WAG7C,6BACE,kDACA,kBAAC,EAAD,CAAczC,QAASmW,GAA4BlW,KAAK,UACxD,kBAAC,GAAD,CAAUsU,QAASU,EAAmBT,MAAOe,EAAqB9S,MAAO6S,EAAkB2F,YAAY,wBAEzG,6BACE,yCACA,kBAAC,GAAD,CAAU1G,QAASY,EAAiBX,MAAOiB,EAAmBhT,MAAO+S,EAAgByF,YAAY,eAEnG,yBAAK/a,UAAU,gBACb,gDACA,kBAAC,GAAD,CAAUqU,QAASc,EAA2Bb,MAAOmB,EAA6BlT,MAAOiT,EAA0BuF,YAAY,sBAEjI,kBAAC,EAAD,CAAcjb,QAASyW,GAAsBxW,KAAK,UAClD,yBAAKC,UAAU,aACb,6BACE,4BAAQ+W,UAAQ,EAACxU,MAAOyD,GAAQtD,SAAU,SAACqD,GAAD,OAnIzB,SAACA,GAG1B,IAFA,IAAI6B,EAAU7B,EAAEpD,OAAOiF,QACnBoP,EAAS,GACJ3P,EAAI,EAAG8I,EAAIvI,EAAQT,OAAQE,EAAI8I,EAAG9I,IACrCO,EAAQP,GAAG4P,UAAiC,KAArBrP,EAAQP,GAAG9E,OACpCyU,EAAO5U,KAAKwF,EAAQP,GAAG9E,OAG3BqO,GAAUoG,GA2H+CE,CAAmBnR,IAAI/F,UAAU,mBAChF,4BAAQuC,MAAM,GAAGvC,UAAU,eAA3B,kCACCkI,EAAQxC,KAAI,SAAAM,GAAM,OAAI,4BAAQH,IAAKG,EAAOzC,GAAIhB,MAAOyD,EAAOzC,IAAKyC,EAAOxD,WAG7E,6BACE,4BAAQD,MAAO+K,GAAM5K,SAAU,SAACqD,GAAD,OAxJhB,SAACA,GAGxB,GAFA2P,GAAQ3P,EAAEpD,OAAOJ,OACjBoT,GAAY,IACR5P,EAAEpD,OAAOJ,MAAO,CAClB,IAAM4U,EAAYvQ,EAAMwQ,MAAK,SAAAxI,GAAC,OAAIA,EAAErL,KAAOwC,EAAEpD,OAAOJ,SACpDsQ,GAAcsE,EAAUhJ,yBAExB0E,GAAc,IAiJ8BwE,CAAiBtR,KACrD,4BAAQxD,MAAM,IAAd,oBACCqE,EAAMlB,KAAI,SAAA4H,GAAI,OAAI,4BAAQzH,IAAKyH,EAAK/J,GAAIhB,MAAO+K,EAAK/J,IAAK+J,EAAK9K,UAEjE,6BACA,4BAAQD,MAAO2D,GAAUxD,SAAU,SAACqD,GAAD,OAlJhB,SAACA,GAC5B4P,GAAY5P,EAAEpD,OAAOJ,OAiJ6B+U,CAAqBvR,KAC7D,4BAAQxD,MAAM,IAAd,aACCoE,GAAWjB,KAAI,SAAAQ,GAAQ,OAAI,4BAAQL,IAAKK,EAAS3C,GAAIhB,MAAO2D,EAAS3C,IAAK2C,EAAS1D,UAEtF,6BACA,4BAAQD,MAAO4M,GAAUzM,SAAU,SAACqD,GAAD,OAxIhB,SAACA,GAC5B6P,GAAY7P,EAAEpD,OAAOJ,OAuI6BgV,CAAqBxR,KAC7D,4BAAQxD,MAAM,IAAd,SACCgN,EAAU7J,KAAI,SAAAyJ,GAAQ,OAAI,4BAAQtJ,IAAKsJ,EAAS5L,GAAIhB,MAAO4M,EAAS5L,IAAK4L,EAAS3M,YAIzF,yBAAKxC,UAAU,WACb,6BACE,kBAAC,EAAD,CAAcF,QAASqW,GAAyBpW,KAAK,UACrD,2BACEC,UAAU,GACVD,KAAK,OACLyG,aAAcqP,GACdrT,KAAK,cACLC,YAAY,kBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBmT,GAAenT,EAAOJ,WAGpD,6BACE,kBAAC,EAAD,CAAczC,QAASuW,GAA0BtW,KAAK,UACtD,2BACEC,UAAU,GACVD,KAAK,OACLyG,aAAcuP,GACdvT,KAAK,eACLC,YAAY,8BACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBqT,GAAgBrT,EAAOJ,YAKvD,kBAAC,IAAD,CAAUyH,OA/FD,SAAC0B,GACdgP,GAAYlD,GAAStO,OAAOwC,OA+FrB,gBAAEzB,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACC,wBAASD,IACP,0BAAWC,KACX,yBAAKlK,UAAU,SACb,yBAAKA,UAAU,SAAf,kBACCwa,IAAYA,GAASrT,OAAS,GAC7B,kBAAC,IAAMsQ,SAAP,KACG+C,GAAS9U,KAAI,SAACiG,GAAD,OACZ,yBAAK9F,IAAK8F,GAAOA,EAAKC,UAAUD,EAAKE,QAAQ,KAAO,EAAGF,EAAKxE,QAAQ,0BAAMvB,QAAS,SAACG,GAAD,OApG3E,SAACA,EAAGvD,GAC9BuD,EAAEoE,kBACFsQ,GAAYD,GAAShT,QAAO,SAAAmE,GAAI,OAAIA,IAASnJ,MAC7CoY,GAAiBD,GAAczR,OAAO1G,IAiGsEwY,CAAoBjV,EAAG4F,IAAO3L,UAAU,qBAIvIwX,IAAYA,GAASrQ,OAAS,GAC7B,kBAAC,IAAMsQ,SAAP,KACGD,GAAS9R,KAAI,SAACiG,GAAD,OACZ,yBAAK9F,IAAK8F,EAAKnJ,MAAOmJ,EAAKnJ,KAAK,0BAAMoD,QAAS,SAACG,GAAD,OArGvC,SAACA,EAAGvD,GAC9BuD,EAAEoE,kBACFuQ,GAAYlD,GAAShQ,QAAO,SAAAmE,GAAI,OAAIA,EAAKnJ,OAASA,MAmGsByY,CAAoBlV,EAAG4F,EAAKnJ,OAAOxC,UAAU,0BASjH,6BACE,4BAAQD,KAAK,SAASC,UAAU,oBAAhC,YACA,4BAAQ4F,QAAS,WA7HvBsI,GAAiB,IA6H4BlO,UAAU,iBAAjD,eC7PKkb,GAVS,SAAC,GAAc,IAAZxG,EAAW,EAAXA,KAKzB,OACE,yBAAKyG,wBAJE,CAAEC,OAAO,GAAD,OAAK1G,OC+KT2G,GAzKF,SAAC,GAAoH,IAAlHC,EAAiH,EAAjHA,MAAOzZ,EAA0G,EAA1GA,KAAM+E,EAAoG,EAApGA,MAAOsB,EAA6F,EAA7FA,QAASqH,EAAoF,EAApFA,UAAW/K,EAAyE,EAAzEA,gBAAiBkS,EAAwD,EAAxDA,cAAejS,EAAyC,EAAzCA,iBAAkB0D,EAAuB,EAAvBA,iBAAuB,EAEvGrH,mBAAS,MAF8F,mBAExH2C,EAFwH,KAElH8W,EAFkH,OAGrFzZ,oBAAS,GAH4E,mBAGxHmN,EAHwH,KAGzGC,EAHyG,OAIjGpN,mBAAS,MAJwF,mBAIxHhB,EAJwH,KAI/GoM,EAJ+G,OAKvFpL,mBAAS,MAL8E,mBAKxHC,EALwH,KAK1GC,EAL0G,OAMvGF,mBAAS,IAN8F,mBAMxH0B,EANwH,KAMlHmH,EANkH,OAOvG7I,mBAAS,IAP8F,mBAOxH0I,EAPwH,KAOlHI,EAPkH,OAQrG9I,mBAAS,IAR4F,mBAQxH2I,EARwH,KAQjHI,EARiH,OASvG/I,mBAAS,IAT8F,mBASxHf,EATwH,KASlH+J,EATkH,OAUvGhJ,mBAAS,MAV8F,mBAUxH4I,GAVwH,KAUlHK,GAVkH,QAWzFjJ,oBAAS,GAXgF,qBAWxHya,GAXwH,MAW3GC,GAX2G,MAYzHja,GAAUC,cAEhBsD,qBAAU,WACRM,EAAY9B,WAAWgY,EAAMG,OAAOlY,IAAIyJ,MAAK,SAACxM,GAC5C+Z,EAAQ/Z,QAET,IAEH,IAwCMkb,GAAa,uCAAG,oCAAArb,EAAA,6DAChB8D,EAAW,IAAIsG,SAEbC,EAAczI,KAAKC,UAAU,CAAEM,OAAMgH,OAAMC,QAAO1J,OAAM0D,KAAMA,EAAKF,KACzEY,EAASyG,OAAO,cAAeF,GAE3BhB,IACFvF,EAASyG,OAAO,OAAQlB,GAAMA,GAAKlH,MAPjB,kBAWA4C,EAAYlB,QAAQC,EAAUV,EAAKF,IAXnC,OAWZoY,EAXY,OAYlBhS,EAAQ,IACRC,EAAQ,IACRC,EAAS,IACTC,EAAQ,IACRC,GAAQ,MACFe,EAAMhJ,OAAOiJ,IAAIC,gBAAgB,IAAIC,KAAK,CAAC0Q,GAAM,CACrD5b,KAAM,sBAEFmL,EAAOC,SAASC,cAAc,MAC/BC,KAAOP,EACZI,EAAKI,aAAa,WAAlB,UAAiC9I,EAAjC,SACA2I,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QAxBa,kDA0BlBzK,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KA7Be,0DAAH,qDAiCnB,OACE,6BACGiN,EACC,kBAAC,GAAD,CAAYC,iBAAkBA,EAAkBzK,KAAMA,EAAMmD,MAAOA,EAAOsB,QAASA,EAASqH,UAAWA,EAAWgL,QAASA,EAAS9V,iBAAkBA,IAEtJ,yBAAKzE,UAAU,6BACb,kBAAC,EAAD,CAAcF,QAASA,EAASC,KAAK,YACrC,kBAAC,EAAD,CAAcD,QAASiB,EAAchB,KAAK,UACzC0D,GACC,yBAAKzD,UAAU,kBACb,6BACE,4BAAKyD,EAAKjB,MACV,8BAAM,yBAAKxC,UAAU,gCAAgC8F,MAAM,qBAAeF,QAAS,SAACG,GAAD,OAAOvB,EAAgBuB,EAAGtC,OAC7G,kBAAC,GAAD,CAAQA,KAAMA,EAAMgB,iBAAkBA,KAExC,kDACA,kBAAC,GAAD,CAAiBiQ,KAAMjR,EAAKqR,iBAC5B,kDACA,kBAAC,GAAD,CAAiBJ,KAAMjR,EAAKyR,yBAC5B,iDACA,kBAAC,GAAD,CAAiBR,KAAMjR,EAAKuR,eAC5B,qCACCvR,EAAKuC,OAAON,KAAI,SAAAO,GAAC,OAAI,0BAAMJ,IAAKpC,EAAKF,GAAK0C,EAAE1C,IAAK0C,EAAEzD,KAAK,iCACzD,yCACA,2BAAIiB,EAAKyC,UAAYzC,EAAKyC,SAAS1D,MACnC,qDACA,2BAAIiB,EAAKmD,OAASnD,EAAKmD,MAAMpE,MAC7B,kEACA,2BAAIiB,EAAKoS,YAAY,6BAAOpS,EAAKsS,cACjC,wDACCtS,EAAK8B,SAAW,2BAAG,kBAAC,IAAD,CAAQ+D,OAAO,oBAAoB7F,EAAK8B,UAC5D,8CACC9B,EAAKiI,OAA+B,IAAtBjI,EAAKiI,MAAMvE,QAAgB,gCACzC1D,EAAKiI,OAASjI,EAAKiI,MAAMhG,KAAI,SAACiG,GAAD,OAC5B,yBAAK9F,IAAK8F,GACR,uBAAGN,KAAI,yDAAoDM,IACxDA,EAAKC,UAAUD,EAAKE,QAAQ,KAAO,EAAGF,EAAKxE,aAIjDoU,GACC,yBAAKvb,UAAU,oBACb,yBAAKA,UAAU,iBAAiB4F,QAAS,kBAAM4V,IAAe,KAA9D,SACA,kBAAC,EAAD,CACEhZ,KAAMA,EACNgH,KAAMA,EACNC,MAAOA,EACP1J,KAAMA,EACN2J,KAAMA,GACNC,QAASA,EACTC,QAASA,EACTC,SAAUA,EACVC,QAASA,EACTC,QAASA,KAEX,4BAAQnE,QAAS,kBAAM8V,OAAvB,qBAGF,yBAAK1b,UAAU,WAAW4F,QAAS,kBAAM4V,IAAe,KAAxD,oCAED3Z,GACC,yBAAK7B,UAAU,WACb,4BAAQ4F,QAAS,kBAAMsI,GAAiB,IAAOlO,UAAU,sBAAzD,WACCyD,EAAKmY,SAAW,4BAAQ5b,UAAU,gBAAgB4F,QAAS,kBAjHvD,WACnB,IACER,EAAYtB,WAAWL,EAAKF,IAC5B2I,EAAW,+BACXwK,EAAcjT,GACdpB,YAAW,WACT6J,EAAW,MACX3K,GAAQa,KAAK,YACZ,KACH,MAAO4V,GACPhX,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,MAoG2EiX,KAAjD,cACjB,4BAAQjY,UAAU,gBAAgB4F,QAAS,kBAzItC,WACnB,IACM9D,OAAO6G,QAAP,2CAA6ClF,EAAKjB,SACpD4C,EAAYxB,WAAWH,EAAKF,IAC5B4E,EAAiB1E,EAAKF,IACtB2I,EAAW,2BACX7J,YAAW,WACT6J,EAAW,MACPzI,EAAKmY,QACPra,GAAQa,KAAK,UAEbb,GAAQa,KAAK,OAEd,MAEL,MAAO4V,GACPhX,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,MAsH0D0H,KAAjD,eCXHmT,GAzIH,WAAO,IAAD,EACY/a,mBAAS,IADrB,mBACTgb,EADS,KACDC,EADC,OAEUjb,mBAAS,IAFnB,mBAETyD,EAFS,KAEF6B,EAFE,OAGQtF,mBAAS,MAHjB,mBAGTe,EAHS,KAGHhB,EAHG,OAIoBC,mBAAS,IAJ7B,mBAIT6F,EAJS,KAIGkM,EAJH,OAKU/R,mBAAS,IALnB,mBAKT8F,EALS,KAKF8G,EALE,OAMc5M,mBAAS,IANvB,mBAMToH,EANS,KAMA8T,EANA,OAOkBlb,mBAAS,IAP3B,mBAOTyO,EAPS,KAOEC,EAPF,KAQVjO,EAAUC,cAEhBsD,qBAAU,WACRM,EAAYtC,WAAWkK,MAAK,SAACxM,GAC3B4F,EAAS5F,MAEX,IAAMoX,EAAiB9V,OAAOC,aAAa8V,QAAQ,cACnD,GAAID,EAAgB,CAClB,IAAME,EAAa7V,KAAK8V,MAAMH,GAC9B/W,EAAQiX,GACR3V,EAAsB2V,EAAWpX,OAGnC,IADcoB,OAAOC,aAAa8V,QAAQ,SAC9B,CAEV/V,OAAOC,aAAaC,QAAQ,QAASC,KAAKC,UAD5B,KAGhB,IAAM+Z,EAAana,OAAOC,aAAa8V,QAAQ,UAE/C,GAAIoE,EAAY,CACd,IAAMC,EAAcja,KAAK8V,MAAMkE,GAC/BF,EAAUG,GAGZ7I,GAAgBhB,gBAAgBrF,MAAK,SAACxM,GACpCqS,EAAcrS,MAGhB8Q,GAAchB,YAAYtD,MAAK,SAACxM,GAC9Bwb,EAAWxb,MAGbiO,GAAYrB,WAAWJ,MAAK,SAACxM,GAC3BkN,EAASlN,MAGXwP,GAAgBf,eAAejC,MAAK,SAAAxM,GAClCgP,EAAahP,QAEd,IAEHsE,qBAAU,WACRhD,OAAOC,aAAaC,QAClB,SAAUC,KAAKC,UAAU4Z,MAE1B,CAACA,IAEJ,IAQMpF,EAAgB,SAACjT,GACrB2C,EAAS7B,EAAM2E,OAAOzF,KAGlBgB,EAAmB,SAACqW,GACxB1U,EAAS7B,EAAMmB,KAAI,SAAAjC,GAAI,OAAIA,EAAKF,KAAOuX,EAAavX,GAAKE,EAAOqX,MAChEiB,EAAUD,EAAOpW,KAAI,SAAAjC,GAAI,OAAIA,EAAKF,KAAOuX,EAAavX,GAAKE,EAAOqX,OAG9D3S,EAAmB,SAAC5E,GACxB6C,EAAS7B,EAAMiD,QAAO,SAAAmD,GAAC,OAAIA,EAAEpH,KAAOA,MACpCwY,EAAUD,EAAOtU,QAAO,SAAAmD,GAAC,OAAIA,EAAEpH,KAAOA,OAGlCiB,EAAkB,SAACuB,EAAGtC,GAC1BsC,EAAEpE,iBACFoE,EAAEoE,kBACgB2R,EAAO1E,MAAK,SAAAzM,GAAC,OAAIA,EAAEpH,KAAOE,EAAKF,OAE/CwY,EAAUD,EAAO5S,OAAOzF,KAItB6G,EAAuB,SAAC/G,GAC5BwY,EAAUD,EAAOtU,QAAO,SAAA/D,GAAI,OAAIA,EAAKF,KAAOA,OAGxCgH,EAAsB,WAC1BwR,EAAU,KAGZ,OACE,6BACE,yBAAK/b,UAAU,UACb,kBAAC,IAAD,CAAM2F,GAAG,KAAI,yBAAK3F,UAAU,UAC5B,kBAAC,IAAD,CAAM2F,GAAG,aAAY,4BAAQ3F,UAAU,yBAAlB,mBACrB,kBAAC,IAAD,CAAM2F,GAAG,kBAAiB,4BAAQ3F,UAAU,yBAAlB,8BAEhB,OAAT6B,EACC,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAM8D,GAAG,kBAAiB,4BAAQ3F,UAAU,uBAAlB,cAG5B,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAM2F,GAAG,UAAS,4BAAQ3F,UAAU,uBAAlB,UAClB,6BACE,yBAAKA,UAAU,UAAf,iBAAsC,kBAAC,IAAD,CAAM2F,GAAG,WAAW3F,UAAU,mBAAmB6B,EAAKZ,WAC5F,yBAAKjB,UAAU,UAAS,4BAAQA,UAAU,uBAAuB4F,QAAS,kBAtDpF9D,OAAOC,aAAaoa,WAAW,cAC/Btb,EAAQ,MACRsB,EAAsB,MACtBZ,EAAQa,KAAK,UACbN,OAAO+U,SAASC,WAkDkB,oBAI9B,kBAAC,IAAD,CAAMnR,GAAG,qBAAoB,yBAAK3F,UAAU,gBAAgB8b,EAAO3U,OAAS,GAAK,0BAAMnH,UAAU,6BAA6B8b,EAAO3U,WAEvI,yBAAKnH,UAAU,6BACb,kBAAC,IAAD,CAAM2F,GAAG,aAAY,4BAAQ3F,UAAU,yBAAlB,mBACrB,kBAAC,IAAD,CAAM2F,GAAG,kBAAiB,4BAAQ3F,UAAU,yBAAlB,8BAChB,OAAT6B,GAAiB,kBAAC,IAAD,CAAM8D,GAAG,UAAS,4BAAQ3F,UAAU,uBAAlB,WAEtC,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAOoc,OAAK,EAACC,KAAK,IAAI1H,OAAQ,kBAAM,kBAAC,EAAD,CAAWpQ,MAAOA,EAAOC,gBAAiBA,EAAiBC,iBAAkBA,OACjH,kBAAC,IAAD,CAAO2X,OAAK,EAACC,KAAK,eAAe1H,OAAQ,SAAC2G,GAAD,OAAW,kBAAC,GAAD,iBAAUA,EAAV,CAAiBzZ,KAAMA,EAAM+E,MAAOA,EAAOsB,QAASA,EAASqH,UAAWA,EAAW/K,gBAAiBA,EAAiBkS,cAAeA,EAAejS,iBAAkBA,EAAkB0D,iBAAkBA,QAC7P,kBAAC,IAAD,CAAOkU,KAAK,YAAY1H,OAAQ,kBAAM,kBAAC,EAAD,CAAU9S,KAAMA,EAAMoG,cAAe1D,EAAOoC,WAAYA,EAAYC,MAAOA,EAAOsB,QAASA,EAAS1D,gBAAiBA,EAAiBC,iBAAkBA,EAAkB0D,iBAAkBA,OAClO,kBAAC,IAAD,CAAOkU,KAAK,oBAAoB1H,OAAQ,kBAAM,kBAAC,EAAD,CAAQpQ,MAAOuX,EAAQxR,qBAAsBA,EAAsBC,oBAAqBA,EAAqB9F,iBAAkBA,OAC7K,kBAAC,IAAD,CAAO4X,KAAK,iBAAiB1H,OAAQ,kBAAM,kBAAC,EAAD,CAAO9T,QAASA,OAC3D,kBAAC,IAAD,CAAOwb,KAAK,iBAAiB1H,OAAQ,kBAAM,kBAAC,GAAD,CAAS/N,MAAOA,EAAOsB,QAASA,EAASqH,UAAWA,OAC/F,kBAAC,IAAD,CAAO8M,KAAK,WAAW1H,OAAQ,kBAAO5S,aAAa8V,QAAQ,cAAgB,kBAAC,GAAD,CAAMhW,KAAMA,EAAMhB,QAASA,IAAc,kBAAC,IAAD,CAAU8E,GAAG,SACjI,kBAAC,IAAD,CAAO0W,KAAK,SAAS1H,OAAQ,kBAAO5S,aAAa8V,QAAQ,cAAgB,kBAAC,GAAD,CAAOnB,cAAeA,EAAejS,iBAAkBA,EAAkB0D,iBAAkBA,IAAuB,kBAAC,IAAD,CAAUxC,GAAG,SACxM,kBAAC,IAAD,CAAO0W,KAAK,eAAe1H,OAAQ,kBAAO5S,aAAa8V,QAAQ,cAAgB,kBAAC,EAAD,MAAe,kBAAC,IAAD,CAAUlS,GAAG,SAC3G,kBAAC,IAAD,CAAO0W,KAAK,0BAA0B1H,OAAQ,kBAAO5S,aAAa8V,QAAQ,cAAgB,kBAAC,GAAD,CAAiBjR,MAAOA,EAAOD,WAAYA,EAAY4I,UAAWA,EAAWvJ,OAAQkC,EAASwF,SAAUA,EAAUmF,cAAeA,EAAerD,aAAcA,EAAcwM,WAAYA,IAAiB,kBAAC,IAAD,CAAUrW,GAAG,Y,OChJxT2W,IAAS3H,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEFxJ,SAASoR,eAAe,W","file":"static/js/main.b8f183e9.chunk.js","sourcesContent":["import React from 'react'\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/login`\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","let token = null\n\nconst getToken = () => token\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nexport default { getToken, setToken }\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Notification from './Notification'\nimport loginService from '../services/login'\nimport tokenService from '../services/token'\n\nconst Login = ({ setUser }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const history = useHistory()\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, email, password,\n      })\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user),\n      )\n      setUser(user)\n      tokenService.setToken(user.token)\n      setUsername('')\n      setEmail('')\n      setPassword('')\n      history.push('/')\n    } catch (exception) {\n      setErrorMessage('Väärä käyttäjätunnus/salasana')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"login-form\">\n      <h2>Kirjaudu sisään</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleLogin}>\n        <div>\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            placeholder=\"Salasana\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"login-button\">Kirjaudu</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Login\n","import React from 'react'\n\nconst FrontPageInfo = () => {\n\n  return (\n    <div className=\"frontpage-info\">\n      <h2>Kisatehtäväpankki</h2>\n      <p>Kisatehtäväpankki on arkisto,\n      johon voidaan tallettaa tehtäviä.\n      Sivustolle voi tallettaa tehtävän,\n      sekä siihen liittyvät liitetiedostot.\n      </p>\n      <p>\n        Kirjautumattomana käyttäjänä voit\n        koostaa tehtävistä kisaa varten\n        kokonaisuuksia, sekä ladata ne\n        PDF-tiedostona itsellesi. Tehtävän lisääminen \"kisakoriin\"\n        onnistuu painamalla tehtävässä esiintyvää koripainiketta,\n        ja jo mukaan otetut tehtävät löydät yläreunan koria painamalla.\n      </p>\n      <p>\n        Voit myöskin selailla tehtäviä, arvostella tehtäviä\n        ja lisätä uusia tehtäviä. Uuden tehtävän lisääminen arkistoon\n        vaatii ensin ylläpitäjän hyväksynnän uudelle tehtävälle.\n      </p>\n    </div>\n  )\n}\n\nexport default FrontPageInfo","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/task`\nconst baseUrlPending = `${process.env.REACT_APP_API_URL}/task/pending`\n\n\nconst getTasks = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getPendingTasks = async () => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  const response = await axios.get(baseUrlPending, config)\n  return response.data\n}\n\nconst getSearchedTasks = async (search) => {\n  const response = await axios.post(`${baseUrl}/search`, search)\n  return response.data\n}\n\nconst getOneTask = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst addtask = async (task) => {\n  let config = null\n  const token = tokenService.getToken()\n\n  if (token) {\n    config = {\n      headers: { Authorization: token }\n    }\n  }\n\n  const response = await axios.post(baseUrl, task, config)\n  return response.data\n}\n\nconst updateTask = async (task) => {\n  let config = null\n  const token = tokenService.getToken()\n\n  if (token) {\n    config = {\n      headers: { Authorization: token },\n    }\n  }\n\n  const response = await axios.put(`${baseUrl}/${task.id}`, task, config)\n  return response.data\n}\n\nconst deleteTask = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nconst acceptTask = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  const response = await axios.put(`${baseUrl}/${id}/accept`, id, config)\n  return response.data\n}\n\nconst addRating = async (id, rating) => {\n\n  const response = await axios.post(`${baseUrl}/${id}/rate`, rating)\n  return response.data\n}\n\nconst updateViews = async (id) => {\n  const response = await axios.post(`${baseUrl}/${id}/views`)\n  return response.data\n}\n\nconst makePDF = async (formData, id) => {\n  const config = {\n    headers: { 'Content-Type': 'multipart/form-data' },\n    responseType: 'blob'\n  }\n\n  const response = await axios.post(`${baseUrl}/${id}/pdf`, formData, config)\n  return response.data\n}\n\nconst makePDFs = async (formData) => {\n  const config = {\n    headers: { 'Content-Type': 'multipart/form-data' },\n    responseType: 'blob'\n  }\n\n  const response = await axios.post(`${baseUrl}/pdf`, formData, config)\n  return response.data\n}\n\nexport default { addtask, getTasks, getOneTask, getSearchedTasks, updateTask, deleteTask, getPendingTasks, acceptTask, updateViews, addRating, makePDF, makePDFs }\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport FrontPageInfo from './FrontPageInfo'\nimport taskService from '../services/task'\n\nconst FrontPage = ({ tasks, addTaskToBasket, handleUpdateTask }) => {\n  const [newTasks, setNewTasks] = useState([])\n  const [favoriteTasks, setFavoriteTasks] = useState([])\n\n  useEffect(() => {\n    setNewTasks([...tasks].sort(compareCreated).slice(0, 5))\n    setFavoriteTasks([...tasks].sort(compareRatings).slice(0, 5))\n  }, [tasks])\n\n  const handleUpdateViews = async (task) => {\n    try {\n      await taskService.updateViews(task.id)\n      handleUpdateTask({ ...task, views: task.views + 1 })\n    } catch (exeption) {\n    }\n  }\n\n  const compareCreated = (a, b) => {\n    return b.created.localeCompare(a.created)\n  }\n\n  const compareRatings = (a, b) => {\n    return b.ratingsAVG - a.ratingsAVG\n  }\n\n  return (\n    <div className=\"frontpage\">\n      <h1>Tervetuloa Kisatehtäväpankkiin!</h1>\n      <div className=\"task-list frontpage-container\">\n        <FrontPageInfo />\n        <div className=\"new-favorite-lists\">\n\n          <div className=\"new-list\">\n            <div className=\"image-on-background\">\n              <h2>Uusimmat tehtävät</h2>\n              <div className=\"task-list-title frontpage-item\">\n                <span >Tehtävän nimi</span>\n                <span>Sarja</span>\n                <span>Kategoria</span>\n                <span></span>\n              </div>\n            </div>\n            {newTasks.map((task) => (\n              <Link className=\"no-underline\" to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task)} key={task.id}>\n                <div className=\"task-list-item frontpage-item new-item\">\n                  <div className=\"black-basket-mobile\" title=\"Lisää koriin\" onClick={(e) => addTaskToBasket(e, task)} />\n                  <span className=\"span-bigger\">\n                    <p className=\"bigger-task-name-frontpage\">{task.name}</p>\n                    <p>Katselukertoja: {task.views}</p>\n                  </span>\n                  <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n                  <span>{task.category && task.category.name}</span>\n                  <span><div className=\"black-basket\" title=\"Lisää koriin\" onClick={(e) => addTaskToBasket(e, task)} /></span>\n                </div>\n              </Link>\n            ))}\n          </div>\n\n          <div className=\"favorite-list\">\n            <div className=\"image-on-background\">\n              <h2>Suosituimmat tehtävät</h2>\n              <div className=\"task-list-title frontpage-item\">\n                <span>Tehtävän nimi</span>\n                <span>Sarja</span>\n                <span>Kategoria</span>\n                <span></span>\n              </div>\n            </div>\n            {favoriteTasks.map((task) => (\n              <Link className=\"no-underline\" to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task)} key={task.id}>\n                <div className=\"task-list-item frontpage-item favorite-item\">\n                  <div className=\"black-basket-mobile\" title=\"Lisää koriin\" onClick={(e) => addTaskToBasket(e, task)} />\n                  <span className=\"span-bigger\">\n                    <p className=\"bigger-task-name-frontpage\">{task.name}</p>\n                    <p>Katselukertoja: {task.views}</p>\n                  </span>\n                  <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n                  <span>{task.category && task.category.name}</span>\n                  <span><div className=\"black-basket\" title=\"Lisää koriin\" onClick={(e) => addTaskToBasket(e, task)} /></span>\n                </div>\n              </Link>\n            ))}\n\n          </div>\n        </div>\n      </div>\n      <footer>\n        <p>Kuva: Suomen Partiolaiset/Eeva Helle</p>\n      </footer>\n    </div>\n  )\n}\n\nexport default FrontPage\n","import React, { useState } from 'react'\nimport taskService from '../services/task'\nimport Notification from './Notification'\n\nconst Search = ({ setTasks, setAllTasks }) => {\n\n  const [search, setSearch] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const handleSearch = async (event) => {\n    event.preventDefault()\n    try {\n      const response = await taskService.getSearchedTasks({ search })\n      setTasks(response)\n      setAllTasks(response)\n    } catch (exception) {\n      setErrorMessage('Haku ei onnistunut')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"search\">\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleSearch} className=\"search-form\">\n        <input\n          className=\"search-input\"\n          type=\"text\"\n          defaultValue=''\n          name=\"search\"\n          placeholder=\"Hakutermi\"\n          onChange={({ target }) => setSearch(target.value)}\n        />\n        <button type=\"submit\" className=\"search-tasks-button\">Hae</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Search","import React, { useState, useEffect, Fragment } from 'react'\nimport Select from 'react-select'\n\n\nconst Filter = ({ allTasks, categories, rules, series, tasks, setTasks }) => {\n\n  const [selectedCategory, setSelectedCategory] = useState([])\n  const [selectedSeries, setSelectedSeries] = useState([])\n  const [selectedRules, setSelectedRules] = useState('')\n\n\n  useEffect(() => {\n    if (selectedSeries.length > 0 && selectedCategory.length > 0 && selectedRules) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedSeries.length > 0 && selectedCategory.length > 0) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedSeries.length > 0 && selectedRules) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedCategory.length > 0 && selectedRules) {\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id) && task.rules.id === selectedRules.id))\n    } else if (selectedSeries.length > 0) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedCategory.length > 0) {\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id)))\n    } else if (selectedRules) {\n      setTasks(allTasks.filter(task => task.rules.id === selectedRules.id))\n    } else {\n      setTasks(allTasks)\n    }\n  }, [selectedCategory, selectedSeries, selectedRules])\n\n  const handleSeriesFiltering = (series) => {\n    if (series && series.length > 0) {\n      setSelectedSeries(series.map(s => s.id))\n    } else {\n      setSelectedSeries([])\n      setTasks(allTasks)\n    }\n  }\n\n  const handleCategoryFiltering = (category) => {\n    if (category && category.length > 0) {\n      setSelectedCategory(category.map(c => c.id))\n    } else {\n      setSelectedCategory([])\n      setTasks(allTasks)\n    }\n  }\n\n  const handleRuleFiltering = (rules) => {\n    if (rules) {\n      setSelectedRules(rules)\n    } else {\n      setSelectedRules('')\n      setTasks(allTasks)\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className=\"filter\">\n        <Select\n          name=\"filter-series\"\n          getOptionLabel={option => `${option.name}`}\n          getOptionValue={option => `${option.id}`}\n          onChange={handleSeriesFiltering}\n          options={series}\n          isClearable={true}\n          placeholder={\"Sarja\"}\n          isMulti={true}\n        />\n      </div>\n\n      <div className=\"filter\">\n        <Select\n          name=\"filter-category\"\n          getOptionLabel={option => `${option.name}`}\n          getOptionValue={option => `${option.id}`}\n          onChange={handleCategoryFiltering}\n          options={categories}\n          isClearable={true}\n          placeholder={\"Kategoria\"}\n          isMulti={true}\n        />\n      </div>\n\n      <div className=\"filter\">\n        <Select\n          name=\"filter-rules\"\n          getOptionLabel={option => `${option.name}`}\n          getOptionValue={option => `${option.id}`}\n          onChange={handleRuleFiltering}\n          options={rules}\n          isClearable={true}\n          placeholder={\"Säännöt\"}\n        />\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Filter","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport taskService from '../services/task'\nimport Notification from './Notification'\nimport Search from './Search'\nimport StarRatings from 'react-star-ratings'\nimport Filter from './Filter'\nimport Moment from 'react-moment'\n\nconst TaskList = ({ user, originalTasks, categories, rules, seriess, addTaskToBasket, handleUpdateTask, handleDeleteTask }) => {\n  const [tasks, setTasks] = useState(originalTasks)\n  const [allTasks, setAllTasks] = useState(originalTasks)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [nameAsc, setNameAsc] = useState(false)\n  const [ratingDesc, setRatingDesc] = useState(false)\n  const [dateDesc, setDateDesc] = useState(false)\n\n  useEffect(() => {\n    setTasks(originalTasks)\n    setAllTasks(originalTasks)\n  }, [originalTasks])\n\n  const handleUpdateViews = async (task) => {\n    try {\n      await taskService.updateViews(task.id)\n      handleUpdateTask({ ...task, views: task.views + 1 })\n    } catch (exeption) {\n    }\n  }\n\n  const handleDelete = async (e, task) => {\n    e.preventDefault()\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\n        await taskService.deleteTask(task.id)\n        handleDeleteTask(task.id)\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSortByName = () => {\n    if (nameAsc) {\n      setTasks(tasks.sort(compareNamesDesc).concat([]))\n    } else {\n      setTasks(tasks.sort(compareNamesAsc).concat([]))\n    }\n    setNameAsc(!nameAsc)\n  }\n\n  const handleSortByRating = () => {\n    if (ratingDesc) {\n      setTasks(tasks.sort(compareRatingsAsc).concat([]))\n    } else {\n      setTasks(tasks.sort(compareRatingsDesc).concat([]))\n    }\n    setRatingDesc(!ratingDesc)\n  }\n\n  const handleSortByDate = () => {\n    if (dateDesc) {\n      setTasks(tasks.sort(compareCreatedAsc).concat([]))\n    } else {\n      setTasks(tasks.sort(compareCreatedDesc).concat([]))\n    }\n    setDateDesc(!dateDesc)\n  }\n\n  const handleSortByNameAsc = () => {\n    setTasks(tasks.sort(compareNamesAsc).concat([]))\n  }\n\n  const handleSortByNameDesc = () => {\n    setTasks(tasks.sort(compareNamesDesc).concat([]))\n  }\n\n  const handleSortByRatingsAsc = () => {\n    setTasks(tasks.sort(compareRatingsAsc).concat([]))\n  }\n\n  const handleSortByRatingsDesc = () => {\n    setTasks(tasks.sort(compareRatingsDesc).concat([]))\n  }\n\n  const handleSortByCreatedAsc = () => {\n    setTasks(tasks.sort(compareCreatedAsc).concat([]))\n  }\n\n  const handleSortByCreatedDesc = () => {\n    setTasks(tasks.sort(compareCreatedDesc).concat([]))\n  }\n\n  const compareNamesAsc = (a, b) => {\n    return a.name.localeCompare(b.name)\n  }\n\n  const compareNamesDesc = (a, b) => {\n    return b.name.localeCompare(a.name)\n  }\n\n  const compareRatingsAsc = (a, b) => {\n    return a.ratingsAVG - b.ratingsAVG\n  }\n\n  const compareRatingsDesc = (a, b) => {\n    return b.ratingsAVG - a.ratingsAVG\n  }\n\n  const compareCreatedAsc = (a, b) => {\n    return a.created.localeCompare(b.created)\n  }\n\n  const compareCreatedDesc = (a, b) => {\n    return b.created.localeCompare(a.created)\n  }\n\n  return (\n    <div className=\"task-list\">\n      <h1>Kisatehtäväpankki</h1>\n      <div className=\"search-filter-container\">\n        <Search\n          setTasks={setTasks}\n          setAllTasks={setAllTasks}\n        />\n        <Filter\n          tasks={tasks}\n          allTasks={allTasks}\n          categories={categories}\n          rules={rules}\n          series={seriess}\n          setTasks={setTasks}\n        />\n      </div>\n\n      <Notification message={errorMessage} />\n      {tasks && tasks.length > 0 &&\n        <div className=\"task-list-title\">\n          <span className=\"arrow-inline\"><div onClick={handleSortByName}>Tehtävän nimi</div><div className=\"arrow-container\"><i className=\"name-arrow-up\" onClick={handleSortByNameDesc} /><i className=\"name-arrow-down\" onClick={handleSortByNameAsc} /></div></span>\n          <span>Sarja</span>\n          <span>Kategoria</span>\n          <span className=\"arrow-inline\"><div onClick={handleSortByRating}>Arvostelu</div><div className=\"arrow-container\"><i className=\"rating-arrow-up\" onClick={handleSortByRatingsAsc} /><i className=\"rating-arrow-down\" onClick={handleSortByRatingsDesc} /></div></span>\n          <span className=\"arrow-inline\"><div onClick={handleSortByDate}>Lisätty</div><div className=\"arrow-container\"><i className=\"created-arrow-up\" onClick={handleSortByCreatedAsc} /><i className=\"created-arrow-down\" onClick={handleSortByCreatedDesc} /></div></span>\n          {user && <span></span>}\n          <span></span>\n        </div>\n      }\n      {tasks.map((task) => (\n        <Link className=\"no-underline\" to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task)} key={task.id}>\n          <div className=\"task-list-item\">\n            <div className=\"black-basket-mobile\" title=\"Lisää koriin\" onClick={(e) => addTaskToBasket(e, task)} />\n            <span className=\"span-bigger\">\n              <p className=\"bigger-task-name\">{task.name}</p>\n              <p>Katselukertoja: {task.views}</p>\n            </span>\n            <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n            <span>{task.category && task.category.name}</span>\n            <span>\n              <StarRatings\n                rating={task.ratingsAVG}\n                starRatedColor=\"#f0e105\"\n                starDimension=\"20px\"\n                starSpacing=\"10px\"\n              />\n            </span>\n            {task.created && <span><Moment format=\"DD.MM.YYYY HH:mm\">{task.created}</Moment></span>}\n            {user && <span className=\"task-list-delete\"><button className=\"delete-button\" onClick={(e) => handleDelete(e, task)}>Poista</button></span>}\n            <span><div className=\"black-basket\" title=\"Lisää koriin\" onClick={(e) => addTaskToBasket(e, task)} /></span>\n          </div>\n        </Link>\n      ))}\n\n    </div>\n\n  )\n}\n\nexport default TaskList\n\n","import React, { useState } from 'react'\nimport Dropzone from 'react-dropzone'\nimport Notification from './Notification'\n\nconst Competition = ({ name, date, place, type, logo, setName, setDate, setPlace, setType, setLogo }) => {\n\n  const onDrop = (logo) => {\n    setLogo(logo[0])\n  }\n\n  const handleDeleteLogo = (e) => {\n    e.stopPropagation()\n    setLogo(null)\n  }\n\n  return (\n    <div>\n      <h2 className=\"basket-title\">Kisan tiedot</h2>\n\n      <div className=\"competition\">\n        <input\n          className=\"competition-name\"\n          type=\"text\"\n          value={name}\n          name=\"Name\"\n          placeholder=\"Kisan nimi\"\n          onChange={({ target }) => setName(target.value)}\n        />\n\n        <input\n          className=\"competition-date\"\n          type=\"text\"\n          value={date}\n          name=\"Name\"\n          placeholder=\"Kisan päivämäärä\"\n          onChange={({ target }) => setDate(target.value)}\n        />\n\n        <input\n          className=\"competition-place\"\n          type=\"text\"\n          value={place}\n          name=\"Name\"\n          placeholder=\"Kisapaikka\"\n          onChange={({ target }) => setPlace(target.value)}\n        />\n\n        <input\n          className=\"competition-type\"\n          type=\"text\"\n          value={type}\n          name=\"Name\"\n          placeholder=\"Kisan laji\"\n          onChange={({ target }) => setType(target.value)}\n        />\n      </div>\n\n      <Dropzone onDrop={onDrop}>\n        {({getRootProps, getInputProps}) => (\n          <div {...getRootProps()}>\n            <input {...getInputProps()} />\n            <div className=\"files\">\n              <div className=\"title\">Logo</div>\n              {logo && <div key={logo.name}>{logo.name}<span onClick={(e) => handleDeleteLogo(e)} className=\"remove-file\" /></div>}\n            </div>\n          </div>\n        )}\n      </Dropzone>\n\n    </div>\n\n  )\n}\n\nexport default Competition\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport Notification from './Notification'\nimport Competition from './Competition'\nimport taskService from '../services/task'\n\nconst Basket = ({ tasks, removeTaskFromBasket, handleUpdateTask, removeAllFromBasket }) => {\n\n  const handleUpdateViews = async (task) => {\n    try {\n      await taskService.updateViews(task.id)\n      handleUpdateTask({ ...task, views: task.views + 1 })\n    } catch (exeption) {\n    }\n  }\n\n  const [name, setName] = useState('')\n  const [date, setDate] = useState('')\n  const [place, setPlace] = useState('')\n  const [type, setType] = useState('')\n  const [logo, setLogo] = useState(null)\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const handleMakePDFs = async (e) => {\n    let formData = new FormData()\n\n    const competition = JSON.stringify({ name, date, place, type, tasks: tasks.map(t => t.id) })\n    formData.append('competition', competition )\n\n    if (logo) {\n      formData.append('logo', logo, logo.name)\n    }\n    \n    try {\n      const PDFs = await taskService.makePDFs(formData)\n      setName('')\n      setDate('')\n      setPlace('')\n      setType('')\n      setLogo(null)\n      const url = window.URL.createObjectURL(new Blob([PDFs], {\n        type: 'application/zip'\n      }))\n      const link = document.createElement('a')\n      link.href = url\n      link.setAttribute('download', 'Rastit.zip')\n      document.body.appendChild(link)\n      link.click()\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"task-list\">\n      <Notification message={errorMessage} type=\"error\" />\n\n      {tasks && tasks.length > 0 && \n        <Competition\n          name={name}\n          date={date}\n          place={place}\n          type={type}\n          logo={logo}\n          setName={setName}\n          setDate={setDate}\n          setPlace={setPlace}\n          setType={setType}\n          setLogo={setLogo}\n        />\n      }\n\n      <h2 className=\"basket-title\">Kisaan valitut tehtävät</h2>\n\n      {tasks && tasks.length > 0 && <button className=\"basket-delete-all\" onClick={removeAllFromBasket}>Poista kaikki</button>}\n\n      {tasks && tasks.length === 0 && <div className=\"empty-basket\">Ei valittuja tehtäviä</div>}\n\n      {tasks && tasks.length > 0 &&\n        <div className=\"task-list-title\">\n          <span>Tehtävän nimi</span>\n          <span>Sarja</span>\n          <span>Kategoria</span>\n          <span>Liitetiedostot</span>\n          <span></span>\n        </div>\n      }\n\n      {tasks.map((task) => (\n        <div className=\"task-list-item\" key={task.id}>\n          <div className=\"delete-task-from-basket-mobile\" onClick={() => removeTaskFromBasket(task.id)} />\n          <span>\n            <Link to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task)}>\n              {task.name}\n            </Link>\n            <p>Katselukertoja: {task.views}</p>\n          </span>\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n          <span>{task.category && task.category.name}</span>\n          <span>\n            {task.files && task.files.map((file) => (\n                <div key={file}>\n                  <a href={`https://kisapankki.blob.core.windows.net/files/${file}`}>\n                    {file.substring(file.indexOf('-') + 1, file.length)}\n                  </a>\n                </div>\n              ))}\n          </span>\n          <span className=\"delete-task-from-basket\" onClick={() => removeTaskFromBasket(task.id)} />\n        </div>\n      ))}\n      {tasks && tasks.length > 0 && <div className=\"make-pdfs\"><button onClick={handleMakePDFs}>Tee PDF-tiedostot</button></div>}\n    </div>\n  )\n}\n\nexport default Basket\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/user`\n\nconst getUsers = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addUser = async (credentials) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() }\n  }\n  const response = await axios.post(baseUrl, credentials, config)\n  return response.data\n}\n\nconst editUser = async (user) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() }\n  }\n\n  const response = await axios.put(baseUrl, user, config)\n  return response.data\n}\n\nexport default { addUser, getUsers, editUser }\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst AddAdmin = () => {\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(null)\n  const [emailErrorMessage, setEmailErrorMessage] = useState(null)\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [users, setUsers] = useState([])\n  const [email, setEmail] = useState('')\n  const [allowNotifications, setAllowNotifications] = useState(true)\n\n  useEffect(() => {\n    userService.getUsers().then((response) => {\n      setUsers(response)\n    })\n  }, [])\n\n  const handleAddAdmin = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setUsernameErrorMessage(null)\n    setPasswordErrorMessage(null)\n    setEmailErrorMessage(null)\n    if (name.length < 3) {\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\n    }\n    if (username.length < 3) {\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\n    }\n    if (password.length < 3) {\n      setPasswordErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\n    }\n    if (users.some((user) => (user.username === username))) {\n      setUsernameErrorMessage('Käyttäjätunnus on varattu')\n    }\n\n    if (name.length < 3 || username.length < 3 || password.length < 3\n      || users.some((user) => (user.username === username))) {\n      return\n    }\n    try {\n      await userService.addUser({\n        name, username, email, password, allowNotifications\n      })\n      setName('')\n      setUsername('')\n      setEmail('')\n      setPassword('')\n      setAllowNotifications(true)\n      setMessage('Ylläpitäjä lisätty!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setErrorMessage('Lisääminen epäonnistui')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"signup-form\">\n      <h2>Lisää ylläpitäjä</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleAddAdmin}>\n        <div className=\"Testi\">\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={usernameErrorMessage} type=\"error\" />\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={emailErrorMessage} type=\"error\" />\n          <input\n            className=\"email\"\n            type=\"email\"\n            value={email}\n            name=\"email\"\n            placeholder=\"Sähköpostiosoite\"\n            onChange={({ target }) => setEmail(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={passwordErrorMessage} type=\"error\" />\n          <input\n            className=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            placeholder=\"Salasana\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <div>\n          <label>\n            Vastaanota ilmoituksia:\n            <div className=\"admin-radio\" onChange={({ target }) => setAllowNotifications(target.value)}>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"notifications\"\n                  value={true}\n                  defaultChecked\n                />\n                Kyllä\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"notifications\"\n                  value={false}\n                />\n                Ei\n              </label>\n            </div>\n          </label>\n        </div>\n        <button type=\"submit\" className=\"signup-button\">Lisää</button>\n      </form>\n    </div>\n  )\n}\n\nexport default AddAdmin\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/rule`\n\nconst getRules = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addRule = async (rule) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, rule, config)\n  return response.data\n}\n\nconst editRule = async (rule) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${rule.id}`, rule, config)\n  return response.data\n\n}\n\nconst deleteRule = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addRule, getRules, editRule, deleteRule }\n","import React, { useState, Fragment } from 'react'\nimport Notification from './Notification'\nimport ruleService from '../services/rule'\nimport Select from 'react-select'\n\nconst Rule = ({ rules, setRules, categories }) => {\n  const [newRuleName, setNewRuleName] = useState('')\n  const [modifiedRuleName, setModifiedRuleName] = useState('')\n  const [modifiedRuleId, setModifiedRuleId] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n  const [acceptedCategories, setAcceptedCategories] = useState([])\n  const [modifiedCategories, setModifiedCategories] = useState([])\n  const [isClearable, setIsClearable] = useState(true)\n\n  const handleRuleAdd = async (event) => {\n    event.preventDefault()\n    const newCategories = acceptedCategories\n    try {\n      const addedRule = await ruleService.addRule({\n        rules: newRuleName, acceptedCategories: acceptedCategories.map(category => category.id)\n      })\n      setNewRuleName('')\n      setAcceptedCategories([])\n      setRules(rules.concat({ ...addedRule, acceptedCategories: newCategories }))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleRuleDelete = async (rule) => {\n    try {\n      if (window.confirm(`Haluatko poistaa säännön: ${rule.name}`)) {\n        await ruleService.deleteRule(rule.id)\n        setRules(rules.filter(r => r.id !== rule.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleRuleModify = async (event) => {\n    event.preventDefault()\n    const modifiedRule = { id: modifiedRuleId, name: modifiedRuleName, acceptedCategories: modifiedCategories }\n    try {\n      await ruleService.editRule({ id: modifiedRuleId, name: modifiedRuleName, acceptedCategories: modifiedCategories.map(category => category.id) })\n      setModifyVisible(false)\n      setRules(rules.map(rule => rule.id !== modifiedRule.id ? rule : modifiedRule))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (rule) => {\n    setModifyVisible(true)\n    setModifiedRuleId(rule.id)\n    setModifiedRuleName(rule.name)\n    setModifiedCategories(rule.acceptedCategories)\n  }\n\n  const handleAddCategories = (categories) => {\n    setAcceptedCategories(categories)\n  }\n\n  const handleModifyCategories = (categories) => {\n    setModifiedCategories(categories)\n  }\n\n  return (\n    <div className=\"rule-form\">\n      <Notification message={errorMessage} type=\"error\" />\n\n      {rules && rules.map((rule) => (\n        <div className=\"rule-list-item\" key={rule.id}>\n          {modifyVisible && modifiedRuleId === rule.id ?\n            <div className=\"rule-form-item\">\n              <form onSubmit={handleRuleModify}>\n                <div className=\"item-modify\">\n                  <input\n                    className=\"rule\"\n                    type=\"text\"\n                    value={modifiedRuleName}\n                    name=\"Category\"\n                    onChange={({ target }) => setModifiedRuleName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"rule-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                </div>\n                <div className=\"modify-acceptedCategories\">\n                  <Select\n                    name=\"accepted-categories\"\n                    value={modifiedCategories}\n                    getOptionLabel={option => `${option.name}`}\n                    getOptionValue={option => `${option.id}`}\n                    onChange={handleModifyCategories}\n                    options={categories}\n                    isClearable={isClearable}\n                    placeholder={\"Säännön kategoriat\"}\n                    isMulti={true}\n                  />\n                </div>\n              </form>\n            </div>\n          :\n          <Fragment>\n            <p className=\"item-name\">{rule.name}</p>\n            <div className=\"item-buttons\">\n              <button onClick={() => handleShowModify(rule)} className=\"modify-button\">Muokkaa</button>\n              <button onClick={() => handleRuleDelete(rule)} className=\"delete-button\">Poista</button>\n            </div>\n            <div className=\"break\"></div>\n            <div className=\"accepted-categories-list\">\n              {rule.acceptedCategories && rule.acceptedCategories.map(category => (\n                  <span key={category.id}>{category.name} </span>\n                ))}\n            </div>\n          </Fragment>\n          }\n        </div>))\n      }\n\n      <form onSubmit={handleRuleAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"rule\"\n            type=\"text\"\n            value={newRuleName}\n            name=\"Rules\"\n            placeholder=\"Uusi sääntö\"\n            onChange={({ target }) => setNewRuleName(target.value)}\n          />\n          <button type=\"submit\" className=\"rule-add-button\">Lisää</button>\n        </div>\n\n        <div className=\"add-acceptedCategories\">\n          <Select\n            name=\"accepted-categories\"\n            value={acceptedCategories}\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleAddCategories}\n            options={categories}\n            isClearable={isClearable}\n            placeholder={\"Uuden säännön kategoriat\"}\n            isMulti={true}\n          />\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\n\nexport default Rule\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/language`\n\nconst getLanguages = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addLanguage = async (language) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, language, config)\n  return response.data\n}\n\nconst editLanguage = async (language) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.put(`${baseUrl}/${language.id}`, language, config)\n  return response.data\n\n}\n\n\nconst deleteLanguage = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addLanguage, getLanguages, deleteLanguage, editLanguage }\n","import React, { useState, Fragment } from 'react'\nimport Notification from './Notification'\nimport languageService from '../services/language'\n\nconst Language = ({ languages, setLanguages }) => {\n  const [languageName, setLanguageName] = useState('')\n  const [modifiedLanguageName, setModifiedLanguageName] = useState('')\n  const [modifiedLanguageId, setModifiedLanguageId] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  const handleLanguageAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedLanguage = await languageService.addLanguage({\n        language: languageName,\n      })\n      setLanguageName('')\n      setLanguages(languages.concat(addedLanguage))\n    } catch (exception) {\n      setErrorMessage('Kielen lisääminen ei onnistunut')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLanguageDelete = async (language) => {\n    try {\n      if (window.confirm(`Haluatko poistaa kielen: ${language.name}`)) {\n        await languageService.deleteLanguage(language.id)\n        setLanguages(languages.filter(l => l.id !== language.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLanguageModify = async (event) => {\n    event.preventDefault()\n    const modifiedLanguage = { id: modifiedLanguageId, name: modifiedLanguageName }\n    try {\n      await languageService.editLanguage(modifiedLanguage)\n      setModifyVisible(false)\n      setLanguages(languages.map(language => language.id !== modifiedLanguage.id ? language : modifiedLanguage))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (language) => {\n    setModifyVisible(true)\n    setModifiedLanguageId(language.id)\n    setModifiedLanguageName(language.name)\n  }\n\n  return (\n    <div className=\"language-form\">\n      <Notification message={errorMessage} type=\"error\" />\n\n      {languages && languages.map((language) => (\n        <div className=\"language-list-item\" key={language.id}>\n          {modifyVisible && modifiedLanguageId === language.id ?\n            <div className=\"language-form-item\">\n              <form onSubmit={handleLanguageModify} >\n                <div className=\"item-modify\">\n                  <input\n                    className=\"language\"\n                    type=\"text\"\n                    value={modifiedLanguageName}\n                    name=\"Language\"\n                    onChange={({ target }) => setModifiedLanguageName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"language-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n            :\n            <Fragment>\n              <p className=\"item-name\">{language.name}</p>\n              <div className=\"item-buttons\">\n                <button onClick={() => handleShowModify(language)} className=\"modify-button\">Muokkaa</button>\n                <button onClick={() => handleLanguageDelete(language)} className=\"delete-button\">Poista</button>\n              </div>\n            </Fragment>\n            }\n        </div>))\n      }\n\n      <form onSubmit={handleLanguageAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"language\"\n            type=\"text\"\n            value={languageName}\n            name=\"Language\"\n            placeholder=\"Uusi kieli\"\n            onChange={({ target }) => setLanguageName(target.value)}\n          />\n          <button type=\"submit\" className=\"language-add-button\">Lisää</button>\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\n\nexport default Language\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/series`\n\nconst getSeries = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addSeries = async (series) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, series, config)\n  return response.data\n}\n\nconst editSerie = async (serie) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${serie.id}`, serie, config)\n  return response.data\n\n}\n\nconst deleteSerie = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addSeries, getSeries, deleteSerie, editSerie }\n","import React, { useState, Fragment } from 'react'\nimport { CirclePicker } from 'react-color'\nimport Notification from './Notification'\nimport seriesService from '../services/series'\n\nconst Series = ({ series, setSeries }) => {\n  const [name, setName] = useState('')\n  const [modifiedSerieName, setModifiedSerieName] = useState('')\n  const [modifiedSerieId, setModifiedSerieId] = useState('')\n  const [modifiedSerieColor, setModifiedSerieColor] = useState('')\n  const [color, setColor] = useState('#ffffff')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  const handleSeriesAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedSerie = await seriesService.addSeries({ name, color })\n      setName('')\n      setColor('')\n      setSeries(series.concat(addedSerie))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSerieDelete = async (serie) => {\n    try {\n      if (window.confirm(`Haluatko poistaa sarjan: ${serie.name}`)) {\n        await seriesService.deleteSerie(serie.id)\n        setSeries(series.filter(s => s.id !== serie.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSerieModify = async (event) => {\n    event.preventDefault()\n    const modifiedSerie = { id: modifiedSerieId, name: modifiedSerieName, color: modifiedSerieColor }\n    try {\n      await seriesService.editSerie(modifiedSerie)\n      setModifyVisible(false)\n      setSeries(series.map(serie => serie.id !== modifiedSerie.id ? serie : modifiedSerie))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (serie) => {\n    setModifyVisible(true)\n    setModifiedSerieId(serie.id)\n    setModifiedSerieName(serie.name)\n    setModifiedSerieColor(serie.color)\n  }\n\n  return (\n    <div className=\"series-form\">\n      <Notification message={errorMessage} type=\"error\" />\n\n      {series && series.map((serie) => (\n        <div className=\"serie-list-item\" key={serie.id}>\n          {modifyVisible && modifiedSerieId === serie.id ?\n            <div className=\"serie-form-item\">\n              <form onSubmit={handleSerieModify} >\n                <div className=\"item-modify\">\n                  <input\n                    className=\"serie\"\n                    type=\"text\"\n                    value={modifiedSerieName}\n                    name=\"Serie\"\n                    onChange={({ target }) => setModifiedSerieName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"serie-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                  <div className=\"color-picker\">\n                    <CirclePicker\n                      color={modifiedSerieColor}\n                      onChangeComplete={color => setModifiedSerieColor(color.hex)}\n                      colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\n                        \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\n                    />\n                  </div>\n                </div>\n              </form>\n            </div>\n          :\n          <Fragment>\n            <p className=\"item-name\"><span>{serie.name}</span><span style={{ backgroundColor: serie.color, display: 'inline-block', borderRadius: '50%', height: '27px', width: '27px', marginLeft: '5px' }} /></p>\n            <div className=\"item-buttons\">\n              <button onClick={() => handleShowModify(serie)} className=\"modify-button\">Muokkaa</button>\n              <button onClick={() => handleSerieDelete(serie)} className=\"delete-button\">Poista</button>\n            </div>\n          </Fragment>\n          }\n        </div>))\n      }\n\n      <form onSubmit={handleSeriesAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Uusi sarja\"\n            onChange={({ target }) => setName(target.value)}\n          />\n          <button type=\"submit\" className=\"series-submit-button\">Lisää</button>\n        </div>\n        <div className=\"color-picker\">\n          <CirclePicker\n            color={color}\n            onChangeComplete={color => setColor(color.hex)}\n            colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\n              \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\n          />\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\nexport default Series\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/category`\n\nconst getCategories = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addCategory = async (cat) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, cat, config)\n  return response.data\n}\n\nconst editCategory = async (category) => {\n  console.log(category)\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${category.id}`, category, config)\n  return response.data\n\n}\n\nconst deleteCategory = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\n\nexport default { addCategory, getCategories, editCategory, deleteCategory }\n","import React, { useState, Fragment } from 'react'\nimport Notification from './Notification'\nimport categoryService from '../services/category'\n\nconst Category = ({ categories, setCategories }) => {\n  const [newCategoryName, setNewCategoryName] = useState('')\n  const [modifiedCategoryName, setModifiedCategoryName] = useState('')\n  const [modifiedCategoryId, setModifiedCategoryId] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  const handleCategoryAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedCategory = await categoryService.addCategory({\n        category: newCategoryName\n      })\n      setNewCategoryName('')\n      setCategories(categories.concat(addedCategory))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCategoryDelete = async (category) => {\n    try {\n      if (window.confirm(`Haluatko poistaa kategorian: ${category.name}`)) {\n        await categoryService.deleteCategory(category.id)\n        setCategories(categories.filter(c => c.id !== category.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCategoryModify = async (event) => {\n    event.preventDefault()\n    const modifiedCategory = { id: modifiedCategoryId, name: modifiedCategoryName }\n    try {\n      await categoryService.editCategory(modifiedCategory)\n      setModifyVisible(false)\n      setCategories(categories.map(category => category.id !== modifiedCategory.id ? category : modifiedCategory))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (category) => {\n    setModifyVisible(true)\n    setModifiedCategoryId(category.id)\n    setModifiedCategoryName(category.name)\n  }\n\n  return (\n    <div className=\"category-form\" >\n      <Notification message={errorMessage} type=\"error\" />\n\n      {categories && categories.map((category) => (\n        <div className=\"category-list-item\" key={category.id}>\n          {modifyVisible && modifiedCategoryId === category.id ?\n            <div className=\"category-form-item\">\n              <form onSubmit={handleCategoryModify} >\n                <div className=\"item-modify\">\n                  <input\n                    className=\"category\"\n                    type=\"text\"\n                    value={modifiedCategoryName}\n                    name=\"Category\"\n                    onChange={({ target }) => setModifiedCategoryName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"category-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n            :\n            <Fragment>\n              <p className=\"item-name\">{category.name}</p>\n              <div className=\"item-buttons\">\n                <button onClick={() => handleShowModify(category)} className=\"modify-button\">Muokkaa</button>\n                <button onClick={() => handleCategoryDelete(category)} className=\"delete-button\">Poista</button>\n              </div>\n            </Fragment>\n          }\n        </div>))\n      }\n\n      <form onSubmit={handleCategoryAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"category\"\n            type=\"text\"\n            value={newCategoryName}\n            name=\"Category\"\n            placeholder=\"Uusi kategoria\"\n            onChange={({ target }) => setNewCategoryName(target.value)}\n          />\n          <button type=\"submit\" className=\"category-add-button\">Lisää</button>\n        </div>\n      </form>\n    </div>\n\n  )\n}\n\nexport default Category\n","import React, { useState, Fragment } from 'react'\nimport Rule from './Rule'\nimport Language from './Language'\nimport Series from './Series'\nimport Category from './Category'\n\nconst AddTaskDropdown = ({ rules, categories, languages, series, setRules, setCategories, setLanguages, setSeries }) => {\n  const [showCategories, setShowCategories] = useState(false)\n  const [showRules, setShowRules] = useState(false)\n  const [showLanguages, setShowLanguages] = useState(false)\n  const [showSeries, setShowSeries] = useState(false)\n\n  return (\n    <div className=\"crls-container\">\n      <div className=\"task-types-menu\">\n        {showSeries ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowSeries(!showSeries)}>Sulje sarjat</button>\n            <Series series={series} setSeries={setSeries} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowSeries(!showSeries)}>Sarjat</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showRules ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowRules(!showRules)}>Sulje säännöt</button>\n            <Rule rules={rules} setRules={setRules} categories={categories} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowRules(!showRules)}>Säännöt</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showCategories ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowCategories(!showCategories)}>Sulje kategoriat</button>\n            <Category categories={categories} setCategories={setCategories} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowCategories(!showCategories)}>Kategoriat</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showLanguages ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowLanguages(!showLanguages)}>Sulje kielet</button>\n            <Language languages={languages} setLanguages={setLanguages} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowLanguages(!showLanguages)}>Kielet</button>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default AddTaskDropdown\n","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/file`\n\nconst updateFiles = async (files) => {\n  const config = {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }\n\n  const response = await axios.post(baseUrl, files, config)\n  return response.data\n}\n\nexport default { updateFiles }\n","import React from 'react'\nimport MarkdownIt from 'markdown-it'\nimport MdEditor from 'react-markdown-editor-lite'\nimport 'react-markdown-editor-lite/lib/index.css'\n\nconst MDEditor = ({ setText, setMD, value }) => {\n  const mdParser = new MarkdownIt()\n\n  const handleEditorChange = ({ html, text }) => {\n    setText(html)\n    setMD(text)\n  }\n\n  return (\n    <MdEditor\n      value={value}\n      renderHTML={(text) => mdParser.render(text)}\n      onChange={handleEditorChange}\n    />\n  )\n}\n\nexport default MDEditor\n\n\n\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport taskService from '../services/task'\nimport fileService from '../services/file'\nimport MDEditor from './MDEditor'\nimport Dropzone from 'react-dropzone'\n\nconst AddTask = ({ rules, seriess, languages }) => {\n\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [name, setName] = useState('')\n  const [assignmentText, setAssignmentText] = useState('')\n  const [gradingScale, setGradingScale] = useState('')\n  const [supervisorInstructions, setSupervisorInstructions] = useState('')\n  const [assignmentTextMD, setAssignmentTextMD] = useState('')\n  const [gradingScaleMD, setGradingScaleMD] = useState('')\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState('')\n  const [rule, setRule] = useState('')\n  const [categories, setCategories] = useState([])\n  const [category, setCategory] = useState('')\n  const [series, setSeries] = useState([])\n  const [language, setLanguage] = useState('')\n  const [creatorName, setCreatorName] = useState('')\n  const [creatorEmail, setCreatorEmail] = useState('')\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\n  const [files, setFiles] = useState([])\n\n  const handleRuleChange = (e) => {\n    setRule(e.target.value)\n    setCategory('')\n    if (e.target.value) {\n      const foundRule = rules.find(r => r.id === e.target.value)\n      setCategories(foundRule.acceptedCategories)\n    } else {\n      setCategories([])\n    }\n  }\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value)\n  }\n\n  const handleSeriesChange = (e) => {\n    let options = e.target.options\n    let values = []\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected && options[i].value !== '') {\n        values.push(options[i].value)\n      }\n    }\n    setSeries(values)\n  }\n\n  const handleLanguageChange = (e) => {\n    setLanguage(e.target.value)\n  }\n\n  const handleAddTask = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setAssignmentTextErrorMessage(null)\n    setCreatorNameErrorMessage(null)\n    setCreatorEmailErrorMessage(null)\n    setDropDownErrorMessage(null)\n    if (name.length < 1) {\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\n    }\n    if (assignmentText.length < 1) {\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\n    }\n    if (creatorName.length < 1) {\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\n    }\n    if (creatorEmail.length < 1) {\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\n    }\n    if (language === '' || rule === '' || series === '' || category === '') {\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\n    }\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\n            || language === '' || rule === '' || series === '' || category === '') {\n      return\n    }\n    setAssignmentText(JSON.stringify(assignmentText))\n    setGradingScale(JSON.stringify(gradingScale))\n    setSupervisorInstructions(JSON.stringify(supervisorInstructions))\n\n    let formData = new FormData()\n\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n          formData.append('filesToAdd', files[i], files[i].name)\n      }\n    }\n\n    let addedFiles = []\n\n    try {\n      addedFiles = await fileService.updateFiles(formData)\n      await taskService.addtask({\n        name, rule, category, series,\n        language, assignmentText, gradingScale,\n        creatorName, creatorEmail, supervisorInstructions,\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD,\n        files: addedFiles\n      })\n      setName('')\n      setRule('')\n      setCategory('')\n      setSeries('')\n      setLanguage('')\n      setAssignmentText('')\n      setGradingScale('')\n      setCreatorEmail('')\n      setCreatorName('')\n      setSupervisorInstructions('')\n      setMessage('Tehtävä lisätty!')\n      setTimeout(() => {\n        setMessage(null)\n        window.location.reload()\n      }, 2000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const onDrop = (newFiles) => {\n    setFiles(files.concat(newFiles))\n  }\n\n  const handleDeleteFile = (e, name) => {\n    e.stopPropagation()\n    setFiles(files.filter(file => file.name !== name))\n  }\n\n  return (\n    <div className=\"add-task-container\">\n      <h2>Lisää tehtävä</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleAddTask}>\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"task-title\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Tehtävän nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <h4>Tehtävänanto</h4>\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} />\n        </div>\n        <div>\n          <h4>Arvostelu</h4>\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} />\n        </div>\n        <div className=\"instructions\">\n          <h4>Rastimiehen ohje</h4>\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} />\n        </div>\n        <Notification message={dropDownErrorMessage} type=\"error\" />\n        <div className=\"dropdowns\">\n          <div>\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <select className=\"rule-select\" value={rule} onChange={(e) => handleRuleChange(e)}>\n              <option value=\"\">Säännöt</option>\n              {rules.map(rule => <option className=\"rule-options\" key={rule.id} value={rule.id}>{rule.name}</option>)}\n            </select>\n            <br/>\n            <select className=\"category-select\" value={category} onChange={(e) => handleCategoryChange(e)}>\n              <option value=\"\">Kategoria</option>\n              {categories.map(category => <option className=\"category-options\" key={category.id} value={category.id}>{category.name}</option>)}\n            </select>\n            <br/>\n            <select className=\"language-select\" value={language} onChange={(e) => handleLanguageChange(e)}>\n              <option value=\"\">Kieli</option>\n              {languages.map(language => <option className=\"language-options\" key={language.id} value={language.id}>{language.name}</option>)}\n            </select>\n          </div>\n        </div>\n        <div className=\"creator\">\n          <div>\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              value={creatorName}\n              name=\"CreatorName\"\n              placeholder=\"Lisääjän nimi\"\n              onChange={({ target }) => setCreatorName(target.value)}\n            />\n          </div>\n          <div>\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              value={creatorEmail}\n              name=\"CreatorEmail\"\n              placeholder=\"Lisääjän sähköposti\"\n              onChange={({ target }) => setCreatorEmail(target.value)}\n            />\n          </div>\n        </div>\n\n        <Dropzone onDrop={onDrop}>\n          {({getRootProps, getInputProps}) => (\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              <div className=\"files\">\n                <div className=\"title\">Liitetiedostot</div>\n                {files.length > 0 &&\n                  <React.Fragment>\n                    {files.map((file) => (\n                      <div key={file.name}>{file.name}<span onClick={(e) => handleDeleteFile(e, file.name)}className=\"remove-file\" /></div>\n                    ))}\n                  </React.Fragment>\n                }\n              </div>\n            </div>\n          )}\n        </Dropzone>\n\n        <button type=\"submit\" className=\"add-task-button\">Lisää tehtävä</button>\n      </form>\n    </div>\n  )\n}\nexport default AddTask","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport taskService from '../services/task'\nimport Notification from './Notification'\nimport tokenService from '../services/token'\n\n\nconst TaskListPending = ({ handleAddTask, handleUpdateTask, handleDeleteTask }) => {\n  const [tasks, setTasks] = useState([])\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    if (!tokenService.getToken()) {\n      const loggedUserJSON = window.localStorage.getItem('loggedUser')\n      if (loggedUserJSON) {\n        const loggedUser = JSON.parse(loggedUserJSON)\n        tokenService.setToken(loggedUser.token)\n      }\n    }\n    taskService.getPendingTasks().then((response) => {\n      setTasks(response)\n    })\n  }, [])\n\n  const handleAccept = (e, task) => {\n    e.preventDefault()\n    try {\n      taskService.acceptTask(task.id)\n      setTasks(tasks.filter(t => t.id !== task.id))\n      handleAddTask(task)\n      setMessage('Tehtävä hyväksytty')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleUpdateViews = async (task) => {\n    try {\n      await taskService.updateViews(task.id)\n      handleUpdateTask({ ...task, views: task.views + 1 })\n    } catch (exeption) {\n    }\n  }\n\n  const handleDelete = async (e, task) => {\n    e.preventDefault()\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\n        await taskService.deleteTask(task.id)\n        handleDeleteTask(task.id)\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"task-list\">\n      <h1>Hyväksyntää odottavat kisatehtävät</h1>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      {tasks && tasks.length > 0 &&\n        <div className=\"task-list-title\">\n          <span>Tehtävän nimi</span>\n          <span>Sarja</span>\n          <span>Kategoria</span>\n          <span></span>\n          <span></span>\n        </div>\n      }\n      \n      {tasks.map((task) => (\n        <Link className=\"no-underline\" to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task)} key={task.id}>\n        <div className=\"task-list-item\">\n          <span>\n            {task.name}\n            <p>Katselukertoja: {task.views}</p>\n          </span>\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n          <span>{task.category && task.category.name}</span>\n          <button className=\"accept-button\" onClick={(e) => handleAccept(e, task)}>Hyväksy</button>\n            <button className=\"delete-button\" onClick={(e) => handleDelete(e, task)}>Poista</button>\n        </div>\n      </Link>\n      ))}\n\n    </div>\n\n  )\n}\n\nexport default TaskListPending\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport TaskListPending from './TaskListPending'\n\nconst Admin = ({ handleAddTask, handleUpdateTask, handleDeleteTask }) => (\n  <div >\n    <TaskListPending handleAddTask={handleAddTask} handleUpdateTask={handleUpdateTask} handleDeleteTask={handleDeleteTask} />\n    <Link className=\"no-underline\" to=\"/omasivu\">Omat tiedot</Link>\n    <br />\n    <Link className=\"no-underline\" to=\"/lisaa_admin\">Lisää ylläpitäjä</Link>\n    <br />\n    <Link className=\"no-underline\" to=\"/lisaa_pudotusvalikkoon\">Hallinnoi sääntöjä/kieliä/sarjoja/kategorioita</Link>\n  </div>\n)\n\nexport default Admin\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst EditUser = ({ setShowEdit, user, setUser, setMessage }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\n  const [emailErrorMessage, setEmailErrorMessage] = useState(null)\n  const [name, setName] = useState(user.name)\n  const [username, setUsername] = useState(user.username)\n  const [email, setEmail] = useState(user.email)\n  const [allowNotifications, setAllowNotifications] = useState(user.allowNotifications)\n\n  const handleEditUser = async (event) => {\n\n\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setUsernameErrorMessage(null)\n    setEmailErrorMessage(null)\n    if (name.length < 3) {\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\n    }\n    if (username.length < 3) {\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\n    }\n    if (email.length < 5) {\n      setEmailErrorMessage('Sähköpostissa pitää olla vähintään 5 kirjainta')\n    }\n    if (name.length < 3 || username.length < 3) {\n      return\n    }\n    try {\n      const editedUser = await userService.editUser({\n        name, username, email, allowNotifications\n      })\n      setUser(editedUser)\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(editedUser),\n      )\n      setShowEdit(false)\n      setMessage('Tietoja muokattu!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"username already exists\") {\n        setErrorMessage('Käyttäjätunnus on varattu')\n      } else {\n        setErrorMessage('Muokkaaminen epäonnistui')\n      }\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n\n    <div className=\"edit-user-form\">\n      <h2>Omat tiedot</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleEditUser}>\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <label>Nimi</label><br />\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={usernameErrorMessage} type=\"error\" />\n          <label>Käyttäjätunnus</label><br />\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={emailErrorMessage} type=\"error\" />\n          <label>Sähköposti</label><br />\n          <input\n            className=\"email\"\n            type=\"text\"\n            value={email}\n            name=\"Email\"\n            placeholder=\"Sähköposti\"\n            onChange={({ target }) => setEmail(target.value)}\n          />\n        </div>\n        <div>\n          <label>\n            Vastaanota ilmoituksia:\n            <div className=\"admin-radio\" onChange={({ target }) => setAllowNotifications(target.value)}>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"notifications\"\n                  value={true}\n                  defaultChecked={allowNotifications}\n                />\n                Kyllä\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"notifications\"\n                  value={false}\n                  defaultChecked={!allowNotifications}\n                />\n                Ei\n              </label>\n            </div>\n          </label>\n        </div>\n        <button type=\"submit\" className=\"edit-button\">Tallenna</button>\n        <button onClick={() => setShowEdit(false)} className=\"cancel-button\">Peruuta</button>\n      </form>\n    </div>\n  )\n}\n\nexport default EditUser\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst ChangePassword = ({ setShowChangePassword, setMessage }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [newPasswordAgain, setNewPasswordAgain] = useState('')\n\n  const handleChangePassword = async (event) => {\n    event.preventDefault()\n    setErrorMessage(null)\n    if (newPassword.length < 3) {\n      setErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\n      return\n    }\n    if (newPassword !== newPasswordAgain) {\n      setErrorMessage('Salasanat eivät täsmää')\n      return\n    }\n    try {\n      await userService.editUser({\n        oldPassword, newPassword\n      })\n      setOldPassword('')\n      setNewPassword('')\n      setNewPasswordAgain('')\n      setShowChangePassword(false)\n      setMessage('Salasana vaihdettu!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"incorrect password\") {\n        setErrorMessage('Vanha salasana ei täsmää')\n      } else {\n        setErrorMessage('Salasanan vaihtaminen epäonnistui')\n      }\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"change-password-form\">\n      <h2>Vaihda salasana</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleChangePassword}>\n        <div>\n          <input\n            className=\"old-password\"\n            type=\"password\"\n            value={oldPassword}\n            placeholder=\"Vanha salasana\"\n            onChange={({ target }) => setOldPassword(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"new-password\"\n            type=\"password\"\n            value={newPassword}\n            placeholder=\"Uusi salasana\"\n            onChange={({ target }) => setNewPassword(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"new-password-again\"\n            type=\"password\"\n            value={newPasswordAgain}\n            placeholder=\"Uusi salasana uudelleen\"\n            onChange={({ target }) => setNewPasswordAgain(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"change-password-button\">Tallenna</button>\n        <button onClick={() => setShowChangePassword(false)} className=\"cancel-button\">Peruuta</button>\n      </form>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport EditUser from './EditUser'\nimport ChangePassword from './ChangePassword'\n\nconst User = ({ user, setUser }) => {\n  const [message, setMessage] = useState(null)\n  const [showEdit, setShowEdit] = useState(false)\n  const [showChangePassword, setShowChangePassword] = useState(false)\n\n  const editUser = () => {\n    setShowChangePassword(false)\n    setShowEdit(true)\n  }\n\n\n  const changePassword = () => {\n    setShowEdit(false)\n    setShowChangePassword(true)\n  }\n\n  return (\n    <div>\n      {user\n        && (\n          <div className=\"user-info\">\n            {!showEdit && !showChangePassword\n              && (\n                <div>\n                  <Notification message={message} type=\"success\" />\n                  <h2>Omat tiedot</h2>\n                  <p>\n                    <b>Nimi: </b>\n                    {user.name}\n                  </p>\n                  <p>\n                    <b>Käyttäjätunnus: </b>\n                    {user.username}\n                  </p>\n                  <p>\n                    <b>Sähköpostiosoite: </b>\n                    {user.email}\n                  </p>\n                  <p>\n                    <b>Ilmoitukset: </b>\n                    {user.allowNotifications ?\n                      <span>Päällä</span>\n                      :\n                      <span>Pois päältä</span>\n                    }\n                  </p>\n                  <button className=\"edit-user-button\" onClick={() => editUser()}>Muokkaa</button>\n                  <button className=\"change-password-button\" onClick={() => changePassword()}>Vaihda salasana</button>\n                </div>\n              )}\n            {showEdit && <EditUser setShowEdit={setShowEdit} user={user} setUser={setUser} setMessage={setMessage} />}\n            {showChangePassword && <ChangePassword setShowChangePassword={setShowChangePassword} setMessage={setMessage} />}\n          </div>\n        )}\n    </div>\n  )\n}\n\nexport default User\n","import React, { useState, useEffect } from 'react'\nimport StarRatings from 'react-star-ratings'\nimport taskService from '../services/task'\nimport Notification from './Notification'\n\nconst Rating = ({ task, handleUpdateTask }) => {\n  const [rating, setRating] = useState()\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [confirmMessage, setConfirmMessage] = useState(null)\n  const [ratedMessage, setRatedMessage] = useState(null)\n  const [ratingsAVG, setRatingsAVG] = useState(task.ratingsAVG)\n  const [ratingsAmount, setRatingsAmount] = useState(task.ratingsAmount)\n  const [disabled, setDisabled] = useState(false)\n\n\n  useEffect(() => {\n    const votesJSON = window.localStorage.getItem('votes')\n    if (votesJSON) {\n      const votes = JSON.parse(votesJSON)\n      const foundVote = votes.find(t => t === task.id)\n      if (foundVote) {\n        setDisabled(true)\n        setRatedMessage('Kiitos! Olet jo arvioinut tämän rastin.')\n      }\n    }\n  }, [])\n\n  const changeRating = async (newRating) => {\n    try {\n      const updatedValues = await taskService.addRating(task.id, {\n        rating: newRating\n      })\n      const votesJSON = window.localStorage.getItem('votes')\n      if (votesJSON) {\n        const votes = JSON.parse(votesJSON)\n        const newVotes = votes.concat(task.id)\n        window.localStorage.setItem('votes', JSON.stringify(newVotes))\n      }\n      setRatingsAVG(updatedValues.ratingsAVG)\n      setRatingsAmount(updatedValues.ratingsAmount)\n      handleUpdateTask({ ...task, ratings: task.ratings[newRating - 1] + 1, ratingsAVG: updatedValues.ratingsAVG, ratingsAmount: updatedValues.ratingsAmount })\n      setDisabled(true)\n      setConfirmMessage('Arvostelu lähetetty')\n    }\n    catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"task-rating\">\n      <Notification message={errorMessage} type=\"error\" />\n      <Notification message={confirmMessage} type=\"success\" />\n      <div className=\"rating\">\n        <div>\n          <h4>Keskiarvo:</h4>\n          <StarRatings\n            rating={Number(ratingsAVG)}\n            starRatedColor=\"yellow\"\n            starDimension=\"20px\"\n            starSpacing=\"10px\"\n          />\n        </div>\n        <div className=\"rating-amount\">\n          ({ratingsAmount})\n        </div>\n      </div>\n      <Notification message={ratedMessage} type=\"rated\" />\n      {!disabled &&\n        <div>\n          <h4>Arvostele:</h4>\n          <StarRatings\n            rating={rating}\n            changeRating={changeRating}\n            starDimension=\"30px\"\n            starSpacing=\"10px\"\n          />\n        </div>\n      }\n\n    </div>\n  )\n}\n\nexport default Rating\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport taskService from '../services/task'\nimport fileService from '../services/file'\nimport MDEditor from './MDEditor'\nimport Dropzone from 'react-dropzone'\n\nconst ModifyTask = ({ setModifyVisible, task, setTask, handleUpdateTask, rules, seriess, languages }) => {\n\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [name, setName] = useState(task.name)\n  const [assignmentText, setAssignmentText] = useState(task.assignmentText)\n  const [gradingScale, setGradingScale] = useState(task.gradingScale)\n  const [supervisorInstructions, setSupervisorInstructions] = useState(task.supervisorInstructions)\n  const [assignmentTextMD, setAssignmentTextMD] = useState(task.assignmentTextMD)\n  const [gradingScaleMD, setGradingScaleMD] = useState(task.gradingScaleMD)\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState(task.supervisorInstructionsMD)\n  const [categories, setCategories] = useState([])\n  const [rule, setRule] = useState(task.rules ? task.rules.id : null)\n  const [category, setCategory] = useState(task.category ? task.category.id : null)\n  const [series, setSeries] = useState(task.series.map(s => s.id))\n  const [language, setLanguage] = useState(task.language ? task.language.id : null)\n  const [creatorName, setCreatorName] = useState(task.creatorName)\n  const [creatorEmail, setCreatorEmail] = useState(task.creatorEmail)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\n  const [oldFiles, setOldFiles] = useState(task.files || [])\n  const [newFiles, setNewFiles] = useState([])\n  const [filesToDelete, setFilesToDelete] = useState([])\n\n  let id = task.id\n\n  useEffect(() => {\n    if (rules && task.rules && task.rules.id) {\n      const foundRule = rules.find(r => r.id === task.rules.id)\n      if (foundRule) {\n        setCategories(foundRule.acceptedCategories)\n      }\n    }\n  }, [])\n\n  const handleRuleChange = (e) => {\n    setRule(e.target.value)\n    setCategory('')\n    if (e.target.value) {\n      const foundRule = rules.find(r => r.id === e.target.value)\n      setCategories(foundRule.acceptedCategories)\n    } else {\n      setCategories([])\n    }\n  }\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value)\n  }\n\n  const handleSeriesChange = (e) => {\n    let options = e.target.options\n    let values = []\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected && options[i].value !== '') {\n        values.push(options[i].value)\n      }\n    }\n    setSeries(values)\n  }\n\n  const handleLanguageChange = (e) => {\n    setLanguage(e.target.value)\n  }\n\n  const handleModifyTask = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setAssignmentTextErrorMessage(null)\n    setCreatorNameErrorMessage(null)\n    setCreatorEmailErrorMessage(null)\n    setDropDownErrorMessage(null)\n    if (name.length < 1) {\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\n    }\n    if (assignmentText.length < 1) {\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\n    }\n    if (creatorName.length < 1) {\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\n    }\n    if (creatorEmail.length < 1) {\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\n    }\n    if (language === '' || rule === '' || series === '' || category === '') {\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\n    }\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\n      || language === '' || rule === '' || series === '' || category === '') {\n      return\n    }\n\n    let formData = new FormData()\n\n    formData.append('filesToDelete', filesToDelete)\n\n    if (newFiles.length > 0) {\n      for (let i = 0; i < newFiles.length; i++) {\n          formData.append('filesToAdd', newFiles[i], newFiles[i].name)\n      }\n    }\n\n    let addedFiles = []\n\n    try {\n      addedFiles = await fileService.updateFiles(formData)\n      const modifiedTask = await taskService.updateTask({\n        name, rule, category, series,\n        language, assignmentText, gradingScale,\n        creatorName, creatorEmail, supervisorInstructions, id,\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD,\n        files: oldFiles.concat(addedFiles)\n      })\n      console.log(modifiedTask)\n      setMessage('Tehtävä tallennettu!')\n      setTask(modifiedTask)\n      handleUpdateTask(modifiedTask)\n      setTimeout(() => {\n        setMessage(null)\n        window.location.reload()\n      }, 1000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCancel = () => {\n    setModifyVisible(false)\n  }\n\n  const onDrop = (files) => {\n    setNewFiles(newFiles.concat(files))\n  }\n\n  const handleDeleteOldFile = (e, name) => {\n    e.stopPropagation()\n    setOldFiles(oldFiles.filter(file => file !== name))\n    setFilesToDelete(filesToDelete.concat(name))\n  }\n\n  const handleDeleteNewFile = (e, name) => {\n    e.stopPropagation()\n    setNewFiles(newFiles.filter(file => file.name !== name))\n  }\n\n  return (\n    <div className=\"modify-task-container\">\n      <h2>Muokkaa tehtävää</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleModifyTask} className=\"modify-form\">\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"task-title\"\n            type=\"text\"\n            defaultValue={name}\n            name=\"Name\"\n            placeholder=\"Tehtävän nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <h4>Tehtävänanto</h4>\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} value={assignmentTextMD} placeHolder=\"Tehtävänanto\" />\n        </div>\n        <div>\n          <h4>Arvostelu</h4>\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} value={gradingScaleMD} placeHolder=\"Arvostelu\" />\n        </div>\n        <div className=\"instructions\">\n          <h4>Rastimiehen ohje</h4>\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} value={supervisorInstructionsMD} placeHolder=\"Rastimiehen ohje\" />\n        </div>\n        <Notification message={dropDownErrorMessage} type=\"error\" />\n        <div className=\"dropdowns\">\n          <div>\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <select value={rule} onChange={(e) => handleRuleChange(e)}>\n              <option value=\"\">Säännöt</option>\n              {rules.map(rule => <option key={rule.id} value={rule.id}>{rule.name}</option>)}\n            </select>\n            <br/>\n            <select value={category} onChange={(e) => handleCategoryChange(e)}>\n              <option value=\"\">Kategoria</option>\n              {categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)}\n            </select>\n            <br/>\n            <select value={language} onChange={(e) => handleLanguageChange(e)}>\n              <option value=\"\">Kieli</option>\n              {languages.map(language => <option key={language.id} value={language.id}>{language.name}</option>)}\n            </select>\n          </div>\n        </div>\n        <div className=\"creator\">\n          <div>\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              defaultValue={creatorName}\n              name=\"CreatorName\"\n              placeholder=\"Muokkaajan nimi\"\n              onChange={({ target }) => setCreatorName(target.value)}\n            />\n          </div>\n          <div>\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              defaultValue={creatorEmail}\n              name=\"CreatorEmail\"\n              placeholder=\"Muokkaajan sähköposti\"\n              onChange={({ target }) => setCreatorEmail(target.value)}\n            />\n          </div>\n        </div>\n\n        <Dropzone onDrop={onDrop}>\n          {({getRootProps, getInputProps}) => (\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              <div className=\"files\">\n                <div className=\"title\">Liitetiedostot</div>\n                {oldFiles && oldFiles.length > 0 &&\n                  <React.Fragment>\n                    {oldFiles.map((file) => (\n                      <div key={file}>{file.substring(file.indexOf('-') + 1, file.length)}<span onClick={(e) => handleDeleteOldFile(e, file)} className=\"remove-file\" /></div>\n                    ))}\n                  </React.Fragment>\n                }\n                {newFiles && newFiles.length > 0 &&\n                  <React.Fragment>\n                    {newFiles.map((file) => (\n                      <div key={file.name}>{file.name}<span onClick={(e) => handleDeleteNewFile(e, file.name)} className=\"remove-file\" /></div>\n                    ))}\n                  </React.Fragment>\n                }\n              </div>\n            </div>\n          )}\n        </Dropzone>\n\n        <div>\n          <button type=\"submit\" className=\"save-task-button\">Tallenna</button>\n          <button onClick={() => handleCancel()} className=\"return-button\">Peruuta</button>\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default ModifyTask","import React from 'react'\n\nconst TaskTextDisplay = ({ text }) => {\n  const htmlConverter = () => {\n    return { __html: `${text}` }\n  }\n\n  return (\n    <div dangerouslySetInnerHTML={htmlConverter()} />\n  )\n}\n\nexport default TaskTextDisplay","import React, { useState, useEffect } from 'react'\nimport taskService from '../services/task'\nimport Rating from './Rating'\nimport ModifyTask from './ModifyTask'\nimport Notification from './Notification'\nimport TaskTextDisplay from './TaskTextDisplay'\nimport Competition from './Competition'\nimport Moment from 'react-moment'\nimport { useHistory } from 'react-router-dom'\n\nconst Task = ({ match, user, rules, seriess, languages, addTaskToBasket, handleAddTask, handleUpdateTask, handleDeleteTask }) => {\n\n  const [task, setTask] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [name, setName] = useState('')\n  const [date, setDate] = useState('')\n  const [place, setPlace] = useState('')\n  const [type, setType] = useState('')\n  const [logo, setLogo] = useState(null)\n  const [showMakePDF, setShowMakePDF] = useState(false)\n  const history = useHistory()\n\n  useEffect(() => {\n    taskService.getOneTask(match.params.id).then((response) => {\n      setTask(response)\n    })\n  }, [])\n\n  const handleDelete = () => {\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\n        taskService.deleteTask(task.id)\n        handleDeleteTask(task.id)\n        setMessage('Tehtävä poistettu')\n        setTimeout(() => {\n          setMessage(null)\n          if (task.pending) {\n            history.push('/admin')\n          } else {\n            history.push('/')\n          }\n        }, 2000)\n      }\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleAccept = () => {\n    try {\n      taskService.acceptTask(task.id)\n      setMessage('Tehtävä hyväksytty')\n      handleAddTask(task)\n      setTimeout(() => {\n        setMessage(null)\n        history.push('/admin')\n      }, 2000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleMakePDF = async () => {\n    let formData = new FormData()\n\n    const competition = JSON.stringify({ name, date, place, type, task: task.id })\n    formData.append('competition', competition)\n\n    if (logo) {\n      formData.append('logo', logo, logo.name)\n    }\n    \n    try {\n      const PDF = await taskService.makePDF(formData, task.id)\n      setName('')\n      setDate('')\n      setPlace('')\n      setType('')\n      setLogo(null)\n      const url = window.URL.createObjectURL(new Blob([PDF], {\n        type: 'application/pdf'\n      }))\n      const link = document.createElement('a')\n      link.href = url\n      link.setAttribute('download', `${name}.pdf`)\n      document.body.appendChild(link)\n      link.click()\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      {modifyVisible ?\n        <ModifyTask setModifyVisible={setModifyVisible} task={task} rules={rules} seriess={seriess} languages={languages} setTask={setTask} handleUpdateTask={handleUpdateTask} />\n        :\n        <div className=\"task-view-info-background\">\n          <Notification message={message} type=\"success\" />\n          <Notification message={errorMessage} type=\"error\" />\n          {task &&\n            <div className=\"task-view-info\">\n              <div>\n                <h2>{task.name}</h2>\n                <span><div className=\"black-basket basket-task-view\" title=\"Lisää koriin\" onClick={(e) => addTaskToBasket(e, task)} /></span>\n                <Rating task={task} handleUpdateTask={handleUpdateTask} />\n              </div>\n              <h3>Tehtävänanto</h3>\n              <TaskTextDisplay text={task.assignmentText} />\n              <h3>Rastimiehen ohjeet</h3>\n              <TaskTextDisplay text={task.supervisorInstructions} />\n              <h3>Arvosteluasteikko</h3>\n              <TaskTextDisplay text={task.gradingScale} />\n              <h3>Sarja</h3>\n              {task.series.map(s => <span key={task.id + s.id}>{s.name}<br /></span>)}\n              <h3>Kategoria</h3>\n              <p>{task.category && task.category.name}</p>\n              <h3>Sääntöluokka</h3>\n              <p>{task.rules && task.rules.name}</p>\n              <h3>Tehtävän viimeisin muokkaaja</h3>\n              <p>{task.creatorName}<br />{task.creatorEmail}</p>\n              <h3>Tehtävä lisätty</h3>\n              {task.created && <p><Moment format=\"DD.MM.YYYY HH:mm\">{task.created}</Moment></p>}\n              <h3>Liitetiedostot</h3>\n              {task.files && task.files.length === 0 && <p>-</p>}\n              {task.files && task.files.map((file) => (\n                <div key={file}>\n                  <a href={`https://kisapankki.blob.core.windows.net/files/${file}`}>\n                    {file.substring(file.indexOf('-') + 1, file.length)}\n                  </a>\n                </div>\n              ))}\n              {showMakePDF ?\n                <div className=\"competition-task\">\n                  <div className=\"make-pdf right\" onClick={() => setShowMakePDF(false)}>Sulje</div>\n                  <Competition\n                    name={name}\n                    date={date}\n                    place={place}\n                    type={type}\n                    logo={logo}\n                    setName={setName}\n                    setDate={setDate}\n                    setPlace={setPlace}\n                    setType={setType}\n                    setLogo={setLogo}\n                  />\n                  <button onClick={() => handleMakePDF()}>Tee PDF-tiedosto</button>\n                </div>\n                :\n                <div className=\"make-pdf\" onClick={() => setShowMakePDF(true)}>Lisää kisan tiedot/Tee PDF</div>\n              }\n              {user &&\n                <div className=\"buttons\">\n                  <button onClick={() => setModifyVisible(true)} className=\"modify-view-button\">Muokkaa</button>\n                  {task.pending && <button className=\"accept-button\" onClick={() => handleAccept()}>Hyväksy</button>}\n                  <button className=\"delete-button\" onClick={() => handleDelete()}>Poista</button>\n                </div>}\n            </div>\n          }\n        </div>\n\n      }\n    </div>\n\n  )\n}\n\nexport default Task\n","import React, { useState, useEffect, Fragment } from 'react'\nimport { Route, Link, Redirect, useHistory } from 'react-router-dom'\nimport Login from './components/Login'\nimport FrontPage from './components/FrontPage'\nimport TaskList from './components/TaskList'\nimport Basket from './components/Basket'\nimport AddAdmin from './components/AddAdmin'\nimport AddTaskDropdown from './components/AddTaskDropdown'\nimport AddTask from './components/AddTask'\nimport Admin from './components/Admin'\nimport User from './components/User'\nimport Task from './components/Task'\nimport tokenService from './services/token'\nimport taskService from './services/task'\nimport seriesService from './services/series'\nimport ruleService from './services/rule'\nimport categoryService from './services/category'\nimport languageService from './services/language'\n\nconst App = () => {\n  const [basket, setBasket] = useState([])\n  const [tasks, setTasks] = useState([])\n  const [user, setUser] = useState(null)\n  const [categories, setCategories] = useState([])\n  const [rules, setRules] = useState([])\n  const [seriess, setSeriess] = useState([])\n  const [languages, setLanguages] = useState([])\n  const history = useHistory()\n\n  useEffect(() => {\n    taskService.getTasks().then((response) => {\n      setTasks(response)\n    })\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const loggedUser = JSON.parse(loggedUserJSON)\n      setUser(loggedUser)\n      tokenService.setToken(loggedUser.token)\n    }\n    const votes = window.localStorage.getItem('votes')\n    if (!votes) {\n      const votes = []\n      window.localStorage.setItem('votes', JSON.stringify(votes))\n    }\n    const basketJSON = window.localStorage.getItem('basket')\n\n    if (basketJSON) {\n      const foundBasket = JSON.parse(basketJSON)\n      setBasket(foundBasket)\n    }\n\n    categoryService.getCategories().then((response) => {\n      setCategories(response)\n    })\n\n    seriesService.getSeries().then((response) => {\n      setSeriess(response)\n    })\n\n    ruleService.getRules().then((response) => {\n      setRules(response)\n    })\n\n    languageService.getLanguages().then(response => {\n      setLanguages(response)\n    })\n  }, [])\n\n  useEffect(() => {\n    window.localStorage.setItem(\n      'basket', JSON.stringify(basket)\n    )\n  }, [basket])\n\n  const logout = () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n    tokenService.setToken(null)\n    history.push('/')\n    window.location.reload()\n  }\n\n  const handleAddTask = (task) => {\n    setTasks(tasks.concat(task))\n  }\n\n  const handleUpdateTask = (modifiedTask) => {\n    setTasks(tasks.map(task => task.id !== modifiedTask.id ? task : modifiedTask))\n    setBasket(basket.map(task => task.id !== modifiedTask.id ? task : modifiedTask))\n  }\n\n  const handleDeleteTask = (id) => {\n    setTasks(tasks.filter(t => t.id !== id))\n    setBasket(basket.filter(t => t.id !== id))\n  }\n\n  const addTaskToBasket = (e, task) => {\n    e.preventDefault()\n    e.stopPropagation()\n    const foundTask = basket.find(t => t.id === task.id)\n    if (!foundTask) {\n      setBasket(basket.concat(task))\n    }\n  }\n\n  const removeTaskFromBasket = (id) => {\n    setBasket(basket.filter(task => task.id !== id))\n  }\n\n  const removeAllFromBasket = () => {\n    setBasket([])\n  }\n\n  return (\n    <div>\n      <div className=\"header\">\n        <Link to=\"/\"><div className=\"logo\" /></Link>\n        <Link to=\"/tehtavat\"><button className=\"addtask-button-header\">Tehtävät</button></Link>\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-header\">Lisää tehtävä</button></Link>\n\n        {user === null ?\n          <Fragment>\n            <Link to=\"/kirjautuminen\"><button className=\"login-button-header\">Kirjaudu</button></Link>\n          </Fragment>\n          :\n          <Fragment>\n            <Link to=\"/admin\"><button className=\"admin-button-header\">Admin</button></Link>\n            <div>\n              <div className=\"logged\">Kirjautuneena <Link to=\"/omasivu\" className=\"username-header\">{user.username}</Link></div>\n              <div className=\"logout\"><button className=\"logout-button-header\" onClick={() => logout()}>Kirjaudu ulos</button></div>\n            </div>\n          </Fragment>\n        }\n        <Link to=\"/valitut_tehtavat\"><div className=\"white-basket\">{basket.length > 0 && <span className=\"number-of-tasks-in-basket\">{basket.length}</span>}</div></Link>\n      </div>\n      <div className=\"admin-task-buttons-mobile\">\n        <Link to=\"/tehtavat\"><button className=\"addtask-button-mobile\">Tehtävät</button></Link>\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-mobile\">Lisää tehtävä</button></Link>\n        {user !== null && <Link to=\"/admin\"><button className=\"admin-button-mobile\">Admin</button></Link>}\n      </div>\n      <div className=\"container\">\n        <Route exact path=\"/\" render={() => <FrontPage tasks={tasks} addTaskToBasket={addTaskToBasket} handleUpdateTask={handleUpdateTask} />} />\n        <Route exact path=\"/tehtava/:id\" render={(match) => <Task {...match} user={user} rules={rules} seriess={seriess} languages={languages} addTaskToBasket={addTaskToBasket} handleAddTask={handleAddTask} handleUpdateTask={handleUpdateTask} handleDeleteTask={handleDeleteTask} />} />\n        <Route path=\"/tehtavat\" render={() => <TaskList user={user} originalTasks={tasks} categories={categories} rules={rules} seriess={seriess} addTaskToBasket={addTaskToBasket} handleUpdateTask={handleUpdateTask} handleDeleteTask={handleDeleteTask} />} />\n        <Route path=\"/valitut_tehtavat\" render={() => <Basket tasks={basket} removeTaskFromBasket={removeTaskFromBasket} removeAllFromBasket={removeAllFromBasket} handleUpdateTask={handleUpdateTask} />} />\n        <Route path=\"/kirjautuminen\" render={() => <Login setUser={setUser} />} />\n        <Route path=\"/lisaa_tehtava\" render={() => <AddTask rules={rules} seriess={seriess} languages={languages} />} />\n        <Route path=\"/omasivu\" render={() => (localStorage.getItem('loggedUser') ? <User user={user} setUser={setUser} /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/admin\" render={() => (localStorage.getItem('loggedUser') ? <Admin handleAddTask={handleAddTask} handleUpdateTask={handleUpdateTask} handleDeleteTask={handleDeleteTask} /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/lisaa_admin\" render={() => (localStorage.getItem('loggedUser') ? <AddAdmin /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/lisaa_pudotusvalikkoon\" render={() => (localStorage.getItem('loggedUser') ? <AddTaskDropdown rules={rules} categories={categories} languages={languages} series={seriess} setRules={setRules} setCategories={setCategories} setLanguages={setLanguages} setSeriess={setSeriess} /> : <Redirect to=\"/\" />)} />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}