{"version":3,"sources":["components/Notification.js","services/login.js","services/token.js","components/Login.js","components/FrontPage.js","services/task.js","services/series.js","services/rule.js","services/category.js","components/Search.js","components/TaskList.js","components/Basket.js","services/user.js","components/AddAdmin.js","components/Rule.js","services/language.js","components/Language.js","components/Series.js","components/Category.js","components/AddTaskDropdown.js","services/file.js","components/MDEditor.js","components/AddTask.js","components/TaskListPending.js","components/Admin.js","components/EditUser.js","components/ChangePassword.js","components/User.js","components/ModifyTask.js","components/TaskTextDisplay.js","components/Task.js","App.js","index.js"],"names":["Notification","message","type","className","baseUrl","process","credentials","a","async","axios","post","response","data","token","newToken","Login","setUser","useState","errorMessage","setErrorMessage","username","setUsername","email","setEmail","password","setPassword","history","useHistory","onSubmit","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","tokenService","push","setTimeout","value","name","placeholder","onChange","target","FrontPage","tasks","addTaskToBasket","newTasks","setNewTasks","favoriteTasks","setFavoriteTasks","useEffect","sort","compareCreated","slice","compareRatings","b","created","localeCompare","ratingsAVG","map","task","key","id","to","series","s","category","onClick","baseUrlPending","config","headers","Authorization","get","search","put","delete","serie","rule","cat","console","log","Search","setTasks","setAllTasks","setSearch","taskService","defaultValue","TaskList","originalTasks","allTasks","selectedCategory","setSelectedCategory","selectedSeries","setSelectedSeries","selectedRules","setSelectedRules","categories","setCategories","rules","setRules","isClearable","seriess","setSeriess","categoryService","then","seriesService","ruleService","length","array","i","j","includes","filter","getOptionLabel","option","getOptionValue","options","isMulti","c","views","confirm","t","handleDelete","Basket","removeTaskFromBasket","AddAdmin","setMessage","nameErrorMessage","setNameErrorMessage","usernameErrorMessage","setUsernameErrorMessage","passwordErrorMessage","setPasswordErrorMessage","emailErrorMessage","setEmailErrorMessage","setName","users","setUsers","allowNotifications","setAllowNotifications","userService","some","defaultChecked","Rule","newRuleName","setNewRuleName","modifiedRuleName","setModifiedRuleName","modifiedRuleId","setModifiedRuleId","modifyVisible","setModifyVisible","acceptedCategories","setAcceptedCategories","modifiedCategories","setModifiedCategories","handleRuleModify","modifiedRule","handleModifyCategories","handleShowModify","r","handleRuleDelete","newCategories","addedRule","concat","language","Language","languages","setLanguages","languageName","setLanguageName","modifiedLanguageName","setModifiedLanguageName","modifiedLanguageId","setModifiedLanguageId","handleLanguageModify","modifiedLanguage","languageService","l","handleLanguageDelete","addedLanguage","Series","setSeries","modifiedSerieName","setModifiedSerieName","modifiedSerieId","setModifiedSerieId","modifiedSerieColor","setModifiedSerieColor","color","setColor","handleSerieModify","modifiedSerie","onChangeComplete","hex","colors","style","backgroundColor","display","borderRadius","height","width","marginLeft","handleSerieDelete","addedSerie","Category","newCategoryName","setNewCategoryName","modifiedCategoryName","setModifiedCategoryName","modifiedCategoryId","setModifiedCategoryId","handleCategoryModify","modifiedCategory","handleCategoryDelete","addedCategory","AddTaskDropdown","showCategories","setShowCategories","showRules","setShowRules","showLanguages","setShowLanguages","showSeries","setShowSeries","files","MDEditor","setText","setMD","mdParser","MarkdownIt","renderHTML","text","render","html","AddTask","assignmentText","setAssignmentText","gradingScale","setGradingScale","supervisorInstructions","setSupervisorInstructions","assignmentTextMD","setAssignmentTextMD","gradingScaleMD","setGradingScaleMD","supervisorInstructionsMD","setSupervisorInstructionsMD","setRule","setCategory","setLanguage","creatorName","setCreatorName","creatorEmail","setCreatorEmail","assignmentTextErrorMessage","setAssignmentTextErrorMessage","creatorNameErrorMessage","setCreatorNameErrorMessage","creatorEmailErrorMessage","setCreatorEmailErrorMessage","dropDownErrorMessage","setDropDownErrorMessage","setFiles","formData","FormData","append","addedFiles","fileService","location","reload","multiple","e","values","selected","handleSeriesChange","foundRule","find","handleRuleChange","handleCategoryChange","handleLanguageChange","onDrop","newFiles","getRootProps","getInputProps","Fragment","file","stopPropagation","handleDeleteFile","TaskListPending","loggedUserJSON","getItem","loggedUser","parse","exception","handleAccept","Admin","EditUser","setShowEdit","editedUser","error","ChangePassword","setShowChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","newPasswordAgain","setNewPasswordAgain","User","showEdit","showChangePassword","ModifyTask","setTask","oldFiles","setOldFiles","setNewFiles","filesToDelete","setFilesToDelete","modifiedTask","placeHolder","substring","indexOf","handleDeleteOldFile","handleDeleteNewFile","TaskTextDisplay","dangerouslySetInnerHTML","__html","Task","match","params","format","href","pending","App","basket","setBasket","basketJSON","foundBasket","removeItem","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.512f51e2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={type}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/login`\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","let token = null\r\n\r\nconst getToken = () => token\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nexport default { getToken, setToken }\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Notification from './Notification'\r\nimport loginService from '../services/login'\r\nimport tokenService from '../services/token'\r\n\r\nconst Login = ({ setUser }) => {\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [username, setUsername] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const history = useHistory()\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, email, password,\r\n      })\r\n      window.localStorage.setItem(\r\n        'loggedUser', JSON.stringify(user),\r\n      )\r\n      setUser(user)\r\n      tokenService.setToken(user.token)\r\n      setUsername('')\r\n      setEmail('')\r\n      setPassword('')\r\n      history.push('/')\r\n    } catch (exception) {\r\n      setErrorMessage('Väärä käyttäjätunnus/salasana')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      <h2>Kirjaudu sisään</h2>\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          <input\r\n            className=\"username\"\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"Username\"\r\n            placeholder=\"Käyttäjätunnus\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Password\"\r\n            placeholder=\"Salasana\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"login-button\">Kirjaudu</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst FrontPage = ({ tasks, addTaskToBasket }) => {\r\n  const [newTasks, setNewTasks] = useState([])\r\n  const [favoriteTasks, setFavoriteTasks] = useState([])\r\n\r\n  useEffect(() => {\r\n    setNewTasks([...tasks].sort(compareCreated).slice(0, 5))\r\n    setFavoriteTasks([...tasks].sort(compareRatings).slice(0, 5))\r\n  }, [tasks])\r\n\r\n  const compareCreated = (a, b) => {\r\n    return b.created.localeCompare(a.created)\r\n  }\r\n\r\n  const compareRatings = (a, b) => {\r\n    return b.ratingsAVG - a.ratingsAVG\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-list frontpage-container\">\r\n      <h1>Kisatehtäväpankki</h1>\r\n\r\n      <div className=\"new-favorite-lists\">\r\n        <div className=\"new-list\">\r\n          <h2>Uusimmat tehtävät</h2>\r\n          <div className=\"task-list-title frontpage-item\">\r\n            <span>Tehtävän nimi</span>\r\n            <span>Sarja</span>\r\n            <span>Kategoria</span>\r\n            <span></span>\r\n          </div>\r\n          {newTasks.map((task) => (\r\n            <div className=\"task-list-item frontpage-item new-item\" key={task.id}>\r\n              <span>\r\n                <Link to={`/tehtava/${task.id}`}>\r\n                  {task.name}\r\n                </Link>\r\n              </span>\r\n              <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\r\n              <span>{task.category && task.category.name}</span>\r\n              <span><div className=\"black-basket\" onClick={() => addTaskToBasket(task)} /></span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"favorite-list\">\r\n          <h2>Suosituimmat tehtävät</h2>\r\n          <div className=\"task-list-title frontpage-item\">\r\n            <span>Tehtävän nimi</span>\r\n            <span>Sarja</span>\r\n            <span>Kategoria</span>\r\n            <span></span>\r\n          </div>\r\n          {favoriteTasks.map((task) => (\r\n            <div className=\"task-list-item frontpage-item favorite-item\" key={task.id}>\r\n              <span>\r\n                <Link to={`/tehtava/${task.id}`}>\r\n                  {task.name}\r\n                </Link>\r\n              </span>\r\n              <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\r\n              <span>{task.category && task.category.name}</span>\r\n              <span><div className=\"black-basket\" onClick={() => addTaskToBasket(task)} /></span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FrontPage\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/task`\r\nconst baseUrlPending = `${process.env.REACT_APP_API_URL}/task/pending`\r\n\r\n\r\nconst getTasks = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst getPendingTasks = async () => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n  const response = await axios.get(baseUrlPending, config)\r\n  return response.data\r\n}\r\n\r\nconst getSearchedTasks = async (search) => {\r\n  const response = await axios.post(`${baseUrl}/search`, search)\r\n  return response.data\r\n}\r\n\r\nconst getOneTask = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`)\r\n  return response.data\r\n}\r\n\r\nconst addtask = async (task) => {\r\n  let config = null\r\n  const token = tokenService.getToken()\r\n\r\n  if (token) {\r\n    config = {\r\n      headers: { Authorization: token }\r\n    }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, task, config)\r\n  return response.data\r\n}\r\n\r\nconst updateTask = async (task) => {\r\n  let config = null\r\n  const token = tokenService.getToken()\r\n\r\n  if (token) {\r\n    config = {\r\n      headers: { Authorization: token },\r\n    }\r\n  }\r\n\r\n  const response = await axios.put(`${baseUrl}/${task.id}`, task, config)\r\n  return response.data\r\n}\r\n\r\nconst deleteTask = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nconst acceptTask = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n  const response = await axios.put(`${baseUrl}/${id}/accept`, id, config)\r\n  return response.data\r\n}\r\n\r\nconst updateViews = async (id) => {\r\n  const response = await axios.post(`${baseUrl}/${id}/views`)\r\n  return response.data\r\n}\r\n\r\nexport default { addtask, getTasks, getOneTask, getSearchedTasks, updateTask, deleteTask, getPendingTasks, acceptTask, updateViews }\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/series`\r\n\r\nconst getSeries = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addSeries = async (series) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, series, config)\r\n  return response.data\r\n}\r\n\r\nconst editSerie = async (serie) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n  \r\n  const response = await axios.put(`${baseUrl}/${serie.id}`, serie, config)\r\n  return response.data\r\n\r\n}\r\n\r\nconst deleteSerie = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addSeries, getSeries, deleteSerie, editSerie }\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/rule`\r\n\r\nconst getRules = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addRule = async (rule) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, rule, config)\r\n  return response.data\r\n}\r\n\r\nconst editRule = async (rule) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n  \r\n  const response = await axios.put(`${baseUrl}/${rule.id}`, rule, config)\r\n  return response.data\r\n\r\n}\r\n\r\nconst deleteRule = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addRule, getRules, editRule, deleteRule }\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/category`\r\n\r\nconst getCategories = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addCategory = async (cat) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, cat, config)\r\n  return response.data\r\n}\r\n\r\nconst editCategory = async (category) => {\r\n  console.log(category)\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n  \r\n  const response = await axios.put(`${baseUrl}/${category.id}`, category, config)\r\n  return response.data\r\n\r\n}\r\n\r\nconst deleteCategory = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\n\r\nexport default { addCategory, getCategories, editCategory, deleteCategory }\r\n","import React, { useState } from 'react'\r\nimport taskService from '../services/task'\r\nimport Notification from './Notification'\r\n\r\nconst Search = ({ setTasks, setAllTasks }) => {\r\n\r\n  const [search, setSearch] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  const handleSearch = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const response = await taskService.getSearchedTasks({ search })\r\n      setTasks(response)\r\n      setAllTasks(response)\r\n    } catch (exception) {\r\n      setErrorMessage('Haku ei onnistunut')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleSearch} className=\"search-form\">\r\n        <input\r\n          className=\"search-input\"\r\n          type=\"text\"\r\n          defaultValue=''\r\n          name=\"search\"\r\n          placeholder=\"Hakutermi\"\r\n          onChange={({ target }) => setSearch(target.value)}\r\n        />\r\n        <button type=\"submit\" className=\"search-tasks-button\">Hae</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport taskService from '../services/task'\r\nimport seriesService from '../services/series'\r\nimport ruleService from '../services/rule'\r\nimport categoryService from '../services/category'\r\nimport Notification from './Notification'\r\nimport Select from 'react-select'\r\nimport Search from './Search'\r\n\r\nconst TaskList = ({ user, originalTasks, addTaskToBasket }) => {\r\n  const [tasks, setTasks] = useState(originalTasks)\r\n  const [allTasks, setAllTasks] = useState(originalTasks)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [selectedCategory, setSelectedCategory] = useState([])\r\n  const [selectedSeries, setSelectedSeries] = useState([])\r\n  const [selectedRules, setSelectedRules] = useState('')\r\n  const [categories, setCategories] = useState([])\r\n  const [series, setSeries] = useState([])\r\n  const [rules, setRules] = useState([])\r\n  const [isClearable, setIsClearable] = useState(true)\r\n  const [seriess, setSeriess] = useState([])\r\n\r\n  useEffect(() => {\r\n    categoryService.getCategories().then((response) => {\r\n      setCategories(response)\r\n    })\r\n\r\n    seriesService.getSeries().then((response) => {\r\n      setSeriess(response)\r\n    })\r\n\r\n    ruleService.getRules().then((response) => {\r\n      setRules(response)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setTasks(originalTasks)\r\n    setAllTasks(originalTasks)\r\n  }, [originalTasks])\r\n\r\n  useEffect(() => {\r\n    if (selectedSeries.length > 0 && selectedCategory.length > 0 && selectedRules) {\r\n      let array = []\r\n      for (let i = 0; i < allTasks.length; i++) {\r\n        for (let j = 0; j < allTasks[i].series.length; j++) {\r\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\r\n            array.push(allTasks[i])\r\n          }\r\n        }\r\n      }\r\n      setTasks(array)\r\n    } else if (selectedSeries.length > 0 && selectedCategory.length > 0) {\r\n      let array = []\r\n      for (let i = 0; i < allTasks.length; i++) {\r\n        for (let j = 0; j < allTasks[i].series.length; j++) {\r\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && !array.includes(allTasks[i])) {\r\n            array.push(allTasks[i])\r\n          }\r\n        }\r\n      }\r\n      setTasks(array)\r\n    } else if (selectedSeries.length > 0 && selectedRules) {\r\n      let array = []\r\n      for (let i = 0; i < allTasks.length; i++) {\r\n        for (let j = 0; j < allTasks[i].series.length; j++) {\r\n          if (selectedSeries.includes(allTasks[i].series[j].id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\r\n            array.push(allTasks[i])\r\n          }\r\n        }\r\n      }\r\n      setTasks(array)\r\n    } else if (selectedCategory.length > 0 && selectedRules) {\r\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id) && task.rules.id === selectedRules.id))\r\n    } else if (selectedSeries.length > 0) {\r\n      let array = []\r\n      for (let i = 0; i < allTasks.length; i++) {\r\n        for (let j = 0; j < allTasks[i].series.length; j++) {\r\n          if (selectedSeries.includes(allTasks[i].series[j].id) && !array.includes(allTasks[i])) {\r\n            array.push(allTasks[i])\r\n          }\r\n        }\r\n      }\r\n      setTasks(array)\r\n    } else if (selectedCategory.length > 0) {\r\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id)))\r\n    } else if (selectedRules) {\r\n      setTasks(allTasks.filter(task => task.rules.id === selectedRules.id))\r\n    } else {\r\n      setTasks(allTasks)\r\n    }\r\n  }, [selectedCategory, selectedSeries, selectedRules])\r\n\r\n  const handleDelete = async (task) => {\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\r\n        await taskService.deleteTask(task.id)\r\n        setTasks(tasks.filter(t => t.id !== task.id))\r\n      }\r\n    } catch (exeption) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleSeriesFiltering = (series) => {\r\n    if (series && series.length > 0) {\r\n      setSelectedSeries(series.map(s => s.id))\r\n    } else {\r\n      setSelectedSeries([])\r\n      setTasks(allTasks)\r\n    }\r\n  }\r\n\r\n  const handleCategoryFiltering = (category) => {\r\n    if (category && category.length > 0) {\r\n      setSelectedCategory(category.map(c => c.id))\r\n    } else {\r\n      setSelectedCategory([])\r\n      setTasks(allTasks)\r\n    }\r\n  }\r\n\r\n  const handleRuleFiltering = (rules) => {\r\n    if (rules) {\r\n      setSelectedRules(rules)\r\n    } else {\r\n      setSelectedRules('')\r\n      setTasks(allTasks)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-list\">\r\n      <h1>Kisatehtäväpankki</h1>\r\n      <div className=\"search-filter-container\">\r\n        <div className=\"search\"><Search setTasks={setTasks} setAllTasks={setAllTasks} /></div>\r\n\r\n        <div className=\"filter\">\r\n          <Select\r\n            name=\"filter-series\"\r\n            getOptionLabel={option => `${option.name}`}\r\n            getOptionValue={option => `${option.id}`}\r\n            onChange={handleSeriesFiltering}\r\n            options={seriess}\r\n            isClearable={isClearable}\r\n            placeholder={\"Sarja\"}\r\n            isMulti={true}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"filter\">\r\n          <Select\r\n            name=\"filter-category\"\r\n            getOptionLabel={option => `${option.name}`}\r\n            getOptionValue={option => `${option.id}`}\r\n            onChange={handleCategoryFiltering}\r\n            options={categories}\r\n            isClearable={isClearable}\r\n            placeholder={\"Kategoria\"}\r\n            isMulti={true}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"filter\">\r\n          <Select\r\n            name=\"filter-rules\"\r\n            getOptionLabel={option => `${option.name}`}\r\n            getOptionValue={option => `${option.id}`}\r\n            onChange={handleRuleFiltering}\r\n            options={rules}\r\n            isClearable={isClearable}\r\n            placeholder={\"Säännöt\"}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Notification message={errorMessage} />\r\n      {tasks && tasks.length > 0 &&\r\n        <div className=\"task-list-title\">\r\n          <span>Tehtävän nimi</span>\r\n          <span>Sarja</span>\r\n          <span>Kategoria</span>\r\n          {user && <span></span>}\r\n          <span></span>\r\n        </div>\r\n      }\r\n      {tasks.map((task) => (\r\n        <div className=\"task-list-item\" key={task.id}>\r\n          <span>\r\n            <Link to={`/tehtava/${task.id}`} onClick={() => taskService.updateViews(task.id)}>\r\n              {task.name}\r\n            </Link>\r\n            <p>Katselukertoja: {task.views}</p>\r\n          </span>\r\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\r\n          <span>{task.category && task.category.name}</span>\r\n          {user && <span><button className=\"delete-button\" onClick={() => handleDelete(task)}>Poista</button></span>}\r\n          <span><div className=\"black-basket\" onClick={() => addTaskToBasket(task)} /></span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default TaskList\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport taskService from '../services/task'\r\nimport Notification from './Notification'\r\n\r\nconst Basket = ({ tasks, removeTaskFromBasket }) => {\r\n\r\n  return (\r\n    <div className=\"task-list\">\r\n      <h2>Kisaan valitut tehtävät</h2>\r\n\r\n      {tasks && tasks.length > 0 &&\r\n        <div className=\"task-list-title\">\r\n          <span>Tehtävän nimi</span>\r\n          <span>Sarja</span>\r\n          <span>Kategoria</span>\r\n          <span></span>\r\n        </div>\r\n      }\r\n      {tasks.map((task) => (\r\n        <div className=\"task-list-item\" key={task.id}>\r\n          <span>\r\n            <Link to={`/tehtava/${task.id}`} onClick={() => taskService.updateViews(task.id)}>\r\n              {task.name}\r\n            </Link>\r\n            <p>Katselukertoja: {task.views}</p>\r\n          </span>\r\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\r\n          <span>{task.category && task.category.name}</span>\r\n          <span className=\"delete-task-from-basket\" onClick={() => removeTaskFromBasket(task.id)}>x</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Basket\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/user`\r\n\r\nconst getUsers = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addUser = async (credentials) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() }\r\n  }\r\n  const response = await axios.post(baseUrl, credentials, config)\r\n  return response.data\r\n}\r\n\r\nconst editUser = async (user) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() }\r\n  }\r\n\r\n  const response = await axios.put(baseUrl, user, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addUser, getUsers, editUser }\r\n","import React, { useState, useEffect } from 'react'\r\nimport Notification from './Notification'\r\nimport userService from '../services/user'\r\n\r\nconst AddAdmin = () => {\r\n  const [message, setMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\r\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\r\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(null)\r\n  const [emailErrorMessage, setEmailErrorMessage] = useState(null)\r\n  const [name, setName] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [users, setUsers] = useState([])\r\n  const [email, setEmail] = useState('')\r\n  const [allowNotifications, setAllowNotifications] = useState(true)\r\n\r\n  useEffect(() => {\r\n    userService.getUsers().then((response) => {\r\n      setUsers(response)\r\n    })\r\n  }, [])\r\n\r\n  const handleAddAdmin = async (event) => {\r\n    event.preventDefault()\r\n    setNameErrorMessage(null)\r\n    setUsernameErrorMessage(null)\r\n    setPasswordErrorMessage(null)\r\n    setEmailErrorMessage(null)\r\n    if (name.length < 3) {\r\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\r\n    }\r\n    if (username.length < 3) {\r\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\r\n    }\r\n    if (password.length < 3) {\r\n      setPasswordErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\r\n    }\r\n    if (users.some((user) => (user.username === username))) {\r\n      setUsernameErrorMessage('Käyttäjätunnus on varattu')\r\n    }\r\n\r\n    if (name.length < 3 || username.length < 3 || password.length < 3\r\n      || users.some((user) => (user.username === username))) {\r\n      return\r\n    }\r\n    try {\r\n      await userService.addUser({\r\n        name, username, email, password, allowNotifications\r\n      })\r\n      setName('')\r\n      setUsername('')\r\n      setEmail('')\r\n      setPassword('')\r\n      setAllowNotifications(true)\r\n      setMessage('Ylläpitäjä lisätty!')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    } catch (exception) {\r\n      setErrorMessage('Lisääminen epäonnistui')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"signup-form\">\r\n      <h2>Lisää ylläpitäjä</h2>\r\n      <Notification message={message} type=\"success\" />\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleAddAdmin}>\r\n        <div className=\"Testi\">\r\n          <Notification message={nameErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"Name\"\r\n            placeholder=\"Nimi\"\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Notification message={usernameErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"username\"\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"Username\"\r\n            placeholder=\"Käyttäjätunnus\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Notification message={emailErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"email\"\r\n            type=\"email\"\r\n            value={email}\r\n            name=\"email\"\r\n            placeholder=\"Sähköpostiosoite\"\r\n            onChange={({ target }) => setEmail(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Notification message={passwordErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Password\"\r\n            placeholder=\"Salasana\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Vastaanota ilmoituksia:\r\n            <div className=\"admin-radio\" onChange={({ target }) => setAllowNotifications(target.value)}>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"notifications\"\r\n                  value={true}\r\n                  defaultChecked\r\n                />\r\n                Kyllä\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"notifications\"\r\n                  value={false}\r\n                />\r\n                Ei\r\n              </label>\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\" className=\"signup-button\">Lisää</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddAdmin\r\n","import React, { useState, Fragment } from 'react'\r\nimport Notification from './Notification'\r\nimport ruleService from '../services/rule'\r\nimport Select from 'react-select'\r\n\r\nconst Rule = ({ rules, setRules, categories }) => {\r\n  const [newRuleName, setNewRuleName] = useState('')\r\n  const [modifiedRuleName, setModifiedRuleName] = useState('')\r\n  const [modifiedRuleId, setModifiedRuleId] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [modifyVisible, setModifyVisible] = useState(false)\r\n  const [acceptedCategories, setAcceptedCategories] = useState([])\r\n  const [modifiedCategories, setModifiedCategories] = useState([])\r\n  const [isClearable, setIsClearable] = useState(true)\r\n\r\n  const handleRuleAdd = async (event) => {\r\n    event.preventDefault()\r\n    const newCategories = acceptedCategories\r\n    try {\r\n      const addedRule = await ruleService.addRule({\r\n        rules: newRuleName, acceptedCategories: acceptedCategories.map(category => category.id)\r\n      })\r\n      setNewRuleName('')\r\n      setAcceptedCategories([])\r\n      setRules(rules.concat({ ...addedRule, acceptedCategories: newCategories }))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleRuleDelete = async (rule) => {\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa säännön: ${rule.name}`)) {\r\n        await ruleService.deleteRule(rule.id)\r\n        setRules(rules.filter(r => r.id !== rule.id))\r\n      }\r\n    } catch (exeption) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleRuleModify = async (event) => {\r\n    event.preventDefault()\r\n    const modifiedRule = { id: modifiedRuleId, name: modifiedRuleName, acceptedCategories: modifiedCategories }\r\n    try {\r\n      await ruleService.editRule({ id: modifiedRuleId, name: modifiedRuleName, acceptedCategories: modifiedCategories.map(category => category.id) })\r\n      setModifyVisible(false)\r\n      setRules(rules.map(rule => rule.id !== modifiedRule.id ? rule : modifiedRule))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleShowModify = (rule) => {\r\n    setModifyVisible(true)\r\n    setModifiedRuleId(rule.id)\r\n    setModifiedRuleName(rule.name)\r\n    setModifiedCategories(rule.acceptedCategories)\r\n  }\r\n\r\n  const handleAddCategories = (categories) => {\r\n    setAcceptedCategories(categories)\r\n  }\r\n\r\n  const handleModifyCategories = (categories) => {\r\n    setModifiedCategories(categories)\r\n  }\r\n\r\n  return (\r\n    <div className=\"rule-form\">\r\n      <Notification message={errorMessage} type=\"error\" />\r\n\r\n      {rules && rules.map((rule) => (\r\n        <div className=\"rule-list-item\" key={rule.id}>\r\n          {modifyVisible && modifiedRuleId === rule.id ?\r\n            <div className=\"rule-form-item\">\r\n              <form onSubmit={handleRuleModify}>\r\n                <div className=\"item-modify\">\r\n                  <input\r\n                    className=\"rule\"\r\n                    type=\"text\"\r\n                    value={modifiedRuleName}\r\n                    name=\"Category\"\r\n                    onChange={({ target }) => setModifiedRuleName(target.value)}\r\n                  />\r\n                  <div className=\"item-buttons-save\">\r\n                    <button type=\"submit\" className=\"rule-save-button\">Tallenna</button>\r\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"modify-acceptedCategories\">\r\n                  <Select\r\n                    name=\"accepted-categories\"\r\n                    value={modifiedCategories}\r\n                    getOptionLabel={option => `${option.name}`}\r\n                    getOptionValue={option => `${option.id}`}\r\n                    onChange={handleModifyCategories}\r\n                    options={categories}\r\n                    isClearable={isClearable}\r\n                    placeholder={\"Säännön kategoriat\"}\r\n                    isMulti={true}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n          :\r\n          <Fragment>\r\n            <p className=\"item-name\">{rule.name}</p>\r\n            <div className=\"item-buttons\">\r\n              <button onClick={() => handleShowModify(rule)} className=\"modify-button\">Muokkaa</button>\r\n              <button onClick={() => handleRuleDelete(rule)} className=\"delete-button\">Poista</button>\r\n            </div>\r\n            <div className=\"break\"></div>\r\n            <div className=\"accepted-categories-list\">\r\n              {rule.acceptedCategories && rule.acceptedCategories.map(category => (\r\n                  <span key={category.id}>{category.name} </span>\r\n                ))}\r\n            </div>\r\n          </Fragment>\r\n          }\r\n        </div>))\r\n      }\r\n\r\n      <form onSubmit={handleRuleAdd} className=\"add-form\">\r\n        <div className=\"item-add\">\r\n          <input\r\n            className=\"rule\"\r\n            type=\"text\"\r\n            value={newRuleName}\r\n            name=\"Rules\"\r\n            placeholder=\"Uusi sääntö\"\r\n            onChange={({ target }) => setNewRuleName(target.value)}\r\n          />\r\n          <button type=\"submit\" className=\"rule-add-button\">Lisää</button>\r\n        </div>\r\n\r\n        <div className=\"add-acceptedCategories\">\r\n          <Select\r\n            name=\"accepted-categories\"\r\n            value={acceptedCategories}\r\n            getOptionLabel={option => `${option.name}`}\r\n            getOptionValue={option => `${option.id}`}\r\n            onChange={handleAddCategories}\r\n            options={categories}\r\n            isClearable={isClearable}\r\n            placeholder={\"Uuden säännön kategoriat\"}\r\n            isMulti={true}\r\n          />\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Rule\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/language`\r\n\r\nconst getLanguages = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addLanguage = async (language) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, language, config)\r\n  return response.data\r\n}\r\n\r\nconst editLanguage = async (language) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.put(`${baseUrl}/${language.id}`, language, config)\r\n  return response.data\r\n\r\n}\r\n\r\n\r\nconst deleteLanguage = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addLanguage, getLanguages, deleteLanguage, editLanguage }\r\n","import React, { useState, Fragment } from 'react'\r\nimport Notification from './Notification'\r\nimport languageService from '../services/language'\r\n\r\nconst Language = ({ languages, setLanguages }) => {\r\n  const [languageName, setLanguageName] = useState('')\r\n  const [modifiedLanguageName, setModifiedLanguageName] = useState('')\r\n  const [modifiedLanguageId, setModifiedLanguageId] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [modifyVisible, setModifyVisible] = useState(false)\r\n\r\n  const handleLanguageAdd = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const addedLanguage = await languageService.addLanguage({\r\n        language: languageName,\r\n      })\r\n      setLanguageName('')\r\n      setLanguages(languages.concat(addedLanguage))\r\n    } catch (exception) {\r\n      setErrorMessage('Kielen lisääminen ei onnistunut')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleLanguageDelete = async (language) => {\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa kielen: ${language.name}`)) {\r\n        await languageService.deleteLanguage(language.id)\r\n        setLanguages(languages.filter(l => l.id !== language.id))\r\n      }\r\n    } catch (exeption) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleLanguageModify = async (event) => {\r\n    event.preventDefault()\r\n    const modifiedLanguage = { id: modifiedLanguageId, name: modifiedLanguageName }\r\n    try {\r\n      await languageService.editLanguage(modifiedLanguage)\r\n      setModifyVisible(false)\r\n      setLanguages(languages.map(language => language.id !== modifiedLanguage.id ? language : modifiedLanguage))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleShowModify = (language) => {\r\n    setModifyVisible(true)\r\n    setModifiedLanguageId(language.id)\r\n    setModifiedLanguageName(language.name)\r\n  }\r\n\r\n  return (\r\n    <div className=\"language-form\">\r\n      <Notification message={errorMessage} type=\"error\" />\r\n\r\n      {languages && languages.map((language) => (\r\n        <div className=\"language-list-item\" key={language.id}>\r\n          {modifyVisible && modifiedLanguageId === language.id ?\r\n            <div className=\"language-form-item\">\r\n              <form onSubmit={handleLanguageModify} >\r\n                <div className=\"item-modify\">\r\n                  <input\r\n                    className=\"language\"\r\n                    type=\"text\"\r\n                    value={modifiedLanguageName}\r\n                    name=\"Language\"\r\n                    onChange={({ target }) => setModifiedLanguageName(target.value)}\r\n                  />\r\n                  <div className=\"item-buttons-save\">\r\n                    <button type=\"submit\" className=\"language-save-button\">Tallenna</button>\r\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            :\r\n            <Fragment>\r\n              <p className=\"item-name\">{language.name}</p>\r\n              <div className=\"item-buttons\">\r\n                <button onClick={() => handleShowModify(language)} className=\"modify-button\">Muokkaa</button>\r\n                <button onClick={() => handleLanguageDelete(language)} className=\"delete-button\">Poista</button>\r\n              </div>\r\n            </Fragment>\r\n            }\r\n        </div>))\r\n      }\r\n\r\n      <form onSubmit={handleLanguageAdd} className=\"add-form\">\r\n        <div className=\"item-add\">\r\n          <input\r\n            className=\"language\"\r\n            type=\"text\"\r\n            value={languageName}\r\n            name=\"Language\"\r\n            placeholder=\"Uusi kieli\"\r\n            onChange={({ target }) => setLanguageName(target.value)}\r\n          />\r\n          <button type=\"submit\" className=\"language-add-button\">Lisää</button>\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Language\r\n","import React, { useState, Fragment } from 'react'\r\nimport { CirclePicker } from 'react-color'\r\nimport Notification from './Notification'\r\nimport seriesService from '../services/series'\r\n\r\nconst Series = ({ series, setSeries }) => {\r\n  const [name, setName] = useState('')\r\n  const [modifiedSerieName, setModifiedSerieName] = useState('')\r\n  const [modifiedSerieId, setModifiedSerieId] = useState('')\r\n  const [modifiedSerieColor, setModifiedSerieColor] = useState('')\r\n  const [color, setColor] = useState('#ffffff')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [modifyVisible, setModifyVisible] = useState(false)\r\n\r\n  const handleSeriesAdd = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const addedSerie = await seriesService.addSeries({ name, color })\r\n      setName('')\r\n      setColor('')\r\n      setSeries(series.concat(addedSerie))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleSerieDelete = async (serie) => {\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa sarjan: ${serie.name}`)) {\r\n        await seriesService.deleteSerie(serie.id)\r\n        setSeries(series.filter(s => s.id !== serie.id))\r\n      }\r\n    } catch (exeption) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleSerieModify = async (event) => {\r\n    event.preventDefault()\r\n    const modifiedSerie = { id: modifiedSerieId, name: modifiedSerieName, color: modifiedSerieColor }\r\n    try {\r\n      await seriesService.editSerie(modifiedSerie)\r\n      setModifyVisible(false)\r\n      setSeries(series.map(serie => serie.id !== modifiedSerie.id ? serie : modifiedSerie))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleShowModify = (serie) => {\r\n    setModifyVisible(true)\r\n    setModifiedSerieId(serie.id)\r\n    setModifiedSerieName(serie.name)\r\n    setModifiedSerieColor(serie.color)\r\n  }\r\n\r\n  return (\r\n    <div className=\"series-form\">\r\n      <Notification message={errorMessage} type=\"error\" />\r\n\r\n      {series && series.map((serie) => (\r\n        <div className=\"serie-list-item\" key={serie.id}>\r\n          {modifyVisible && modifiedSerieId === serie.id ?\r\n            <div className=\"serie-form-item\">\r\n              <form onSubmit={handleSerieModify} >\r\n                <div className=\"item-modify\">\r\n                  <input\r\n                    className=\"serie\"\r\n                    type=\"text\"\r\n                    value={modifiedSerieName}\r\n                    name=\"Serie\"\r\n                    onChange={({ target }) => setModifiedSerieName(target.value)}\r\n                  />\r\n                  <div className=\"item-buttons-save\">\r\n                    <button type=\"submit\" className=\"serie-save-button\">Tallenna</button>\r\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\r\n                  </div>\r\n                  <div className=\"color-picker\">\r\n                    <CirclePicker\r\n                      color={modifiedSerieColor}\r\n                      onChangeComplete={color => setModifiedSerieColor(color.hex)}\r\n                      colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\r\n                        \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          :\r\n          <Fragment>\r\n            <p className=\"item-name\"><span>{serie.name}</span><span style={{ backgroundColor: serie.color, display: 'inline-block', borderRadius: '50%', height: '27px', width: '27px', marginLeft: '5px' }} /></p>\r\n            <div className=\"item-buttons\">\r\n              <button onClick={() => handleShowModify(serie)} className=\"modify-button\">Muokkaa</button>\r\n              <button onClick={() => handleSerieDelete(serie)} className=\"delete-button\">Poista</button>\r\n            </div>\r\n          </Fragment>\r\n          }\r\n        </div>))\r\n      }\r\n\r\n      <form onSubmit={handleSeriesAdd} className=\"add-form\">\r\n        <div className=\"item-add\">\r\n          <input\r\n            className=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"Name\"\r\n            placeholder=\"Uusi sarja\"\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n          <button type=\"submit\" className=\"series-submit-button\">Lisää</button>\r\n        </div>\r\n        <div className=\"color-picker\">\r\n          <CirclePicker\r\n            color={color}\r\n            onChangeComplete={color => setColor(color.hex)}\r\n            colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\r\n              \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\r\n          />\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Series\r\n","import React, { useState, Fragment } from 'react'\r\nimport Notification from './Notification'\r\nimport categoryService from '../services/category'\r\n\r\nconst Category = ({ categories, setCategories }) => {\r\n  const [newCategoryName, setNewCategoryName] = useState('')\r\n  const [modifiedCategoryName, setModifiedCategoryName] = useState('')\r\n  const [modifiedCategoryId, setModifiedCategoryId] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [modifyVisible, setModifyVisible] = useState(false)\r\n\r\n  const handleCategoryAdd = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const addedCategory = await categoryService.addCategory({\r\n        category: newCategoryName\r\n      })\r\n      setNewCategoryName('')\r\n      setCategories(categories.concat(addedCategory))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleCategoryDelete = async (category) => {\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa kategorian: ${category.name}`)) {\r\n        await categoryService.deleteCategory(category.id)\r\n        setCategories(categories.filter(c => c.id !== category.id))\r\n      }\r\n    } catch (exeption) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleCategoryModify = async (event) => {\r\n    event.preventDefault()\r\n    const modifiedCategory = { id: modifiedCategoryId, name: modifiedCategoryName }\r\n    try {\r\n      await categoryService.editCategory(modifiedCategory)\r\n      setModifyVisible(false)\r\n      setCategories(categories.map(category => category.id !== modifiedCategory.id ? category : modifiedCategory))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleShowModify = (category) => {\r\n    setModifyVisible(true)\r\n    setModifiedCategoryId(category.id)\r\n    setModifiedCategoryName(category.name)\r\n  }\r\n\r\n  return (\r\n    <div className=\"category-form\" >\r\n      <Notification message={errorMessage} type=\"error\" />\r\n\r\n      {categories && categories.map((category) => (\r\n        <div className=\"category-list-item\" key={category.id}>\r\n          {modifyVisible && modifiedCategoryId === category.id ?\r\n            <div className=\"category-form-item\">\r\n              <form onSubmit={handleCategoryModify} >\r\n                <div className=\"item-modify\">\r\n                  <input\r\n                    className=\"category\"\r\n                    type=\"text\"\r\n                    value={modifiedCategoryName}\r\n                    name=\"Category\"\r\n                    onChange={({ target }) => setModifiedCategoryName(target.value)}\r\n                  />\r\n                  <div className=\"item-buttons-save\">\r\n                    <button type=\"submit\" className=\"category-save-button\">Tallenna</button>\r\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            :\r\n            <Fragment>\r\n              <p className=\"item-name\">{category.name}</p>\r\n              <div className=\"item-buttons\">\r\n                <button onClick={() => handleShowModify(category)} className=\"modify-button\">Muokkaa</button>\r\n                <button onClick={() => handleCategoryDelete(category)} className=\"delete-button\">Poista</button>\r\n              </div>\r\n            </Fragment>\r\n          }\r\n        </div>))\r\n      }\r\n\r\n      <form onSubmit={handleCategoryAdd} className=\"add-form\">\r\n        <div className=\"item-add\">\r\n          <input\r\n            className=\"category\"\r\n            type=\"text\"\r\n            value={newCategoryName}\r\n            name=\"Category\"\r\n            placeholder=\"Uusi kategoria\"\r\n            onChange={({ target }) => setNewCategoryName(target.value)}\r\n          />\r\n          <button type=\"submit\" className=\"category-add-button\">Lisää</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Category\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport Rule from './Rule'\r\nimport Language from './Language'\r\nimport Series from './Series'\r\nimport Category from './Category'\r\nimport ruleService from '../services/rule'\r\nimport seriesService from '../services/series'\r\nimport languageService from '../services/language'\r\nimport categoryService from '../services/category'\r\n\r\nconst AddTaskDropdown = () => {\r\n  const [rules, setRules] = useState([])\r\n  const [categories, setCategories] = useState([])\r\n  const [languages, setLanguages] = useState([])\r\n  const [series, setSeries] = useState([])\r\n  const [showCategories, setShowCategories] = useState(false)\r\n  const [showRules, setShowRules] = useState(false)\r\n  const [showLanguages, setShowLanguages] = useState(false)\r\n  const [showSeries, setShowSeries] = useState(false)\r\n\r\n  useEffect(() => {\r\n    ruleService.getRules().then((response) => {\r\n      setRules(response)\r\n    })\r\n    categoryService.getCategories().then((response) => {\r\n      setCategories(response)\r\n    })\r\n    seriesService.getSeries().then((response) => {\r\n      setSeries(response)\r\n    })\r\n    languageService.getLanguages().then((response) => {\r\n      setLanguages(response)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"crls-container\">\r\n      <div className=\"task-types-menu\">\r\n        {showSeries ?\r\n          <Fragment>\r\n            <button className=\"task-types\" onClick={() => setShowSeries(!showSeries)}>Sulje sarjat</button>\r\n            <Series series={series} setSeries={setSeries} />\r\n          </Fragment>\r\n          :\r\n          <button className=\"task-types\" onClick={() => setShowSeries(!showSeries)}>Sarjat</button>\r\n        }\r\n      </div>\r\n      <div className=\"task-types-menu\">\r\n        {showRules ?\r\n          <Fragment>\r\n            <button className=\"task-types\" onClick={() => setShowRules(!showRules)}>Sulje säännöt</button>\r\n            <Rule rules={rules} setRules={setRules} categories={categories} />\r\n          </Fragment>\r\n          :\r\n          <button className=\"task-types\" onClick={() => setShowRules(!showRules)}>Säännöt</button>\r\n        }\r\n      </div>\r\n      <div className=\"task-types-menu\">\r\n        {showCategories ?\r\n          <Fragment>\r\n            <button className=\"task-types\" onClick={() => setShowCategories(!showCategories)}>Sulje kategoriat</button>\r\n            <Category categories={categories} setCategories={setCategories} />\r\n          </Fragment>\r\n          :\r\n          <button className=\"task-types\" onClick={() => setShowCategories(!showCategories)}>Kategoriat</button>\r\n        }\r\n      </div>\r\n      <div className=\"task-types-menu\">\r\n        {showLanguages ?\r\n          <Fragment>\r\n            <button className=\"task-types\" onClick={() => setShowLanguages(!showLanguages)}>Sulje kielet</button>\r\n            <Language languages={languages} setLanguages={setLanguages} />\r\n          </Fragment>\r\n          :\r\n          <button className=\"task-types\" onClick={() => setShowLanguages(!showLanguages)}>Kielet</button>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddTaskDropdown\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/file`\r\n\r\nconst updateFiles = async (files) => {\r\n  const config = {\r\n    headers: { 'Content-Type': 'multipart/form-data' }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, files, config)\r\n  return response.data\r\n}\r\n\r\nexport default { updateFiles }\r\n","import React from 'react'\r\nimport MarkdownIt from 'markdown-it'\r\nimport MdEditor from 'react-markdown-editor-lite'\r\nimport 'react-markdown-editor-lite/lib/index.css'\r\n\r\nconst MDEditor = ({ setText, setMD, value }) => {\r\n  const mdParser = new MarkdownIt()\r\n\r\n  const handleEditorChange = ({ html, text }) => {\r\n    setText(html)\r\n    setMD(text)\r\n  }\r\n\r\n  return (\r\n    <MdEditor\r\n      value={value}\r\n      renderHTML={(text) => mdParser.render(text)}\r\n      onChange={handleEditorChange}\r\n    />\r\n  )\r\n}\r\n\r\nexport default MDEditor\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport Notification from './Notification'\r\nimport taskService from '../services/task'\r\nimport fileService from '../services/file'\r\nimport ruleService from '../services/rule'\r\nimport seriesService from '../services/series'\r\nimport languageService from '../services/language'\r\nimport MDEditor from './MDEditor'\r\nimport Dropzone from 'react-dropzone'\r\n\r\nconst AddTask = () => {\r\n\r\n  const [message, setMessage] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [assignmentText, setAssignmentText] = useState('')\r\n  const [gradingScale, setGradingScale] = useState('')\r\n  const [supervisorInstructions, setSupervisorInstructions] = useState('')\r\n  const [assignmentTextMD, setAssignmentTextMD] = useState('')\r\n  const [gradingScaleMD, setGradingScaleMD] = useState('')\r\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState('')\r\n  const [rules, setRules] = useState([])\r\n  const [rule, setRule] = useState('')\r\n  const [categories, setCategories] = useState([])\r\n  const [category, setCategory] = useState('')\r\n  const [seriess, setSeriess] = useState([])\r\n  const [series, setSeries] = useState([])\r\n  const [languages, setLanguages] = useState([])\r\n  const [language, setLanguage] = useState('')\r\n  const [creatorName, setCreatorName] = useState('')\r\n  const [creatorEmail, setCreatorEmail] = useState('')\r\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\r\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\r\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\r\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\r\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\r\n  const [files, setFiles] = useState([])\r\n\r\n  useEffect(() => {\r\n    ruleService.getRules().then(response => {\r\n      setRules(response)\r\n    })\r\n    seriesService.getSeries().then(response => {\r\n      setSeriess(response)\r\n    })\r\n    languageService.getLanguages().then(response => {\r\n      setLanguages(response)\r\n    })\r\n  }, [])\r\n\r\n  const handleRuleChange = (e) => {\r\n    setRule(e.target.value)\r\n    setCategory('')\r\n    if (e.target.value) {\r\n      const foundRule = rules.find(r => r.id === e.target.value)\r\n      setCategories(foundRule.acceptedCategories)\r\n    } else {\r\n      setCategories([])\r\n    }\r\n  }\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setCategory(e.target.value)\r\n  }\r\n\r\n  const handleSeriesChange = (e) => {\r\n    let options = e.target.options\r\n    let values = []\r\n    for (var i = 0, l = options.length; i < l; i++) {\r\n      if (options[i].selected && options[i].value !== '') {\r\n        values.push(options[i].value)\r\n      }\r\n    }\r\n    setSeries(values)\r\n  }\r\n\r\n  const handleLanguageChange = (e) => {\r\n    setLanguage(e.target.value)\r\n  }\r\n\r\n  const handleAddTask = async (event) => {\r\n    event.preventDefault()\r\n    setNameErrorMessage(null)\r\n    setAssignmentTextErrorMessage(null)\r\n    setCreatorNameErrorMessage(null)\r\n    setCreatorEmailErrorMessage(null)\r\n    setDropDownErrorMessage(null)\r\n    if (name.length < 1) {\r\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\r\n    }\r\n    if (assignmentText.length < 1) {\r\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\r\n    }\r\n    if (creatorName.length < 1) {\r\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\r\n    }\r\n    if (creatorEmail.length < 1) {\r\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\r\n    }\r\n    if (language === '' || rule === '' || series === '' || category === '') {\r\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\r\n    }\r\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\r\n            || language === '' || rule === '' || series === '' || category === '') {\r\n      return\r\n    }\r\n    setAssignmentText(JSON.stringify(assignmentText))\r\n    setGradingScale(JSON.stringify(gradingScale))\r\n    setSupervisorInstructions(JSON.stringify(supervisorInstructions))\r\n\r\n    let formData = new FormData()\r\n\r\n    if (files.length > 0) {\r\n      for (let i = 0; i < files.length; i++) {\r\n          formData.append('filesToAdd', files[i], files[i].name)\r\n      }\r\n    }\r\n\r\n    let addedFiles = []\r\n\r\n    try {\r\n      addedFiles = await fileService.updateFiles(formData)\r\n      await taskService.addtask({\r\n        name, rule, category, series,\r\n        language, assignmentText, gradingScale,\r\n        creatorName, creatorEmail, supervisorInstructions,\r\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD,\r\n        files: addedFiles\r\n      })\r\n      setName('')\r\n      setRule('')\r\n      setCategory('')\r\n      setSeries('')\r\n      setLanguage('')\r\n      setAssignmentText('')\r\n      setGradingScale('')\r\n      setCreatorEmail('')\r\n      setCreatorName('')\r\n      setSupervisorInstructions('')\r\n      setMessage('Tehtävä lisätty!')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n        window.location.reload()\r\n      }, 2000)\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const onDrop = (newFiles) => {\r\n    setFiles(files.concat(newFiles))\r\n  }\r\n\r\n  const handleDeleteFile = (e, name) => {\r\n    e.stopPropagation()\r\n    setFiles(files.filter(file => file.name !== name))\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-task-container\">\r\n      <h2>Lisää tehtävä</h2>\r\n      <Notification message={message} type=\"success\" />\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleAddTask}>\r\n        <div>\r\n          <Notification message={nameErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"task-title\"\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"Name\"\r\n            placeholder=\"Tehtävän nimi\"\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h4>Tehtävänanto</h4>\r\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\r\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} />\r\n        </div>\r\n        <div>\r\n          <h4>Arvostelu</h4>\r\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} />\r\n        </div>\r\n        <div className=\"instructions\">\r\n          <h4>Rastimiehen ohje</h4>\r\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} />\r\n        </div>\r\n        <Notification message={dropDownErrorMessage} type=\"error\" />\r\n        <div className=\"dropdowns\">\r\n          <div>\r\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\r\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\r\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <select className=\"rule-select\" value={rule} onChange={(e) => handleRuleChange(e)}>\r\n              <option value=\"\">Säännöt</option>\r\n              {rules.map(rule => <option className=\"rule-options\" key={rule.id} value={rule.id}>{rule.name}</option>)}\r\n            </select>\r\n            <br/>\r\n            <select className=\"category-select\" value={category} onChange={(e) => handleCategoryChange(e)}>\r\n              <option value=\"\">Kategoria</option>\r\n              {categories.map(category => <option className=\"category-options\" key={category.id} value={category.id}>{category.name}</option>)}\r\n            </select>\r\n            <br/>\r\n            <select className=\"language-select\" value={language} onChange={(e) => handleLanguageChange(e)}>\r\n              <option value=\"\">Kieli</option>\r\n              {languages.map(language => <option className=\"language-options\" key={language.id} value={language.id}>{language.name}</option>)}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"creator\">\r\n          <div>\r\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\r\n            <input\r\n              className=\"\"\r\n              type=\"text\"\r\n              value={creatorName}\r\n              name=\"CreatorName\"\r\n              placeholder=\"Lisääjän nimi\"\r\n              onChange={({ target }) => setCreatorName(target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\r\n            <input\r\n              className=\"\"\r\n              type=\"text\"\r\n              value={creatorEmail}\r\n              name=\"CreatorEmail\"\r\n              placeholder=\"Lisääjän sähköposti\"\r\n              onChange={({ target }) => setCreatorEmail(target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <Dropzone onDrop={onDrop}>\r\n          {({getRootProps, getInputProps}) => (\r\n            <div {...getRootProps()}>\r\n              <input {...getInputProps()} />\r\n              <div className=\"files\">\r\n                <div className=\"title\">Liitetiedostot</div>\r\n                {files.length > 0 &&\r\n                  <React.Fragment>\r\n                    {files.map((file) => (\r\n                      <div key={file.name}>{file.name}<b onClick={(e) => handleDeleteFile(e, file.name)}>x</b></div>\r\n                    ))}\r\n                  </React.Fragment>\r\n                }\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Dropzone>\r\n\r\n        <button type=\"submit\" className=\"add-task-button\">Lisää tehtävä</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default AddTask","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport taskService from '../services/task'\r\nimport Notification from './Notification'\r\nimport tokenService from '../services/token'\r\n\r\n\r\nconst TaskListPending = () => {\r\n  const [tasks, setTasks] = useState([])\r\n  const [message, setMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (!tokenService.getToken()) {\r\n      const loggedUserJSON = window.localStorage.getItem('loggedUser')\r\n      if (loggedUserJSON) {\r\n        const loggedUser = JSON.parse(loggedUserJSON)\r\n        tokenService.setToken(loggedUser.token)\r\n      }\r\n    }\r\n    taskService.getPendingTasks().then((response) => {\r\n      setTasks(response)\r\n    })\r\n  }, [])\r\n\r\n  const handleAccept = (id) => {\r\n    try {\r\n      taskService.acceptTask(id)\r\n      setTasks(tasks.filter(t => t.id !== id))\r\n      setMessage('Tehtävä hyväksytty')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa tehtävän: ${tasks.find(t => t.id === id).name}`)) {\r\n        await taskService.deleteTask(id)\r\n        setTasks(tasks.filter(t => t.id !== id))\r\n      }\r\n    } catch (exeption) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-list\">\r\n      <h1>Hyväksyntää odottavat kisatehtävät</h1>\r\n      <Notification message={message} type=\"success\" />\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      {tasks && tasks.length > 0 &&\r\n        <div className=\"task-list-title\">\r\n          <span>Tehtävän nimi</span>\r\n          <span>Sarja</span>\r\n          <span>Kategoria</span>\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n      }\r\n      {tasks.map((task) => (\r\n        <div className={`task-list-item pending`} key={task.id}>\r\n          <span>\r\n            <Link to={`/tehtava/${task.id}`}>\r\n              {task.name}\r\n            </Link>\r\n          </span>\r\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\r\n          <span>{task.category && task.category.name}</span>\r\n          <span>\r\n            <button className=\"accept-button\" onClick={() => handleAccept(task.id)}>Hyväksy</button>\r\n            <button className=\"delete-button\" onClick={() => handleDelete(task.id)}>Poista</button>\r\n          </span>\r\n          <span></span>\r\n        </div>\r\n      ))}\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default TaskListPending\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport TaskListPending from './TaskListPending'\r\n\r\nconst Admin = () => (\r\n  <div>\r\n    <TaskListPending />\r\n    <Link to=\"/omasivu\">Omat tiedot</Link>\r\n    <br />\r\n    <Link to=\"/lisaa_admin\">Lisää ylläpitäjä</Link>\r\n    <br />\r\n    <Link to=\"/lisaa_pudotusvalikkoon\">Hallinnoi sääntöjä/kieliä/sarjoja/kategorioita</Link>\r\n  </div>\r\n)\r\n\r\nexport default Admin\r\n","import React, { useState } from 'react'\r\nimport Notification from './Notification'\r\nimport userService from '../services/user'\r\n\r\nconst EditUser = ({ setShowEdit, user, setUser, setMessage }) => {\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\r\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\r\n  const [emailErrorMessage, setEmailErrorMessage] = useState(null)\r\n  const [name, setName] = useState(user.name)\r\n  const [username, setUsername] = useState(user.username)\r\n  const [email, setEmail] = useState(user.email)\r\n  const [allowNotifications, setAllowNotifications] = useState(user.allowNotifications)\r\n\r\n  const handleEditUser = async (event) => {\r\n\r\n\r\n    event.preventDefault()\r\n    setNameErrorMessage(null)\r\n    setUsernameErrorMessage(null)\r\n    setEmailErrorMessage(null)\r\n    if (name.length < 3) {\r\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\r\n    }\r\n    if (username.length < 3) {\r\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\r\n    }\r\n    if (email.length < 5) {\r\n      setEmailErrorMessage('Sähköpostissa pitää olla vähintään 5 kirjainta')\r\n    }\r\n    if (name.length < 3 || username.length < 3) {\r\n      return\r\n    }\r\n    try {\r\n      const editedUser = await userService.editUser({\r\n        name, username, email, allowNotifications\r\n      })\r\n      setUser(editedUser)\r\n      window.localStorage.setItem(\r\n        'loggedUser', JSON.stringify(editedUser),\r\n      )\r\n      setShowEdit(false)\r\n      setMessage('Tietoja muokattu!')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    } catch (error) {\r\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"username already exists\") {\r\n        setErrorMessage('Käyttäjätunnus on varattu')\r\n      } else {\r\n        setErrorMessage('Muokkaaminen epäonnistui')\r\n      }\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"edit-user-form\">\r\n      <h2>Omat tiedot</h2>\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleEditUser}>\r\n        <div>\r\n          <Notification message={nameErrorMessage} type=\"error\" />\r\n          <label>Nimi</label><br />\r\n          <input\r\n            className=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"Name\"\r\n            placeholder=\"Nimi\"\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Notification message={usernameErrorMessage} type=\"error\" />\r\n          <label>Käyttäjätunnus</label><br />\r\n          <input\r\n            className=\"username\"\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"Username\"\r\n            placeholder=\"Käyttäjätunnus\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Notification message={emailErrorMessage} type=\"error\" />\r\n          <label>Sähköposti</label><br />\r\n          <input\r\n            className=\"email\"\r\n            type=\"text\"\r\n            value={email}\r\n            name=\"Email\"\r\n            placeholder=\"Sähköposti\"\r\n            onChange={({ target }) => setEmail(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Vastaanota ilmoituksia:\r\n            <div className=\"admin-radio\" onChange={({ target }) => setAllowNotifications(target.value)}>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"notifications\"\r\n                  value={true}\r\n                  defaultChecked={allowNotifications}\r\n                />\r\n                Kyllä\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"notifications\"\r\n                  value={false}\r\n                  defaultChecked={!allowNotifications}\r\n                />\r\n                Ei\r\n              </label>\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\" className=\"edit-button\">Tallenna</button>\r\n        <button onClick={() => setShowEdit(false)} className=\"cancel-button\">Peruuta</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditUser\r\n","import React, { useState } from 'react'\r\nimport Notification from './Notification'\r\nimport userService from '../services/user'\r\n\r\nconst ChangePassword = ({ setShowChangePassword, setMessage }) => {\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [oldPassword, setOldPassword] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const [newPasswordAgain, setNewPasswordAgain] = useState('')\r\n\r\n  const handleChangePassword = async (event) => {\r\n    event.preventDefault()\r\n    setErrorMessage(null)\r\n    if (newPassword.length < 3) {\r\n      setErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\r\n      return\r\n    }\r\n    if (newPassword !== newPasswordAgain) {\r\n      setErrorMessage('Salasanat eivät täsmää')\r\n      return\r\n    }\r\n    try {\r\n      await userService.editUser({\r\n        oldPassword, newPassword\r\n      })\r\n      setOldPassword('')\r\n      setNewPassword('')\r\n      setNewPasswordAgain('')\r\n      setShowChangePassword(false)\r\n      setMessage('Salasana vaihdettu!')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    } catch (error) {\r\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"incorrect password\") {\r\n        setErrorMessage('Vanha salasana ei täsmää')\r\n      } else {\r\n        setErrorMessage('Salasanan vaihtaminen epäonnistui')\r\n      }\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"change-password-form\">\r\n      <h2>Vaihda salasana</h2>\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleChangePassword}>\r\n        <div>\r\n          <input\r\n            className=\"old-password\"\r\n            type=\"password\"\r\n            value={oldPassword}\r\n            placeholder=\"Vanha salasana\"\r\n            onChange={({ target }) => setOldPassword(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"new-password\"\r\n            type=\"password\"\r\n            value={newPassword}\r\n            placeholder=\"Uusi salasana\"\r\n            onChange={({ target }) => setNewPassword(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"new-password-again\"\r\n            type=\"password\"\r\n            value={newPasswordAgain}\r\n            placeholder=\"Uusi salasana uudelleen\"\r\n            onChange={({ target }) => setNewPasswordAgain(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"change-password-button\">Tallenna</button>\r\n        <button onClick={() => setShowChangePassword(false)} className=\"cancel-button\">Peruuta</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChangePassword\r\n","import React, { useState } from 'react'\r\nimport Notification from './Notification'\r\nimport EditUser from './EditUser'\r\nimport ChangePassword from './ChangePassword'\r\n\r\nconst User = ({ user, setUser }) => {\r\n  const [message, setMessage] = useState(null)\r\n  const [showEdit, setShowEdit] = useState(false)\r\n  const [showChangePassword, setShowChangePassword] = useState(false)\r\n\r\n  const editUser = () => {\r\n    setShowChangePassword(false)\r\n    setShowEdit(true)\r\n  }\r\n\r\n\r\n  const changePassword = () => {\r\n    setShowEdit(false)\r\n    setShowChangePassword(true)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {user\r\n        && (\r\n          <div className=\"user-info\">\r\n            {!showEdit && !showChangePassword\r\n              && (\r\n                <div>\r\n                  <Notification message={message} type=\"success\" />\r\n                  <h2>Omat tiedot</h2>\r\n                  <p>\r\n                    <b>Nimi: </b>\r\n                    {user.name}\r\n                  </p>\r\n                  <p>\r\n                    <b>Käyttäjätunnus: </b>\r\n                    {user.username}\r\n                  </p>\r\n                  <p>\r\n                    <b>Sähköpostiosoite: </b>\r\n                    {user.email}\r\n                  </p>\r\n                  <p>\r\n                    <b>Ilmoitukset: </b>\r\n                    {user.allowNotifications ?\r\n                      <span>Päällä</span>\r\n                      :\r\n                      <span>Pois päältä</span>\r\n                    }\r\n                  </p>\r\n                  <button className=\"edit-user-button\" onClick={() => editUser()}>Muokkaa</button>\r\n                  <button className=\"change-password-button\" onClick={() => changePassword()}>Vaihda salasana</button>\r\n                </div>\r\n              )}\r\n            {showEdit && <EditUser setShowEdit={setShowEdit} user={user} setUser={setUser} setMessage={setMessage} />}\r\n            {showChangePassword && <ChangePassword setShowChangePassword={setShowChangePassword} setMessage={setMessage} />}\r\n          </div>\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import React, { useState, useEffect } from 'react'\r\nimport Notification from './Notification'\r\nimport taskService from '../services/task'\r\nimport fileService from '../services/file'\r\nimport ruleService from '../services/rule'\r\nimport seriesService from '../services/series'\r\nimport languageService from '../services/language'\r\nimport MDEditor from './MDEditor'\r\nimport Dropzone from 'react-dropzone'\r\n\r\nconst ModifyTask = ({ setModifyVisible, task, setTask }) => {\r\n\r\n  const [message, setMessage] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [name, setName] = useState(task.name)\r\n  const [assignmentText, setAssignmentText] = useState(task.assignmentText)\r\n  const [gradingScale, setGradingScale] = useState(task.gradingScale)\r\n  const [supervisorInstructions, setSupervisorInstructions] = useState(task.supervisorInstructions)\r\n  const [assignmentTextMD, setAssignmentTextMD] = useState(task.assignmentTextMD)\r\n  const [gradingScaleMD, setGradingScaleMD] = useState(task.gradingScaleMD)\r\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState(task.supervisorInstructionsMD)\r\n  const [rules, setRules] = useState([])\r\n  const [rule, setRule] = useState(task.rules ? task.rules.id : null)\r\n  const [categories, setCategories] = useState([])\r\n  const [category, setCategory] = useState(task.category ? task.category.id : null)\r\n  const [seriess, setSeriess] = useState([])\r\n  const [series, setSeries] = useState(task.series.map(s => s.id))\r\n  const [languages, setLanguages] = useState([])\r\n  const [language, setLanguage] = useState(task.language ? task.language.id : null)\r\n  const [creatorName, setCreatorName] = useState(task.creatorName)\r\n  const [creatorEmail, setCreatorEmail] = useState(task.creatorEmail)\r\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\r\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\r\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\r\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\r\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\r\n  const [oldFiles, setOldFiles] = useState(task.files || [])\r\n  const [newFiles, setNewFiles] = useState([])\r\n  const [filesToDelete, setFilesToDelete] = useState([])\r\n\r\n  let id = task.id\r\n\r\n  useEffect(() => {\r\n    ruleService.getRules().then(response => {\r\n      setRules(response)\r\n      if (task.rules && task.rules.id) {\r\n        const foundRule = response.find(r => r.id === task.rules.id)\r\n        if (foundRule) {\r\n          setCategories(foundRule.acceptedCategories)\r\n        }\r\n      }\r\n    })\r\n    seriesService.getSeries().then(response => {\r\n      setSeriess(response)\r\n    })\r\n    languageService.getLanguages().then(response => {\r\n      setLanguages(response)\r\n    })\r\n  }, [])\r\n\r\n  const handleRuleChange = (e) => {\r\n    setRule(e.target.value)\r\n    setCategory('')\r\n    if (e.target.value) {\r\n      const foundRule = rules.find(r => r.id === e.target.value)\r\n      setCategories(foundRule.acceptedCategories)\r\n    } else {\r\n      setCategories([])\r\n    }\r\n  }\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setCategory(e.target.value)\r\n  }\r\n\r\n  const handleSeriesChange = (e) => {\r\n    let options = e.target.options\r\n    let values = []\r\n    for (var i = 0, l = options.length; i < l; i++) {\r\n      if (options[i].selected && options[i].value !== '') {\r\n        values.push(options[i].value)\r\n      }\r\n    }\r\n    setSeries(values)\r\n  }\r\n\r\n  const handleLanguageChange = (e) => {\r\n    setLanguage(e.target.value)\r\n  }\r\n\r\n  const handleModifyTask = async (event) => {\r\n    event.preventDefault()\r\n    setNameErrorMessage(null)\r\n    setAssignmentTextErrorMessage(null)\r\n    setCreatorNameErrorMessage(null)\r\n    setCreatorEmailErrorMessage(null)\r\n    setDropDownErrorMessage(null)\r\n    if (name.length < 1) {\r\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\r\n    }\r\n    if (assignmentText.length < 1) {\r\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\r\n    }\r\n    if (creatorName.length < 1) {\r\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\r\n    }\r\n    if (creatorEmail.length < 1) {\r\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\r\n    }\r\n    if (language === '' || rule === '' || series === '' || category === '') {\r\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\r\n    }\r\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\r\n      || language === '' || rule === '' || series === '' || category === '') {\r\n      return\r\n    }\r\n\r\n    let formData = new FormData()\r\n\r\n    formData.append('filesToDelete', filesToDelete)\r\n\r\n    if (newFiles.length > 0) {\r\n      for (let i = 0; i < newFiles.length; i++) {\r\n          formData.append('filesToAdd', newFiles[i], newFiles[i].name)\r\n      }\r\n    }\r\n\r\n    let addedFiles = []\r\n\r\n    try {\r\n      addedFiles = await fileService.updateFiles(formData)\r\n      const modifiedTask = await taskService.updateTask({\r\n        name, rule, category, series,\r\n        language, assignmentText, gradingScale,\r\n        creatorName, creatorEmail, supervisorInstructions, id,\r\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD,\r\n        files: oldFiles.concat(addedFiles)\r\n      })\r\n      setMessage('Tehtävä tallennettu!')\r\n      setTask(modifiedTask)\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n        window.location.reload()\r\n      }, 1000)\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setModifyVisible(false)\r\n  }\r\n\r\n  const onDrop = (files) => {\r\n    setNewFiles(newFiles.concat(files))\r\n  }\r\n\r\n  const handleDeleteOldFile = (e, name) => {\r\n    e.stopPropagation()\r\n    setOldFiles(oldFiles.filter(file => file !== name))\r\n    setFilesToDelete(filesToDelete.concat(name))\r\n  }\r\n\r\n  const handleDeleteNewFile = (e, name) => {\r\n    e.stopPropagation()\r\n    setNewFiles(newFiles.filter(file => file.name !== name))\r\n  }\r\n\r\n  return (\r\n    <div className=\"modify-task-container\">\r\n      <h2>Muokkaa tehtävää</h2>\r\n      <Notification message={message} type=\"success\" />\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleModifyTask} className=\"modify-form\">\r\n        <div>\r\n          <Notification message={nameErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"task-title\"\r\n            type=\"text\"\r\n            defaultValue={name}\r\n            name=\"Name\"\r\n            placeholder=\"Tehtävän nimi\"\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h4>Tehtävänanto</h4>\r\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\r\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} value={assignmentTextMD} placeHolder=\"Tehtävänanto\" />\r\n        </div>\r\n        <div>\r\n          <h4>Arvostelu</h4>\r\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} value={gradingScaleMD} placeHolder=\"Arvostelu\" />\r\n        </div>\r\n        <div className=\"instructions\">\r\n          <h4>Rastimiehen ohje</h4>\r\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} value={supervisorInstructionsMD} placeHolder=\"Rastimiehen ohje\" />\r\n        </div>\r\n        <Notification message={dropDownErrorMessage} type=\"error\" />\r\n        <div className=\"dropdowns\">\r\n          <div>\r\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\r\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\r\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <select value={rule} onChange={(e) => handleRuleChange(e)}>\r\n              <option value=\"\">Säännöt</option>\r\n              {rules.map(rule => <option key={rule.id} value={rule.id}>{rule.name}</option>)}\r\n            </select>\r\n            <br/>\r\n            <select value={category} onChange={(e) => handleCategoryChange(e)}>\r\n              <option value=\"\">Kategoria</option>\r\n              {categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)}\r\n            </select>\r\n            <br/>\r\n            <select value={language} onChange={(e) => handleLanguageChange(e)}>\r\n              <option value=\"\">Kieli</option>\r\n              {languages.map(language => <option key={language.id} value={language.id}>{language.name}</option>)}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"creator\">\r\n          <div>\r\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\r\n            <input\r\n              className=\"\"\r\n              type=\"text\"\r\n              defaultValue={creatorName}\r\n              name=\"CreatorName\"\r\n              placeholder=\"Muokkaajan nimi\"\r\n              onChange={({ target }) => setCreatorName(target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\r\n            <input\r\n              className=\"\"\r\n              type=\"text\"\r\n              defaultValue={creatorEmail}\r\n              name=\"CreatorEmail\"\r\n              placeholder=\"Muokkaajan sähköposti\"\r\n              onChange={({ target }) => setCreatorEmail(target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <Dropzone onDrop={onDrop}>\r\n          {({getRootProps, getInputProps}) => (\r\n            <div {...getRootProps()}>\r\n              <input {...getInputProps()} />\r\n              <div className=\"files\">\r\n                <div className=\"title\">Liitetiedostot</div>\r\n                {oldFiles && oldFiles.length > 0 &&\r\n                  <React.Fragment>\r\n                    {oldFiles.map((file) => (\r\n                      <div key={file}>{file.substring(file.indexOf('-') + 1, file.length)}<b onClick={(e) => handleDeleteOldFile(e, file)}>x</b></div>\r\n                    ))}\r\n                  </React.Fragment>\r\n                }\r\n                {newFiles && newFiles.length > 0 &&\r\n                  <React.Fragment>\r\n                    {newFiles.map((file) => (\r\n                      <div key={file.name}>{file.name}<b onClick={(e) => handleDeleteNewFile(e, file.name)}>x</b></div>\r\n                    ))}\r\n                  </React.Fragment>\r\n                }\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Dropzone>\r\n\r\n        <div>\r\n          <button type=\"submit\" className=\"save-task-button\">Tallenna</button>\r\n          <button onClick={() => handleCancel()} className=\"return-button\">Peruuta</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default ModifyTask","import React from 'react'\r\n\r\nconst TaskTextDisplay = ({ text }) => {\r\n  const htmlConverter = () => {\r\n    return { __html: `${text}` }\r\n  }\r\n\r\n  return (\r\n    <div dangerouslySetInnerHTML={htmlConverter()} />\r\n  )\r\n}\r\n\r\nexport default TaskTextDisplay","import React, { useState, useEffect } from 'react'\r\nimport taskService from '../services/task'\r\nimport ModifyTask from './ModifyTask'\r\nimport Notification from './Notification'\r\nimport TaskTextDisplay from './TaskTextDisplay'\r\nimport Moment from 'react-moment'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Task = ({ match, user, addTaskToBasket }) => {\r\n\r\n  const [task, setTask] = useState(null)\r\n  const [modifyVisible, setModifyVisible] = useState(false)\r\n  const [message, setMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    taskService.getOneTask(match.params.id).then((response) => {\r\n      setTask(response)\r\n    })\r\n  }, [])\r\n\r\n  const handleDelete = () => {\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\r\n        taskService.deleteTask(task.id)\r\n        setMessage('Tehtävä poistettu')\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n          if (task.pending) {\r\n            history.push('/admin')\r\n          } else {\r\n            history.push('/')\r\n          }\r\n        }, 2000)\r\n      }\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleAccept = () => {\r\n    try {\r\n      taskService.acceptTask(task.id)\r\n      setMessage('Tehtävä hyväksytty')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n        history.push('/admin')\r\n      }, 2000)\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {modifyVisible ?\r\n        <ModifyTask setModifyVisible={setModifyVisible} task={task} setTask={setTask} />\r\n        :\r\n        <div className=\"task-view-info-background\">\r\n          <Notification message={message} type=\"success\" />\r\n          <Notification message={errorMessage} type=\"error\" />\r\n          {task &&\r\n            <div className=\"task-view-info\">\r\n              <div>\r\n                <h2>{task.name}<span><div className=\"black-basket basket-task-view\" onClick={() => addTaskToBasket(task)} /></span></h2>\r\n              </div>\r\n              <h3>Tehtävänanto:</h3>\r\n              <TaskTextDisplay text={task.assignmentText} />\r\n              <h3>Rastimiehen ohjeet:</h3>\r\n              <TaskTextDisplay text={task.supervisorInstructions} />\r\n              <h3>Arvosteluasteikko:</h3>\r\n              <TaskTextDisplay text={task.gradingScale} />\r\n              <h3>Sarja:</h3>\r\n              {task.series.map(s => <span key={task.id + s.id}>{s.name}<br /></span>)}\r\n              <h3>Kategoria:</h3>\r\n              <p>{task.category && task.category.name}</p>\r\n              <h3>Sääntöluokka:</h3>\r\n              <p>{task.rules && task.rules.name}</p>\r\n              <h3>Tehtävän viimeisin muokkaaja:</h3>\r\n              <p>{task.creatorName}<br />{task.creatorEmail}</p>\r\n              <h3>Tehtävä lisätty:</h3>\r\n              {task.created && <p><Moment format=\"DD.MM.YYYY HH:mm\">{task.created}</Moment></p>}\r\n              <h3>Liitetiedostot:</h3>\r\n              {task.files && task.files.length === 0 && <p>-</p>}\r\n              {task.files && task.files.map((file) => (\r\n                <div key={file}>\r\n                  <a href={`https://kisapankki.blob.core.windows.net/files/${file}`}>\r\n                    {file.substring(file.indexOf('-') + 1, file.length)}\r\n                  </a>\r\n                </div>\r\n              ))}\r\n              {user &&\r\n                <div className=\"buttons\">\r\n                  <button onClick={() => setModifyVisible(true)} className=\"modify-view-button\">Muokkaa</button>\r\n                  {task.pending && <button className=\"accept-button\" onClick={() => handleAccept()}>Hyväksy</button>}\r\n                  <button className=\"delete-button\" onClick={() => handleDelete()}>Poista</button>\r\n                </div>}\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n      }\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { Route, Link, Redirect, useHistory } from 'react-router-dom'\r\nimport Login from './components/Login'\r\nimport FrontPage from './components/FrontPage'\r\nimport TaskList from './components/TaskList'\r\nimport Basket from './components/Basket'\r\nimport AddAdmin from './components/AddAdmin'\r\nimport AddTaskDropdown from './components/AddTaskDropdown'\r\nimport AddTask from './components/AddTask'\r\nimport Admin from './components/Admin'\r\nimport User from './components/User'\r\nimport Task from './components/Task'\r\nimport tokenService from './services/token'\r\nimport taskService from './services/task'\r\n\r\nconst App = () => {\r\n  const [basket, setBasket] = useState([])\r\n  const [tasks, setTasks] = useState([])\r\n  const [user, setUser] = useState(null)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    taskService.getTasks().then((response) => {\r\n      setTasks(response)\r\n    })\r\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\r\n    if (loggedUserJSON) {\r\n      const loggedUser = JSON.parse(loggedUserJSON)\r\n      setUser(loggedUser)\r\n      tokenService.setToken(loggedUser.token)\r\n    }\r\n    const basketJSON = window.localStorage.getItem('basket')\r\n    if (basketJSON) {\r\n      const foundBasket = JSON.parse(basketJSON)\r\n      setBasket(foundBasket)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\r\n      'basket', JSON.stringify(basket)\r\n    )\r\n  }, [basket])\r\n\r\n  const logout = () => {\r\n    window.localStorage.removeItem('loggedUser')\r\n    setUser(null)\r\n    tokenService.setToken(null)\r\n    history.push('/')\r\n    window.location.reload()\r\n  }\r\n\r\n  const addTaskToBasket = (task) => {\r\n    const foundTask = basket.find(t => t.id === task.id)\r\n    if (!foundTask) {\r\n      setBasket(basket.concat(task))\r\n    }\r\n  }\r\n\r\n  const removeTaskFromBasket = (id) => {\r\n    setBasket(basket.filter(task => task.id !== id))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <Link to=\"/\"><div className=\"logo\" /></Link>\r\n        <Link to=\"/tehtavat\"><button className=\"addtask-button-header\">Tehtävät</button></Link>\r\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-header\">Lisää tehtävä</button></Link>\r\n\r\n        {user === null ?\r\n          <Fragment>\r\n            <Link to=\"/kirjautuminen\"><button className=\"login-button-header\">Kirjaudu</button></Link>\r\n          </Fragment>\r\n          :\r\n          <Fragment>\r\n            <Link to=\"/admin\"><button className=\"admin-button-header\">Admin</button></Link>\r\n            <div>\r\n              <div className=\"logged\">Kirjautuneena <Link to=\"/omasivu\" className=\"username-header\">{user.username}</Link></div>\r\n              <div className=\"logout\"><button className=\"logout-button-header\" onClick={() => logout()}>Kirjaudu ulos</button></div>\r\n            </div>\r\n          </Fragment>\r\n        }\r\n        <Link to=\"/valitut_tehtavat\"><div className=\"white-basket\">{basket.length > 0 && <span className=\"number-of-tasks-in-basket\">{basket.length}</span>}</div></Link>\r\n      </div>\r\n      <div className=\"admin-task-buttons-mobile\">\r\n        <Link to=\"/tehtavat\"><button className=\"addtask-button-mobile\">Tehtävät</button></Link>\r\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-mobile\">Lisää tehtävä</button></Link>\r\n        {user !== null && <Link to=\"/admin\"><button className=\"admin-button-mobile\">Admin</button></Link>}\r\n      </div>\r\n      <div className=\"container\">\r\n        <Route exact path=\"/\" render={() => <FrontPage tasks={tasks} addTaskToBasket={addTaskToBasket} />} />\r\n        <Route exact path=\"/tehtava/:id\" render={(match) => <Task {...match} user={user} addTaskToBasket={addTaskToBasket} />} />\r\n        <Route path=\"/tehtavat\" render={() => <TaskList user={user} originalTasks={tasks} addTaskToBasket={addTaskToBasket} />} />\r\n        <Route path=\"/valitut_tehtavat\" render={() => <Basket tasks={basket} removeTaskFromBasket={removeTaskFromBasket} />} />\r\n        <Route path=\"/kirjautuminen\" render={() => <Login setUser={setUser} />} />\r\n        <Route path=\"/lisaa_tehtava\" render={() => <AddTask />} />\r\n        <Route path=\"/omasivu\" render={() => (localStorage.getItem('loggedUser') ? <User user={user} setUser={setUser} /> : <Redirect to=\"/\" />)} />\r\n        <Route path=\"/admin\" render={() => (localStorage.getItem('loggedUser') ? <Admin /> : <Redirect to=\"/\" />)} />\r\n        <Route path=\"/lisaa_admin\" render={() => (localStorage.getItem('loggedUser') ? <AddAdmin /> : <Redirect to=\"/\" />)} />\r\n        <Route path=\"/lisaa_pudotusvalikkoon\" render={() => (localStorage.getItem('loggedUser') ? <AddTaskDropdown /> : <Redirect to=\"/\" />)} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root'),\r\n)\r\n"],"sourceRoot":""}