{"version":3,"sources":["components/Notification.js","services/login.js","services/token.js","components/Login.js","services/task.js","components/Search.js","components/TaskList.js","services/user.js","components/AddAdmin.js","services/rule.js","components/Rule.js","services/language.js","components/Language.js","services/series.js","components/Series.js","services/category.js","components/Category.js","components/AddTaskDropdown.js","components/AddTask.js","components/TaskListPending.js","components/Admin.js","components/EditUser.js","components/ChangePassword.js","components/User.js","components/ModifyTask.js","components/Task.js","App.js","index.js"],"names":["Notification","message","type","className","baseUrl","process","credentials","a","async","axios","post","response","data","token","newToken","Login","setUser","useState","errorMessage","setErrorMessage","username","setUsername","password","setPassword","history","useHistory","onSubmit","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","tokenService","push","setTimeout","value","name","placeholder","onChange","target","baseUrlPending","task","config","headers","Authorization","get","id","search","put","delete","Search","setTasks","setSearch","taskService","defaultValue","TaskList","tasks","useEffect","then","map","key","to","series","s","category","onClick","filter","t","handleDelete","AddAdmin","setMessage","nameErrorMessage","setNameErrorMessage","usernameErrorMessage","setUsernameErrorMessage","passwordErrorMessage","setPasswordErrorMessage","setName","users","setUsers","userService","length","some","rule","Rule","rules","setRules","ruleService","language","Language","setLanguage","languageService","Series","color","setColor","seriesService","onChangeComplete","hex","cat","Category","setCategory","categoryService","AddTaskDropdown","AddTask","assignmentText","setAssignmentText","gradingScale","setGradingScale","supervisorInstructions","setSupervisorInstructions","setRule","categories","setCategories","seriess","setSeriess","setSeries","languages","setLanguages","creatorName","setCreatorName","creatorEmail","setCreatorEmail","assignmentTextErrorMessage","setAssignmentTextErrorMessage","creatorNameErrorMessage","setCreatorNameErrorMessage","creatorEmailErrorMessage","setCreatorEmailErrorMessage","dropDownErrorMessage","setDropDownErrorMessage","addtaskService","rows","cols","multiple","e","options","values","i","l","selected","handleSeriesChange","handleCategoryChange","handleRuleChange","handleLanguageChange","TaskListPending","exception","handleAccept","Admin","EditUser","setShowEdit","editedUser","error","ChangePassword","setShowChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","newPasswordAgain","setNewPasswordAgain","User","showEdit","showChangePassword","ModifyTask","setModifyVisible","setTask","modifiedTask","location","reload","Task","match","modifyVisible","params","pending","App","loggedUserJSON","getItem","loggedUser","parse","removeItem","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f58fc2ae.chunk.js","sourcesContent":["import React from 'react'\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/login`\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","let token = null\n\nconst getToken = () => token\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nexport default { getToken, setToken }\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Notification from './Notification'\nimport loginService from '../services/login'\nimport tokenService from '../services/token'\n\nconst Login = ({ setUser }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const history = useHistory()\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user),\n      )\n      setUser(user)\n      tokenService.setToken(user.token)\n      setUsername('')\n      setPassword('')\n      history.push('/')\n    } catch (exception) {\n      setErrorMessage('Väärä käyttäjätunnus/salasana')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"login-form\">\n      <h2>Kirjaudu sisään</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleLogin}>\n        <div>\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            placeholder=\"Salasana\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"login-button\">Kirjaudu</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Login\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/task`\nconst baseUrlPending = `${process.env.REACT_APP_API_URL}/task/pending`\n\n\nconst getTasks = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getPendingTasks = async () => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  const response = await axios.get(baseUrlPending, config)\n  return response.data\n}\n\nconst getSearchedTasks = async (search) => {\n  const response = await axios.post(`${baseUrl}/search`, search)\n  return response.data\n}\n\nconst getOneTask = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst addtask = async (task) => {\n  let config = null\n  const token = tokenService.getToken()\n\n  if (token) {\n    config = {\n      headers: { Authorization: token },\n    }\n  }\n\n  const response = await axios.post(baseUrl, task, config)\n  return response.data\n}\n\nconst updateTask = async (task) => {\n  let config = null\n  const token = tokenService.getToken()\n\n  if (token) {\n    config = {\n      headers: { Authorization: token },\n    }\n  }\n\n  const response = await axios.put(`${baseUrl}/${task.id}`, task, config)\n  return response.data\n}\n\nconst deleteTask = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nconst acceptTask = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  const response = await axios.put(`${baseUrl}/${id}/accept`, id, config)\n  return response.data\n}\n\nexport default { addtask, getTasks, getOneTask, getSearchedTasks, updateTask, deleteTask, getPendingTasks, acceptTask }\n","import React, { useState } from 'react'\nimport taskService from '../services/task'\nimport Notification from './Notification'\n\nconst Search = ({ setTasks }) => {\n\n  const [search, setSearch] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const handleSearch = async (event) => {\n    event.preventDefault()\n    try {\n      const response = await taskService.getSearchedTasks({ search })\n      setTasks(response)\n    } catch (exception) {\n      setErrorMessage('Haku ei onnistunut')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleSearch} className=\"Search-form\">\n        <input\n          className=\"Search-input\"\n          type=\"text\"\n          defaultValue=''\n          name=\"Search\"\n          placeholder=\"Hakutermi\"\n          onChange={({ target }) => setSearch(target.value)}\n        />\n        <button type=\"submit\" className=\"search-tasks-button\">Hae</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Search","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport taskService from '../services/task'\nimport Notification from './Notification'\nimport Search from './Search'\n\nconst TaskList = ({user}) => {\n  const [tasks, setTasks] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    taskService.getTasks().then((response) => {\n      setTasks(response)\n    })\n  }, [])\n\n  const handleDelete = async (task) => {\n    try {\n      await taskService.deleteTask(task.id)\n      setTasks(tasks.filter(t => t.id !== task.id))\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"task-list\">\n      <h1>Kisatehtäväpankki</h1>\n      <Search setTasks={setTasks} />\n      <Notification message={errorMessage} />\n      {tasks.map((task) => (\n        <div className=\"task-list-item\" key={task.id}>\n          <span>\n            <Link to={`/tehtava/${task.id}`}>\n              {task.name}\n            </Link>\n          </span>\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n          <span>{task.category.name}</span>\n\n          {user !== null &&\n              <span><button className=\"delete-button\" onClick={() => handleDelete(task)}>Poista</button></span>\n          }\n        </div>\n      ))}\n    </div>\n\n  )\n}\n\nexport default TaskList\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/user`\n\nconst getUsers = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addUser = async (credentials) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() }\n  }\n  const response = await axios.post(baseUrl, credentials, config)\n  return response.data\n}\n\nconst editUser = async (user) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() }\n  }\n\n  const response = await axios.put(baseUrl, user, config)\n  return response.data\n}\n\nexport default { addUser, getUsers, editUser }\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst AddAdmin = () => {\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(null)\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [users, setUsers] = useState([])\n\n  useEffect(() => {\n    userService.getUsers().then((response) => {\n      setUsers(response)\n    })\n  }, [])\n\n  const handleAddAdmin = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setUsernameErrorMessage(null)\n    setPasswordErrorMessage(null)\n    if (name.length < 3) {\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\n    }\n    if (username.length < 3) {\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\n    }\n    if (password.length < 3) {\n      setPasswordErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\n    }\n    if (users.some((user) => (user.username === username))) {\n      setUsernameErrorMessage('Käyttäjätunnus on varattu')\n    }\n    if (name.length < 3 || username.length < 3 || password.length < 3\n      || users.some((user) => (user.username === username))) {\n      return\n    }\n    try {\n      await userService.addUser({\n        name, username, password,\n      })\n      setName('')\n      setUsername('')\n      setPassword('')\n      setMessage('Ylläpitäjä lisätty!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setErrorMessage('Lisääminen epäonnistui')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"signup-form\">\n      <h2>Lisää ylläpitäjä</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleAddAdmin}>\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={usernameErrorMessage} type=\"error\" />\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={passwordErrorMessage} type=\"error\" />\n          <input\n            className=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            placeholder=\"Salasana\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"signup-button\">Lisää</button>\n      </form>\n    </div>\n  )\n}\n\nexport default AddAdmin\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/rule`\n\nconst getRules = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addRule = async (rule) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, rule, config)\n  return response.data\n}\n\nexport default { addRule, getRules }\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport ruleService from '../services/rule'\n\nconst Rule = () => {\n  const [rules, setRules] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const handleRuleAdd = async (event) => {\n    event.preventDefault()\n    try {\n      await ruleService.addRule({\n        rules,\n      })\n      setRules('')\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"rule-form\">\n      <h2>Lisää sääntö</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleRuleAdd}>\n        <div>\n          <input\n            className=\"rule\"\n            type=\"text\"\n            value={rules}\n            name=\"Rules\"\n            placeholder=\"Sääntö\"\n            onChange={({ target }) => setRules(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"task-add-button\">Lisää</button>\n      </form>\n    </div>\n  )\n}\n\n\nexport default Rule\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/language`\n\nconst getLanguages = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addLanguage = async (language) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, language, config)\n  return response.data\n}\n\nexport default { addLanguage, getLanguages }\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport languageService from '../services/language'\n\nconst Language = () => {\n  const [language, setLanguage] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const handleLanguageAdd = async (event) => {\n    event.preventDefault()\n    try {\n      await languageService.addLanguage({\n        language,\n      })\n      setLanguage('')\n    } catch (exception) {\n      setErrorMessage('Kielen lisääminen ei onnistunut')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"language-form\">\n      <h2>Lisää kieli</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleLanguageAdd}>\n        <div>\n          <input\n            className=\"language\"\n            type=\"text\"\n            value={language}\n            name=\"Language\"\n            placeholder=\"Kieli\"\n            onChange={({ target }) => setLanguage(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"language-add-button\">Lisää</button>\n      </form>\n    </div>\n  )\n}\n\n\nexport default Language\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/series`\n\nconst getSeries = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addSeries = async (series) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, series, config)\n  return response.data\n}\n\nexport default { addSeries, getSeries }\n","import React, { useState } from 'react'\nimport { CirclePicker } from 'react-color'\nimport Notification from './Notification'\nimport seriesService from '../services/series'\n\nconst Series = () => {\n  const [name, setName] = useState('')\n  const [color, setColor] = useState('#ffffff')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const handleSeriesAdd = async (event) => {\n    event.preventDefault()\n    try {\n      await seriesService.addSeries({ name, color })\n      setName('')\n      setColor('')\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"series-form\">\n      <h2>Lisää sarja</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleSeriesAdd}>\n        <div>\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div className=\"color-picker\">\n          <CirclePicker \n            color={color}\n            onChangeComplete={color => setColor(color.hex)}\n          />\n        </div>\n        <button type=\"submit\" className=\"series-submit-button\">Lisää</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Series\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/category`\n\nconst getCategories = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addCategory = async (cat) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, cat, config)\n  return response.data\n}\n\nexport default { addCategory, getCategories }\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport categoryService from '../services/category'\n\nconst Category = () => {\n  const [category, setCategory] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const handleCategoryAdd = async (event) => {\n    event.preventDefault()\n    try {\n      await categoryService.addCategory({\n        category,\n      })\n      setCategory('')\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"category-form\">\n      <h2>Lisää kategoria</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleCategoryAdd}>\n        <div>\n          <input\n            className=\"category\"\n            type=\"text\"\n            value={category}\n            name=\"Category\"\n            placeholder=\"Kategoria\"\n            onChange={({ target }) => setCategory(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"category-add-button\">Lisää</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Category\n","import React from 'react'\nimport Rule from './Rule'\nimport Language from './Language'\nimport Series from './Series'\nimport Category from './Category'\n\nconst AddTaskDropdown = () => (\n  <div>\n    <Rule />\n    <Language />\n    <Series />\n    <Category />\n  </div>\n)\n\nexport default AddTaskDropdown\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport addtaskService from '../services/task'\nimport ruleService from '../services/rule'\nimport categoryService from '../services/category'\nimport seriesService from '../services/series'\nimport languageService from '../services/language'\n\n\nconst AddTask = () => {\n\n    const [message, setMessage] = useState('')\n    const [errorMessage, setErrorMessage] = useState('')\n    const [name, setName] = useState('')\n    const [assignmentText, setAssignmentText] = useState('')\n    const [gradingScale, setGradingScale] = useState('')\n    const [supervisorInstructions, setSupervisorInstructions] = useState('')\n    const [rules, setRules] = useState([])\n    const [rule, setRule] = useState('')\n    const [categories, setCategories] = useState([])\n    const [category, setCategory] = useState('')\n    const [seriess, setSeriess] = useState([])\n    const [series, setSeries] = useState([])\n    const [languages, setLanguages] = useState([])\n    const [language, setLanguage] = useState('')\n    const [creatorName, setCreatorName] = useState('')\n    const [creatorEmail, setCreatorEmail] = useState('')\n    const [nameErrorMessage, setNameErrorMessage] = useState(null)\n    const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\n    const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\n    const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\n    const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\n\n    useEffect(() => {\n        ruleService.getRules().then(response => {\n            setRules(response)\n        })\n        categoryService.getCategories().then(response => {\n            setCategories(response)\n        })\n        seriesService.getSeries().then(response => {\n            setSeriess(response)\n        })\n        languageService.getLanguages().then(response => {\n            setLanguages(response)\n        })\n    }, [])\n\n    const handleRuleChange = (e) => {\n        setRule(e.target.value)\n    }\n\n    const handleCategoryChange = (e) => {\n        setCategory(e.target.value)\n    }\n\n    const handleSeriesChange = (e) => {\n        let options = e.target.options\n        let values = []\n        for (var i = 0, l = options.length; i < l; i++) {\n            if (options[i].selected && options[i].value !== '') {\n                values.push(options[i].value)\n            }\n        }\n        setSeries(values)\n    }\n\n    const handleLanguageChange = (e) => {\n        setLanguage(e.target.value)\n    }\n\n    const handleAddTask = async (event) => {\n        event.preventDefault()\n        setNameErrorMessage(null)\n        setAssignmentTextErrorMessage(null)\n        setCreatorNameErrorMessage(null)\n        setCreatorEmailErrorMessage(null)\n        setDropDownErrorMessage(null)\n        if (name.length < 1) {\n            setNameErrorMessage('Nimi ei saa olla tyhjä')\n        }\n        if (assignmentText.length < 1) {\n            setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\n        }\n        if (creatorName.length < 1) {\n            setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\n        }\n        if (creatorEmail.length < 1) {\n            setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\n        }\n        if (language === '' || rule === '' || series === '' || category === '') {\n            setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\n        }\n        if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\n            || language === '' || rule === '' || series === '' || category === '') {\n            return\n        }\n        try {\n            await addtaskService.addtask({\n                name, rule, category, series,\n                language, assignmentText, gradingScale,\n                creatorName, creatorEmail, supervisorInstructions\n            })\n            setName('')\n            setRule('')\n            setCategory('')\n            setSeries('')\n            setLanguage('')\n            setAssignmentText('')\n            setGradingScale('')\n            setCreatorEmail('')\n            setCreatorName('')\n            setSupervisorInstructions('')\n            setMessage('Tehtävä lisätty!')\n            setTimeout(() => {\n                setMessage(null)\n            }, 5000)\n        } catch {\n            setErrorMessage('Jotain meni vikaan')\n            setTimeout(() => {\n                setErrorMessage(null)\n            }, 5000)\n        }\n    }\n\n    return (\n        <div>\n            <h2>Lisää tehtävä</h2>\n            <Notification message={message} type=\"success\" />\n            <Notification message={errorMessage} type=\"error\" />\n            <form onSubmit={handleAddTask}>\n                <div>\n                    <Notification message={nameErrorMessage} type=\"error\" />\n                    <input\n                        className=\"task-title\"\n                        type=\"text\"\n                        value={name}\n                        name=\"Name\"\n                        placeholder=\"Tehtävän otsikko\"\n                        onChange={({ target }) => setName(target.value)}\n                    />\n                </div>\n                <div>\n                    <Notification message={assignmentTextErrorMessage} type=\"error\" />\n                    <textarea\n                        rows=\"3\"\n                        cols=\"35\"\n                        className=\"\"\n                        type=\"text\"\n                        value={assignmentText}\n                        name=\"AssignmentText\"\n                        placeholder=\"Tehtävänanto\"\n                        onChange={({ target }) => setAssignmentText(target.value)}\n                    />\n                </div>\n                <div>\n                    <textarea\n                        rows=\"3\"\n                        cols=\"35\"\n                        className=\"\"\n                        type=\"text\"\n                        value={gradingScale}\n                        name=\"GradingScale\"\n                        placeholder=\"Arvostelu\"\n                        onChange={({ target }) => setGradingScale(target.value)}\n                    />\n                </div>\n                <div>\n                    <textarea\n                        rows=\"3\"\n                        cols=\"35\"\n                        className=\"\"\n                        type=\"text\"\n                        value={supervisorInstructions}\n                        name=\"supervisorInstruction\"\n                        placeholder=\"Rastimiehen ohje\"\n                        onChange={({ target }) => setSupervisorInstructions(target.value)}\n                    />\n                </div>\n                <div className=\"dropdowns\">\n                    <Notification message={dropDownErrorMessage} type=\"error\" />\n                    <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\n                        <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\n                        {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\n                    </select>\n                </div>\n                <div className=\"dropdowns\">\n                    <div>\n                        <select value={category} onChange={(e) => handleCategoryChange(e)}>\n                            <option value=\"\">Kategoria</option>\n                            {categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)}\n                        </select>\n                    </div>\n                    <div>\n                        <select value={rule} onChange={(e) => handleRuleChange(e)}>\n                            <option value=\"\">Säännöt</option>\n                            {rules.map(rule => <option key={rule.id} value={rule.id}>{rule.name}</option>)}\n                        </select>\n                    </div>\n                    <div>\n                        <select value={language} onChange={(e) => handleLanguageChange(e)}>\n                            <option value=\"\">Kieli</option>\n                            {languages.map(language => <option key={language.id} value={language.id}>{language.name}</option>)}\n                        </select>\n                    </div>\n                </div>\n                <div>\n                    <Notification message={creatorNameErrorMessage} type=\"error\" />\n                    <input\n                        className=\"\"\n                        type=\"text\"\n                        value={creatorName}\n                        name=\"CreatorName\"\n                        placeholder=\"Lisääjän nimi\"\n                        onChange={({ target }) => setCreatorName(target.value)}\n                    />\n                    <Notification message={creatorEmailErrorMessage} type=\"error\" />\n                    <input\n                        className=\"\"\n                        type=\"text\"\n                        value={creatorEmail}\n                        name=\"CreatorEmail\"\n                        placeholder=\"Lisääjän sähköpostiosoite\"\n                        onChange={({ target }) => setCreatorEmail(target.value)}\n                    />\n                </div>\n                <button type=\"submit\" className=\"add-task-button\">Lisää tehtävä</button>\n            </form>\n        </div>\n    )\n}\nexport default AddTask","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport taskService from '../services/task'\nimport Notification from './Notification'\n\n\nconst TaskListPending = () => {\n  const [tasks, setTasks] = useState([])\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    taskService.getPendingTasks().then((response) => {\n      setTasks(response)\n    })\n  }, [])\n\n  const handleAccept = (id) => {\n    try {\n      taskService.acceptTask(id)\n      setTasks(tasks.filter(t => t.id !== id))\n      setMessage('Tehtävä hyväksytty')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleDelete = async (id) => {\n    try {\n      await taskService.deleteTask(id)\n      setTasks(tasks.filter(t => t.id !== id))\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"task-list\">\n      <h1>Hyväksyntää odottavat kisatehtävät</h1>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n\n      {tasks.map((task) => (\n        <div className={`task-list-item`} key={task.id}>\n          <span>\n            <Link to={`/tehtava/${task.id}`}>\n              {task.name}\n            </Link>\n          </span>\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n          <span>{task.category.name}</span>\n          <span>\n            <button className=\"accept-button\" onClick={() => handleAccept(task.id)}>Hyväksy</button>\n            <button className=\"delete-button\" onClick={() => handleDelete(task.id)}>Poista</button>\n          </span>\n        </div>\n      ))}\n\n    </div>\n\n  )\n}\n\nexport default TaskListPending\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport TaskListPending from './TaskListPending'\n\nconst Admin = () => (\n  <div>\n    <TaskListPending />\n    <Link to=\"/omasivu\">Omat tiedot</Link>\n    <br />\n    <Link to=\"/lisaa_admin\">Lisää ylläpitäjä</Link>\n    <br />\n    <Link to=\"/lisaa_pudotusvalikkoon\">Lisää pudotusvalikkoon</Link>\n  </div>\n)\n\nexport default Admin\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst EditUser = ({ setShowEdit, user, setUser, setMessage }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\n  const [name, setName] = useState(user.name)\n  const [username, setUsername] = useState(user.username)\n\n  const handleEditUser = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setUsernameErrorMessage(null)\n    if (name.length < 3) {\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\n    }\n    if (username.length < 3) {\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\n    }\n    if (name.length < 3 || username.length < 3) {\n      return\n    }\n    try {\n      const editedUser = await userService.editUser({\n        name, username\n      })\n      setUser(editedUser)\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(editedUser),\n      )\n      setShowEdit(false)\n      setMessage('Tietoja muokattu!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"username already exists\") {\n        setErrorMessage('Käyttäjätunnus on varattu')\n      } else {\n        setErrorMessage('Muokkaaminen epäonnistui')\n      }\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"edit-user-form\">\n      <h2>Omat tiedot</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleEditUser}>\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <label>Nimi</label><br/>\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={usernameErrorMessage} type=\"error\" />\n          <label>Käyttäjätunnus</label><br/>\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"edit-button\">Tallenna</button>\n        <button onClick={() => setShowEdit(false)} className=\"cancel-button\">Peruuta</button>\n      </form>\n    </div>\n  )\n}\n\nexport default EditUser\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst ChangePassword = ({ setShowChangePassword, setMessage }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [newPasswordAgain, setNewPasswordAgain] = useState('')\n\n  const handleChangePassword = async (event) => {\n    event.preventDefault()\n    setErrorMessage(null)\n    if (newPassword.length < 3) {\n      setErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\n      return\n    }\n    if (newPassword !== newPasswordAgain) {\n      setErrorMessage('Salasanat eivät täsmää')\n      return\n    }\n    try {\n      await userService.editUser({\n        oldPassword, newPassword\n      })\n      setOldPassword('')\n      setNewPassword('')\n      setNewPasswordAgain('')\n      setShowChangePassword(false)\n      setMessage('Salasana vaihdettu!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"incorrect password\") {\n        setErrorMessage('Vanha salasana ei täsmää')\n      } else {\n        setErrorMessage('Salasanan vaihtaminen epäonnistui')\n      }\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"change-password-form\">\n      <h2>Vaihda salasana</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleChangePassword}>\n        <div>\n          <input\n            className=\"old-password\"\n            type=\"password\"\n            value={oldPassword}\n            placeholder=\"Vanha salasana\"\n            onChange={({ target }) => setOldPassword(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"new-password\"\n            type=\"password\"\n            value={newPassword}\n            placeholder=\"Uusi salasana\"\n            onChange={({ target }) => setNewPassword(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"new-password-again\"\n            type=\"password\"\n            value={newPasswordAgain}\n            placeholder=\"Uusi salasana uudelleen\"\n            onChange={({ target }) => setNewPasswordAgain(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"change-password-button\">Tallenna</button>\n        <button onClick={() => setShowChangePassword(false)} className=\"cancel-button\">Peruuta</button>\n      </form>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport EditUser from './EditUser'\nimport ChangePassword from './ChangePassword'\n\nconst User = ({ user, setUser }) => {\n  const [message, setMessage] = useState(null)\n  const [showEdit, setShowEdit] = useState(false)\n  const [showChangePassword, setShowChangePassword] = useState(false)\n\n  const editUser = () => {\n    setShowChangePassword(false)\n    setShowEdit(true)\n  }\n\n  const changePassword = () => {\n    setShowEdit(false)\n    setShowChangePassword(true)\n  }\n\n  return (\n    <div>\n      {user\n        && (\n          <div className=\"user-info\">\n            {!showEdit && !showChangePassword\n            && (\n              <div>\n                <Notification message={message} type=\"success\" />\n                <h2>Omat tiedot</h2>\n                <p>\n                  <b>Nimi: </b>\n                  {user.name}\n                </p>\n                <p>\n                  <b>Käyttäjätunnus: </b>\n                  {user.username}\n                </p>\n                <button className=\"edit-user-button\" onClick={() => editUser()}>Muokkaa</button>\n                <button className=\"change-password-button\" onClick={() => changePassword()}>Vaihda salasana</button>\n              </div>\n            )}\n            {showEdit && <EditUser setShowEdit={setShowEdit} user={user} setUser={setUser} setMessage={setMessage} />}\n            {showChangePassword && <ChangePassword setShowChangePassword={setShowChangePassword} setMessage={setMessage} />}\n          </div>\n        )}\n    </div>\n  )\n}\n\nexport default User\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Notification from './Notification'\nimport taskService from '../services/task'\nimport ruleService from '../services/rule'\nimport categoryService from '../services/category'\nimport seriesService from '../services/series'\nimport languageService from '../services/language'\n\nconst ModifyTask = ({ setModifyVisible, task, setTask }) => {\n\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [name, setName] = useState(task.name)\n  const [assignmentText, setAssignmentText] = useState(task.assignmentText)\n  const [gradingScale, setGradingScale] = useState(task.gradingScale)\n  const [supervisorInstructions, setSupervisorInstructions] = useState(task.supervisorInstructions)\n  const [rules, setRules] = useState([])\n  const [rule, setRule] = useState(task.rules.id)\n  const [categories, setCategories] = useState([])\n  const [category, setCategory] = useState(task.category.id)\n  const [seriess, setSeriess] = useState([])\n  const [series, setSeries] = useState(task.series.map(s => s.id))\n  const [languages, setLanguages] = useState([])\n  const [language, setLanguage] = useState(task.language.id)\n  const [creatorName, setCreatorName] = useState(task.creatorName)\n  const [creatorEmail, setCreatorEmail] = useState(task.creatorEmail)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\n  const history = useHistory()\n\n  let id = task.id\n\n  useEffect(() => {\n    ruleService.getRules().then(response => {\n      setRules(response)\n    })\n    categoryService.getCategories().then(response => {\n      setCategories(response)\n    })\n    seriesService.getSeries().then(response => {\n      setSeriess(response)\n    })\n    languageService.getLanguages().then(response => {\n      setLanguages(response)\n    })\n  }, [])\n\n  const handleRuleChange = (e) => {\n    setRule(e.target.value)\n  }\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value)\n  }\n\n  const handleSeriesChange = (e) => {\n    let options = e.target.options\n    let values = []\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected && options[i].value !== '') {\n        values.push(options[i].value)\n      }\n    }\n    setSeries(values)\n  }\n\n  const handleLanguageChange = (e) => {\n    setLanguage(e.target.value)\n  }\n\n  const handleModifyTask = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setAssignmentTextErrorMessage(null)\n    setCreatorNameErrorMessage(null)\n    setCreatorEmailErrorMessage(null)\n    setDropDownErrorMessage(null)\n    if (name.length < 1) {\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\n    }\n    if (assignmentText.length < 1) {\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\n    }\n    if (creatorName.length < 1) {\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\n    }\n    if (creatorEmail.length < 1) {\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\n    }\n    if (language === '' || rule === '' || series === '' || category === '') {\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\n    }\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\n      || language === '' || rule === '' || series === '' || category === '') {\n      return\n    }\n    try {\n      const modifiedTask = await taskService.updateTask({\n        name, rule, category, series,\n        language, assignmentText, gradingScale,\n        creatorName, creatorEmail, supervisorInstructions, id\n      })\n      setMessage('Tehtävä tallennettu!')\n      setTask(modifiedTask)\n      setTimeout(() => {\n        setMessage(null)\n        window.location.reload()\n      }, 1000)\n    } catch {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCancel = () => {\n    setModifyVisible(false)\n  }\n\n  return (\n    <div>\n      <h2>Muokkaa tehtävää</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleModifyTask} className=\"modify-form\">\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"task-title\"\n            type=\"text\"\n            defaultValue={name}\n            name=\"Name\"\n            placeholder=\"Tehtävän otsikko\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\n          <textarea\n            rows=\"3\"\n            cols=\"35\"\n            className=\"\"\n            type=\"text\"\n            defaultValue={assignmentText}\n            name=\"AssignmentText\"\n            placeholder=\"Tehtävänanto\"\n            onChange={({ target }) => setAssignmentText(target.value)}\n          />\n        </div>\n        <div>\n          <textarea\n            rows=\"3\"\n            cols=\"35\"\n            className=\"\"\n            type=\"text\"\n            defaultValue={gradingScale}\n            name=\"GradingScale\"\n            placeholder=\"Arvostelu\"\n            onChange={({ target }) => setGradingScale(target.value)}\n          />\n        </div>\n        <div>\n          <textarea\n            rows=\"3\"\n            cols=\"35\"\n            className=\"\"\n            type=\"text\"\n            defaultValue={supervisorInstructions}\n            name=\"supervisorInstruction\"\n            placeholder=\"Rastimiehen ohje\"\n            onChange={({ target }) => setSupervisorInstructions(target.value)}\n          />\n        </div>\n        <div className=\"dropdowns\">\n          <Notification message={dropDownErrorMessage} type=\"error\" />\n          <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\n            <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\n            {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\n          </select>\n        </div>\n        <div className=\"dropdowns\">\n          <div>\n            <select value={category} onChange={(e) => handleCategoryChange(e)}>\n              <option value=\"\">Kategoria</option>\n              {categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <select value={rule} onChange={(e) => handleRuleChange(e)}>\n              <option value=\"\">Säännöt</option>\n              {rules.map(rule => <option key={rule.id} value={rule.id}>{rule.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <select value={language} onChange={(e) => handleLanguageChange(e)}>\n              <option value=\"\">Kieli</option>\n              {languages.map(language => <option key={language.id} value={language.id}>{language.name}</option>)}\n            </select>\n          </div>\n        </div>\n        <div>\n          <Notification message={creatorNameErrorMessage} type=\"error\" />\n          <input\n            className=\"\"\n            type=\"text\"\n            defaultValue={creatorName}\n            name=\"CreatorName\"\n            placeholder=\"Muokkaajan nimi\"\n            onChange={({ target }) => setCreatorName(target.value)}\n          />\n          <Notification message={creatorEmailErrorMessage} type=\"error\" />\n          <input\n            className=\"\"\n            type=\"text\"\n            defaultValue={creatorEmail}\n            name=\"CreatorEmail\"\n            placeholder=\"Muokkaajan sähköpostiosoite\"\n            onChange={({ target }) => setCreatorEmail(target.value)}\n          />\n        </div>\n        <div>\n          <button type=\"submit\" className=\"save-task-button\">Tallenna</button>\n          <button onClick={() => handleCancel()} className=\"return-button\">Peruuta</button>\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default ModifyTask","import React, { useState, useEffect } from 'react'\nimport taskService from '../services/task'\nimport ModifyTask from './ModifyTask'\nimport Notification from './Notification'\nimport { useHistory } from 'react-router-dom'\n\nconst Task = ({ match, user }) => {\n  const [task, setTask] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const history = useHistory()\n\n  useEffect(() => {\n    taskService.getOneTask(match.params.id).then((response) => {\n      setTask(response)\n    })\n  }, [])\n\n  const handleDelete = () => {\n    try {\n      taskService.deleteTask(task.id)\n      setMessage('Tehtävä poistettu')\n      setTimeout(() => {\n        setMessage(null)\n        if (task.pending) {\n          history.push('/admin')\n        } else {\n          history.push('/')\n        }\n      }, 2000)\n    } catch {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleAccept = () => {\n    try {\n      taskService.acceptTask(task.id)\n      setMessage('Tehtävä hyväksytty')\n      setTimeout(() => {\n        setMessage(null)\n        history.push('/admin')\n      }, 2000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      {modifyVisible ?\n        <ModifyTask setModifyVisible={setModifyVisible} task={task} setTask={setTask} />\n        :\n        <div className=\"task-view-info-background\">\n          <Notification message={message} type=\"success\" />\n          <Notification message={errorMessage} type=\"error\" />\n          {task &&\n            <div className=\"task-view-info\">\n              <h2>{task.name}</h2>\n              <h3>Tehtävänanto:</h3>\n              <p>{task.assignmentText}</p>\n              <h3>Rastimiehen ohjeet:</h3>\n              <p>{task.supervisorInstructions}</p>\n              <h3>Arvosteluasteikko:</h3>\n              <p>{task.gradingScale}</p>\n              <h3>Sarja:</h3>\n              {task.series.map(s => <span key={task.id + s.id}>{s.name}<br /></span>)}\n              <h3>Kategoria:</h3>\n              <p>{task.category.name}</p>\n              <h3>Sääntöluokka:</h3>\n              <p>{task.rules.name}</p>\n              <h3>Tehtävän viimeisin muokkaaja:</h3>\n              <p>{task.creatorName}<br/>{task.creatorEmail}</p>\n\n              {user !== null &&\n                <div>\n                  <button onClick={() => setModifyVisible(true)} className=\"modify-view-button\">Muokkaa</button>\n                  {task.pending && <button className=\"accept-button\" onClick={() => handleAccept()}>Hyväksy</button>}\n                  <button className=\"delete-button\" onClick={() => handleDelete()}>Poista</button>\n                </div>}\n            </div>\n          }\n        </div>\n\n      }\n    </div>\n\n  )\n}\n\nexport default Task\n","import React, { useState, useEffect, Fragment } from 'react'\nimport { Route, Link, Redirect, useHistory } from 'react-router-dom'\nimport Login from './components/Login'\nimport TaskList from './components/TaskList'\nimport AddAdmin from './components/AddAdmin'\nimport AddTaskDropdown from './components/AddTaskDropdown'\nimport AddTask from './components/AddTask'\nimport Admin from './components/Admin'\nimport User from './components/User'\nimport Task from './components/Task'\nimport tokenService from './services/token'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const history = useHistory()\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const loggedUser = JSON.parse(loggedUserJSON)\n      setUser(loggedUser)\n      tokenService.setToken(loggedUser.token)\n    }\n  }, [])\n\n  const logout = () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n    tokenService.setToken(null)\n    history.push('/')\n    window.location.reload()\n  }\n\n  return (\n    <div>\n      <div className=\"header\">\n        <Link to=\"/\"><div className=\"logo\" /></Link>\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-header\">Lisää tehtävä</button></Link>\n\n        {user === null ?\n          <Fragment>\n            <Link to=\"/kirjautuminen\"><button className=\"login-button-header\">Kirjaudu</button></Link>\n          </Fragment>\n          :\n          <Fragment>\n            <Link to=\"/admin\"><button className=\"admin-button-header\">Admin</button></Link>\n            <div>\n              <div className=\"logged\">Kirjautuneena <Link to=\"/omasivu\" className=\"username-header\">{user.username}</Link></div>\n              <div className=\"logout\"><button className=\"logout-button-header\" onClick={() => logout()}>Kirjaudu ulos</button></div>\n            </div>\n          </Fragment>\n        }\n\n      </div>\n      <div className=\"admin-task-buttons-mobile\">\n        {user !== null && <Link to=\"/admin\"><button className=\"admin-button-mobile\">Admin</button></Link>}\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-mobile\">Lisää tehtävä</button></Link>\n      </div>\n      <div className=\"container\">\n        <Route exact path=\"/\" render={() => <TaskList user={user} />} />\n        <Route exact path=\"/tehtava/:id\" render={(match) => <Task {...match} user={user} />} />\n        <Route path=\"/kirjautuminen\" render={() => <Login setUser={setUser} />} />\n        <Route path=\"/lisaa_tehtava\" render={() => <AddTask />} />\n        <Route path=\"/omasivu\" render={() => (user ? <User user={user} setUser={setUser} /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/admin\" render={() => (user ? <Admin /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/lisaa_admin\" render={() => (user ? <AddAdmin /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/lisaa_pudotusvalikkoon\" render={() => (user ? <AddTaskDropdown /> : <Redirect to=\"/\" />)} />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}