{"version":3,"sources":["components/Notification.js","services/login.js","services/token.js","components/Login.js","components/FrontPageInfo.js","components/FrontPage.js","services/task.js","services/series.js","services/rule.js","services/category.js","components/Search.js","components/TaskList.js","components/Basket.js","services/user.js","components/AddAdmin.js","components/Rule.js","services/language.js","components/Language.js","components/Series.js","components/Category.js","components/AddTaskDropdown.js","services/file.js","components/MDEditor.js","components/AddTask.js","components/TaskListPending.js","components/Admin.js","components/EditUser.js","components/ChangePassword.js","components/User.js","components/ModifyTask.js","components/TaskTextDisplay.js","components/Task.js","App.js","index.js"],"names":["Notification","message","type","className","baseUrl","process","credentials","a","async","axios","post","response","data","token","newToken","Login","setUser","useState","errorMessage","setErrorMessage","username","setUsername","email","setEmail","password","setPassword","history","useHistory","onSubmit","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","tokenService","push","setTimeout","value","name","placeholder","onChange","target","FrontPageInfo","FrontPage","tasks","addTaskToBasket","newTasks","setNewTasks","favoriteTasks","setFavoriteTasks","useEffect","sort","compareCreated","slice","compareRatings","b","created","localeCompare","ratingsAVG","map","task","key","id","to","series","s","category","onClick","baseUrlPending","config","headers","Authorization","get","search","put","delete","serie","rule","cat","console","log","Search","setTasks","setAllTasks","setSearch","taskService","defaultValue","TaskList","originalTasks","handleUpdateViews","allTasks","selectedCategory","setSelectedCategory","selectedSeries","setSelectedSeries","selectedRules","setSelectedRules","categories","setCategories","rules","setRules","isClearable","seriess","setSeriess","categoryService","then","seriesService","ruleService","length","array","i","j","includes","filter","compareNamesAsc","compareNamesDesc","compareRatingsAsc","compareRatingsDesc","getOptionLabel","option","getOptionValue","options","isMulti","c","concat","views","rating","starRatedColor","starDimension","starSpacing","confirm","t","handleDelete","Basket","removeTaskFromBasket","AddAdmin","setMessage","nameErrorMessage","setNameErrorMessage","usernameErrorMessage","setUsernameErrorMessage","passwordErrorMessage","setPasswordErrorMessage","emailErrorMessage","setEmailErrorMessage","setName","users","setUsers","allowNotifications","setAllowNotifications","userService","some","defaultChecked","Rule","newRuleName","setNewRuleName","modifiedRuleName","setModifiedRuleName","modifiedRuleId","setModifiedRuleId","modifyVisible","setModifyVisible","acceptedCategories","setAcceptedCategories","modifiedCategories","setModifiedCategories","handleRuleModify","modifiedRule","handleModifyCategories","handleShowModify","r","handleRuleDelete","newCategories","addedRule","language","Language","languages","setLanguages","languageName","setLanguageName","modifiedLanguageName","setModifiedLanguageName","modifiedLanguageId","setModifiedLanguageId","handleLanguageModify","modifiedLanguage","languageService","l","handleLanguageDelete","addedLanguage","Series","setSeries","modifiedSerieName","setModifiedSerieName","modifiedSerieId","setModifiedSerieId","modifiedSerieColor","setModifiedSerieColor","color","setColor","handleSerieModify","modifiedSerie","onChangeComplete","hex","colors","style","backgroundColor","display","borderRadius","height","width","marginLeft","handleSerieDelete","addedSerie","Category","newCategoryName","setNewCategoryName","modifiedCategoryName","setModifiedCategoryName","modifiedCategoryId","setModifiedCategoryId","handleCategoryModify","modifiedCategory","handleCategoryDelete","addedCategory","AddTaskDropdown","showCategories","setShowCategories","showRules","setShowRules","showLanguages","setShowLanguages","showSeries","setShowSeries","files","MDEditor","setText","setMD","mdParser","MarkdownIt","renderHTML","text","render","html","AddTask","assignmentText","setAssignmentText","gradingScale","setGradingScale","supervisorInstructions","setSupervisorInstructions","assignmentTextMD","setAssignmentTextMD","gradingScaleMD","setGradingScaleMD","supervisorInstructionsMD","setSupervisorInstructionsMD","setRule","setCategory","setLanguage","creatorName","setCreatorName","creatorEmail","setCreatorEmail","assignmentTextErrorMessage","setAssignmentTextErrorMessage","creatorNameErrorMessage","setCreatorNameErrorMessage","creatorEmailErrorMessage","setCreatorEmailErrorMessage","dropDownErrorMessage","setDropDownErrorMessage","setFiles","formData","FormData","append","addedFiles","fileService","location","reload","multiple","e","values","selected","handleSeriesChange","foundRule","find","handleRuleChange","handleCategoryChange","handleLanguageChange","onDrop","newFiles","getRootProps","getInputProps","Fragment","file","stopPropagation","handleDeleteFile","TaskListPending","loggedUserJSON","getItem","loggedUser","parse","exception","handleAccept","Admin","EditUser","setShowEdit","editedUser","error","ChangePassword","setShowChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","newPasswordAgain","setNewPasswordAgain","User","showEdit","showChangePassword","ModifyTask","setTask","oldFiles","setOldFiles","setNewFiles","filesToDelete","setFilesToDelete","modifiedTask","placeHolder","substring","indexOf","handleDeleteOldFile","handleDeleteNewFile","TaskTextDisplay","dangerouslySetInnerHTML","__html","Task","match","params","format","href","pending","App","basket","setBasket","basketJSON","foundBasket","removeItem","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.83264b07.chunk.js","sourcesContent":["import React from 'react'\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/login`\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","let token = null\n\nconst getToken = () => token\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nexport default { getToken, setToken }\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Notification from './Notification'\nimport loginService from '../services/login'\nimport tokenService from '../services/token'\n\nconst Login = ({ setUser }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const history = useHistory()\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, email, password,\n      })\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user),\n      )\n      setUser(user)\n      tokenService.setToken(user.token)\n      setUsername('')\n      setEmail('')\n      setPassword('')\n      history.push('/')\n    } catch (exception) {\n      setErrorMessage('Väärä käyttäjätunnus/salasana')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"login-form\">\n      <h2>Kirjaudu sisään</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleLogin}>\n        <div>\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            placeholder=\"Salasana\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"login-button\">Kirjaudu</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Login\n","import React from 'react'\n\nconst FrontPageInfo = () => {\n\n  return (\n    <div className=\"frontpage-info\">\n      <h2>Kisatehtäväpankki</h2>\n      <p>Kisatehtäväpankki on arkisto,\n      johon voidaan tallettaa tehtäviä.\n      Sivustolle voi tallettaa tehtävän,\n      sekä siihen liittyvät liitetiedostot.\n      </p>\n      <p>\n        Kirjautumattomana käyttäjänä voit\n        koostaa tehtävistä kisaa varten\n        kokonaisuuksia, sekä ladata ne\n        PDF-tiedostona itsellesi. Tehtävän lisääminen \"kisakoriin\"\n        onnistuu painamalla tehtävässä esiintyvää koripainiketta,\n        ja jo mukaan otetut tehtävät löydät yläreunan koria painamalla.\n      </p>\n      <p>\n        Voit myöskin selailla tehtäviä, arvostella tehtäviä\n        ja lisätä uusia tehtäviä. Uuden tehtävän lisääminen arkistoon\n        vaatii ensin ylläpitäjän hyväksynnän uudelle tehtävälle.\n      </p>\n    </div>\n  )\n}\n\nexport default FrontPageInfo","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport FrontPageInfo from './FrontPageInfo'\n\nconst FrontPage = ({ tasks, addTaskToBasket }) => {\n  const [newTasks, setNewTasks] = useState([])\n  const [favoriteTasks, setFavoriteTasks] = useState([])\n\n  useEffect(() => {\n    setNewTasks([...tasks].sort(compareCreated).slice(0, 5))\n    setFavoriteTasks([...tasks].sort(compareRatings).slice(0, 5))\n  }, [tasks])\n\n  const compareCreated = (a, b) => {\n    return b.created.localeCompare(a.created)\n  }\n\n  const compareRatings = (a, b) => {\n    return b.ratingsAVG - a.ratingsAVG\n  }\n\n  return (\n    <div className=\"frontpage\">\n      <h1>Tervetuloa Kisatehtäväpankkiin!</h1>\n      <div className=\"task-list frontpage-container\">\n        <FrontPageInfo />\n        <div className=\"new-favorite-lists\">\n          <div className=\"new-list\">\n            <div className=\"image-on-background\">\n              <h2>Uusimmat tehtävät</h2>\n              <div className=\"task-list-title frontpage-item\">\n                <span >Tehtävän nimi</span>\n                <span>Sarja</span>\n                <span>Kategoria</span>\n                <span></span>\n              </div>\n            </div>\n            {newTasks.map((task) => (\n              <div className=\"task-list-item frontpage-item new-item\" key={task.id}>\n                <span>\n                  <Link to={`/tehtava/${task.id}`}>\n                    {task.name}\n                  </Link>\n                </span>\n                <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n                <span>{task.category && task.category.name}</span>\n                <span><div className=\"black-basket\" onClick={() => addTaskToBasket(task)} /></span>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"favorite-list\">\n            <div className=\"image-on-background\">\n              <h2>Suosituimmat tehtävät</h2>\n              <div className=\"task-list-title frontpage-item\">\n                <span>Tehtävän nimi</span>\n                <span>Sarja</span>\n                <span>Kategoria</span>\n                <span></span>\n              </div>\n            </div>\n            {favoriteTasks.map((task) => (\n              <div className=\"task-list-item frontpage-item favorite-item\" key={task.id}>\n                <span>\n                  <Link to={`/tehtava/${task.id}`}>\n                    {task.name}\n                  </Link>\n                </span>\n                <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n                <span>{task.category && task.category.name}</span>\n                <span><div className=\"black-basket\" onClick={() => addTaskToBasket(task)} /></span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default FrontPage\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/task`\nconst baseUrlPending = `${process.env.REACT_APP_API_URL}/task/pending`\n\n\nconst getTasks = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getPendingTasks = async () => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  const response = await axios.get(baseUrlPending, config)\n  return response.data\n}\n\nconst getSearchedTasks = async (search) => {\n  const response = await axios.post(`${baseUrl}/search`, search)\n  return response.data\n}\n\nconst getOneTask = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst addtask = async (task) => {\n  let config = null\n  const token = tokenService.getToken()\n\n  if (token) {\n    config = {\n      headers: { Authorization: token }\n    }\n  }\n\n  const response = await axios.post(baseUrl, task, config)\n  return response.data\n}\n\nconst updateTask = async (task) => {\n  let config = null\n  const token = tokenService.getToken()\n\n  if (token) {\n    config = {\n      headers: { Authorization: token },\n    }\n  }\n\n  const response = await axios.put(`${baseUrl}/${task.id}`, task, config)\n  return response.data\n}\n\nconst deleteTask = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nconst acceptTask = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  const response = await axios.put(`${baseUrl}/${id}/accept`, id, config)\n  return response.data\n}\n\nconst updateViews = async (id) => {\n  const response = await axios.post(`${baseUrl}/${id}/views`)\n  return response.data\n}\n\nexport default { addtask, getTasks, getOneTask, getSearchedTasks, updateTask, deleteTask, getPendingTasks, acceptTask, updateViews }\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/series`\n\nconst getSeries = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addSeries = async (series) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, series, config)\n  return response.data\n}\n\nconst editSerie = async (serie) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${serie.id}`, serie, config)\n  return response.data\n\n}\n\nconst deleteSerie = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addSeries, getSeries, deleteSerie, editSerie }\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/rule`\n\nconst getRules = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addRule = async (rule) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, rule, config)\n  return response.data\n}\n\nconst editRule = async (rule) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${rule.id}`, rule, config)\n  return response.data\n\n}\n\nconst deleteRule = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addRule, getRules, editRule, deleteRule }\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/category`\n\nconst getCategories = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addCategory = async (cat) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, cat, config)\n  return response.data\n}\n\nconst editCategory = async (category) => {\n  console.log(category)\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${category.id}`, category, config)\n  return response.data\n\n}\n\nconst deleteCategory = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\n\nexport default { addCategory, getCategories, editCategory, deleteCategory }\n","import React, { useState } from 'react'\nimport taskService from '../services/task'\nimport Notification from './Notification'\n\nconst Search = ({ setTasks, setAllTasks }) => {\n\n  const [search, setSearch] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const handleSearch = async (event) => {\n    event.preventDefault()\n    try {\n      const response = await taskService.getSearchedTasks({ search })\n      setTasks(response)\n      setAllTasks(response)\n    } catch (exception) {\n      setErrorMessage('Haku ei onnistunut')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleSearch} className=\"search-form\">\n        <input\n          className=\"search-input\"\n          type=\"text\"\n          defaultValue=''\n          name=\"search\"\n          placeholder=\"Hakutermi\"\n          onChange={({ target }) => setSearch(target.value)}\n        />\n        <button type=\"submit\" className=\"search-tasks-button\">Hae</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Search","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport taskService from '../services/task'\nimport seriesService from '../services/series'\nimport ruleService from '../services/rule'\nimport categoryService from '../services/category'\nimport Notification from './Notification'\nimport Select from 'react-select'\nimport Search from './Search'\nimport StarRatings from 'react-star-ratings'\n\nconst TaskList = ({ user, originalTasks, addTaskToBasket, handleUpdateViews }) => {\n  const [tasks, setTasks] = useState(originalTasks)\n  const [allTasks, setAllTasks] = useState(originalTasks)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [selectedCategory, setSelectedCategory] = useState([])\n  const [selectedSeries, setSelectedSeries] = useState([])\n  const [selectedRules, setSelectedRules] = useState('')\n  const [categories, setCategories] = useState([])\n  const [series, setSeries] = useState([])\n  const [rules, setRules] = useState([])\n  const [isClearable, setIsClearable] = useState(true)\n  const [seriess, setSeriess] = useState([])\n\n  useEffect(() => {\n    categoryService.getCategories().then((response) => {\n      setCategories(response)\n    })\n\n    seriesService.getSeries().then((response) => {\n      setSeriess(response)\n    })\n\n    ruleService.getRules().then((response) => {\n      setRules(response)\n    })\n  }, [])\n\n  useEffect(() => {\n    setTasks(originalTasks)\n    setAllTasks(originalTasks)\n  }, [originalTasks])\n\n  useEffect(() => {\n    if (selectedSeries.length > 0 && selectedCategory.length > 0 && selectedRules) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedSeries.length > 0 && selectedCategory.length > 0) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedSeries.length > 0 && selectedRules) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedCategory.length > 0 && selectedRules) {\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id) && task.rules.id === selectedRules.id))\n    } else if (selectedSeries.length > 0) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedCategory.length > 0) {\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id)))\n    } else if (selectedRules) {\n      setTasks(allTasks.filter(task => task.rules.id === selectedRules.id))\n    } else {\n      setTasks(allTasks)\n    }\n  }, [selectedCategory, selectedSeries, selectedRules])\n\n  const handleDelete = async (task) => {\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\n        await taskService.deleteTask(task.id)\n        setTasks(tasks.filter(t => t.id !== task.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSeriesFiltering = (series) => {\n    if (series && series.length > 0) {\n      setSelectedSeries(series.map(s => s.id))\n    } else {\n      setSelectedSeries([])\n      setTasks(allTasks)\n    }\n  }\n\n  const handleCategoryFiltering = (category) => {\n    if (category && category.length > 0) {\n      setSelectedCategory(category.map(c => c.id))\n    } else {\n      setSelectedCategory([])\n      setTasks(allTasks)\n    }\n  }\n\n  const handleRuleFiltering = (rules) => {\n    if (rules) {\n      setSelectedRules(rules)\n    } else {\n      setSelectedRules('')\n      setTasks(allTasks)\n    }\n  }\n\n  const handleSortByNameAsc = () => {\n    setTasks(tasks.sort(compareNamesAsc).concat([]))\n  }\n\n  const handleSortByNameDesc = () => {\n    setTasks(tasks.sort(compareNamesDesc).concat([]))\n  }\n\n  const handleSortByRatingsAsc = () => {\n    setTasks(tasks.sort(compareRatingsAsc).concat([]))\n  }\n\n  const handleSortByRatingsDesc = () => {\n    setTasks(tasks.sort(compareRatingsDesc).concat([]))\n  }\n\n  const compareNamesAsc = (a, b) => {\n    return b.name.localeCompare(a.name)\n  }\n\n  const compareNamesDesc = (a, b) => {\n    return a.name.localeCompare(b.name)\n  }\n\n  const compareRatingsAsc = (a, b) => {\n    return a.ratingsAVG - b.ratingsAVG\n  }\n\n  const compareRatingsDesc = (a, b) => {\n    return b.ratingsAVG - a.ratingsAVG\n  }\n\n  return (\n    <div className=\"task-list\">\n      <h1>Kisatehtäväpankki</h1>\n      <div className=\"search-filter-container\">\n        <div className=\"search\"><Search setTasks={setTasks} setAllTasks={setAllTasks} /></div>\n\n        <div className=\"filter\">\n          <Select\n            name=\"filter-series\"\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleSeriesFiltering}\n            options={seriess}\n            isClearable={isClearable}\n            placeholder={\"Sarja\"}\n            isMulti={true}\n          />\n        </div>\n\n        <div className=\"filter\">\n          <Select\n            name=\"filter-category\"\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleCategoryFiltering}\n            options={categories}\n            isClearable={isClearable}\n            placeholder={\"Kategoria\"}\n            isMulti={true}\n          />\n        </div>\n\n        <div className=\"filter\">\n          <Select\n            name=\"filter-rules\"\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleRuleFiltering}\n            options={rules}\n            isClearable={isClearable}\n            placeholder={\"Säännöt\"}\n          />\n        </div>\n      </div>\n\n      <Notification message={errorMessage} />\n      {tasks && tasks.length > 0 &&\n        <div className=\"task-list-title\">\n          <span className=\"arrow-inline\">Tehtävän nimi <span className=\"arrow-container\"><i className=\"name-arrow-up\" onClick={handleSortByNameAsc} /><i className=\"name-arrow-down\" onClick={handleSortByNameDesc} /></span></span>\n          <span>Sarja</span>\n          <span>Kategoria</span>\n          <span className=\"arrow-inline\">Arvostelu <span className=\"arrow-container\"><i className=\"rating-arrow-up\" onClick={handleSortByRatingsAsc} /><i className=\"rating-arrow-down\" onClick={handleSortByRatingsDesc} /></span></span>\n          {user && <span></span>}\n          <span></span>\n        </div>\n      }\n      {tasks.map((task) => (\n        <div className=\"task-list-item\" key={task.id}>\n          <span>\n            <Link to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task.id)}>\n              {task.name}\n            </Link>\n            <p>Katselukertoja: {task.views}</p>\n          </span>\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n          <span>{task.category && task.category.name}</span>\n          <span>\n            <StarRatings\n              rating={task.ratingsAVG}\n              starRatedColor=\"#f0e105\"\n              starDimension=\"20px\"\n              starSpacing=\"10px\"\n            />\n          </span>\n          {user && <span className=\"task-list-delete\"><button className=\"delete-button\" onClick={() => handleDelete(task)}>Poista</button></span>}\n          <span><div className=\"black-basket\" onClick={() => addTaskToBasket(task)} /></span>\n        </div>\n      ))}\n    </div>\n\n  )\n}\n\nexport default TaskList\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport taskService from '../services/task'\nimport Notification from './Notification'\n\nconst Basket = ({ tasks, removeTaskFromBasket, handleUpdateViews }) => {\n\n  return (\n    <div className=\"task-list\">\n      <h2>Kisaan valitut tehtävät</h2>\n\n      {tasks && tasks.length === 0 && <div>Ei valittuja tehtäviä</div>}\n\n      {tasks && tasks.length > 0 &&\n        <div className=\"task-list-title\">\n          <span>Tehtävän nimi</span>\n          <span>Sarja</span>\n          <span>Kategoria</span>\n          <span></span>\n        </div>\n      }\n      {tasks.map((task) => (\n        <div className=\"task-list-item\" key={task.id}>\n          <span>\n            <Link to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task.id)}>\n              {task.name}\n            </Link>\n            <p>Katselukertoja: {task.views}</p>\n          </span>\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n          <span>{task.category && task.category.name}</span>\n          <span className=\"delete-task-from-basket\" onClick={() => removeTaskFromBasket(task.id)}>x</span>\n        </div>\n      ))}\n    </div>\n\n  )\n}\n\nexport default Basket\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/user`\n\nconst getUsers = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addUser = async (credentials) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() }\n  }\n  const response = await axios.post(baseUrl, credentials, config)\n  return response.data\n}\n\nconst editUser = async (user) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() }\n  }\n\n  const response = await axios.put(baseUrl, user, config)\n  return response.data\n}\n\nexport default { addUser, getUsers, editUser }\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst AddAdmin = () => {\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(null)\n  const [emailErrorMessage, setEmailErrorMessage] = useState(null)\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [users, setUsers] = useState([])\n  const [email, setEmail] = useState('')\n  const [allowNotifications, setAllowNotifications] = useState(true)\n\n  useEffect(() => {\n    userService.getUsers().then((response) => {\n      setUsers(response)\n    })\n  }, [])\n\n  const handleAddAdmin = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setUsernameErrorMessage(null)\n    setPasswordErrorMessage(null)\n    setEmailErrorMessage(null)\n    if (name.length < 3) {\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\n    }\n    if (username.length < 3) {\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\n    }\n    if (password.length < 3) {\n      setPasswordErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\n    }\n    if (users.some((user) => (user.username === username))) {\n      setUsernameErrorMessage('Käyttäjätunnus on varattu')\n    }\n\n    if (name.length < 3 || username.length < 3 || password.length < 3\n      || users.some((user) => (user.username === username))) {\n      return\n    }\n    try {\n      await userService.addUser({\n        name, username, email, password, allowNotifications\n      })\n      setName('')\n      setUsername('')\n      setEmail('')\n      setPassword('')\n      setAllowNotifications(true)\n      setMessage('Ylläpitäjä lisätty!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setErrorMessage('Lisääminen epäonnistui')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"signup-form\">\n      <h2>Lisää ylläpitäjä</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleAddAdmin}>\n        <div className=\"Testi\">\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={usernameErrorMessage} type=\"error\" />\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={emailErrorMessage} type=\"error\" />\n          <input\n            className=\"email\"\n            type=\"email\"\n            value={email}\n            name=\"email\"\n            placeholder=\"Sähköpostiosoite\"\n            onChange={({ target }) => setEmail(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={passwordErrorMessage} type=\"error\" />\n          <input\n            className=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            placeholder=\"Salasana\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <div>\n          <label>\n            Vastaanota ilmoituksia:\n            <div className=\"admin-radio\" onChange={({ target }) => setAllowNotifications(target.value)}>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"notifications\"\n                  value={true}\n                  defaultChecked\n                />\n                Kyllä\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"notifications\"\n                  value={false}\n                />\n                Ei\n              </label>\n            </div>\n          </label>\n        </div>\n        <button type=\"submit\" className=\"signup-button\">Lisää</button>\n      </form>\n    </div>\n  )\n}\n\nexport default AddAdmin\n","import React, { useState, Fragment } from 'react'\nimport Notification from './Notification'\nimport ruleService from '../services/rule'\nimport Select from 'react-select'\n\nconst Rule = ({ rules, setRules, categories }) => {\n  const [newRuleName, setNewRuleName] = useState('')\n  const [modifiedRuleName, setModifiedRuleName] = useState('')\n  const [modifiedRuleId, setModifiedRuleId] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n  const [acceptedCategories, setAcceptedCategories] = useState([])\n  const [modifiedCategories, setModifiedCategories] = useState([])\n  const [isClearable, setIsClearable] = useState(true)\n\n  const handleRuleAdd = async (event) => {\n    event.preventDefault()\n    const newCategories = acceptedCategories\n    try {\n      const addedRule = await ruleService.addRule({\n        rules: newRuleName, acceptedCategories: acceptedCategories.map(category => category.id)\n      })\n      setNewRuleName('')\n      setAcceptedCategories([])\n      setRules(rules.concat({ ...addedRule, acceptedCategories: newCategories }))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleRuleDelete = async (rule) => {\n    try {\n      if (window.confirm(`Haluatko poistaa säännön: ${rule.name}`)) {\n        await ruleService.deleteRule(rule.id)\n        setRules(rules.filter(r => r.id !== rule.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleRuleModify = async (event) => {\n    event.preventDefault()\n    const modifiedRule = { id: modifiedRuleId, name: modifiedRuleName, acceptedCategories: modifiedCategories }\n    try {\n      await ruleService.editRule({ id: modifiedRuleId, name: modifiedRuleName, acceptedCategories: modifiedCategories.map(category => category.id) })\n      setModifyVisible(false)\n      setRules(rules.map(rule => rule.id !== modifiedRule.id ? rule : modifiedRule))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (rule) => {\n    setModifyVisible(true)\n    setModifiedRuleId(rule.id)\n    setModifiedRuleName(rule.name)\n    setModifiedCategories(rule.acceptedCategories)\n  }\n\n  const handleAddCategories = (categories) => {\n    setAcceptedCategories(categories)\n  }\n\n  const handleModifyCategories = (categories) => {\n    setModifiedCategories(categories)\n  }\n\n  return (\n    <div className=\"rule-form\">\n      <Notification message={errorMessage} type=\"error\" />\n\n      {rules && rules.map((rule) => (\n        <div className=\"rule-list-item\" key={rule.id}>\n          {modifyVisible && modifiedRuleId === rule.id ?\n            <div className=\"rule-form-item\">\n              <form onSubmit={handleRuleModify}>\n                <div className=\"item-modify\">\n                  <input\n                    className=\"rule\"\n                    type=\"text\"\n                    value={modifiedRuleName}\n                    name=\"Category\"\n                    onChange={({ target }) => setModifiedRuleName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"rule-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                </div>\n                <div className=\"modify-acceptedCategories\">\n                  <Select\n                    name=\"accepted-categories\"\n                    value={modifiedCategories}\n                    getOptionLabel={option => `${option.name}`}\n                    getOptionValue={option => `${option.id}`}\n                    onChange={handleModifyCategories}\n                    options={categories}\n                    isClearable={isClearable}\n                    placeholder={\"Säännön kategoriat\"}\n                    isMulti={true}\n                  />\n                </div>\n              </form>\n            </div>\n          :\n          <Fragment>\n            <p className=\"item-name\">{rule.name}</p>\n            <div className=\"item-buttons\">\n              <button onClick={() => handleShowModify(rule)} className=\"modify-button\">Muokkaa</button>\n              <button onClick={() => handleRuleDelete(rule)} className=\"delete-button\">Poista</button>\n            </div>\n            <div className=\"break\"></div>\n            <div className=\"accepted-categories-list\">\n              {rule.acceptedCategories && rule.acceptedCategories.map(category => (\n                  <span key={category.id}>{category.name} </span>\n                ))}\n            </div>\n          </Fragment>\n          }\n        </div>))\n      }\n\n      <form onSubmit={handleRuleAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"rule\"\n            type=\"text\"\n            value={newRuleName}\n            name=\"Rules\"\n            placeholder=\"Uusi sääntö\"\n            onChange={({ target }) => setNewRuleName(target.value)}\n          />\n          <button type=\"submit\" className=\"rule-add-button\">Lisää</button>\n        </div>\n\n        <div className=\"add-acceptedCategories\">\n          <Select\n            name=\"accepted-categories\"\n            value={acceptedCategories}\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleAddCategories}\n            options={categories}\n            isClearable={isClearable}\n            placeholder={\"Uuden säännön kategoriat\"}\n            isMulti={true}\n          />\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\n\nexport default Rule\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/language`\n\nconst getLanguages = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addLanguage = async (language) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, language, config)\n  return response.data\n}\n\nconst editLanguage = async (language) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.put(`${baseUrl}/${language.id}`, language, config)\n  return response.data\n\n}\n\n\nconst deleteLanguage = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addLanguage, getLanguages, deleteLanguage, editLanguage }\n","import React, { useState, Fragment } from 'react'\nimport Notification from './Notification'\nimport languageService from '../services/language'\n\nconst Language = ({ languages, setLanguages }) => {\n  const [languageName, setLanguageName] = useState('')\n  const [modifiedLanguageName, setModifiedLanguageName] = useState('')\n  const [modifiedLanguageId, setModifiedLanguageId] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  const handleLanguageAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedLanguage = await languageService.addLanguage({\n        language: languageName,\n      })\n      setLanguageName('')\n      setLanguages(languages.concat(addedLanguage))\n    } catch (exception) {\n      setErrorMessage('Kielen lisääminen ei onnistunut')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLanguageDelete = async (language) => {\n    try {\n      if (window.confirm(`Haluatko poistaa kielen: ${language.name}`)) {\n        await languageService.deleteLanguage(language.id)\n        setLanguages(languages.filter(l => l.id !== language.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLanguageModify = async (event) => {\n    event.preventDefault()\n    const modifiedLanguage = { id: modifiedLanguageId, name: modifiedLanguageName }\n    try {\n      await languageService.editLanguage(modifiedLanguage)\n      setModifyVisible(false)\n      setLanguages(languages.map(language => language.id !== modifiedLanguage.id ? language : modifiedLanguage))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (language) => {\n    setModifyVisible(true)\n    setModifiedLanguageId(language.id)\n    setModifiedLanguageName(language.name)\n  }\n\n  return (\n    <div className=\"language-form\">\n      <Notification message={errorMessage} type=\"error\" />\n\n      {languages && languages.map((language) => (\n        <div className=\"language-list-item\" key={language.id}>\n          {modifyVisible && modifiedLanguageId === language.id ?\n            <div className=\"language-form-item\">\n              <form onSubmit={handleLanguageModify} >\n                <div className=\"item-modify\">\n                  <input\n                    className=\"language\"\n                    type=\"text\"\n                    value={modifiedLanguageName}\n                    name=\"Language\"\n                    onChange={({ target }) => setModifiedLanguageName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"language-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n            :\n            <Fragment>\n              <p className=\"item-name\">{language.name}</p>\n              <div className=\"item-buttons\">\n                <button onClick={() => handleShowModify(language)} className=\"modify-button\">Muokkaa</button>\n                <button onClick={() => handleLanguageDelete(language)} className=\"delete-button\">Poista</button>\n              </div>\n            </Fragment>\n            }\n        </div>))\n      }\n\n      <form onSubmit={handleLanguageAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"language\"\n            type=\"text\"\n            value={languageName}\n            name=\"Language\"\n            placeholder=\"Uusi kieli\"\n            onChange={({ target }) => setLanguageName(target.value)}\n          />\n          <button type=\"submit\" className=\"language-add-button\">Lisää</button>\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\n\nexport default Language\n","import React, { useState, Fragment } from 'react'\nimport { CirclePicker } from 'react-color'\nimport Notification from './Notification'\nimport seriesService from '../services/series'\n\nconst Series = ({ series, setSeries }) => {\n  const [name, setName] = useState('')\n  const [modifiedSerieName, setModifiedSerieName] = useState('')\n  const [modifiedSerieId, setModifiedSerieId] = useState('')\n  const [modifiedSerieColor, setModifiedSerieColor] = useState('')\n  const [color, setColor] = useState('#ffffff')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  const handleSeriesAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedSerie = await seriesService.addSeries({ name, color })\n      setName('')\n      setColor('')\n      setSeries(series.concat(addedSerie))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSerieDelete = async (serie) => {\n    try {\n      if (window.confirm(`Haluatko poistaa sarjan: ${serie.name}`)) {\n        await seriesService.deleteSerie(serie.id)\n        setSeries(series.filter(s => s.id !== serie.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSerieModify = async (event) => {\n    event.preventDefault()\n    const modifiedSerie = { id: modifiedSerieId, name: modifiedSerieName, color: modifiedSerieColor }\n    try {\n      await seriesService.editSerie(modifiedSerie)\n      setModifyVisible(false)\n      setSeries(series.map(serie => serie.id !== modifiedSerie.id ? serie : modifiedSerie))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (serie) => {\n    setModifyVisible(true)\n    setModifiedSerieId(serie.id)\n    setModifiedSerieName(serie.name)\n    setModifiedSerieColor(serie.color)\n  }\n\n  return (\n    <div className=\"series-form\">\n      <Notification message={errorMessage} type=\"error\" />\n\n      {series && series.map((serie) => (\n        <div className=\"serie-list-item\" key={serie.id}>\n          {modifyVisible && modifiedSerieId === serie.id ?\n            <div className=\"serie-form-item\">\n              <form onSubmit={handleSerieModify} >\n                <div className=\"item-modify\">\n                  <input\n                    className=\"serie\"\n                    type=\"text\"\n                    value={modifiedSerieName}\n                    name=\"Serie\"\n                    onChange={({ target }) => setModifiedSerieName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"serie-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                  <div className=\"color-picker\">\n                    <CirclePicker\n                      color={modifiedSerieColor}\n                      onChangeComplete={color => setModifiedSerieColor(color.hex)}\n                      colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\n                        \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\n                    />\n                  </div>\n                </div>\n              </form>\n            </div>\n          :\n          <Fragment>\n            <p className=\"item-name\"><span>{serie.name}</span><span style={{ backgroundColor: serie.color, display: 'inline-block', borderRadius: '50%', height: '27px', width: '27px', marginLeft: '5px' }} /></p>\n            <div className=\"item-buttons\">\n              <button onClick={() => handleShowModify(serie)} className=\"modify-button\">Muokkaa</button>\n              <button onClick={() => handleSerieDelete(serie)} className=\"delete-button\">Poista</button>\n            </div>\n          </Fragment>\n          }\n        </div>))\n      }\n\n      <form onSubmit={handleSeriesAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Uusi sarja\"\n            onChange={({ target }) => setName(target.value)}\n          />\n          <button type=\"submit\" className=\"series-submit-button\">Lisää</button>\n        </div>\n        <div className=\"color-picker\">\n          <CirclePicker\n            color={color}\n            onChangeComplete={color => setColor(color.hex)}\n            colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\n              \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\n          />\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\nexport default Series\n","import React, { useState, Fragment } from 'react'\nimport Notification from './Notification'\nimport categoryService from '../services/category'\n\nconst Category = ({ categories, setCategories }) => {\n  const [newCategoryName, setNewCategoryName] = useState('')\n  const [modifiedCategoryName, setModifiedCategoryName] = useState('')\n  const [modifiedCategoryId, setModifiedCategoryId] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  const handleCategoryAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedCategory = await categoryService.addCategory({\n        category: newCategoryName\n      })\n      setNewCategoryName('')\n      setCategories(categories.concat(addedCategory))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCategoryDelete = async (category) => {\n    try {\n      if (window.confirm(`Haluatko poistaa kategorian: ${category.name}`)) {\n        await categoryService.deleteCategory(category.id)\n        setCategories(categories.filter(c => c.id !== category.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCategoryModify = async (event) => {\n    event.preventDefault()\n    const modifiedCategory = { id: modifiedCategoryId, name: modifiedCategoryName }\n    try {\n      await categoryService.editCategory(modifiedCategory)\n      setModifyVisible(false)\n      setCategories(categories.map(category => category.id !== modifiedCategory.id ? category : modifiedCategory))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (category) => {\n    setModifyVisible(true)\n    setModifiedCategoryId(category.id)\n    setModifiedCategoryName(category.name)\n  }\n\n  return (\n    <div className=\"category-form\" >\n      <Notification message={errorMessage} type=\"error\" />\n\n      {categories && categories.map((category) => (\n        <div className=\"category-list-item\" key={category.id}>\n          {modifyVisible && modifiedCategoryId === category.id ?\n            <div className=\"category-form-item\">\n              <form onSubmit={handleCategoryModify} >\n                <div className=\"item-modify\">\n                  <input\n                    className=\"category\"\n                    type=\"text\"\n                    value={modifiedCategoryName}\n                    name=\"Category\"\n                    onChange={({ target }) => setModifiedCategoryName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"category-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n            :\n            <Fragment>\n              <p className=\"item-name\">{category.name}</p>\n              <div className=\"item-buttons\">\n                <button onClick={() => handleShowModify(category)} className=\"modify-button\">Muokkaa</button>\n                <button onClick={() => handleCategoryDelete(category)} className=\"delete-button\">Poista</button>\n              </div>\n            </Fragment>\n          }\n        </div>))\n      }\n\n      <form onSubmit={handleCategoryAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"category\"\n            type=\"text\"\n            value={newCategoryName}\n            name=\"Category\"\n            placeholder=\"Uusi kategoria\"\n            onChange={({ target }) => setNewCategoryName(target.value)}\n          />\n          <button type=\"submit\" className=\"category-add-button\">Lisää</button>\n        </div>\n      </form>\n    </div>\n\n  )\n}\n\nexport default Category\n","import React, { useState, useEffect, Fragment } from 'react'\nimport Rule from './Rule'\nimport Language from './Language'\nimport Series from './Series'\nimport Category from './Category'\nimport ruleService from '../services/rule'\nimport seriesService from '../services/series'\nimport languageService from '../services/language'\nimport categoryService from '../services/category'\n\nconst AddTaskDropdown = () => {\n  const [rules, setRules] = useState([])\n  const [categories, setCategories] = useState([])\n  const [languages, setLanguages] = useState([])\n  const [series, setSeries] = useState([])\n  const [showCategories, setShowCategories] = useState(false)\n  const [showRules, setShowRules] = useState(false)\n  const [showLanguages, setShowLanguages] = useState(false)\n  const [showSeries, setShowSeries] = useState(false)\n\n  useEffect(() => {\n    ruleService.getRules().then((response) => {\n      setRules(response)\n    })\n    categoryService.getCategories().then((response) => {\n      setCategories(response)\n    })\n    seriesService.getSeries().then((response) => {\n      setSeries(response)\n    })\n    languageService.getLanguages().then((response) => {\n      setLanguages(response)\n    })\n  }, [])\n\n  return (\n    <div className=\"crls-container\">\n      <div className=\"task-types-menu\">\n        {showSeries ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowSeries(!showSeries)}>Sulje sarjat</button>\n            <Series series={series} setSeries={setSeries} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowSeries(!showSeries)}>Sarjat</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showRules ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowRules(!showRules)}>Sulje säännöt</button>\n            <Rule rules={rules} setRules={setRules} categories={categories} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowRules(!showRules)}>Säännöt</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showCategories ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowCategories(!showCategories)}>Sulje kategoriat</button>\n            <Category categories={categories} setCategories={setCategories} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowCategories(!showCategories)}>Kategoriat</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showLanguages ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowLanguages(!showLanguages)}>Sulje kielet</button>\n            <Language languages={languages} setLanguages={setLanguages} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowLanguages(!showLanguages)}>Kielet</button>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default AddTaskDropdown\n","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/file`\n\nconst updateFiles = async (files) => {\n  const config = {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }\n\n  const response = await axios.post(baseUrl, files, config)\n  return response.data\n}\n\nexport default { updateFiles }\n","import React from 'react'\nimport MarkdownIt from 'markdown-it'\nimport MdEditor from 'react-markdown-editor-lite'\nimport 'react-markdown-editor-lite/lib/index.css'\n\nconst MDEditor = ({ setText, setMD, value }) => {\n  const mdParser = new MarkdownIt()\n\n  const handleEditorChange = ({ html, text }) => {\n    setText(html)\n    setMD(text)\n  }\n\n  return (\n    <MdEditor\n      value={value}\n      renderHTML={(text) => mdParser.render(text)}\n      onChange={handleEditorChange}\n    />\n  )\n}\n\nexport default MDEditor\n\n\n\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport taskService from '../services/task'\nimport fileService from '../services/file'\nimport ruleService from '../services/rule'\nimport seriesService from '../services/series'\nimport languageService from '../services/language'\nimport MDEditor from './MDEditor'\nimport Dropzone from 'react-dropzone'\n\nconst AddTask = () => {\n\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [name, setName] = useState('')\n  const [assignmentText, setAssignmentText] = useState('')\n  const [gradingScale, setGradingScale] = useState('')\n  const [supervisorInstructions, setSupervisorInstructions] = useState('')\n  const [assignmentTextMD, setAssignmentTextMD] = useState('')\n  const [gradingScaleMD, setGradingScaleMD] = useState('')\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState('')\n  const [rules, setRules] = useState([])\n  const [rule, setRule] = useState('')\n  const [categories, setCategories] = useState([])\n  const [category, setCategory] = useState('')\n  const [seriess, setSeriess] = useState([])\n  const [series, setSeries] = useState([])\n  const [languages, setLanguages] = useState([])\n  const [language, setLanguage] = useState('')\n  const [creatorName, setCreatorName] = useState('')\n  const [creatorEmail, setCreatorEmail] = useState('')\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\n  const [files, setFiles] = useState([])\n\n  useEffect(() => {\n    ruleService.getRules().then(response => {\n      setRules(response)\n    })\n    seriesService.getSeries().then(response => {\n      setSeriess(response)\n    })\n    languageService.getLanguages().then(response => {\n      setLanguages(response)\n    })\n  }, [])\n\n  const handleRuleChange = (e) => {\n    setRule(e.target.value)\n    setCategory('')\n    if (e.target.value) {\n      const foundRule = rules.find(r => r.id === e.target.value)\n      setCategories(foundRule.acceptedCategories)\n    } else {\n      setCategories([])\n    }\n  }\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value)\n  }\n\n  const handleSeriesChange = (e) => {\n    let options = e.target.options\n    let values = []\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected && options[i].value !== '') {\n        values.push(options[i].value)\n      }\n    }\n    setSeries(values)\n  }\n\n  const handleLanguageChange = (e) => {\n    setLanguage(e.target.value)\n  }\n\n  const handleAddTask = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setAssignmentTextErrorMessage(null)\n    setCreatorNameErrorMessage(null)\n    setCreatorEmailErrorMessage(null)\n    setDropDownErrorMessage(null)\n    if (name.length < 1) {\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\n    }\n    if (assignmentText.length < 1) {\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\n    }\n    if (creatorName.length < 1) {\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\n    }\n    if (creatorEmail.length < 1) {\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\n    }\n    if (language === '' || rule === '' || series === '' || category === '') {\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\n    }\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\n            || language === '' || rule === '' || series === '' || category === '') {\n      return\n    }\n    setAssignmentText(JSON.stringify(assignmentText))\n    setGradingScale(JSON.stringify(gradingScale))\n    setSupervisorInstructions(JSON.stringify(supervisorInstructions))\n\n    let formData = new FormData()\n\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n          formData.append('filesToAdd', files[i], files[i].name)\n      }\n    }\n\n    let addedFiles = []\n\n    try {\n      addedFiles = await fileService.updateFiles(formData)\n      await taskService.addtask({\n        name, rule, category, series,\n        language, assignmentText, gradingScale,\n        creatorName, creatorEmail, supervisorInstructions,\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD,\n        files: addedFiles\n      })\n      setName('')\n      setRule('')\n      setCategory('')\n      setSeries('')\n      setLanguage('')\n      setAssignmentText('')\n      setGradingScale('')\n      setCreatorEmail('')\n      setCreatorName('')\n      setSupervisorInstructions('')\n      setMessage('Tehtävä lisätty!')\n      setTimeout(() => {\n        setMessage(null)\n        window.location.reload()\n      }, 2000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const onDrop = (newFiles) => {\n    setFiles(files.concat(newFiles))\n  }\n\n  const handleDeleteFile = (e, name) => {\n    e.stopPropagation()\n    setFiles(files.filter(file => file.name !== name))\n  }\n\n  return (\n    <div className=\"add-task-container\">\n      <h2>Lisää tehtävä</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleAddTask}>\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"task-title\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Tehtävän nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <h4>Tehtävänanto</h4>\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} />\n        </div>\n        <div>\n          <h4>Arvostelu</h4>\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} />\n        </div>\n        <div className=\"instructions\">\n          <h4>Rastimiehen ohje</h4>\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} />\n        </div>\n        <Notification message={dropDownErrorMessage} type=\"error\" />\n        <div className=\"dropdowns\">\n          <div>\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <select className=\"rule-select\" value={rule} onChange={(e) => handleRuleChange(e)}>\n              <option value=\"\">Säännöt</option>\n              {rules.map(rule => <option className=\"rule-options\" key={rule.id} value={rule.id}>{rule.name}</option>)}\n            </select>\n            <br/>\n            <select className=\"category-select\" value={category} onChange={(e) => handleCategoryChange(e)}>\n              <option value=\"\">Kategoria</option>\n              {categories.map(category => <option className=\"category-options\" key={category.id} value={category.id}>{category.name}</option>)}\n            </select>\n            <br/>\n            <select className=\"language-select\" value={language} onChange={(e) => handleLanguageChange(e)}>\n              <option value=\"\">Kieli</option>\n              {languages.map(language => <option className=\"language-options\" key={language.id} value={language.id}>{language.name}</option>)}\n            </select>\n          </div>\n        </div>\n        <div className=\"creator\">\n          <div>\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              value={creatorName}\n              name=\"CreatorName\"\n              placeholder=\"Lisääjän nimi\"\n              onChange={({ target }) => setCreatorName(target.value)}\n            />\n          </div>\n          <div>\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              value={creatorEmail}\n              name=\"CreatorEmail\"\n              placeholder=\"Lisääjän sähköposti\"\n              onChange={({ target }) => setCreatorEmail(target.value)}\n            />\n          </div>\n        </div>\n\n        <Dropzone onDrop={onDrop}>\n          {({getRootProps, getInputProps}) => (\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              <div className=\"files\">\n                <div className=\"title\">Liitetiedostot</div>\n                {files.length > 0 &&\n                  <React.Fragment>\n                    {files.map((file) => (\n                      <div key={file.name}>{file.name}<b onClick={(e) => handleDeleteFile(e, file.name)}>x</b></div>\n                    ))}\n                  </React.Fragment>\n                }\n              </div>\n            </div>\n          )}\n        </Dropzone>\n\n        <button type=\"submit\" className=\"add-task-button\">Lisää tehtävä</button>\n      </form>\n    </div>\n  )\n}\nexport default AddTask","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport taskService from '../services/task'\nimport Notification from './Notification'\nimport tokenService from '../services/token'\n\n\nconst TaskListPending = () => {\n  const [tasks, setTasks] = useState([])\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    if (!tokenService.getToken()) {\n      const loggedUserJSON = window.localStorage.getItem('loggedUser')\n      if (loggedUserJSON) {\n        const loggedUser = JSON.parse(loggedUserJSON)\n        tokenService.setToken(loggedUser.token)\n      }\n    }\n    taskService.getPendingTasks().then((response) => {\n      setTasks(response)\n    })\n  }, [])\n\n  const handleAccept = (id) => {\n    try {\n      taskService.acceptTask(id)\n      setTasks(tasks.filter(t => t.id !== id))\n      setMessage('Tehtävä hyväksytty')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleDelete = async (id) => {\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${tasks.find(t => t.id === id).name}`)) {\n        await taskService.deleteTask(id)\n        setTasks(tasks.filter(t => t.id !== id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"task-list\">\n      <h1>Hyväksyntää odottavat kisatehtävät</h1>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      {tasks && tasks.length > 0 &&\n        <div className=\"task-list-title\">\n          <span>Tehtävän nimi</span>\n          <span>Sarja</span>\n          <span>Kategoria</span>\n          <span></span>\n          <span></span>\n        </div>\n      }\n      {tasks.map((task) => (\n        <div className={`task-list-item pending`} key={task.id}>\n          <span>\n            <Link to={`/tehtava/${task.id}`}>\n              {task.name}\n            </Link>\n          </span>\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n          <span>{task.category && task.category.name}</span>\n          <span>\n            <button className=\"accept-button\" onClick={() => handleAccept(task.id)}>Hyväksy</button>\n            <button className=\"delete-button\" onClick={() => handleDelete(task.id)}>Poista</button>\n          </span>\n          <span></span>\n        </div>\n      ))}\n\n    </div>\n\n  )\n}\n\nexport default TaskListPending\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport TaskListPending from './TaskListPending'\n\nconst Admin = () => (\n  <div>\n    <TaskListPending />\n    <Link to=\"/omasivu\">Omat tiedot</Link>\n    <br />\n    <Link to=\"/lisaa_admin\">Lisää ylläpitäjä</Link>\n    <br />\n    <Link to=\"/lisaa_pudotusvalikkoon\">Hallinnoi sääntöjä/kieliä/sarjoja/kategorioita</Link>\n  </div>\n)\n\nexport default Admin\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst EditUser = ({ setShowEdit, user, setUser, setMessage }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\n  const [emailErrorMessage, setEmailErrorMessage] = useState(null)\n  const [name, setName] = useState(user.name)\n  const [username, setUsername] = useState(user.username)\n  const [email, setEmail] = useState(user.email)\n  const [allowNotifications, setAllowNotifications] = useState(user.allowNotifications)\n\n  const handleEditUser = async (event) => {\n\n\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setUsernameErrorMessage(null)\n    setEmailErrorMessage(null)\n    if (name.length < 3) {\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\n    }\n    if (username.length < 3) {\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\n    }\n    if (email.length < 5) {\n      setEmailErrorMessage('Sähköpostissa pitää olla vähintään 5 kirjainta')\n    }\n    if (name.length < 3 || username.length < 3) {\n      return\n    }\n    try {\n      const editedUser = await userService.editUser({\n        name, username, email, allowNotifications\n      })\n      setUser(editedUser)\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(editedUser),\n      )\n      setShowEdit(false)\n      setMessage('Tietoja muokattu!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"username already exists\") {\n        setErrorMessage('Käyttäjätunnus on varattu')\n      } else {\n        setErrorMessage('Muokkaaminen epäonnistui')\n      }\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n\n    <div className=\"edit-user-form\">\n      <h2>Omat tiedot</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleEditUser}>\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <label>Nimi</label><br />\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={usernameErrorMessage} type=\"error\" />\n          <label>Käyttäjätunnus</label><br />\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={emailErrorMessage} type=\"error\" />\n          <label>Sähköposti</label><br />\n          <input\n            className=\"email\"\n            type=\"text\"\n            value={email}\n            name=\"Email\"\n            placeholder=\"Sähköposti\"\n            onChange={({ target }) => setEmail(target.value)}\n          />\n        </div>\n        <div>\n          <label>\n            Vastaanota ilmoituksia:\n            <div className=\"admin-radio\" onChange={({ target }) => setAllowNotifications(target.value)}>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"notifications\"\n                  value={true}\n                  defaultChecked={allowNotifications}\n                />\n                Kyllä\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"notifications\"\n                  value={false}\n                  defaultChecked={!allowNotifications}\n                />\n                Ei\n              </label>\n            </div>\n          </label>\n        </div>\n        <button type=\"submit\" className=\"edit-button\">Tallenna</button>\n        <button onClick={() => setShowEdit(false)} className=\"cancel-button\">Peruuta</button>\n      </form>\n    </div>\n  )\n}\n\nexport default EditUser\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst ChangePassword = ({ setShowChangePassword, setMessage }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [newPasswordAgain, setNewPasswordAgain] = useState('')\n\n  const handleChangePassword = async (event) => {\n    event.preventDefault()\n    setErrorMessage(null)\n    if (newPassword.length < 3) {\n      setErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\n      return\n    }\n    if (newPassword !== newPasswordAgain) {\n      setErrorMessage('Salasanat eivät täsmää')\n      return\n    }\n    try {\n      await userService.editUser({\n        oldPassword, newPassword\n      })\n      setOldPassword('')\n      setNewPassword('')\n      setNewPasswordAgain('')\n      setShowChangePassword(false)\n      setMessage('Salasana vaihdettu!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"incorrect password\") {\n        setErrorMessage('Vanha salasana ei täsmää')\n      } else {\n        setErrorMessage('Salasanan vaihtaminen epäonnistui')\n      }\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"change-password-form\">\n      <h2>Vaihda salasana</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleChangePassword}>\n        <div>\n          <input\n            className=\"old-password\"\n            type=\"password\"\n            value={oldPassword}\n            placeholder=\"Vanha salasana\"\n            onChange={({ target }) => setOldPassword(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"new-password\"\n            type=\"password\"\n            value={newPassword}\n            placeholder=\"Uusi salasana\"\n            onChange={({ target }) => setNewPassword(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"new-password-again\"\n            type=\"password\"\n            value={newPasswordAgain}\n            placeholder=\"Uusi salasana uudelleen\"\n            onChange={({ target }) => setNewPasswordAgain(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"change-password-button\">Tallenna</button>\n        <button onClick={() => setShowChangePassword(false)} className=\"cancel-button\">Peruuta</button>\n      </form>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport EditUser from './EditUser'\nimport ChangePassword from './ChangePassword'\n\nconst User = ({ user, setUser }) => {\n  const [message, setMessage] = useState(null)\n  const [showEdit, setShowEdit] = useState(false)\n  const [showChangePassword, setShowChangePassword] = useState(false)\n\n  const editUser = () => {\n    setShowChangePassword(false)\n    setShowEdit(true)\n  }\n\n\n  const changePassword = () => {\n    setShowEdit(false)\n    setShowChangePassword(true)\n  }\n\n  return (\n    <div>\n      {user\n        && (\n          <div className=\"user-info\">\n            {!showEdit && !showChangePassword\n              && (\n                <div>\n                  <Notification message={message} type=\"success\" />\n                  <h2>Omat tiedot</h2>\n                  <p>\n                    <b>Nimi: </b>\n                    {user.name}\n                  </p>\n                  <p>\n                    <b>Käyttäjätunnus: </b>\n                    {user.username}\n                  </p>\n                  <p>\n                    <b>Sähköpostiosoite: </b>\n                    {user.email}\n                  </p>\n                  <p>\n                    <b>Ilmoitukset: </b>\n                    {user.allowNotifications ?\n                      <span>Päällä</span>\n                      :\n                      <span>Pois päältä</span>\n                    }\n                  </p>\n                  <button className=\"edit-user-button\" onClick={() => editUser()}>Muokkaa</button>\n                  <button className=\"change-password-button\" onClick={() => changePassword()}>Vaihda salasana</button>\n                </div>\n              )}\n            {showEdit && <EditUser setShowEdit={setShowEdit} user={user} setUser={setUser} setMessage={setMessage} />}\n            {showChangePassword && <ChangePassword setShowChangePassword={setShowChangePassword} setMessage={setMessage} />}\n          </div>\n        )}\n    </div>\n  )\n}\n\nexport default User\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport taskService from '../services/task'\nimport fileService from '../services/file'\nimport ruleService from '../services/rule'\nimport seriesService from '../services/series'\nimport languageService from '../services/language'\nimport MDEditor from './MDEditor'\nimport Dropzone from 'react-dropzone'\n\nconst ModifyTask = ({ setModifyVisible, task, setTask }) => {\n\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [name, setName] = useState(task.name)\n  const [assignmentText, setAssignmentText] = useState(task.assignmentText)\n  const [gradingScale, setGradingScale] = useState(task.gradingScale)\n  const [supervisorInstructions, setSupervisorInstructions] = useState(task.supervisorInstructions)\n  const [assignmentTextMD, setAssignmentTextMD] = useState(task.assignmentTextMD)\n  const [gradingScaleMD, setGradingScaleMD] = useState(task.gradingScaleMD)\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState(task.supervisorInstructionsMD)\n  const [rules, setRules] = useState([])\n  const [rule, setRule] = useState(task.rules ? task.rules.id : null)\n  const [categories, setCategories] = useState([])\n  const [category, setCategory] = useState(task.category ? task.category.id : null)\n  const [seriess, setSeriess] = useState([])\n  const [series, setSeries] = useState(task.series.map(s => s.id))\n  const [languages, setLanguages] = useState([])\n  const [language, setLanguage] = useState(task.language ? task.language.id : null)\n  const [creatorName, setCreatorName] = useState(task.creatorName)\n  const [creatorEmail, setCreatorEmail] = useState(task.creatorEmail)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\n  const [oldFiles, setOldFiles] = useState(task.files || [])\n  const [newFiles, setNewFiles] = useState([])\n  const [filesToDelete, setFilesToDelete] = useState([])\n\n  let id = task.id\n\n  useEffect(() => {\n    ruleService.getRules().then(response => {\n      setRules(response)\n      if (task.rules && task.rules.id) {\n        const foundRule = response.find(r => r.id === task.rules.id)\n        if (foundRule) {\n          setCategories(foundRule.acceptedCategories)\n        }\n      }\n    })\n    seriesService.getSeries().then(response => {\n      setSeriess(response)\n    })\n    languageService.getLanguages().then(response => {\n      setLanguages(response)\n    })\n  }, [])\n\n  const handleRuleChange = (e) => {\n    setRule(e.target.value)\n    setCategory('')\n    if (e.target.value) {\n      const foundRule = rules.find(r => r.id === e.target.value)\n      setCategories(foundRule.acceptedCategories)\n    } else {\n      setCategories([])\n    }\n  }\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value)\n  }\n\n  const handleSeriesChange = (e) => {\n    let options = e.target.options\n    let values = []\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected && options[i].value !== '') {\n        values.push(options[i].value)\n      }\n    }\n    setSeries(values)\n  }\n\n  const handleLanguageChange = (e) => {\n    setLanguage(e.target.value)\n  }\n\n  const handleModifyTask = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setAssignmentTextErrorMessage(null)\n    setCreatorNameErrorMessage(null)\n    setCreatorEmailErrorMessage(null)\n    setDropDownErrorMessage(null)\n    if (name.length < 1) {\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\n    }\n    if (assignmentText.length < 1) {\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\n    }\n    if (creatorName.length < 1) {\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\n    }\n    if (creatorEmail.length < 1) {\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\n    }\n    if (language === '' || rule === '' || series === '' || category === '') {\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\n    }\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\n      || language === '' || rule === '' || series === '' || category === '') {\n      return\n    }\n\n    let formData = new FormData()\n\n    formData.append('filesToDelete', filesToDelete)\n\n    if (newFiles.length > 0) {\n      for (let i = 0; i < newFiles.length; i++) {\n          formData.append('filesToAdd', newFiles[i], newFiles[i].name)\n      }\n    }\n\n    let addedFiles = []\n\n    try {\n      addedFiles = await fileService.updateFiles(formData)\n      const modifiedTask = await taskService.updateTask({\n        name, rule, category, series,\n        language, assignmentText, gradingScale,\n        creatorName, creatorEmail, supervisorInstructions, id,\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD,\n        files: oldFiles.concat(addedFiles)\n      })\n      setMessage('Tehtävä tallennettu!')\n      setTask(modifiedTask)\n      setTimeout(() => {\n        setMessage(null)\n        window.location.reload()\n      }, 1000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCancel = () => {\n    setModifyVisible(false)\n  }\n\n  const onDrop = (files) => {\n    setNewFiles(newFiles.concat(files))\n  }\n\n  const handleDeleteOldFile = (e, name) => {\n    e.stopPropagation()\n    setOldFiles(oldFiles.filter(file => file !== name))\n    setFilesToDelete(filesToDelete.concat(name))\n  }\n\n  const handleDeleteNewFile = (e, name) => {\n    e.stopPropagation()\n    setNewFiles(newFiles.filter(file => file.name !== name))\n  }\n\n  return (\n    <div className=\"modify-task-container\">\n      <h2>Muokkaa tehtävää</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleModifyTask} className=\"modify-form\">\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"task-title\"\n            type=\"text\"\n            defaultValue={name}\n            name=\"Name\"\n            placeholder=\"Tehtävän nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <h4>Tehtävänanto</h4>\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} value={assignmentTextMD} placeHolder=\"Tehtävänanto\" />\n        </div>\n        <div>\n          <h4>Arvostelu</h4>\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} value={gradingScaleMD} placeHolder=\"Arvostelu\" />\n        </div>\n        <div className=\"instructions\">\n          <h4>Rastimiehen ohje</h4>\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} value={supervisorInstructionsMD} placeHolder=\"Rastimiehen ohje\" />\n        </div>\n        <Notification message={dropDownErrorMessage} type=\"error\" />\n        <div className=\"dropdowns\">\n          <div>\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <select value={rule} onChange={(e) => handleRuleChange(e)}>\n              <option value=\"\">Säännöt</option>\n              {rules.map(rule => <option key={rule.id} value={rule.id}>{rule.name}</option>)}\n            </select>\n            <br/>\n            <select value={category} onChange={(e) => handleCategoryChange(e)}>\n              <option value=\"\">Kategoria</option>\n              {categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)}\n            </select>\n            <br/>\n            <select value={language} onChange={(e) => handleLanguageChange(e)}>\n              <option value=\"\">Kieli</option>\n              {languages.map(language => <option key={language.id} value={language.id}>{language.name}</option>)}\n            </select>\n          </div>\n        </div>\n        <div className=\"creator\">\n          <div>\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              defaultValue={creatorName}\n              name=\"CreatorName\"\n              placeholder=\"Muokkaajan nimi\"\n              onChange={({ target }) => setCreatorName(target.value)}\n            />\n          </div>\n          <div>\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              defaultValue={creatorEmail}\n              name=\"CreatorEmail\"\n              placeholder=\"Muokkaajan sähköposti\"\n              onChange={({ target }) => setCreatorEmail(target.value)}\n            />\n          </div>\n        </div>\n\n        <Dropzone onDrop={onDrop}>\n          {({getRootProps, getInputProps}) => (\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              <div className=\"files\">\n                <div className=\"title\">Liitetiedostot</div>\n                {oldFiles && oldFiles.length > 0 &&\n                  <React.Fragment>\n                    {oldFiles.map((file) => (\n                      <div key={file}>{file.substring(file.indexOf('-') + 1, file.length)}<b onClick={(e) => handleDeleteOldFile(e, file)}>x</b></div>\n                    ))}\n                  </React.Fragment>\n                }\n                {newFiles && newFiles.length > 0 &&\n                  <React.Fragment>\n                    {newFiles.map((file) => (\n                      <div key={file.name}>{file.name}<b onClick={(e) => handleDeleteNewFile(e, file.name)}>x</b></div>\n                    ))}\n                  </React.Fragment>\n                }\n              </div>\n            </div>\n          )}\n        </Dropzone>\n\n        <div>\n          <button type=\"submit\" className=\"save-task-button\">Tallenna</button>\n          <button onClick={() => handleCancel()} className=\"return-button\">Peruuta</button>\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default ModifyTask","import React from 'react'\n\nconst TaskTextDisplay = ({ text }) => {\n  const htmlConverter = () => {\n    return { __html: `${text}` }\n  }\n\n  return (\n    <div dangerouslySetInnerHTML={htmlConverter()} />\n  )\n}\n\nexport default TaskTextDisplay","import React, { useState, useEffect } from 'react'\nimport taskService from '../services/task'\nimport ModifyTask from './ModifyTask'\nimport Notification from './Notification'\nimport TaskTextDisplay from './TaskTextDisplay'\nimport Moment from 'react-moment'\nimport { useHistory } from 'react-router-dom'\n\nconst Task = ({ match, user, addTaskToBasket }) => {\n\n  const [task, setTask] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const history = useHistory()\n\n  useEffect(() => {\n    taskService.getOneTask(match.params.id).then((response) => {\n      setTask(response)\n    })\n  }, [])\n\n  const handleDelete = () => {\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\n        taskService.deleteTask(task.id)\n        setMessage('Tehtävä poistettu')\n        setTimeout(() => {\n          setMessage(null)\n          if (task.pending) {\n            history.push('/admin')\n          } else {\n            history.push('/')\n          }\n        }, 2000)\n      }\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleAccept = () => {\n    try {\n      taskService.acceptTask(task.id)\n      setMessage('Tehtävä hyväksytty')\n      setTimeout(() => {\n        setMessage(null)\n        history.push('/admin')\n      }, 2000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      {modifyVisible ?\n        <ModifyTask setModifyVisible={setModifyVisible} task={task} setTask={setTask} />\n        :\n        <div className=\"task-view-info-background\">\n          <Notification message={message} type=\"success\" />\n          <Notification message={errorMessage} type=\"error\" />\n          {task &&\n            <div className=\"task-view-info\">\n              <div>\n                <h2>{task.name}<span><div className=\"black-basket basket-task-view\" onClick={() => addTaskToBasket(task)} /></span></h2>\n              </div>\n              <h3>Tehtävänanto:</h3>\n              <TaskTextDisplay text={task.assignmentText} />\n              <h3>Rastimiehen ohjeet:</h3>\n              <TaskTextDisplay text={task.supervisorInstructions} />\n              <h3>Arvosteluasteikko:</h3>\n              <TaskTextDisplay text={task.gradingScale} />\n              <h3>Sarja:</h3>\n              {task.series.map(s => <span key={task.id + s.id}>{s.name}<br /></span>)}\n              <h3>Kategoria:</h3>\n              <p>{task.category && task.category.name}</p>\n              <h3>Sääntöluokka:</h3>\n              <p>{task.rules && task.rules.name}</p>\n              <h3>Tehtävän viimeisin muokkaaja:</h3>\n              <p>{task.creatorName}<br />{task.creatorEmail}</p>\n              <h3>Tehtävä lisätty:</h3>\n              {task.created && <p><Moment format=\"DD.MM.YYYY HH:mm\">{task.created}</Moment></p>}\n              <h3>Liitetiedostot:</h3>\n              {task.files && task.files.length === 0 && <p>-</p>}\n              {task.files && task.files.map((file) => (\n                <div key={file}>\n                  <a href={`https://kisapankki.blob.core.windows.net/files/${file}`}>\n                    {file.substring(file.indexOf('-') + 1, file.length)}\n                  </a>\n                </div>\n              ))}\n              {user &&\n                <div className=\"buttons\">\n                  <button onClick={() => setModifyVisible(true)} className=\"modify-view-button\">Muokkaa</button>\n                  {task.pending && <button className=\"accept-button\" onClick={() => handleAccept()}>Hyväksy</button>}\n                  <button className=\"delete-button\" onClick={() => handleDelete()}>Poista</button>\n                </div>}\n            </div>\n          }\n        </div>\n\n      }\n    </div>\n\n  )\n}\n\nexport default Task\n","import React, { useState, useEffect, Fragment } from 'react'\nimport { Route, Link, Redirect, useHistory } from 'react-router-dom'\nimport Login from './components/Login'\nimport FrontPage from './components/FrontPage'\nimport TaskList from './components/TaskList'\nimport Basket from './components/Basket'\nimport AddAdmin from './components/AddAdmin'\nimport AddTaskDropdown from './components/AddTaskDropdown'\nimport AddTask from './components/AddTask'\nimport Admin from './components/Admin'\nimport User from './components/User'\nimport Task from './components/Task'\nimport tokenService from './services/token'\nimport taskService from './services/task'\n\nconst App = () => {\n  const [basket, setBasket] = useState([])\n  const [tasks, setTasks] = useState([])\n  const [user, setUser] = useState(null)\n  const history = useHistory()\n\n  useEffect(() => {\n    taskService.getTasks().then((response) => {\n      setTasks(response)\n    })\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const loggedUser = JSON.parse(loggedUserJSON)\n      setUser(loggedUser)\n      tokenService.setToken(loggedUser.token)\n    }\n    const basketJSON = window.localStorage.getItem('basket')\n    if (basketJSON) {\n      const foundBasket = JSON.parse(basketJSON)\n      setBasket(foundBasket)\n    }\n  }, [])\n\n  useEffect(() => {\n    window.localStorage.setItem(\n      'basket', JSON.stringify(basket)\n    )\n  }, [basket])\n\n  const logout = () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n    tokenService.setToken(null)\n    history.push('/')\n    window.location.reload()\n  }\n\n  const addTaskToBasket = (task) => {\n    const foundTask = basket.find(t => t.id === task.id)\n    if (!foundTask) {\n      setBasket(basket.concat(task))\n    }\n  }\n\n  const removeTaskFromBasket = (id) => {\n    setBasket(basket.filter(task => task.id !== id))\n  }\n\n  const handleUpdateViews = (id) => {\n    taskService.updateViews(id).then(response => {\n      setTasks(tasks.map(task => task.id !== id ? task : { ...task, views: task.views + 1 }))\n      setBasket(basket.map(task => task.id !== id ? task : { ...task, views: task.views + 1 }))\n    })\n  }\n\n  return (\n    <div>\n      <div className=\"header\">\n        <Link to=\"/\"><div className=\"logo\" /></Link>\n        <Link to=\"/tehtavat\"><button className=\"addtask-button-header\">Tehtävät</button></Link>\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-header\">Lisää tehtävä</button></Link>\n\n        {user === null ?\n          <Fragment>\n            <Link to=\"/kirjautuminen\"><button className=\"login-button-header\">Kirjaudu</button></Link>\n          </Fragment>\n          :\n          <Fragment>\n            <Link to=\"/admin\"><button className=\"admin-button-header\">Admin</button></Link>\n            <div>\n              <div className=\"logged\">Kirjautuneena <Link to=\"/omasivu\" className=\"username-header\">{user.username}</Link></div>\n              <div className=\"logout\"><button className=\"logout-button-header\" onClick={() => logout()}>Kirjaudu ulos</button></div>\n            </div>\n          </Fragment>\n        }\n        <Link to=\"/valitut_tehtavat\"><div className=\"white-basket\">{basket.length > 0 && <span className=\"number-of-tasks-in-basket\">{basket.length}</span>}</div></Link>\n      </div>\n      <div className=\"admin-task-buttons-mobile\">\n        <Link to=\"/tehtavat\"><button className=\"addtask-button-mobile\">Tehtävät</button></Link>\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-mobile\">Lisää tehtävä</button></Link>\n        {user !== null && <Link to=\"/admin\"><button className=\"admin-button-mobile\">Admin</button></Link>}\n      </div>\n      <div className=\"container\">\n        <Route exact path=\"/\" render={() => <FrontPage tasks={tasks} addTaskToBasket={addTaskToBasket} />} />\n        <Route exact path=\"/tehtava/:id\" render={(match) => <Task {...match} user={user} addTaskToBasket={addTaskToBasket} />} />\n        <Route path=\"/tehtavat\" render={() => <TaskList user={user} originalTasks={tasks} addTaskToBasket={addTaskToBasket} handleUpdateViews={handleUpdateViews} />} />\n        <Route path=\"/valitut_tehtavat\" render={() => <Basket tasks={basket} removeTaskFromBasket={removeTaskFromBasket} handleUpdateViews={handleUpdateViews} />} />\n        <Route path=\"/kirjautuminen\" render={() => <Login setUser={setUser} />} />\n        <Route path=\"/lisaa_tehtava\" render={() => <AddTask />} />\n        <Route path=\"/omasivu\" render={() => (localStorage.getItem('loggedUser') ? <User user={user} setUser={setUser} /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/admin\" render={() => (localStorage.getItem('loggedUser') ? <Admin /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/lisaa_admin\" render={() => (localStorage.getItem('loggedUser') ? <AddAdmin /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/lisaa_pudotusvalikkoon\" render={() => (localStorage.getItem('loggedUser') ? <AddTaskDropdown /> : <Redirect to=\"/\" />)} />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}