{"version":3,"sources":["components/Notification.js","services/login.js","services/token.js","components/Login.js","components/FrontPageInfo.js","components/FrontPage.js","services/task.js","services/series.js","services/rule.js","services/category.js","components/Search.js","components/Filter.js","components/TaskList.js","components/Basket.js","services/user.js","components/AddAdmin.js","components/Rule.js","services/language.js","components/Language.js","components/Series.js","components/Category.js","components/AddTaskDropdown.js","services/file.js","components/MDEditor.js","components/AddTask.js","components/TaskListPending.js","components/Admin.js","components/EditUser.js","components/ChangePassword.js","components/User.js","components/Rating.js","components/ModifyTask.js","components/TaskTextDisplay.js","components/Task.js","App.js","index.js"],"names":["Notification","message","type","className","baseUrl","process","login","credentials","a","axios","post","response","data","token","newToken","Login","setUser","useState","errorMessage","setErrorMessage","username","setUsername","email","setEmail","password","setPassword","history","useHistory","handleLogin","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","tokenService","push","setTimeout","onSubmit","value","name","placeholder","onChange","target","FrontPageInfo","FrontPage","tasks","addTaskToBasket","newTasks","setNewTasks","favoriteTasks","setFavoriteTasks","useEffect","sort","compareCreated","slice","compareRatings","b","created","localeCompare","ratingsAVG","map","task","to","id","key","views","series","s","category","onClick","baseUrlPending","getTasks","get","getPendingTasks","config","headers","Authorization","getSearchedTasks","search","getOneTask","addtask","updateTask","put","deleteTask","delete","acceptTask","addRating","rating","updateViews","getSeries","addSeries","editSerie","serie","deleteSerie","getRules","addRule","rule","editRule","deleteRule","getCategories","addCategory","cat","editCategory","console","log","deleteCategory","Search","setTasks","setAllTasks","setSearch","handleSearch","taskService","defaultValue","Filter","allTasks","categories","rules","selectedCategory","setSelectedCategory","selectedSeries","setSelectedSeries","selectedRules","setSelectedRules","length","array","i","j","includes","filter","getOptionLabel","option","getOptionValue","options","isClearable","isMulti","c","TaskList","originalTasks","handleUpdateViews","setCategories","setRules","seriess","setSeriess","categoryService","then","seriesService","ruleService","handleDelete","confirm","t","compareNamesAsc","compareNamesDesc","compareRatingsAsc","compareRatingsDesc","compareCreatedAsc","compareCreatedDesc","concat","starRatedColor","starDimension","starSpacing","format","Basket","removeTaskFromBasket","removeAllFromBasket","files","file","href","substring","indexOf","getUsers","addUser","editUser","AddAdmin","setMessage","nameErrorMessage","setNameErrorMessage","usernameErrorMessage","setUsernameErrorMessage","passwordErrorMessage","setPasswordErrorMessage","emailErrorMessage","setEmailErrorMessage","setName","users","setUsers","allowNotifications","setAllowNotifications","userService","handleAddAdmin","some","defaultChecked","Rule","newRuleName","setNewRuleName","modifiedRuleName","setModifiedRuleName","modifiedRuleId","setModifiedRuleId","modifyVisible","setModifyVisible","acceptedCategories","setAcceptedCategories","modifiedCategories","setModifiedCategories","handleRuleAdd","newCategories","addedRule","handleRuleDelete","r","handleRuleModify","modifiedRule","handleModifyCategories","handleShowModify","getLanguages","addLanguage","language","editLanguage","deleteLanguage","Language","languages","setLanguages","languageName","setLanguageName","modifiedLanguageName","setModifiedLanguageName","modifiedLanguageId","setModifiedLanguageId","handleLanguageAdd","languageService","addedLanguage","handleLanguageDelete","l","handleLanguageModify","modifiedLanguage","Series","setSeries","modifiedSerieName","setModifiedSerieName","modifiedSerieId","setModifiedSerieId","modifiedSerieColor","setModifiedSerieColor","color","setColor","handleSeriesAdd","addedSerie","handleSerieDelete","handleSerieModify","modifiedSerie","onChangeComplete","hex","colors","style","backgroundColor","display","borderRadius","height","width","marginLeft","Category","newCategoryName","setNewCategoryName","modifiedCategoryName","setModifiedCategoryName","modifiedCategoryId","setModifiedCategoryId","handleCategoryAdd","addedCategory","handleCategoryDelete","handleCategoryModify","modifiedCategory","AddTaskDropdown","showCategories","setShowCategories","showRules","setShowRules","showLanguages","setShowLanguages","showSeries","setShowSeries","updateFiles","MDEditor","setText","setMD","mdParser","MarkdownIt","renderHTML","text","render","html","AddTask","assignmentText","setAssignmentText","gradingScale","setGradingScale","supervisorInstructions","setSupervisorInstructions","assignmentTextMD","setAssignmentTextMD","gradingScaleMD","setGradingScaleMD","supervisorInstructionsMD","setSupervisorInstructionsMD","setRule","setCategory","setLanguage","creatorName","setCreatorName","creatorEmail","setCreatorEmail","assignmentTextErrorMessage","setAssignmentTextErrorMessage","creatorNameErrorMessage","setCreatorNameErrorMessage","creatorEmailErrorMessage","setCreatorEmailErrorMessage","dropDownErrorMessage","setDropDownErrorMessage","setFiles","handleAddTask","formData","FormData","append","addedFiles","fileService","location","reload","multiple","e","values","selected","handleSeriesChange","foundRule","find","handleRuleChange","handleCategoryChange","handleLanguageChange","onDrop","newFiles","getRootProps","getInputProps","Fragment","stopPropagation","handleDeleteFile","TaskListPending","loggedUserJSON","getItem","loggedUser","parse","exception","handleAccept","Admin","EditUser","setShowEdit","handleEditUser","editedUser","error","ChangePassword","setShowChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","newPasswordAgain","setNewPasswordAgain","handleChangePassword","User","showEdit","showChangePassword","Rating","confirmMessage","setConfirmMessage","ratedMessage","setRatedMessage","setRatingsAVG","ratingsAmount","setRatingsAmount","disabled","setDisabled","votesJSON","changeRating","newRating","updatedValues","votes","newVotes","ratings","Number","ModifyTask","setTask","handleUpdateTask","oldFiles","setOldFiles","setNewFiles","filesToDelete","setFilesToDelete","handleModifyTask","modifiedTask","placeHolder","handleDeleteOldFile","handleDeleteNewFile","TaskTextDisplay","dangerouslySetInnerHTML","__html","Task","match","params","pending","App","basket","setBasket","basketJSON","foundBasket","removeItem","exact","path","ReactDOM","document","getElementById"],"mappings":"uQAceA,EAZM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAC/B,OAAgB,OAAZD,EACK,KAIP,yBAAKE,UAAWD,GACbD,I,gBCPDG,EAAO,UAAMC,OAAN,UAOE,GAAEC,MALN,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACWC,IAAMC,KAAKN,EAASG,GAD/B,cACNI,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDCJPC,EAAQ,KAQG,EANE,kBAAMA,GAMR,EAJE,SAACC,GAChBD,EAAK,iBAAaC,IC8DLC,EA7DD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACWC,mBAAS,MADpB,mBACtBC,EADsB,KACRC,EADQ,OAEGF,mBAAS,IAFZ,mBAEtBG,EAFsB,KAEZC,EAFY,OAGHJ,mBAAS,IAHN,mBAGtBK,EAHsB,KAGfC,EAHe,OAIGN,mBAAS,IAJZ,mBAItBO,EAJsB,KAIZC,EAJY,KAKvBC,EAAUC,cAEVC,EAAW,uCAAG,WAAOC,GAAP,eAAArB,EAAA,6DAClBqB,EAAMC,iBADY,kBAGGC,EAAazB,MAAM,CACpCc,WAAUE,QAAOE,aAJH,OAGVQ,EAHU,OAMhBC,OAAOC,aAAaC,QAClB,aAAcC,KAAKC,UAAUL,IAE/BhB,EAAQgB,GACRM,EAAsBN,EAAKnB,OAC3BQ,EAAY,IACZE,EAAS,IACTE,EAAY,IACZC,EAAQa,KAAK,KAdG,kDAgBhBpB,EAAgB,mDAChBqB,YAAW,WACTrB,EAAgB,QACf,KAnBa,0DAAH,sDAuBjB,OACE,yBAAKhB,UAAU,cACb,qDACA,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAC1C,0BAAMuC,SAAUb,GACd,6BACE,2BACEzB,UAAU,WACVD,KAAK,OACLwC,MAAOtB,EACPuB,KAAK,WACLC,YAAY,0BACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBzB,EAAYyB,EAAOJ,WAGjD,6BACE,2BACEvC,UAAU,WACVD,KAAK,WACLwC,MAAOlB,EACPmB,KAAK,WACLC,YAAY,WACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBrB,EAAYqB,EAAOJ,WAGjD,4BAAQxC,KAAK,SAASC,UAAU,gBAAhC,e,QChCO4C,EA3BO,WAEpB,OACE,yBAAK5C,UAAU,kBACb,uDACA,+LAKA,mXAQA,uQCgES6C,EAhFG,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,gBAAsB,EAChBjC,mBAAS,IADO,mBACzCkC,EADyC,KAC/BC,EAD+B,OAENnC,mBAAS,IAFH,mBAEzCoC,EAFyC,KAE1BC,EAF0B,KAIhDC,qBAAU,WACRH,EAAY,YAAIH,GAAOO,KAAKC,GAAgBC,MAAM,EAAG,IACrDJ,EAAiB,YAAIL,GAAOO,KAAKG,GAAgBD,MAAM,EAAG,MACzD,CAACT,IAEJ,IAAMQ,EAAiB,SAACjD,EAAGoD,GACzB,OAAOA,EAAEC,QAAQC,cAActD,EAAEqD,UAG7BF,EAAiB,SAACnD,EAAGoD,GACzB,OAAOA,EAAEG,WAAavD,EAAEuD,YAG1B,OACE,yBAAK5D,UAAU,aACb,qEACA,yBAAKA,UAAU,iCACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,uBACb,uDACA,yBAAKA,UAAU,kCACb,qDACA,uCACA,2CACA,iCAGHgD,EAASa,KAAI,SAACC,GAAD,OACZ,kBAAC,IAAD,CAAM9D,UAAU,eAAe+D,GAAE,mBAAcD,EAAKE,KAClD,yBAAKhE,UAAU,yCAAyCiE,IAAKH,EAAKE,IAChE,0BAAMhE,UAAU,eACd,uBAAGA,UAAU,8BAA8B8D,EAAKtB,MAChD,8CAAoBsB,EAAKI,QAE3B,8BAAOJ,EAAKK,OAAON,KAAI,SAAAO,GAAC,OAAI,yBAAKH,IAAKH,EAAKE,GAAKI,EAAEJ,IAAKI,EAAE5B,KAA7B,SAC5B,8BAAOsB,EAAKO,UAAYP,EAAKO,SAAS7B,MACtC,8BAAM,yBAAKxC,UAAU,eAAesE,QAAS,kBAAMvB,EAAgBe,aAO3E,yBAAK9D,UAAU,iBACb,yBAAKA,UAAU,uBACb,2DACA,yBAAKA,UAAU,kCACb,qDACA,uCACA,2CACA,iCAGHkD,EAAcW,KAAI,SAACC,GAAD,OACjB,kBAAC,IAAD,CAAM9D,UAAU,eAAe+D,GAAE,mBAAcD,EAAKE,KAElD,yBAAKhE,UAAU,8CAA8CiE,IAAKH,EAAKE,IACrE,0BAAMhE,UAAU,eACd,uBAAGA,UAAU,8BAA8B8D,EAAKtB,MAChD,8CAAoBsB,EAAKI,QAE3B,8BAAOJ,EAAKK,OAAON,KAAI,SAAAO,GAAC,OAAI,yBAAKH,IAAKH,EAAKE,GAAKI,EAAEJ,IAAKI,EAAE5B,KAA7B,SAC5B,8BAAOsB,EAAKO,UAAYP,EAAKO,SAAS7B,MACtC,8BAAM,yBAAKxC,UAAU,eAAesE,QAAS,kBAAMvB,EAAgBe,iBCtE/E7D,EAAO,UAAMC,OAAN,SACPqE,EAAc,UAAMrE,OAAN,iBAGdsE,EAAQ,uCAAG,4BAAAnE,EAAA,sEACQC,IAAMmE,IAAIxE,GADlB,cACTO,EADS,yBAERA,EAASC,MAFD,2CAAH,qDAKRiE,EAAe,uCAAG,8BAAArE,EAAA,6DAChBsE,EAAS,CACbC,QAAS,CAAEC,cAAe1C,MAFN,SAIC7B,IAAMmE,IAAIF,EAAgBI,GAJ3B,cAIhBnE,EAJgB,yBAKfA,EAASC,MALM,2CAAH,qDAQfqE,EAAgB,uCAAG,WAAOC,GAAP,eAAA1E,EAAA,sEACAC,IAAMC,KAAN,UAAcN,EAAd,WAAgC8E,GADhC,cACjBvE,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,sDAKhBuE,EAAU,uCAAG,WAAOhB,GAAP,eAAA3D,EAAA,sEACMC,IAAMmE,IAAN,UAAaxE,EAAb,YAAwB+D,IAD9B,cACXxD,EADW,yBAEVA,EAASC,MAFC,2CAAH,sDAKVwE,EAAO,uCAAG,WAAOnB,GAAP,mBAAAzD,EAAA,6DACVsE,EAAS,MACPjE,EAAQyB,OAGZwC,EAAS,CACPC,QAAS,CAAEC,cAAenE,KANhB,SAUSJ,IAAMC,KAAKN,EAAS6D,EAAMa,GAVnC,cAURnE,EAVQ,yBAWPA,EAASC,MAXF,2CAAH,sDAcPyE,EAAU,uCAAG,WAAOpB,GAAP,mBAAAzD,EAAA,6DACbsE,EAAS,MACPjE,EAAQyB,OAGZwC,EAAS,CACPC,QAAS,CAAEC,cAAenE,KANb,SAUMJ,IAAM6E,IAAN,UAAalF,EAAb,YAAwB6D,EAAKE,IAAMF,EAAMa,GAV/C,cAUXnE,EAVW,yBAWVA,EAASC,MAXC,2CAAH,sDAcV2E,EAAU,uCAAG,WAAOpB,GAAP,iBAAA3D,EAAA,6DACXsE,EAAS,CACbC,QAAS,CAAEC,cAAe1C,MAFX,SAKM7B,IAAM+E,OAAN,UAAgBpF,EAAhB,YAA2B+D,GAAMW,GALvC,cAKXnE,EALW,yBAMVA,EAASC,MANC,2CAAH,sDASV6E,EAAU,uCAAG,WAAOtB,GAAP,iBAAA3D,EAAA,6DACXsE,EAAS,CACbC,QAAS,CAAEC,cAAe1C,MAFX,SAIM7B,IAAM6E,IAAN,UAAalF,EAAb,YAAwB+D,EAAxB,WAAqCA,EAAIW,GAJ/C,cAIXnE,EAJW,yBAKVA,EAASC,MALC,2CAAH,sDAQV8E,EAAS,uCAAG,WAAOvB,EAAIwB,GAAX,eAAAnF,EAAA,sEAEOC,IAAMC,KAAN,UAAcN,EAAd,YAAyB+D,EAAzB,SAAoCwB,GAF3C,cAEVhF,EAFU,yBAGTA,EAASC,MAHA,2CAAH,wDAYA,GAAEwE,UAAST,WAAUQ,aAAYF,mBAAkBI,aAAYE,aAAYV,kBAAiBY,aAAYG,YALtG,uCAAG,WAAOzB,GAAP,eAAA3D,EAAA,sEACKC,IAAMC,KAAN,UAAcN,EAAd,YAAyB+D,EAAzB,WADL,cACZxD,EADY,yBAEXA,EAASC,MAFE,2CAAH,sDAKmH8E,aCpF9HtF,EAAO,UAAMC,OAAN,WAEPwF,EAAS,uCAAG,4BAAArF,EAAA,sEACOC,IAAMmE,IAAIxE,GADjB,cACVO,EADU,yBAETA,EAASC,MAFA,2CAAH,qDAKTkF,EAAS,uCAAG,WAAOxB,GAAP,iBAAA9D,EAAA,6DACVsE,EAAS,CACbC,QAAS,CAAEC,cAAe1C,MAFZ,SAKO7B,IAAMC,KAAKN,EAASkE,EAAQQ,GALnC,cAKVnE,EALU,yBAMTA,EAASC,MANA,2CAAH,sDASTmF,EAAS,uCAAG,WAAOC,GAAP,iBAAAxF,EAAA,6DACVsE,EAAS,CACbC,QAAS,CAAEC,cAAe1C,MAFZ,SAKO7B,IAAM6E,IAAN,UAAalF,EAAb,YAAwB4F,EAAM7B,IAAM6B,EAAOlB,GALlD,cAKVnE,EALU,yBAMTA,EAASC,MANA,2CAAH,sDAmBA,GAAEkF,YAAWD,YAAWI,YATtB,uCAAG,WAAO9B,GAAP,iBAAA3D,EAAA,6DACZsE,EAAS,CACbC,QAAS,CAAEC,cAAe1C,MAFV,SAKK7B,IAAM+E,OAAN,UAAgBpF,EAAhB,YAA2B+D,GAAMW,GALtC,cAKZnE,EALY,yBAMXA,EAASC,MANE,2CAAH,sDASmCmF,aCnC9C3F,EAAO,UAAMC,OAAN,SAEP6F,EAAQ,uCAAG,4BAAA1F,EAAA,sEACQC,IAAMmE,IAAIxE,GADlB,cACTO,EADS,yBAERA,EAASC,MAFD,2CAAH,qDAiCC,GAAEuF,QA5BJ,uCAAG,WAAOC,GAAP,iBAAA5F,EAAA,6DACRsE,EAAS,CACbC,QAAS,CAAEC,cAAe1C,MAFd,SAKS7B,IAAMC,KAAKN,EAASgG,EAAMtB,GALnC,cAKRnE,EALQ,yBAMPA,EAASC,MANF,2CAAH,sDA4BasF,WAAUG,SAnBtB,uCAAG,WAAOD,GAAP,iBAAA5F,EAAA,6DACTsE,EAAS,CACbC,QAAS,CAAEC,cAAe1C,MAFb,SAKQ7B,IAAM6E,IAAN,UAAalF,EAAb,YAAwBgG,EAAKjC,IAAMiC,EAAMtB,GALjD,cAKTnE,EALS,yBAMRA,EAASC,MAND,2CAAH,sDAmBgC0F,WAT9B,uCAAG,WAAOnC,GAAP,iBAAA3D,EAAA,6DACXsE,EAAS,CACbC,QAAS,CAAEC,cAAe1C,MAFX,SAKM7B,IAAM+E,OAAN,UAAgBpF,EAAhB,YAA2B+D,GAAMW,GALvC,cAKXnE,EALW,yBAMVA,EAASC,MANC,2CAAH,uDC1BVR,EAAO,UAAMC,OAAN,aAEPkG,EAAa,uCAAG,4BAAA/F,EAAA,sEACGC,IAAMmE,IAAIxE,GADb,cACdO,EADc,yBAEbA,EAASC,MAFI,2CAAH,qDAmCJ,GAAE4F,YA9BA,uCAAG,WAAOC,GAAP,iBAAAjG,EAAA,6DACZsE,EAAS,CACbC,QAAS,CAAEC,cAAe1C,MAFV,SAKK7B,IAAMC,KAAKN,EAASqG,EAAK3B,GAL9B,cAKZnE,EALY,yBAMXA,EAASC,MANE,2CAAH,sDA8Ba2F,gBAAeG,aArB3B,uCAAG,WAAOlC,GAAP,iBAAAhE,EAAA,6DACnBmG,QAAQC,IAAIpC,GACNM,EAAS,CACbC,QAAS,CAAEC,cAAe1C,MAHT,SAMI7B,IAAM6E,IAAN,UAAalF,EAAb,YAAwBoE,EAASL,IAAMK,EAAUM,GANrD,cAMbnE,EANa,yBAOZA,EAASC,MAPG,2CAAH,sDAqByCiG,eAVvC,uCAAG,WAAO1C,GAAP,iBAAA3D,EAAA,6DACfsE,EAAS,CACbC,QAAS,CAAEC,cAAe1C,MAFP,SAKE7B,IAAM+E,OAAN,UAAgBpF,EAAhB,YAA2B+D,GAAMW,GALnC,cAKfnE,EALe,yBAMdA,EAASC,MANK,2CAAH,uDCWLkG,EArCA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAAkB,EAEhB/F,mBAAS,IAFO,mBAErCiE,EAFqC,KAE7B+B,EAF6B,OAGJhG,mBAAS,IAHL,mBAGrCC,EAHqC,KAGvBC,EAHuB,KAKtC+F,EAAY,uCAAG,WAAOrF,GAAP,eAAArB,EAAA,6DACnBqB,EAAMC,iBADa,kBAGMqF,EAAYlC,iBAAiB,CAAEC,WAHrC,OAGXvE,EAHW,OAIjBoG,EAASpG,GACTqG,EAAYrG,GALK,gDAOjBQ,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAVc,yDAAH,sDAclB,OACE,yBAAKhB,UAAU,UACb,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAC1C,0BAAMuC,SAAUyE,EAAc/G,UAAU,eACtC,2BACEA,UAAU,eACVD,KAAK,OACLkH,aAAa,GACbzE,KAAK,SACLC,YAAY,YACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBmE,EAAUnE,EAAOJ,UAE7C,4BAAQxC,KAAK,SAASC,UAAU,uBAAhC,U,yBCkGOkH,EAjIA,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,SAAUC,EAAiD,EAAjDA,WAAYC,EAAqC,EAArCA,MAAOlD,EAA8B,EAA9BA,OAAeyC,GAAe,EAAtB9D,MAAsB,EAAf8D,UAAe,EAE3B9F,mBAAS,IAFkB,mBAEpEwG,EAFoE,KAElDC,EAFkD,OAG/BzG,mBAAS,IAHsB,mBAGpE0G,EAHoE,KAGpDC,EAHoD,OAIjC3G,mBAAS,IAJwB,mBAIpE4G,EAJoE,KAIrDC,EAJqD,KAO3EvE,qBAAU,WACR,GAAIoE,EAAeI,OAAS,GAAKN,EAAiBM,OAAS,GAAKF,EAAe,CAE7E,IADA,IAAIG,EAAQ,GACHC,EAAI,EAAGA,EAAIX,EAASS,OAAQE,IACnC,IAAK,IAAIC,EAAI,EAAGA,EAAIZ,EAASW,GAAG3D,OAAOyD,OAAQG,IACzCP,EAAeQ,SAASb,EAASW,GAAG3D,OAAO4D,GAAG/D,KAAOsD,EAAiBU,SAASb,EAASW,GAAGzD,SAASL,KAAOmD,EAASW,GAAGT,MAAMrD,KAAO0D,EAAc1D,KAAO6D,EAAMG,SAASb,EAASW,KACnLD,EAAMzF,KAAK+E,EAASW,IAI1BlB,EAASiB,QACJ,GAAIL,EAAeI,OAAS,GAAKN,EAAiBM,OAAS,EAAG,CAEnE,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,EAAIX,EAASS,OAAQE,IACnC,IAAK,IAAIC,EAAI,EAAGA,EAAIZ,EAASW,GAAG3D,OAAOyD,OAAQG,IACzCP,EAAeQ,SAASb,EAASW,GAAG3D,OAAO4D,GAAG/D,KAAOsD,EAAiBU,SAASb,EAASW,GAAGzD,SAASL,MAAQ6D,EAAMG,SAASb,EAASW,KACtID,EAAMzF,KAAK+E,EAASW,IAI1BlB,EAASiB,QACJ,GAAIL,EAAeI,OAAS,GAAKF,EAAe,CAErD,IADA,IAAIG,EAAQ,GACHC,EAAI,EAAGA,EAAIX,EAASS,OAAQE,IACnC,IAAK,IAAIC,EAAI,EAAGA,EAAIZ,EAASW,GAAG3D,OAAOyD,OAAQG,IACzCP,EAAeQ,SAASb,EAASW,GAAG3D,OAAO4D,GAAG/D,KAAOmD,EAASW,GAAGT,MAAMrD,KAAO0D,EAAc1D,KAAO6D,EAAMG,SAASb,EAASW,KAC7HD,EAAMzF,KAAK+E,EAASW,IAI1BlB,EAASiB,QACJ,GAAIP,EAAiBM,OAAS,GAAKF,EACxCd,EAASO,EAASc,QAAO,SAAAnE,GAAI,OAAIwD,EAAiBU,SAASlE,EAAKO,SAASL,KAAOF,EAAKuD,MAAMrD,KAAO0D,EAAc1D,YAC3G,GAAIwD,EAAeI,OAAS,EAAG,CAEpC,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,EAAIX,EAASS,OAAQE,IACnC,IAAK,IAAIC,EAAI,EAAGA,EAAIZ,EAASW,GAAG3D,OAAOyD,OAAQG,IACzCP,EAAeQ,SAASb,EAASW,GAAG3D,OAAO4D,GAAG/D,MAAQ6D,EAAMG,SAASb,EAASW,KAChFD,EAAMzF,KAAK+E,EAASW,IAI1BlB,EAASiB,QACAP,EAAiBM,OAAS,EACnChB,EAASO,EAASc,QAAO,SAAAnE,GAAI,OAAIwD,EAAiBU,SAASlE,EAAKO,SAASL,QAEzE4C,EADSc,EACAP,EAASc,QAAO,SAAAnE,GAAI,OAAIA,EAAKuD,MAAMrD,KAAO0D,EAAc1D,MAExDmD,KAEV,CAACG,EAAkBE,EAAgBE,IA6BtC,OACE,kBAAC,WAAD,KACE,yBAAK1H,UAAU,UACb,kBAAC,IAAD,CACEwC,KAAK,gBACL0F,eAAgB,SAAAC,GAAM,gBAAOA,EAAO3F,OACpC4F,eAAgB,SAAAD,GAAM,gBAAOA,EAAOnE,KACpCtB,SAlCsB,SAACyB,GACzBA,GAAUA,EAAOyD,OAAS,EAC5BH,EAAkBtD,EAAON,KAAI,SAAAO,GAAC,OAAIA,EAAEJ,QAEpCyD,EAAkB,IAClBb,EAASO,KA8BLkB,QAASlE,EACTmE,aAAa,EACb7F,YAAa,QACb8F,SAAS,KAIb,yBAAKvI,UAAU,UACb,kBAAC,IAAD,CACEwC,KAAK,kBACL0F,eAAgB,SAAAC,GAAM,gBAAOA,EAAO3F,OACpC4F,eAAgB,SAAAD,GAAM,gBAAOA,EAAOnE,KACpCtB,SAtCwB,SAAC2B,GAC3BA,GAAYA,EAASuD,OAAS,EAChCL,EAAoBlD,EAASR,KAAI,SAAA2E,GAAC,OAAIA,EAAExE,QAExCuD,EAAoB,IACpBX,EAASO,KAkCLkB,QAASjB,EACTkB,aAAa,EACb7F,YAAa,YACb8F,SAAS,KAIb,yBAAKvI,UAAU,UACb,kBAAC,IAAD,CACEwC,KAAK,eACL0F,eAAgB,SAAAC,GAAM,gBAAOA,EAAO3F,OACpC4F,eAAgB,SAAAD,GAAM,gBAAOA,EAAOnE,KACpCtB,SA1CoB,SAAC2E,GACvBA,EACFM,EAAiBN,IAEjBM,EAAiB,IACjBf,EAASO,KAsCLkB,QAAShB,EACTiB,aAAa,EACb7F,YAAa,wB,oBCoCRgG,GAtJE,SAAC,GAAiE,IAA/D5G,EAA8D,EAA9DA,KAAM6G,EAAwD,EAAxDA,cAAe3F,EAAyC,EAAzCA,gBAAiB4F,EAAwB,EAAxBA,kBAAwB,EACtD7H,mBAAS4H,GAD6C,mBACzE5F,EADyE,KAClE8D,EADkE,OAEhD9F,mBAAS4H,GAFuC,mBAEzEvB,EAFyE,KAE/DN,EAF+D,OAGxC/F,mBAAS,MAH+B,mBAGzEC,EAHyE,KAG3DC,EAH2D,OAI5CF,mBAAS,IAJmC,mBAIzEsG,EAJyE,KAI7DwB,EAJ6D,OAKtD9H,mBAAS,IAL6C,mBAKzEuG,EALyE,KAKlEwB,EALkE,OAMlD/H,mBAAS,IANyC,mBAMzEgI,EANyE,KAMhEC,EANgE,KAQhF3F,qBAAU,WACR4F,EAAgB5C,gBAAgB6C,MAAK,SAACzI,GACpCoI,EAAcpI,MAGhB0I,EAAcxD,YAAYuD,MAAK,SAACzI,GAC9BuI,EAAWvI,MAGb2I,EAAYpD,WAAWkD,MAAK,SAACzI,GAC3BqI,EAASrI,QAEV,IAEH4C,qBAAU,WACRwD,EAAS8B,GACT7B,EAAY6B,KACX,CAACA,IAIJ,IAAMU,EAAY,uCAAG,WAAOtF,GAAP,SAAAzD,EAAA,mEAEbyB,OAAOuH,QAAP,2CAA6CvF,EAAKtB,OAFrC,gCAGTwE,EAAY5B,WAAWtB,EAAKE,IAHnB,OAIf4C,EAAS9D,EAAMmF,QAAO,SAAAqB,GAAC,OAAIA,EAAEtF,KAAOF,EAAKE,OAJ1B,uDAOjBhD,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAVc,yDAAH,sDAsCZuI,EAAkB,SAAClJ,EAAGoD,GAC1B,OAAOA,EAAEjB,KAAKmB,cAActD,EAAEmC,OAG1BgH,EAAmB,SAACnJ,EAAGoD,GAC3B,OAAOpD,EAAEmC,KAAKmB,cAAcF,EAAEjB,OAG1BiH,EAAoB,SAACpJ,EAAGoD,GAC5B,OAAOpD,EAAEuD,WAAaH,EAAEG,YAGpB8F,EAAqB,SAACrJ,EAAGoD,GAC7B,OAAOA,EAAEG,WAAavD,EAAEuD,YAGpB+F,EAAoB,SAACtJ,EAAGoD,GAC5B,OAAOpD,EAAEqD,QAAQC,cAAcF,EAAEC,UAG7BkG,EAAqB,SAACvJ,EAAGoD,GAC7B,OAAOA,EAAEC,QAAQC,cAActD,EAAEqD,UAGnC,OACE,yBAAK1D,UAAU,aACb,uDACA,yBAAKA,UAAU,2BACb,kBAAC,EAAD,CACE4G,SAAUA,EACVC,YAAaA,IAEf,kBAAC,EAAD,CACE/D,MAAOA,EACPqE,SAAUA,EACVC,WAAYA,EACZC,MAAOA,EACPlD,OAAQ2E,EACRlC,SAAUA,KAId,kBAAC,EAAD,CAAc9G,QAASiB,IACtB+B,GAASA,EAAM8E,OAAS,GACvB,yBAAK5H,UAAU,mBACb,0BAAMA,UAAU,gBAAhB,uBAA6C,0BAAMA,UAAU,mBAAkB,uBAAGA,UAAU,gBAAgBsE,QArExF,WAC1BsC,EAAS9D,EAAMO,KAAKkG,GAAiBM,OAAO,QAoEsG,uBAAG7J,UAAU,kBAAkBsE,QAjEtJ,WAC3BsC,EAAS9D,EAAMO,KAAKmG,GAAkBK,OAAO,UAiEvC,uCACA,2CACA,0BAAM7J,UAAU,gBAAhB,aAAyC,0BAAMA,UAAU,mBAAkB,uBAAGA,UAAU,kBAAkBsE,QAhEnF,WAC7BsC,EAAS9D,EAAMO,KAAKoG,GAAmBI,OAAO,QA+DqG,uBAAG7J,UAAU,oBAAoBsE,QA5DtJ,WAC9BsC,EAAS9D,EAAMO,KAAKqG,GAAoBG,OAAO,UA4DzC,0BAAM7J,UAAU,gBAAhB,cAAuC,0BAAMA,UAAU,mBAAkB,uBAAGA,UAAU,mBAAmBsE,QAzDlF,WAC7BsC,EAAS9D,EAAMO,KAAKsG,GAAmBE,OAAO,QAwDoG,uBAAG7J,UAAU,qBAAqBsE,QArDtJ,WAC9BsC,EAAS9D,EAAMO,KAAKuG,GAAoBC,OAAO,UAqDxChI,GAAQ,+BACT,gCAGHiB,EAAMe,KAAI,SAACC,GAAD,OACT,kBAAC,IAAD,CAAM9D,UAAU,eAAe+D,GAAE,mBAAcD,EAAKE,IAAMM,QAAS,kBAAMqE,EAAkB7E,EAAKE,MAC9F,yBAAKhE,UAAU,iBAAiBiE,IAAKH,EAAKE,IACxC,0BAAMhE,UAAU,eACd,uBAAGA,UAAU,oBAAoB8D,EAAKtB,MACtC,8CAAoBsB,EAAKI,QAE3B,8BAAOJ,EAAKK,OAAON,KAAI,SAAAO,GAAC,OAAI,yBAAKH,IAAKH,EAAKE,GAAKI,EAAEJ,IAAKI,EAAE5B,KAA7B,SAC5B,8BAAOsB,EAAKO,UAAYP,EAAKO,SAAS7B,MACtC,8BACE,kBAAC,IAAD,CACEgD,OAAQ1B,EAAKF,WACbkG,eAAe,UACfC,cAAc,OACdC,YAAY,UAGflG,EAAKJ,SAAW,8BAAM,kBAAC,KAAD,CAAQuG,OAAO,oBAAoBnG,EAAKJ,UAC9D7B,GAAQ,0BAAM7B,UAAU,oBAAmB,4BAAQA,UAAU,gBAAgBsE,QAAS,kBAAM8E,EAAatF,KAA9D,WAC5C,8BAAM,yBAAK9D,UAAU,eAAesE,QAAS,kBAAMvB,EAAgBe,cCtGhEoG,GA9CA,SAAC,GAA6E,IAA3EpH,EAA0E,EAA1EA,MAAOqH,EAAmE,EAAnEA,qBAAsBxB,EAA6C,EAA7CA,kBAAmByB,EAA0B,EAA1BA,oBAEhE,OACE,yBAAKpK,UAAU,aACb,wBAAIA,UAAU,gBAAd,iCACC8C,GAASA,EAAM8E,OAAS,GAAK,4BAAQ5H,UAAU,oBAAoBsE,QAAS8F,GAA/C,iBAE7BtH,GAA0B,IAAjBA,EAAM8E,QAAgB,yBAAK5H,UAAU,gBAAf,+BAE/B8C,GAASA,EAAM8E,OAAS,GACvB,yBAAK5H,UAAU,mBACb,qDACA,uCACA,2CACA,gDACA,gCAGH8C,EAAMe,KAAI,SAACC,GAAD,OACT,yBAAK9D,UAAU,iBAAiBiE,IAAKH,EAAKE,IACxC,yBAAKhE,UAAU,iCAAiCsE,QAAS,kBAAM6F,EAAqBrG,EAAKE,OACzF,8BACE,kBAAC,IAAD,CAAMD,GAAE,mBAAcD,EAAKE,IAAMM,QAAS,kBAAMqE,EAAkB7E,EAAKE,MACpEF,EAAKtB,MAER,8CAAoBsB,EAAKI,QAE3B,8BAAOJ,EAAKK,OAAON,KAAI,SAAAO,GAAC,OAAI,yBAAKH,IAAKH,EAAKE,GAAKI,EAAEJ,IAAKI,EAAE5B,KAA7B,SAC5B,8BAAOsB,EAAKO,UAAYP,EAAKO,SAAS7B,MACtC,8BACGsB,EAAKuG,OAASvG,EAAKuG,MAAMxG,KAAI,SAACyG,GAAD,OAC1B,yBAAKrG,IAAKqG,GACR,uBAAGC,KAAI,yDAAoDD,IACxDA,EAAKE,UAAUF,EAAKG,QAAQ,KAAO,EAAGH,EAAK1C,cAKtD,0BAAM5H,UAAU,0BAA0BsE,QAAS,kBAAM6F,EAAqBrG,EAAKE,aCvCvF/D,GAAO,UAAMC,OAAN,SAEPwK,GAAQ,uCAAG,4BAAArK,EAAA,sEACQC,IAAMmE,IAAIxE,IADlB,cACTO,EADS,yBAERA,EAASC,MAFD,2CAAH,qDAsBC,IAAEkK,QAjBJ,uCAAG,WAAOvK,GAAP,iBAAAC,EAAA,6DACRsE,EAAS,CACbC,QAAS,CAAEC,cAAe1C,MAFd,SAIS7B,IAAMC,KAAKN,GAASG,EAAauE,GAJ1C,cAIRnE,EAJQ,yBAKPA,EAASC,MALF,2CAAH,sDAiBaiK,YAAUE,SATtB,uCAAG,WAAO/I,GAAP,iBAAAxB,EAAA,6DACTsE,EAAS,CACbC,QAAS,CAAEC,cAAe1C,MAFb,SAKQ7B,IAAM6E,IAAIlF,GAAS4B,EAAM8C,GALjC,cAKTnE,EALS,yBAMRA,EAASC,MAND,2CAAH,uDCkICoK,GAhJE,WAAO,IAAD,EACS/J,mBAAS,MADlB,mBACdhB,EADc,KACLgL,EADK,OAEmBhK,mBAAS,MAF5B,mBAEdC,EAFc,KAEAC,EAFA,OAG2BF,mBAAS,MAHpC,mBAGdiK,EAHc,KAGIC,EAHJ,OAImClK,mBAAS,MAJ5C,mBAIdmK,EAJc,KAIQC,EAJR,OAKmCpK,mBAAS,MAL5C,mBAKdqK,EALc,KAKQC,EALR,OAM6BtK,mBAAS,MANtC,mBAMduK,EANc,KAMKC,EANL,OAOGxK,mBAAS,IAPZ,mBAOd0B,EAPc,KAOR+I,EAPQ,OAQWzK,mBAAS,IARpB,mBAQdG,EARc,KAQJC,EARI,OASWJ,mBAAS,IATpB,mBASdO,EATc,KASJC,EATI,OAUKR,mBAAS,IAVd,mBAUd0K,EAVc,KAUPC,EAVO,OAWK3K,mBAAS,IAXd,mBAWdK,EAXc,KAWPC,EAXO,OAY+BN,oBAAS,GAZxC,mBAYd4K,EAZc,KAYMC,EAZN,KAcrBvI,qBAAU,WACRwI,GAAYlB,WAAWzB,MAAK,SAACzI,GAC3BiL,EAASjL,QAEV,IAEH,IAAMqL,GAAc,uCAAG,WAAOnK,GAAP,SAAArB,EAAA,yDACrBqB,EAAMC,iBACNqJ,EAAoB,MACpBE,EAAwB,MACxBE,EAAwB,MACxBE,EAAqB,MACjB9I,EAAKoF,OAAS,GAChBoD,EAAoB,8DAElB/J,EAAS2G,OAAS,GACpBsD,EAAwB,gFAEtB7J,EAASuG,OAAS,GACpBwD,EAAwB,+DAEtBI,EAAMM,MAAK,SAACjK,GAAD,OAAWA,EAAKZ,WAAaA,MAC1CiK,EAAwB,wCAGtB1I,EAAKoF,OAAS,GAAK3G,EAAS2G,OAAS,GAAKvG,EAASuG,OAAS,GAC3D4D,EAAMM,MAAK,SAACjK,GAAD,OAAWA,EAAKZ,WAAaA,MApBxB,8EAwBb2K,GAAYjB,QAAQ,CACxBnI,OAAMvB,WAAUE,QAAOE,WAAUqK,uBAzBhB,QA2BnBH,EAAQ,IACRrK,EAAY,IACZE,EAAS,IACTE,EAAY,IACZqK,GAAsB,GACtBb,EAAW,mCACXzI,YAAW,WACTyI,EAAW,QACV,KAnCgB,mDAqCnB9J,EAAgB,mCAChBqB,YAAW,WACTrB,EAAgB,QACf,KAxCgB,2DAAH,sDA4CpB,OACE,yBAAKhB,UAAU,eACb,+DACA,kBAAC,EAAD,CAAcF,QAASA,EAASC,KAAK,YACrC,kBAAC,EAAD,CAAcD,QAASiB,EAAchB,KAAK,UAC1C,0BAAMuC,SAAUuJ,IACd,yBAAK7L,UAAU,SACb,kBAAC,EAAD,CAAcF,QAASiL,EAAkBhL,KAAK,UAC9C,2BACEC,UAAU,OACVD,KAAK,OACLwC,MAAOC,EACPA,KAAK,OACLC,YAAY,OACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB4I,EAAQ5I,EAAOJ,WAG7C,6BACE,kBAAC,EAAD,CAAczC,QAASmL,EAAsBlL,KAAK,UAClD,2BACEC,UAAU,WACVD,KAAK,OACLwC,MAAOtB,EACPuB,KAAK,WACLC,YAAY,0BACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBzB,EAAYyB,EAAOJ,WAGjD,6BACE,kBAAC,EAAD,CAAczC,QAASuL,EAAmBtL,KAAK,UAC/C,2BACEC,UAAU,QACVD,KAAK,QACLwC,MAAOpB,EACPqB,KAAK,QACLC,YAAY,yBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBvB,EAASuB,EAAOJ,WAG9C,6BACE,kBAAC,EAAD,CAAczC,QAASqL,EAAsBpL,KAAK,UAClD,2BACEC,UAAU,WACVD,KAAK,WACLwC,MAAOlB,EACPmB,KAAK,WACLC,YAAY,WACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBrB,EAAYqB,EAAOJ,WAGjD,6BACE,yDAEE,yBAAKvC,UAAU,cAAc0C,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBgJ,EAAsBhJ,EAAOJ,SAClF,+BACE,2BACExC,KAAK,QACLyC,KAAK,gBACLD,OAAO,EACPwJ,gBAAc,IALlB,YASA,+BACE,2BACEhM,KAAK,QACLyC,KAAK,gBACLD,OAAO,IAJX,SAWN,4BAAQxC,KAAK,SAASC,UAAU,iBAAhC,kBCuBOgM,GAhKF,SAAC,GAAqC,IAAnC3E,EAAkC,EAAlCA,MAAOwB,EAA2B,EAA3BA,SAAUzB,EAAiB,EAAjBA,WAAiB,EACVtG,mBAAS,IADC,mBACzCmL,EADyC,KAC5BC,EAD4B,OAEApL,mBAAS,IAFT,mBAEzCqL,EAFyC,KAEvBC,EAFuB,OAGJtL,mBAAS,IAHL,mBAGzCuL,EAHyC,KAGzBC,EAHyB,OAIRxL,mBAAS,MAJD,mBAIzCC,EAJyC,KAI3BC,EAJ2B,OAKNF,oBAAS,GALH,mBAKzCyL,EALyC,KAK1BC,EAL0B,OAMI1L,mBAAS,IANb,mBAMzC2L,EANyC,KAMrBC,EANqB,OAOI5L,mBAAS,IAPb,mBAOzC6L,EAPyC,KAOrBC,EAPqB,OAQV9L,oBAAS,GARC,mBAQzCwH,EARyC,KAU1CuE,GAV0C,KAU7B,uCAAG,WAAOnL,GAAP,iBAAArB,EAAA,6DACpBqB,EAAMC,iBACAmL,EAAgBL,EAFF,kBAIMtD,EAAYnD,QAAQ,CAC1CqB,MAAO4E,EAAaQ,mBAAoBA,EAAmB5I,KAAI,SAAAQ,GAAQ,OAAIA,EAASL,QALpE,OAIZ+I,EAJY,OAOlBb,EAAe,IACfQ,EAAsB,IACtB7D,EAASxB,EAAMwC,OAAN,eAAkBkD,EAAlB,CAA6BN,mBAAoBK,MATxC,kDAWlB9L,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAde,0DAAH,uDAkBbgM,EAAgB,uCAAG,WAAO/G,GAAP,SAAA5F,EAAA,mEAEjByB,OAAOuH,QAAP,6CAA4CpD,EAAKzD,OAFhC,gCAGb2G,EAAYhD,WAAWF,EAAKjC,IAHf,OAInB6E,EAASxB,EAAMY,QAAO,SAAAgF,GAAC,OAAIA,EAAEjJ,KAAOiC,EAAKjC,OAJtB,uDAOrBhD,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAVkB,yDAAH,sDAchBkM,EAAgB,uCAAG,WAAOxL,GAAP,eAAArB,EAAA,6DACvBqB,EAAMC,iBACAwL,EAAe,CAAEnJ,GAAIqI,EAAgB7J,KAAM2J,EAAkBM,mBAAoBE,GAFhE,kBAIfxD,EAAYjD,SAAS,CAAElC,GAAIqI,EAAgB7J,KAAM2J,EAAkBM,mBAAoBE,EAAmB9I,KAAI,SAAAQ,GAAQ,OAAIA,EAASL,QAJpH,OAKrBwI,GAAiB,GACjB3D,EAASxB,EAAMxD,KAAI,SAAAoC,GAAI,OAAIA,EAAKjC,KAAOmJ,EAAanJ,GAAKiC,EAAOkH,MAN3C,gDAQrBnM,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAXkB,yDAAH,sDA0BhBoM,EAAyB,SAAChG,GAC9BwF,EAAsBxF,IAGxB,OACE,yBAAKpH,UAAU,aACb,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAEzCsH,GAASA,EAAMxD,KAAI,SAACoC,GAAD,OAClB,yBAAKjG,UAAU,iBAAiBiE,IAAKgC,EAAKjC,IACvCuI,GAAiBF,IAAmBpG,EAAKjC,GACxC,yBAAKhE,UAAU,kBACb,0BAAMsC,SAAU4K,GACd,yBAAKlN,UAAU,eACb,2BACEA,UAAU,OACVD,KAAK,OACLwC,MAAO4J,EACP3J,KAAK,WACLE,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgByJ,EAAoBzJ,EAAOJ,UAEvD,yBAAKvC,UAAU,qBACb,4BAAQD,KAAK,SAASC,UAAU,oBAAhC,YACA,4BAAQsE,QAAS,kBAAMkI,GAAiB,KAAxC,aAGJ,yBAAKxM,UAAU,6BACb,kBAAC,IAAD,CACEwC,KAAK,sBACLD,MAAOoK,EACPzE,eAAgB,SAAAC,GAAM,gBAAOA,EAAO3F,OACpC4F,eAAgB,SAAAD,GAAM,gBAAOA,EAAOnE,KACpCtB,SAAU0K,EACV/E,QAASjB,EACTkB,YAAaA,EACb7F,YAAa,8BACb8F,SAAS,OAMnB,kBAAC,WAAD,KACE,uBAAGvI,UAAU,aAAaiG,EAAKzD,MAC/B,yBAAKxC,UAAU,gBACb,4BAAQsE,QAAS,kBAxDJ,SAAC2B,GACxBuG,GAAiB,GACjBF,EAAkBrG,EAAKjC,IACvBoI,EAAoBnG,EAAKzD,MACzBoK,EAAsB3G,EAAKwG,oBAoDMY,CAAiBpH,IAAOjG,UAAU,iBAAzD,WACA,4BAAQsE,QAAS,kBAAM0I,EAAiB/G,IAAOjG,UAAU,iBAAzD,WAEF,yBAAKA,UAAU,UACf,yBAAKA,UAAU,4BACZiG,EAAKwG,oBAAsBxG,EAAKwG,mBAAmB5I,KAAI,SAAAQ,GAAQ,OAC5D,0BAAMJ,IAAKI,EAASL,IAAKK,EAAS7B,KAAlC,cAQZ,0BAAMF,SAAUuK,EAAe7M,UAAU,YACvC,yBAAKA,UAAU,YACb,2BACEA,UAAU,OACVD,KAAK,OACLwC,MAAO0J,EACPzJ,KAAK,QACLC,YAAY,uBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBuJ,EAAevJ,EAAOJ,UAElD,4BAAQxC,KAAK,SAASC,UAAU,mBAAhC,gBAGF,yBAAKA,UAAU,0BACb,kBAAC,IAAD,CACEwC,KAAK,sBACLD,MAAOkK,EACPvE,eAAgB,SAAAC,GAAM,gBAAOA,EAAO3F,OACpC4F,eAAgB,SAAAD,GAAM,gBAAOA,EAAOnE,KACpCtB,SAlFkB,SAAC0E,GAC3BsF,EAAsBtF,IAkFdiB,QAASjB,EACTkB,YAAaA,EACb7F,YAAa,oCACb8F,SAAS,QCxJftI,GAAO,UAAMC,OAAN,aAEPoN,GAAY,uCAAG,4BAAAjN,EAAA,sEACIC,IAAMmE,IAAIxE,IADd,cACbO,EADa,yBAEZA,EAASC,MAFG,2CAAH,qDAKZ8M,GAAW,uCAAG,WAAOC,GAAP,iBAAAnN,EAAA,6DACZsE,EAAS,CACbC,QAAS,CAAEC,cAAe1C,MAFV,SAKK7B,IAAMC,KAAKN,GAASuN,EAAU7I,GALnC,cAKZnE,EALY,yBAMXA,EAASC,MANE,2CAAH,sDASXgN,GAAY,uCAAG,WAAOD,GAAP,iBAAAnN,EAAA,6DACbsE,EAAS,CACbC,QAAS,CAAEC,cAAe1C,MAFT,SAKI7B,IAAM6E,IAAN,UAAalF,GAAb,YAAwBuN,EAASxJ,IAAMwJ,EAAU7I,GALrD,cAKbnE,EALa,yBAMZA,EAASC,MANG,2CAAH,sDAoBH,IAAE8M,eAAaD,gBAAcI,eATxB,uCAAG,WAAO1J,GAAP,iBAAA3D,EAAA,6DACfsE,EAAS,CACbC,QAAS,CAAEC,cAAe1C,MAFP,SAKE7B,IAAM+E,OAAN,UAAgBpF,GAAhB,YAA2B+D,GAAMW,GALnC,cAKfnE,EALe,yBAMdA,EAASC,MANK,2CAAH,sDASwCgN,iBC8E7CE,GAjHE,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAAmB,EACR/M,mBAAS,IADD,mBACzCgN,EADyC,KAC3BC,EAD2B,OAEQjN,mBAAS,IAFjB,mBAEzCkN,EAFyC,KAEnBC,EAFmB,OAGInN,mBAAS,IAHb,mBAGzCoN,EAHyC,KAGrBC,EAHqB,OAIRrN,mBAAS,MAJD,mBAIzCC,EAJyC,KAI3BC,EAJ2B,OAKNF,oBAAS,GALH,mBAKzCyL,EALyC,KAK1BC,EAL0B,KAO1C4B,EAAiB,uCAAG,WAAO1M,GAAP,eAAArB,EAAA,6DACxBqB,EAAMC,iBADkB,kBAGM0M,GAAgBd,YAAY,CACtDC,SAAUM,IAJU,OAGhBQ,EAHgB,OAMtBP,EAAgB,IAChBF,EAAaD,EAAU/D,OAAOyE,IAPR,gDAStBtN,EAAgB,yCAChBqB,YAAW,WACTrB,EAAgB,QACf,KAZmB,yDAAH,sDAgBjBuN,EAAoB,uCAAG,WAAOf,GAAP,SAAAnN,EAAA,mEAErByB,OAAOuH,QAAP,mCAA2CmE,EAAShL,OAF/B,gCAGjB6L,GAAgBX,eAAeF,EAASxJ,IAHvB,OAIvB6J,EAAaD,EAAU3F,QAAO,SAAAuG,GAAC,OAAIA,EAAExK,KAAOwJ,EAASxJ,OAJ9B,uDAOzBhD,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAVsB,yDAAH,sDAcpByN,EAAoB,uCAAG,WAAO/M,GAAP,eAAArB,EAAA,6DAC3BqB,EAAMC,iBACA+M,EAAmB,CAAE1K,GAAIkK,EAAoB1L,KAAMwL,GAF9B,kBAInBK,GAAgBZ,aAAaiB,GAJV,OAKzBlC,GAAiB,GACjBqB,EAAaD,EAAU/J,KAAI,SAAA2J,GAAQ,OAAIA,EAASxJ,KAAO0K,EAAiB1K,GAAKwJ,EAAWkB,MAN/D,gDAQzB1N,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAXsB,yDAAH,sDAqB1B,OACE,yBAAKhB,UAAU,iBACb,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAEzC6N,GAAaA,EAAU/J,KAAI,SAAC2J,GAAD,OAC1B,yBAAKxN,UAAU,qBAAqBiE,IAAKuJ,EAASxJ,IAC/CuI,GAAiB2B,IAAuBV,EAASxJ,GAChD,yBAAKhE,UAAU,sBACb,0BAAMsC,SAAUmM,GACd,yBAAKzO,UAAU,eACb,2BACEA,UAAU,WACVD,KAAK,OACLwC,MAAOyL,EACPxL,KAAK,WACLE,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBsL,EAAwBtL,EAAOJ,UAE3D,yBAAKvC,UAAU,qBACb,4BAAQD,KAAK,SAASC,UAAU,wBAAhC,YACA,4BAAQsE,QAAS,kBAAMkI,GAAiB,KAAxC,eAMR,kBAAC,WAAD,KACE,uBAAGxM,UAAU,aAAawN,EAAShL,MACnC,yBAAKxC,UAAU,gBACb,4BAAQsE,QAAS,kBAlCN,SAACkJ,GACxBhB,GAAiB,GACjB2B,EAAsBX,EAASxJ,IAC/BiK,EAAwBT,EAAShL,MA+BE6K,CAAiBG,IAAWxN,UAAU,iBAA7D,WACA,4BAAQsE,QAAS,kBAAMiK,EAAqBf,IAAWxN,UAAU,iBAAjE,gBAOV,0BAAMsC,SAAU8L,EAAmBpO,UAAU,YAC3C,yBAAKA,UAAU,YACb,2BACEA,UAAU,WACVD,KAAK,OACLwC,MAAOuL,EACPtL,KAAK,WACLC,YAAY,aACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBoL,EAAgBpL,EAAOJ,UAEnD,4BAAQxC,KAAK,SAASC,UAAU,uBAAhC,mB,SC2BK2O,GAlIA,SAAC,GAA2B,IAAzBxK,EAAwB,EAAxBA,OAAQyK,EAAgB,EAAhBA,UAAgB,EAChB9N,mBAAS,IADO,mBACjC0B,EADiC,KAC3B+I,EAD2B,OAEUzK,mBAAS,IAFnB,mBAEjC+N,EAFiC,KAEdC,EAFc,OAGMhO,mBAAS,IAHf,mBAGjCiO,EAHiC,KAGhBC,EAHgB,OAIYlO,mBAAS,IAJrB,mBAIjCmO,EAJiC,KAIbC,EAJa,OAKdpO,mBAAS,WALK,mBAKjCqO,EALiC,KAK1BC,EAL0B,OAMAtO,mBAAS,MANT,mBAMjCC,EANiC,KAMnBC,EANmB,OAOEF,oBAAS,GAPX,mBAOjCyL,EAPiC,KAOlBC,EAPkB,KASlC6C,EAAe,uCAAG,WAAO3N,GAAP,eAAArB,EAAA,6DACtBqB,EAAMC,iBADgB,kBAGKuH,EAAcvD,UAAU,CAAEnD,OAAM2M,UAHrC,OAGdG,EAHc,OAIpB/D,EAAQ,IACR6D,EAAS,IACTR,EAAUzK,EAAO0F,OAAOyF,IANJ,kDAQpBtO,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAXiB,0DAAH,sDAefuO,EAAiB,uCAAG,WAAO1J,GAAP,SAAAxF,EAAA,mEAElByB,OAAOuH,QAAP,mCAA2CxD,EAAMrD,OAF/B,gCAGd0G,EAAcpD,YAAYD,EAAM7B,IAHlB,OAIpB4K,EAAUzK,EAAO8D,QAAO,SAAA7D,GAAC,OAAIA,EAAEJ,KAAO6B,EAAM7B,OAJxB,uDAOtBhD,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAVmB,yDAAH,sDAcjBwO,EAAiB,uCAAG,WAAO9N,GAAP,eAAArB,EAAA,6DACxBqB,EAAMC,iBACA8N,EAAgB,CAAEzL,GAAI+K,EAAiBvM,KAAMqM,EAAmBM,MAAOF,GAFrD,kBAIhB/F,EAActD,UAAU6J,GAJR,OAKtBjD,GAAiB,GACjBoC,EAAUzK,EAAON,KAAI,SAAAgC,GAAK,OAAIA,EAAM7B,KAAOyL,EAAczL,GAAK6B,EAAQ4J,MANhD,gDAQtBzO,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAXmB,yDAAH,sDAsBvB,OACE,yBAAKhB,UAAU,eACb,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAEzCoE,GAAUA,EAAON,KAAI,SAACgC,GAAD,OACpB,yBAAK7F,UAAU,kBAAkBiE,IAAK4B,EAAM7B,IACzCuI,GAAiBwC,IAAoBlJ,EAAM7B,GAC1C,yBAAKhE,UAAU,mBACb,0BAAMsC,SAAUkN,GACd,yBAAKxP,UAAU,eACb,2BACEA,UAAU,QACVD,KAAK,OACLwC,MAAOsM,EACPrM,KAAK,QACLE,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBmM,EAAqBnM,EAAOJ,UAExD,yBAAKvC,UAAU,qBACb,4BAAQD,KAAK,SAASC,UAAU,qBAAhC,YACA,4BAAQsE,QAAS,kBAAMkI,GAAiB,KAAxC,YAEF,yBAAKxM,UAAU,gBACb,kBAAC,gBAAD,CACEmP,MAAOF,EACPS,iBAAkB,SAAAP,GAAK,OAAID,EAAsBC,EAAMQ,MACvDC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAC9D,UAAW,UAAW,UAAW,UAAW,UAAW,iBAOrE,kBAAC,WAAD,KACE,uBAAG5P,UAAU,aAAY,8BAAO6F,EAAMrD,MAAY,0BAAMqN,MAAO,CAAEC,gBAAiBjK,EAAMsJ,MAAOY,QAAS,eAAgBC,aAAc,MAAOC,OAAQ,OAAQC,MAAO,OAAQC,WAAY,UACxL,yBAAKnQ,UAAU,gBACb,4BAAQsE,QAAS,kBA3CJ,SAACuB,GACxB2G,GAAiB,GACjBwC,EAAmBnJ,EAAM7B,IACzB8K,EAAqBjJ,EAAMrD,MAC3B0M,EAAsBrJ,EAAMsJ,OAuCK9B,CAAiBxH,IAAQ7F,UAAU,iBAA1D,WACA,4BAAQsE,QAAS,kBAAMiL,EAAkB1J,IAAQ7F,UAAU,iBAA3D,gBAOR,0BAAMsC,SAAU+M,EAAiBrP,UAAU,YACzC,yBAAKA,UAAU,YACb,2BACEA,UAAU,OACVD,KAAK,OACLwC,MAAOC,EACPA,KAAK,OACLC,YAAY,aACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB4I,EAAQ5I,EAAOJ,UAE3C,4BAAQxC,KAAK,SAASC,UAAU,wBAAhC,gBAEF,yBAAKA,UAAU,gBACb,kBAAC,gBAAD,CACEmP,MAAOA,EACPO,iBAAkB,SAAAP,GAAK,OAAIC,EAASD,EAAMQ,MAC1CC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAC9D,UAAW,UAAW,UAAW,UAAW,UAAW,iBCVtDQ,GAhHE,SAAC,GAAmC,IAAjChJ,EAAgC,EAAhCA,WAAYwB,EAAoB,EAApBA,cAAoB,EACJ9H,mBAAS,IADL,mBAC3CuP,EAD2C,KAC1BC,EAD0B,OAEMxP,mBAAS,IAFf,mBAE3CyP,EAF2C,KAErBC,EAFqB,OAGE1P,mBAAS,IAHX,mBAG3C2P,EAH2C,KAGvBC,EAHuB,OAIV5P,mBAAS,MAJC,mBAI3CC,EAJ2C,KAI7BC,EAJ6B,OAKRF,oBAAS,GALD,mBAK3CyL,EAL2C,KAK5BC,EAL4B,KAO5CmE,EAAiB,uCAAG,WAAOjP,GAAP,eAAArB,EAAA,6DACxBqB,EAAMC,iBADkB,kBAGMqH,EAAgB3C,YAAY,CACtDhC,SAAUgM,IAJU,OAGhBO,EAHgB,OAMtBN,EAAmB,IACnB1H,EAAcxB,EAAWyC,OAAO+G,IAPV,gDAStB5P,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAZmB,yDAAH,sDAgBjB6P,EAAoB,uCAAG,WAAOxM,GAAP,SAAAhE,EAAA,mEAErByB,OAAOuH,QAAP,uCAA+ChF,EAAS7B,OAFnC,gCAGjBwG,EAAgBtC,eAAerC,EAASL,IAHvB,OAIvB4E,EAAcxB,EAAWa,QAAO,SAAAO,GAAC,OAAIA,EAAExE,KAAOK,EAASL,OAJhC,uDAOzBhD,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAVsB,yDAAH,sDAcpB8P,EAAoB,uCAAG,WAAOpP,GAAP,eAAArB,EAAA,6DAC3BqB,EAAMC,iBACAoP,EAAmB,CAAE/M,GAAIyM,EAAoBjO,KAAM+N,GAF9B,kBAInBvH,EAAgBzC,aAAawK,GAJV,OAKzBvE,GAAiB,GACjB5D,EAAcxB,EAAWvD,KAAI,SAAAQ,GAAQ,OAAIA,EAASL,KAAO+M,EAAiB/M,GAAKK,EAAW0M,MANjE,gDAQzB/P,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAXsB,yDAAH,sDAqB1B,OACE,yBAAKhB,UAAU,iBACb,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAEzCqH,GAAcA,EAAWvD,KAAI,SAACQ,GAAD,OAC5B,yBAAKrE,UAAU,qBAAqBiE,IAAKI,EAASL,IAC/CuI,GAAiBkE,IAAuBpM,EAASL,GAChD,yBAAKhE,UAAU,sBACb,0BAAMsC,SAAUwO,GACd,yBAAK9Q,UAAU,eACb,2BACEA,UAAU,WACVD,KAAK,OACLwC,MAAOgO,EACP/N,KAAK,WACLE,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB6N,EAAwB7N,EAAOJ,UAE3D,yBAAKvC,UAAU,qBACb,4BAAQD,KAAK,SAASC,UAAU,wBAAhC,YACA,4BAAQsE,QAAS,kBAAMkI,GAAiB,KAAxC,eAMR,kBAAC,WAAD,KACE,uBAAGxM,UAAU,aAAaqE,EAAS7B,MACnC,yBAAKxC,UAAU,gBACb,4BAAQsE,QAAS,kBAlCN,SAACD,GACxBmI,GAAiB,GACjBkE,EAAsBrM,EAASL,IAC/BwM,EAAwBnM,EAAS7B,MA+BE6K,CAAiBhJ,IAAWrE,UAAU,iBAA7D,WACA,4BAAQsE,QAAS,kBAAMuM,EAAqBxM,IAAWrE,UAAU,iBAAjE,gBAOV,0BAAMsC,SAAUqO,EAAmB3Q,UAAU,YAC3C,yBAAKA,UAAU,YACb,2BACEA,UAAU,WACVD,KAAK,OACLwC,MAAO8N,EACP7N,KAAK,WACLC,YAAY,iBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB2N,EAAmB3N,EAAOJ,UAEtD,4BAAQxC,KAAK,SAASC,UAAU,uBAAhC,mBC3BKgR,GAvES,WAAO,IAAD,EACFlQ,mBAAS,IADP,mBACrBuG,EADqB,KACdwB,EADc,OAEQ/H,mBAAS,IAFjB,mBAErBsG,EAFqB,KAETwB,EAFS,OAGM9H,mBAAS,IAHf,mBAGrB8M,EAHqB,KAGVC,EAHU,OAIA/M,mBAAS,IAJT,mBAIrBqD,EAJqB,KAIbyK,EAJa,OAKgB9N,oBAAS,GALzB,mBAKrBmQ,EALqB,KAKLC,EALK,OAMMpQ,oBAAS,GANf,mBAMrBqQ,EANqB,KAMVC,EANU,OAOctQ,oBAAS,GAPvB,mBAOrBuQ,EAPqB,KAONC,EAPM,OAQQxQ,oBAAS,GARjB,mBAQrByQ,EARqB,KAQTC,EARS,KAyB5B,OAfApO,qBAAU,WACR+F,EAAYpD,WAAWkD,MAAK,SAACzI,GAC3BqI,EAASrI,MAEXwI,EAAgB5C,gBAAgB6C,MAAK,SAACzI,GACpCoI,EAAcpI,MAEhB0I,EAAcxD,YAAYuD,MAAK,SAACzI,GAC9BoO,EAAUpO,MAEZ6N,GAAgBf,eAAerE,MAAK,SAACzI,GACnCqN,EAAarN,QAEd,IAGD,yBAAKR,UAAU,kBACb,yBAAKA,UAAU,mBACZuR,EACC,kBAAC,WAAD,KACE,4BAAQvR,UAAU,aAAasE,QAAS,kBAAMkN,GAAeD,KAA7D,gBACA,kBAAC,GAAD,CAAQpN,OAAQA,EAAQyK,UAAWA,KAGrC,4BAAQ5O,UAAU,aAAasE,QAAS,kBAAMkN,GAAeD,KAA7D,WAGJ,yBAAKvR,UAAU,mBACZmR,EACC,kBAAC,WAAD,KACE,4BAAQnR,UAAU,aAAasE,QAAS,kBAAM8M,GAAcD,KAA5D,0BACA,kBAAC,GAAD,CAAM9J,MAAOA,EAAOwB,SAAUA,EAAUzB,WAAYA,KAGtD,4BAAQpH,UAAU,aAAasE,QAAS,kBAAM8M,GAAcD,KAA5D,qBAGJ,yBAAKnR,UAAU,mBACZiR,EACC,kBAAC,WAAD,KACE,4BAAQjR,UAAU,aAAasE,QAAS,kBAAM4M,GAAmBD,KAAjE,oBACA,kBAAC,GAAD,CAAU7J,WAAYA,EAAYwB,cAAeA,KAGnD,4BAAQ5I,UAAU,aAAasE,QAAS,kBAAM4M,GAAmBD,KAAjE,eAGJ,yBAAKjR,UAAU,mBACZqR,EACC,kBAAC,WAAD,KACE,4BAAQrR,UAAU,aAAasE,QAAS,kBAAMgN,GAAkBD,KAAhE,gBACA,kBAAC,GAAD,CAAUzD,UAAWA,EAAWC,aAAcA,KAGhD,4BAAQ7N,UAAU,aAAasE,QAAS,kBAAMgN,GAAkBD,KAAhE,aCxEJpR,GAAO,UAAMC,OAAN,SAWE,IAAEuR,YATA,uCAAG,WAAOpH,GAAP,iBAAAhK,EAAA,6DACZsE,EAAS,CACbC,QAAS,CAAE,eAAgB,wBAFX,SAKKtE,IAAMC,KAAKN,GAASoK,EAAO1F,GALhC,cAKZnE,EALY,yBAMXA,EAASC,MANE,2CAAH,uD,0CCkBFiR,I,OAjBE,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,MAAOrP,EAAY,EAAZA,MAC5BsP,EAAW,IAAIC,KAOrB,OACE,kBAAC,KAAD,CACEvP,MAAOA,EACPwP,WAAY,SAACC,GAAD,OAAUH,EAASI,OAAOD,IACtCtP,SATuB,SAAC,GAAoB,IAAlBwP,EAAiB,EAAjBA,KAAMF,EAAW,EAAXA,KAClCL,EAAQO,GACRN,EAAMI,Q,SC8PKG,GA9PC,WAAO,IAAD,EAEUrR,mBAAS,IAFnB,mBAEbhB,EAFa,KAEJgL,EAFI,OAGoBhK,mBAAS,IAH7B,mBAGbC,EAHa,KAGCC,EAHD,OAIIF,mBAAS,IAJb,mBAIb0B,EAJa,KAIP+I,EAJO,OAKwBzK,mBAAS,IALjC,mBAKbsR,EALa,KAKGC,EALH,OAMoBvR,mBAAS,IAN7B,mBAMbwR,EANa,KAMCC,EAND,OAOwCzR,mBAAS,IAPjD,mBAOb0R,EAPa,KAOWC,EAPX,OAQ4B3R,mBAAS,IARrC,mBAQb4R,EARa,KAQKC,EARL,OASwB7R,mBAAS,IATjC,mBASb8R,EATa,KASGC,EATH,OAU4C/R,mBAAS,IAVrD,mBAUbgS,EAVa,KAUaC,EAVb,OAWMjS,mBAAS,IAXf,mBAWbuG,EAXa,KAWNwB,EAXM,OAYI/H,mBAAS,IAZb,mBAYbmF,EAZa,KAYP+M,EAZO,OAagBlS,mBAAS,IAbzB,oBAabsG,GAba,MAaDwB,GAbC,SAcY9H,mBAAS,IAdrB,qBAcbuD,GAda,MAcH4O,GAdG,SAeUnS,mBAAS,IAfnB,qBAebgI,GAfa,MAeJC,GAfI,SAgBQjI,mBAAS,IAhBjB,qBAgBbqD,GAhBa,MAgBLyK,GAhBK,SAiBc9N,mBAAS,IAjBvB,qBAiBb8M,GAjBa,MAiBFC,GAjBE,SAkBY/M,mBAAS,IAlBrB,qBAkBb0M,GAlBa,MAkBH0F,GAlBG,SAmBkBpS,mBAAS,IAnB3B,qBAmBbqS,GAnBa,MAmBAC,GAnBA,SAoBoBtS,mBAAS,IApB7B,qBAoBbuS,GApBa,MAoBCC,GApBD,SAqB4BxS,mBAAS,MArBrC,qBAqBbiK,GArBa,MAqBKC,GArBL,SAsBgDlK,mBAAS,MAtBzD,qBAsBbyS,GAtBa,MAsBeC,GAtBf,SAuB0C1S,mBAAS,MAvBnD,qBAuBb2S,GAvBa,MAuBYC,GAvBZ,SAwB4C5S,mBAAS,MAxBrD,qBAwBb6S,GAxBa,MAwBaC,GAxBb,SAyBoC9S,mBAAS,MAzB7C,qBAyBb+S,GAzBa,MAyBSC,GAzBT,SA0BMhT,mBAAS,IA1Bf,qBA0BbuJ,GA1Ba,MA0BN0J,GA1BM,MA4BpB3Q,qBAAU,WACR+F,EAAYpD,WAAWkD,MAAK,SAAAzI,GAC1BqI,EAASrI,MAEX0I,EAAcxD,YAAYuD,MAAK,SAAAzI,GAC7BuI,GAAWvI,MAEb6N,GAAgBf,eAAerE,MAAK,SAAAzI,GAClCqN,GAAarN,QAEd,IAEH,IA8BMwT,GAAa,uCAAG,WAAOtS,GAAP,mBAAArB,EAAA,yDACpBqB,EAAMC,iBACNqJ,GAAoB,MACpBwI,GAA8B,MAC9BE,GAA2B,MAC3BE,GAA4B,MAC5BE,GAAwB,MACpBtR,EAAKoF,OAAS,GAChBoD,GAAoB,6BAElBoH,EAAexK,OAAS,GAC1B4L,GAA8B,2CAE5BL,GAAYvL,OAAS,GACvB8L,GAA2B,+CAEzBL,GAAazL,OAAS,GACxBgM,GAA4B,2DAEb,KAAbpG,IAA4B,KAATvH,GAA0B,KAAX9B,IAA8B,KAAbE,IACrDyP,GAAwB,gDAEtBtR,EAAKoF,OAAS,GAAKwK,EAAexK,OAAS,GAAKuL,GAAYvL,OAAS,GAAKyL,GAAazL,OAAS,GAC5E,KAAb4F,IAA4B,KAATvH,GAA0B,KAAX9B,IAA8B,KAAbE,IAvB1C,mDAgCpB,GANAgO,EAAkBpQ,KAAKC,UAAUkQ,IACjCG,EAAgBtQ,KAAKC,UAAUoQ,IAC/BG,EAA0BxQ,KAAKC,UAAUsQ,IAErCyB,EAAW,IAAIC,SAEf7J,GAAMzC,OAAS,EACjB,IAASE,EAAI,EAAGA,EAAIuC,GAAMzC,OAAQE,IAC9BmM,EAASE,OAAO,aAAc9J,GAAMvC,GAAIuC,GAAMvC,GAAGtF,MAlCnC,OAsChB4R,EAAa,GAtCG,oBAyCCC,GAAY5C,YAAYwC,GAzCzB,eAyClBG,EAzCkB,iBA0CZpN,EAAY/B,QAAQ,CACxBzC,OAAMyD,OAAM5B,YAAUF,UACtBqJ,YAAU4E,iBAAgBE,eAC1Ba,eAAaE,gBAAcb,yBAC3BE,mBAAkBE,iBAAgBE,2BAClCzI,MAAO+J,IA/CS,QAiDlB7I,EAAQ,IACRyH,EAAQ,IACRC,GAAY,IACZrE,GAAU,IACVsE,GAAY,IACZb,EAAkB,IAClBE,EAAgB,IAChBe,GAAgB,IAChBF,GAAe,IACfX,EAA0B,IAC1B3H,EAAW,6BACXzI,YAAW,WACTyI,EAAW,MACXhJ,OAAOwS,SAASC,WACf,KA/De,mDAiElBvT,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KApEe,2DAAH,sDAiFnB,OACE,yBAAKhB,UAAU,sBACb,yDACA,kBAAC,EAAD,CAAcF,QAASA,EAASC,KAAK,YACrC,kBAAC,EAAD,CAAcD,QAASiB,EAAchB,KAAK,UAC1C,0BAAMuC,SAAU0R,IACd,6BACE,kBAAC,EAAD,CAAclU,QAASiL,GAAkBhL,KAAK,UAC9C,2BACEC,UAAU,aACVD,KAAK,OACLwC,MAAOC,EACPA,KAAK,OACLC,YAAY,sBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB4I,EAAQ5I,EAAOJ,WAG7C,6BACE,kDACA,kBAAC,EAAD,CAAczC,QAASyT,GAA4BxT,KAAK,UACxD,kBAAC,GAAD,CAAU4R,QAASU,EAAmBT,MAAOe,KAE/C,6BACE,yCACA,kBAAC,GAAD,CAAUhB,QAASY,EAAiBX,MAAOiB,KAE7C,yBAAK7S,UAAU,gBACb,gDACA,kBAAC,GAAD,CAAU2R,QAASc,EAA2Bb,MAAOmB,KAEvD,kBAAC,EAAD,CAAcjT,QAAS+T,GAAsB9T,KAAK,UAClD,yBAAKC,UAAU,aACb,6BACE,4BAAQwU,UAAQ,EAACjS,MAAO4B,GAAQzB,SAAU,SAAC+R,GAAD,OAjIzB,SAACA,GAG1B,IAFA,IAAIpM,EAAUoM,EAAE9R,OAAO0F,QACnBqM,EAAS,GACJ5M,EAAI,EAAG0G,EAAInG,EAAQT,OAAQE,EAAI0G,EAAG1G,IACrCO,EAAQP,GAAG6M,UAAiC,KAArBtM,EAAQP,GAAGvF,OACpCmS,EAAOtS,KAAKiG,EAAQP,GAAGvF,OAG3BqM,GAAU8F,GAyH+CE,CAAmBH,IAAIzU,UAAU,mBAChF,4BAAQuC,MAAM,GAAGvC,UAAU,eAA3B,kCACC8I,GAAQjF,KAAI,SAAAM,GAAM,OAAI,4BAAQF,IAAKE,EAAOH,GAAIzB,MAAO4B,EAAOH,IAAKG,EAAO3B,WAG7E,6BACE,4BAAQxC,UAAU,cAAcuC,MAAO0D,EAAMvD,SAAU,SAAC+R,GAAD,OAtJxC,SAACA,GAGxB,GAFAzB,EAAQyB,EAAE9R,OAAOJ,OACjB0Q,GAAY,IACRwB,EAAE9R,OAAOJ,MAAO,CAClB,IAAMsS,EAAYxN,EAAMyN,MAAK,SAAA7H,GAAC,OAAIA,EAAEjJ,KAAOyQ,EAAE9R,OAAOJ,SACpDqG,GAAciM,EAAUpI,yBAExB7D,GAAc,IA+IsDmM,CAAiBN,KAC7E,4BAAQlS,MAAM,IAAd,oBACC8E,EAAMxD,KAAI,SAAAoC,GAAI,OAAI,4BAAQjG,UAAU,eAAeiE,IAAKgC,EAAKjC,GAAIzB,MAAO0D,EAAKjC,IAAKiC,EAAKzD,UAE1F,6BACA,4BAAQxC,UAAU,kBAAkBuC,MAAO8B,GAAU3B,SAAU,SAAC+R,GAAD,OAhJ5C,SAACA,GAC5BxB,GAAYwB,EAAE9R,OAAOJ,OA+IyDyS,CAAqBP,KACzF,4BAAQlS,MAAM,IAAd,aACC6E,GAAWvD,KAAI,SAAAQ,GAAQ,OAAI,4BAAQrE,UAAU,mBAAmBiE,IAAKI,EAASL,GAAIzB,MAAO8B,EAASL,IAAKK,EAAS7B,UAEnH,6BACA,4BAAQxC,UAAU,kBAAkBuC,MAAOiL,GAAU9K,SAAU,SAAC+R,GAAD,OAtI5C,SAACA,GAC5BvB,GAAYuB,EAAE9R,OAAOJ,OAqIyD0S,CAAqBR,KACzF,4BAAQlS,MAAM,IAAd,SACCqL,GAAU/J,KAAI,SAAA2J,GAAQ,OAAI,4BAAQxN,UAAU,mBAAmBiE,IAAKuJ,EAASxJ,GAAIzB,MAAOiL,EAASxJ,IAAKwJ,EAAShL,YAItH,yBAAKxC,UAAU,WACb,6BACE,kBAAC,EAAD,CAAcF,QAAS2T,GAAyB1T,KAAK,UACrD,2BACEC,UAAU,GACVD,KAAK,OACLwC,MAAO4Q,GACP3Q,KAAK,cACLC,YAAY,yBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgByQ,GAAezQ,EAAOJ,WAGpD,6BACE,kBAAC,EAAD,CAAczC,QAAS6T,GAA0B5T,KAAK,UACtD,2BACEC,UAAU,GACVD,KAAK,OACLwC,MAAO8Q,GACP7Q,KAAK,eACLC,YAAY,qCACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB2Q,GAAgB3Q,EAAOJ,YAKvD,kBAAC,KAAD,CAAU2S,OAzFD,SAACC,GACdpB,GAAS1J,GAAMR,OAAOsL,OAyFf,gBAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACC,wBAASD,IACP,0BAAWC,KACX,yBAAKrV,UAAU,SACb,yBAAKA,UAAU,SAAf,kBACCqK,GAAMzC,OAAS,GACd,kBAAC,IAAM0N,SAAP,KACGjL,GAAMxG,KAAI,SAACyG,GAAD,OACT,yBAAKrG,IAAKqG,EAAK9H,MAAO8H,EAAK9H,KAAK,0BAAM8B,QAAS,SAACmQ,GAAD,OA9F1C,SAACA,EAAGjS,GAC3BiS,EAAEc,kBACFxB,GAAS1J,GAAMpC,QAAO,SAAAqC,GAAI,OAAIA,EAAK9H,OAASA,MA4F4BgT,CAAiBf,EAAGnK,EAAK9H,OAAMxC,UAAU,0BAS7G,4BAAQD,KAAK,SAASC,UAAU,mBAAhC,gCCzKOyV,GAnFS,WAAO,IAAD,EACF3U,mBAAS,IADP,mBACrBgC,EADqB,KACd8D,EADc,OAEE9F,mBAAS,MAFX,mBAErBhB,EAFqB,KAEZgL,EAFY,OAGYhK,mBAAS,MAHrB,mBAGrBC,EAHqB,KAGPC,EAHO,KAK5BoC,qBAAU,WACR,IAAKjB,IAAyB,CAC5B,IAAMuT,EAAiB5T,OAAOC,aAAa4T,QAAQ,cACnD,GAAID,EAAgB,CAClB,IAAME,EAAa3T,KAAK4T,MAAMH,GAC9BvT,EAAsByT,EAAWlV,QAGrCsG,EAAYtC,kBAAkBuE,MAAK,SAACzI,GAClCoG,EAASpG,QAEV,IAEH,IAgBM4I,EAAY,uCAAG,WAAOpF,GAAP,SAAA3D,EAAA,mEAEbyB,OAAOuH,QAAP,2CAA6CvG,EAAMgS,MAAK,SAAAxL,GAAC,OAAIA,EAAEtF,KAAOA,KAAIxB,OAF7D,gCAGTwE,EAAY5B,WAAWpB,GAHd,OAIf4C,EAAS9D,EAAMmF,QAAO,SAAAqB,GAAC,OAAIA,EAAEtF,KAAOA,MAJrB,uDAOjBhD,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAVc,yDAAH,sDAclB,OACE,yBAAKhB,UAAU,aACb,iFACA,kBAAC,EAAD,CAAcF,QAASA,EAASC,KAAK,YACrC,kBAAC,EAAD,CAAcD,QAASiB,EAAchB,KAAK,UACzC+C,GAASA,EAAM8E,OAAS,GACvB,yBAAK5H,UAAU,mBACb,qDACA,uCACA,2CACA,+BACA,gCAIH8C,EAAMe,KAAI,SAACC,GAAD,OACT,kBAAC,IAAD,CAAM9D,UAAU,eAAe+D,GAAE,mBAAcD,EAAKE,IAAMM,QAAS,kBAAM0C,EAAYvB,YAAY3B,EAAKE,MACtG,yBAAKhE,UAAU,iBAAiBiE,IAAKH,EAAKE,IACxC,8BACA,+BAAKF,EAAKtB,MACR,8CAAoBsB,EAAKI,QAE3B,8BAAOJ,EAAKK,OAAON,KAAI,SAAAO,GAAC,OAAI,yBAAKH,IAAKH,EAAKE,GAAKI,EAAEJ,IAAKI,EAAE5B,KAA7B,SAC5B,8BAAOsB,EAAKO,UAAYP,EAAKO,SAAS7B,MACtC,4BAAQxC,UAAU,gBAAgBsE,QAAS,kBAtD9B,SAACN,GACpB,IACEgD,EAAY1B,WAAWtB,GACvB4C,EAAS9D,EAAMmF,QAAO,SAAAqB,GAAC,OAAIA,EAAEtF,KAAOA,MACpC8G,EAAW,+BACXzI,YAAW,WACTyI,EAAW,QACV,KACH,MAAOgL,GACP9U,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,MA0CkD+U,CAAajS,EAAKE,MAAnE,cACE,4BAAQhE,UAAU,gBAAgBsE,QAAS,kBAAM8E,EAAatF,EAAKE,MAAnE,iBCjEGgS,GAXD,kBACZ,6BACE,kBAAC,GAAD,MACA,kBAAC,IAAD,CAAMhW,UAAU,eAAe+D,GAAG,YAAlC,eACA,6BACA,kBAAC,IAAD,CAAM/D,UAAU,eAAe+D,GAAG,gBAAlC,mCACA,6BACA,kBAAC,IAAD,CAAM/D,UAAU,eAAe+D,GAAG,2BAAlC,mECyHWkS,GAhIE,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAarU,EAAgC,EAAhCA,KAAMhB,EAA0B,EAA1BA,QAASiK,EAAiB,EAAjBA,WAAiB,EACvBhK,mBAAS,MADc,mBACxDC,EADwD,KAC1CC,EAD0C,OAEfF,mBAAS,MAFM,mBAExDiK,EAFwD,KAEtCC,EAFsC,OAGPlK,mBAAS,MAHF,mBAGxDmK,EAHwD,KAGlCC,EAHkC,OAIbpK,mBAAS,MAJI,mBAIxDuK,EAJwD,KAIrCC,EAJqC,OAKvCxK,mBAASe,EAAKW,MALyB,mBAKxDA,EALwD,KAKlD+I,EALkD,OAM/BzK,mBAASe,EAAKZ,UANiB,mBAMxDA,EANwD,KAM9CC,EAN8C,OAOrCJ,mBAASe,EAAKV,OAPuB,mBAOxDA,EAPwD,KAOjDC,EAPiD,OAQXN,mBAASe,EAAK6J,oBARH,mBAQxDA,EARwD,KAQpCC,EARoC,KAUzDwK,EAAc,uCAAG,WAAOzU,GAAP,eAAArB,EAAA,yDAGrBqB,EAAMC,iBACNqJ,EAAoB,MACpBE,EAAwB,MACxBI,EAAqB,MACjB9I,EAAKoF,OAAS,GAChBoD,EAAoB,8DAElB/J,EAAS2G,OAAS,GACpBsD,EAAwB,gFAEtB/J,EAAMyG,OAAS,GACjB0D,EAAqB,yEAEnB9I,EAAKoF,OAAS,GAAK3G,EAAS2G,OAAS,GAhBpB,2EAoBMgE,GAAYhB,SAAS,CAC5CpI,OAAMvB,WAAUE,QAAOuK,uBArBN,QAoBb0K,EApBa,OAuBnBvV,EAAQuV,GACRtU,OAAOC,aAAaC,QAClB,aAAcC,KAAKC,UAAUkU,IAE/BF,GAAY,GACZpL,EAAW,qBACXzI,YAAW,WACTyI,EAAW,QACV,KA/BgB,kDAiCf,KAAMtK,UAAY,KAAMA,SAASC,MAAQ,KAAMD,SAASC,KAAK4V,OAAuC,4BAA9B,KAAM7V,SAASC,KAAK4V,MAC5FrV,EAAgB,sCAEhBA,EAAgB,+BAElBqB,YAAW,WACTrB,EAAgB,QACf,KAxCgB,0DAAH,sDA4CpB,OAEE,yBAAKhB,UAAU,kBACb,2CACA,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAC1C,0BAAMuC,SAAU6T,GACd,6BACE,kBAAC,EAAD,CAAcrW,QAASiL,EAAkBhL,KAAK,UAC9C,uCAAmB,6BACnB,2BACEC,UAAU,OACVD,KAAK,OACLwC,MAAOC,EACPA,KAAK,OACLC,YAAY,OACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB4I,EAAQ5I,EAAOJ,WAG7C,6BACE,kBAAC,EAAD,CAAczC,QAASmL,EAAsBlL,KAAK,UAClD,0DAA6B,6BAC7B,2BACEC,UAAU,WACVD,KAAK,OACLwC,MAAOtB,EACPuB,KAAK,WACLC,YAAY,0BACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBzB,EAAYyB,EAAOJ,WAGjD,6BACE,kBAAC,EAAD,CAAczC,QAASuL,EAAmBtL,KAAK,UAC/C,mDAAyB,6BACzB,2BACEC,UAAU,QACVD,KAAK,OACLwC,MAAOpB,EACPqB,KAAK,QACLC,YAAY,mBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBvB,EAASuB,EAAOJ,WAG9C,6BACE,yDAEE,yBAAKvC,UAAU,cAAc0C,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBgJ,EAAsBhJ,EAAOJ,SAClF,+BACE,2BACExC,KAAK,QACLyC,KAAK,gBACLD,OAAO,EACPwJ,eAAgBL,IALpB,YASA,+BACE,2BACE3L,KAAK,QACLyC,KAAK,gBACLD,OAAO,EACPwJ,gBAAiBL,IALrB,SAYN,4BAAQ3L,KAAK,SAASC,UAAU,eAAhC,YACA,4BAAQsE,QAAS,kBAAM4R,GAAY,IAAQlW,UAAU,iBAArD,cC1COsW,GAhFQ,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,sBAAuBzL,EAAiB,EAAjBA,WAAiB,EACxBhK,mBAAS,MADe,mBACzDC,EADyD,KAC3CC,EAD2C,OAE1BF,mBAAS,IAFiB,mBAEzD0V,EAFyD,KAE5CC,EAF4C,OAG1B3V,mBAAS,IAHiB,mBAGzD4V,EAHyD,KAG5CC,EAH4C,OAIhB7V,mBAAS,IAJO,mBAIzD8V,EAJyD,KAIvCC,EAJuC,KAM1DC,EAAoB,uCAAG,WAAOpV,GAAP,SAAArB,EAAA,yDAC3BqB,EAAMC,iBACNX,EAAgB,QACZ0V,EAAY9O,OAAS,GAHE,uBAIzB5G,EAAgB,+DAJS,6BAOvB0V,IAAgBE,EAPO,uBAQzB5V,EAAgB,sCARS,oDAYnB4K,GAAYhB,SAAS,CACzB4L,cAAaE,gBAbU,QAezBD,EAAe,IACfE,EAAe,IACfE,EAAoB,IACpBN,GAAsB,GACtBzL,EAAW,uBACXzI,YAAW,WACTyI,EAAW,QACV,KAtBsB,kDAwBrB,KAAMtK,UAAY,KAAMA,SAASC,MAAQ,KAAMD,SAASC,KAAK4V,OAAuC,uBAA9B,KAAM7V,SAASC,KAAK4V,MAC5FrV,EAAgB,qCAEhBA,EAAgB,wCAElBqB,YAAW,WACTrB,EAAgB,QACf,KA/BsB,0DAAH,sDAmC1B,OACE,yBAAKhB,UAAU,wBACb,+CACA,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAC1C,0BAAMuC,SAAUwU,GACd,6BACE,2BACE9W,UAAU,eACVD,KAAK,WACLwC,MAAOiU,EACP/T,YAAY,iBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB8T,EAAe9T,EAAOJ,WAGpD,6BACE,2BACEvC,UAAU,eACVD,KAAK,WACLwC,MAAOmU,EACPjU,YAAY,gBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBgU,EAAehU,EAAOJ,WAGpD,6BACE,2BACEvC,UAAU,qBACVD,KAAK,WACLwC,MAAOqU,EACPnU,YAAY,0BACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBkU,EAAoBlU,EAAOJ,WAGzD,4BAAQxC,KAAK,SAASC,UAAU,0BAAhC,YACA,4BAAQsE,QAAS,kBAAMiS,GAAsB,IAAQvW,UAAU,iBAA/D,cCfO+W,GA1DF,SAAC,GAAuB,IAArBlV,EAAoB,EAApBA,KAAMhB,EAAc,EAAdA,QAAc,EACJC,mBAAS,MADL,mBAC3BhB,EAD2B,KAClBgL,EADkB,OAEFhK,oBAAS,GAFP,mBAE3BkW,EAF2B,KAEjBd,EAFiB,OAGkBpV,oBAAS,GAH3B,mBAG3BmW,EAH2B,KAGPV,EAHO,KAgBlC,OACE,6BACG1U,GAEG,yBAAK7B,UAAU,cACXgX,IAAaC,GAEX,6BACE,kBAAC,EAAD,CAAcnX,QAASA,EAASC,KAAK,YACrC,2CACA,2BACE,qCACC8B,EAAKW,MAER,2BACE,wDACCX,EAAKZ,UAER,2BACE,uDACCY,EAAKV,OAER,2BACE,4CACCU,EAAK6J,mBACJ,iDAEA,uDAGJ,4BAAQ1L,UAAU,mBAAmBsE,QAAS,kBAxC5DiS,GAAsB,QACtBL,GAAY,KAuCE,WACA,4BAAQlW,UAAU,yBAAyBsE,QAAS,kBAnClE4R,GAAY,QACZK,GAAsB,KAkCR,oBAGLS,GAAY,kBAAC,GAAD,CAAUd,YAAaA,EAAarU,KAAMA,EAAMhB,QAASA,EAASiK,WAAYA,IAC1FmM,GAAsB,kBAAC,GAAD,CAAgBV,sBAAuBA,EAAuBzL,WAAYA,OCkC9FoM,GArFA,SAAC,GAA+B,IAA7BpT,EAA4B,EAA5BA,KAAMhB,EAAsB,EAAtBA,MAAO8D,EAAe,EAAfA,SAAe,EAChB9F,qBADgB,mBACrC0E,EADqC,aAEJ1E,mBAAS,OAFL,mBAErCC,EAFqC,KAEvBC,EAFuB,OAGAF,mBAAS,MAHT,mBAGrCqW,EAHqC,KAGrBC,EAHqB,OAIJtW,mBAAS,MAJL,mBAIrCuW,EAJqC,KAIvBC,EAJuB,OAKRxW,mBAASgD,EAAKF,YALN,mBAKrCA,EALqC,KAKzB2T,EALyB,OAMFzW,mBAASgD,EAAK0T,eANZ,mBAMrCA,EANqC,KAMtBC,EANsB,OAOZ3W,oBAAS,GAPG,mBAOrC4W,EAPqC,KAO3BC,EAP2B,KAU5CvU,qBAAU,WACR,IAAMwU,EAAY9V,OAAOC,aAAa4T,QAAQ,SAC1CiC,IACY3V,KAAK4T,MAAM+B,GACD9C,MAAK,SAAAxL,GAAC,OAAIA,IAAMxF,EAAKE,QAE3C2T,GAAY,GACZL,EAAgB,qDAGnB,IAEH,IAAMO,EAAY,uCAAG,WAAOC,GAAP,qBAAAzX,EAAA,+EAEW2G,EAAYzB,UAAUzB,EAAKE,GAAI,CACzDwB,OAAQsS,IAHO,OAEXC,EAFW,QAKXH,EAAY9V,OAAOC,aAAa4T,QAAQ,YAEtCqC,EAAQ/V,KAAK4T,MAAM+B,GACnBK,EAAWD,EAAMnO,OAAO/F,EAAKE,IACnClC,OAAOC,aAAaC,QAAQ,QAASC,KAAKC,UAAU+V,KAEtDnU,EAAKoU,QAAQJ,EAAY,GAAKhU,EAAKoU,QAAQJ,EAAY,GAAK,EAC5DhU,EAAKF,WAAamU,EAAcnU,WAChCgD,EAAS9D,EAAMe,KAAI,SAACyF,GAAD,OAChBA,EAAEtF,IAAMF,EAAKE,GAAMF,EAAOwF,MAC7BiO,EAAcQ,EAAcnU,YAC5B6T,EAAiBM,EAAcP,eAC/BG,GAAY,GACZP,EAAkB,0BAlBD,kDAqBjBpW,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAxBc,0DAAH,sDA4BlB,OACE,yBAAKhB,UAAU,eACb,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAC1C,kBAAC,EAAD,CAAcD,QAASqX,EAAgBpX,KAAK,YAC5C,yBAAKC,UAAU,UACb,6BACE,0CACA,kBAAC,IAAD,CACEwF,OAAQ2S,OAAOvU,GACfkG,eAAe,SACfC,cAAc,OACdC,YAAY,UAGhB,yBAAKhK,UAAU,iBAAf,IACIwX,EADJ,MAIF,kBAAC,EAAD,CAAc1X,QAASuX,EAActX,KAAK,WACxC2X,GACA,6BACE,0CACA,kBAAC,IAAD,CACElS,OAAQA,EACRqS,aAAcA,EACd9N,cAAc,OACdC,YAAY,YC6MToO,GApRI,SAAC,GAA2D,IAAzD5L,EAAwD,EAAxDA,iBAAkB1I,EAAsC,EAAtCA,KAAMuU,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,iBAAuB,EAE9CxX,mBAAS,IAFqC,mBAErEhB,EAFqE,KAE5DgL,EAF4D,OAGpChK,mBAAS,IAH2B,mBAGrEC,EAHqE,KAGvDC,EAHuD,OAIpDF,mBAASgD,EAAKtB,MAJsC,mBAIrEA,EAJqE,KAI/D+I,EAJ+D,OAKhCzK,mBAASgD,EAAKsO,gBALkB,mBAKrEA,EALqE,KAKrDC,EALqD,OAMpCvR,mBAASgD,EAAKwO,cANsB,mBAMrEA,EANqE,KAMvDC,EANuD,OAOhBzR,mBAASgD,EAAK0O,wBAPE,mBAOrEA,EAPqE,KAO7CC,EAP6C,OAQ5B3R,mBAASgD,EAAK4O,kBARc,mBAQrEA,EARqE,KAQnDC,EARmD,OAShC7R,mBAASgD,EAAK8O,gBATkB,mBASrEA,EATqE,KASrDC,EATqD,OAUZ/R,mBAASgD,EAAKgP,0BAVF,mBAUrEA,EAVqE,KAU3CC,EAV2C,OAWlDjS,mBAAS,IAXyC,mBAWrEuG,EAXqE,KAW9DwB,EAX8D,QAYpD/H,mBAASgD,EAAKuD,MAAQvD,EAAKuD,MAAMrD,GAAK,MAZc,qBAYrEiC,GAZqE,MAY/D+M,GAZ+D,SAaxClS,mBAAS,IAb+B,qBAarEsG,GAbqE,MAazDwB,GAbyD,SAc5C9H,mBAASgD,EAAKO,SAAWP,EAAKO,SAASL,GAAK,MAdA,qBAcrEK,GAdqE,MAc3D4O,GAd2D,SAe9CnS,mBAAS,IAfqC,qBAerEgI,GAfqE,MAe5DC,GAf4D,SAgBhDjI,mBAASgD,EAAKK,OAAON,KAAI,SAAAO,GAAC,OAAIA,EAAEJ,OAhBgB,qBAgBrEG,GAhBqE,MAgB7DyK,GAhB6D,SAiB1C9N,mBAAS,IAjBiC,qBAiBrE8M,GAjBqE,MAiB1DC,GAjB0D,SAkB5C/M,mBAASgD,EAAK0J,SAAW1J,EAAK0J,SAASxJ,GAAK,MAlBA,qBAkBrEwJ,GAlBqE,MAkB3D0F,GAlB2D,SAmBtCpS,mBAASgD,EAAKqP,aAnBwB,qBAmBrEA,GAnBqE,MAmBxDC,GAnBwD,SAoBpCtS,mBAASgD,EAAKuP,cApBsB,qBAoBrEA,GApBqE,MAoBvDC,GApBuD,SAqB5BxS,mBAAS,MArBmB,qBAqBrEiK,GArBqE,MAqBnDC,GArBmD,SAsBRlK,mBAAS,MAtBD,qBAsBrEyS,GAtBqE,MAsBzCC,GAtByC,SAuBd1S,mBAAS,MAvBK,qBAuBrE2S,GAvBqE,MAuB5CC,GAvB4C,SAwBZ5S,mBAAS,MAxBG,qBAwBrE6S,GAxBqE,MAwB3CC,GAxB2C,SAyBpB9S,mBAAS,MAzBW,qBAyBrE+S,GAzBqE,MAyB/CC,GAzB+C,SA0B5ChT,mBAASgD,EAAKuG,OAAS,IA1BqB,qBA0BrEkO,GA1BqE,MA0B3DC,GA1B2D,SA2B5C1X,mBAAS,IA3BmC,qBA2BrEqU,GA3BqE,MA2B3DsD,GA3B2D,SA4BlC3X,mBAAS,IA5ByB,qBA4BrE4X,GA5BqE,MA4BtDC,GA5BsD,MA8BxE3U,GAAKF,EAAKE,GAEdZ,qBAAU,WACR+F,EAAYpD,WAAWkD,MAAK,SAAAzI,GAE1B,GADAqI,EAASrI,GACLsD,EAAKuD,OAASvD,EAAKuD,MAAMrD,GAAI,CAC/B,IAAM6Q,EAAYrU,EAASsU,MAAK,SAAA7H,GAAC,OAAIA,EAAEjJ,KAAOF,EAAKuD,MAAMrD,MACrD6Q,GACFjM,GAAciM,EAAUpI,wBAI9BvD,EAAcxD,YAAYuD,MAAK,SAAAzI,GAC7BuI,GAAWvI,MAEb6N,GAAgBf,eAAerE,MAAK,SAAAzI,GAClCqN,GAAarN,QAEd,IAEH,IA8BMoY,GAAgB,uCAAG,WAAOlX,GAAP,qBAAArB,EAAA,yDACvBqB,EAAMC,iBACNqJ,GAAoB,MACpBwI,GAA8B,MAC9BE,GAA2B,MAC3BE,GAA4B,MAC5BE,GAAwB,MACpBtR,EAAKoF,OAAS,GAChBoD,GAAoB,6BAElBoH,EAAexK,OAAS,GAC1B4L,GAA8B,2CAE5BL,GAAYvL,OAAS,GACvB8L,GAA2B,+CAEzBL,GAAazL,OAAS,GACxBgM,GAA4B,2DAEb,KAAbpG,IAA4B,KAATvH,IAA0B,KAAX9B,IAA8B,KAAbE,IACrDyP,GAAwB,gDAEtBtR,EAAKoF,OAAS,GAAKwK,EAAexK,OAAS,GAAKuL,GAAYvL,OAAS,GAAKyL,GAAazL,OAAS,GAClF,KAAb4F,IAA4B,KAATvH,IAA0B,KAAX9B,IAA8B,KAAbE,IAvBjC,mDA+BvB,IAJI4P,EAAW,IAAIC,UAEVC,OAAO,gBAAiBuE,IAE7BvD,GAASvN,OAAS,EACpB,IAASE,EAAI,EAAGA,EAAIqN,GAASvN,OAAQE,IACjCmM,EAASE,OAAO,aAAcgB,GAASrN,GAAIqN,GAASrN,GAAGtF,MAjCtC,OAqCnB4R,EAAa,GArCM,oBAwCFC,GAAY5C,YAAYwC,GAxCtB,eAwCrBG,EAxCqB,iBAyCMpN,EAAY9B,WAAW,CAChD1C,OAAMyD,QAAM5B,YAAUF,UACtBqJ,YAAU4E,iBAAgBE,eAC1Ba,eAAaE,gBAAcb,yBAAwBxO,MACnD0O,mBAAkBE,iBAAgBE,2BAClCzI,MAAOkO,GAAS1O,OAAOuK,KA9CJ,QAyCfyE,EAzCe,OAgDrBrS,QAAQC,IAAIoS,GACZ/N,EAAW,8BACXuN,EAAQQ,GACRP,EAAiBO,GACjBxW,YAAW,WACTyI,EAAW,MACXhJ,OAAOwS,SAASC,WACf,KAvDkB,mDAyDrBvT,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KA5DkB,2DAAH,sDAmFtB,OACE,yBAAKhB,UAAU,yBACb,yDACA,kBAAC,EAAD,CAAcF,QAASA,EAASC,KAAK,YACrC,kBAAC,EAAD,CAAcD,QAASiB,EAAchB,KAAK,UAC1C,0BAAMuC,SAAUsW,GAAkB5Y,UAAU,eAC1C,6BACE,kBAAC,EAAD,CAAcF,QAASiL,GAAkBhL,KAAK,UAC9C,2BACEC,UAAU,aACVD,KAAK,OACLkH,aAAczE,EACdA,KAAK,OACLC,YAAY,sBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB4I,EAAQ5I,EAAOJ,WAG7C,6BACE,kDACA,kBAAC,EAAD,CAAczC,QAASyT,GAA4BxT,KAAK,UACxD,kBAAC,GAAD,CAAU4R,QAASU,EAAmBT,MAAOe,EAAqBpQ,MAAOmQ,EAAkBoG,YAAY,wBAEzG,6BACE,yCACA,kBAAC,GAAD,CAAUnH,QAASY,EAAiBX,MAAOiB,EAAmBtQ,MAAOqQ,EAAgBkG,YAAY,eAEnG,yBAAK9Y,UAAU,gBACb,gDACA,kBAAC,GAAD,CAAU2R,QAASc,EAA2Bb,MAAOmB,EAA6BxQ,MAAOuQ,EAA0BgG,YAAY,sBAEjI,kBAAC,EAAD,CAAchZ,QAAS+T,GAAsB9T,KAAK,UAClD,yBAAKC,UAAU,aACb,6BACE,4BAAQwU,UAAQ,EAACjS,MAAO4B,GAAQzB,SAAU,SAAC+R,GAAD,OAnIzB,SAACA,GAG1B,IAFA,IAAIpM,EAAUoM,EAAE9R,OAAO0F,QACnBqM,EAAS,GACJ5M,EAAI,EAAG0G,EAAInG,EAAQT,OAAQE,EAAI0G,EAAG1G,IACrCO,EAAQP,GAAG6M,UAAiC,KAArBtM,EAAQP,GAAGvF,OACpCmS,EAAOtS,KAAKiG,EAAQP,GAAGvF,OAG3BqM,GAAU8F,GA2H+CE,CAAmBH,IAAIzU,UAAU,mBAChF,4BAAQuC,MAAM,GAAGvC,UAAU,eAA3B,kCACC8I,GAAQjF,KAAI,SAAAM,GAAM,OAAI,4BAAQF,IAAKE,EAAOH,GAAIzB,MAAO4B,EAAOH,IAAKG,EAAO3B,WAG7E,6BACE,4BAAQD,MAAO0D,GAAMvD,SAAU,SAAC+R,GAAD,OAxJhB,SAACA,GAGxB,GAFAzB,GAAQyB,EAAE9R,OAAOJ,OACjB0Q,GAAY,IACRwB,EAAE9R,OAAOJ,MAAO,CAClB,IAAMsS,EAAYxN,EAAMyN,MAAK,SAAA7H,GAAC,OAAIA,EAAEjJ,KAAOyQ,EAAE9R,OAAOJ,SACpDqG,GAAciM,EAAUpI,yBAExB7D,GAAc,IAiJ8BmM,CAAiBN,KACrD,4BAAQlS,MAAM,IAAd,oBACC8E,EAAMxD,KAAI,SAAAoC,GAAI,OAAI,4BAAQhC,IAAKgC,EAAKjC,GAAIzB,MAAO0D,EAAKjC,IAAKiC,EAAKzD,UAEjE,6BACA,4BAAQD,MAAO8B,GAAU3B,SAAU,SAAC+R,GAAD,OAlJhB,SAACA,GAC5BxB,GAAYwB,EAAE9R,OAAOJ,OAiJ6ByS,CAAqBP,KAC7D,4BAAQlS,MAAM,IAAd,aACC6E,GAAWvD,KAAI,SAAAQ,GAAQ,OAAI,4BAAQJ,IAAKI,EAASL,GAAIzB,MAAO8B,EAASL,IAAKK,EAAS7B,UAEtF,6BACA,4BAAQD,MAAOiL,GAAU9K,SAAU,SAAC+R,GAAD,OAxIhB,SAACA,GAC5BvB,GAAYuB,EAAE9R,OAAOJ,OAuI6B0S,CAAqBR,KAC7D,4BAAQlS,MAAM,IAAd,SACCqL,GAAU/J,KAAI,SAAA2J,GAAQ,OAAI,4BAAQvJ,IAAKuJ,EAASxJ,GAAIzB,MAAOiL,EAASxJ,IAAKwJ,EAAShL,YAIzF,yBAAKxC,UAAU,WACb,6BACE,kBAAC,EAAD,CAAcF,QAAS2T,GAAyB1T,KAAK,UACrD,2BACEC,UAAU,GACVD,KAAK,OACLkH,aAAckM,GACd3Q,KAAK,cACLC,YAAY,kBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgByQ,GAAezQ,EAAOJ,WAGpD,6BACE,kBAAC,EAAD,CAAczC,QAAS6T,GAA0B5T,KAAK,UACtD,2BACEC,UAAU,GACVD,KAAK,OACLkH,aAAcoM,GACd7Q,KAAK,eACLC,YAAY,8BACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB2Q,GAAgB3Q,EAAOJ,YAKvD,kBAAC,KAAD,CAAU2S,OA/FD,SAAC7K,GACdoO,GAAYtD,GAAStL,OAAOQ,OA+FrB,gBAAE+K,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACC,wBAASD,IACP,0BAAWC,KACX,yBAAKrV,UAAU,SACb,yBAAKA,UAAU,SAAf,kBACCuY,IAAYA,GAAS3Q,OAAS,GAC7B,kBAAC,IAAM0N,SAAP,KACGiD,GAAS1U,KAAI,SAACyG,GAAD,OACZ,yBAAKrG,IAAKqG,GAAOA,EAAKE,UAAUF,EAAKG,QAAQ,KAAO,EAAGH,EAAK1C,QAAQ,0BAAMtD,QAAS,SAACmQ,GAAD,OApG3E,SAACA,EAAGjS,GAC9BiS,EAAEc,kBACFiD,GAAYD,GAAStQ,QAAO,SAAAqC,GAAI,OAAIA,IAAS9H,MAC7CmW,GAAiBD,GAAc7O,OAAOrH,IAiGsEuW,CAAoBtE,EAAGnK,IAAOtK,UAAU,qBAIvImV,IAAYA,GAASvN,OAAS,GAC7B,kBAAC,IAAM0N,SAAP,KACGH,GAAStR,KAAI,SAACyG,GAAD,OACZ,yBAAKrG,IAAKqG,EAAK9H,MAAO8H,EAAK9H,KAAK,0BAAM8B,QAAS,SAACmQ,GAAD,OArGvC,SAACA,EAAGjS,GAC9BiS,EAAEc,kBACFkD,GAAYtD,GAASlN,QAAO,SAAAqC,GAAI,OAAIA,EAAK9H,OAASA,MAmGsBwW,CAAoBvE,EAAGnK,EAAK9H,OAAOxC,UAAU,0BASjH,6BACE,4BAAQD,KAAK,SAASC,UAAU,oBAAhC,YACA,4BAAQsE,QAAS,WA7HvBkI,GAAiB,IA6H4BxM,UAAU,iBAAjD,eC5QKiZ,GAVS,SAAC,GAAc,IAAZjH,EAAW,EAAXA,KAKzB,OACE,yBAAKkH,wBAJE,CAAEC,OAAO,GAAD,OAAKnH,OCiHToH,GA5GF,SAAC,GAAyE,IAAvEC,EAAsE,EAAtEA,MAAOxX,EAA+D,EAA/DA,KAAMkB,EAAyD,EAAzDA,gBAAiBD,EAAwC,EAAxCA,MAAO8D,EAAiC,EAAjCA,SAAU0R,EAAuB,EAAvBA,iBAAuB,EAE5DxX,mBAAS,MAFmD,mBAE7EgD,EAF6E,KAEvEuU,EAFuE,OAG1CvX,oBAAS,GAHiC,mBAG7EyL,EAH6E,KAG9DC,EAH8D,OAItD1L,mBAAS,MAJ6C,mBAI7EhB,EAJ6E,KAIpEgL,EAJoE,OAK5ChK,mBAAS,MALmC,mBAK7EC,EAL6E,KAK/DC,EAL+D,KAM9EO,EAAUC,cAEhB4B,qBAAU,WACR4D,EAAYhC,WAAWqU,EAAMC,OAAOtV,IAAIiF,MAAK,SAACzI,GAC5C6X,EAAQ7X,QAET,IAwCH,OACE,6BACG+L,EACC,kBAAC,GAAD,CAAYC,iBAAkBA,EAAkB1I,KAAMA,EAAMuU,QAASA,EAASC,iBAAkBA,IAEhG,yBAAKtY,UAAU,6BACb,kBAAC,EAAD,CAAcF,QAASA,EAASC,KAAK,YACrC,kBAAC,EAAD,CAAcD,QAASiB,EAAchB,KAAK,UACzC+D,GACC,yBAAK9D,UAAU,kBACb,6BACE,4BAAK8D,EAAKtB,MACV,8BAAM,yBAAKxC,UAAU,gCAAgCsE,QAAS,kBAAMvB,EAAgBe,OACpF,kBAAC,GAAD,CAAQA,KAAMA,EAAMhB,MAAOA,EAAO8D,SAAUA,KAE9C,mDACA,kBAAC,GAAD,CAAiBoL,KAAMlO,EAAKsO,iBAC5B,mDACA,kBAAC,GAAD,CAAiBJ,KAAMlO,EAAK0O,yBAC5B,kDACA,kBAAC,GAAD,CAAiBR,KAAMlO,EAAKwO,eAC5B,sCACCxO,EAAKK,OAAON,KAAI,SAAAO,GAAC,OAAI,0BAAMH,IAAKH,EAAKE,GAAKI,EAAEJ,IAAKI,EAAE5B,KAAK,iCACzD,0CACA,2BAAIsB,EAAKO,UAAYP,EAAKO,SAAS7B,MACnC,sDACA,2BAAIsB,EAAKuD,OAASvD,EAAKuD,MAAM7E,MAC7B,mEACA,2BAAIsB,EAAKqP,YAAY,6BAAOrP,EAAKuP,cACjC,yDACCvP,EAAKJ,SAAW,2BAAG,kBAAC,KAAD,CAAQuG,OAAO,oBAAoBnG,EAAKJ,UAC5D,+CACCI,EAAKuG,OAA+B,IAAtBvG,EAAKuG,MAAMzC,QAAgB,gCACzC9D,EAAKuG,OAASvG,EAAKuG,MAAMxG,KAAI,SAACyG,GAAD,OAC5B,yBAAKrG,IAAKqG,GACR,uBAAGC,KAAI,yDAAoDD,IACxDA,EAAKE,UAAUF,EAAKG,QAAQ,KAAO,EAAGH,EAAK1C,aAIjD/F,GACC,yBAAK7B,UAAU,WACb,4BAAQsE,QAAS,kBAAMkI,GAAiB,IAAOxM,UAAU,sBAAzD,WACC8D,EAAKyV,SAAW,4BAAQvZ,UAAU,gBAAgBsE,QAAS,kBA3DvD,WACnB,IACE0C,EAAY1B,WAAWxB,EAAKE,IAC5B8G,EAAW,+BACXzI,YAAW,WACTyI,EAAW,MACXvJ,EAAQa,KAAK,YACZ,KACH,MAAO0T,GACP9U,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,MA+C2E+U,KAAjD,cACjB,4BAAQ/V,UAAU,gBAAgBsE,QAAS,kBAlFtC,WACnB,IACMxC,OAAOuH,QAAP,2CAA6CvF,EAAKtB,SACpDwE,EAAY5B,WAAWtB,EAAKE,IAC5B8G,EAAW,2BACXzI,YAAW,WACTyI,EAAW,MACPhH,EAAKyV,QACPhY,EAAQa,KAAK,UAEbb,EAAQa,KAAK,OAEd,MAEL,MAAO0T,GACP9U,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,MAgE0DoI,KAAjD,eCuBHoQ,GAjHH,WAAO,IAAD,EACY1Y,mBAAS,IADrB,mBACT2Y,EADS,KACDC,EADC,OAEU5Y,mBAAS,IAFnB,mBAETgC,EAFS,KAEF8D,EAFE,OAGQ9F,mBAAS,MAHjB,mBAGTe,EAHS,KAGHhB,EAHG,KAIVU,EAAUC,cAEhB4B,qBAAU,WACR4D,EAAYxC,WAAWyE,MAAK,SAACzI,GAC3BoG,EAASpG,MAEX,IAAMkV,EAAiB5T,OAAOC,aAAa4T,QAAQ,cACnD,GAAID,EAAgB,CAClB,IAAME,EAAa3T,KAAK4T,MAAMH,GAC9B7U,EAAQ+U,GACRzT,EAAsByT,EAAWlV,OAGnC,IADcoB,OAAOC,aAAa4T,QAAQ,SAC9B,CAEV7T,OAAOC,aAAaC,QAAQ,QAASC,KAAKC,UAD5B,KAGhB,IAAMyX,EAAa7X,OAAOC,aAAa4T,QAAQ,UAE/C,GAAIgE,EAAY,CACd,IAAMC,EAAc3X,KAAK4T,MAAM8D,GAC/BD,EAAUE,MAEX,IAEHxW,qBAAU,WACRtB,OAAOC,aAAaC,QAClB,SAAUC,KAAKC,UAAUuX,MAE1B,CAACA,IAEJ,IAQM1W,EAAkB,SAACe,GACL2V,EAAO3E,MAAK,SAAAxL,GAAC,OAAIA,EAAEtF,KAAOF,EAAKE,OAE/C0V,EAAUD,EAAO5P,OAAO/F,KAItBqG,EAAuB,SAACnG,GAC5B0V,EAAUD,EAAOxR,QAAO,SAAAnE,GAAI,OAAIA,EAAKE,KAAOA,OAGxCoG,EAAsB,WAC1BsP,EAAU,KAGN/Q,EAAoB,SAAC3E,GACzBgD,EAAYvB,YAAYzB,GAAIiF,MAAK,SAAAzI,GAC/BoG,EAAS9D,EAAMe,KAAI,SAAAC,GAAI,OAAIA,EAAKE,KAAOA,EAAKF,EAAjB,eAA6BA,EAA7B,CAAmCI,MAAOJ,EAAKI,MAAQ,QAClFwV,EAAUD,EAAO5V,KAAI,SAAAC,GAAI,OAAIA,EAAKE,KAAOA,EAAKF,EAAjB,eAA6BA,EAA7B,CAAmCI,MAAOJ,EAAKI,MAAQ,YAIlFoU,EAAmB,SAACO,GACxBjS,EAAS9D,EAAMe,KAAI,SAAAC,GAAI,OAAIA,EAAKE,KAAO6U,EAAa7U,GAAKF,EAAO+U,MAChEa,EAAUD,EAAO5V,KAAI,SAAAC,GAAI,OAAIA,EAAKE,KAAO6U,EAAa7U,GAAKF,EAAO+U,OAGpE,OACE,6BACE,yBAAK7Y,UAAU,UACb,kBAAC,IAAD,CAAM+D,GAAG,KAAI,yBAAK/D,UAAU,UAC5B,kBAAC,IAAD,CAAM+D,GAAG,aAAY,4BAAQ/D,UAAU,yBAAlB,mBACrB,kBAAC,IAAD,CAAM+D,GAAG,kBAAiB,4BAAQ/D,UAAU,yBAAlB,8BAEhB,OAAT6B,EACC,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAMkC,GAAG,kBAAiB,4BAAQ/D,UAAU,uBAAlB,cAG5B,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAM+D,GAAG,UAAS,4BAAQ/D,UAAU,uBAAlB,UAClB,6BACE,yBAAKA,UAAU,UAAf,iBAAsC,kBAAC,IAAD,CAAM+D,GAAG,WAAW/D,UAAU,mBAAmB6B,EAAKZ,WAC5F,yBAAKjB,UAAU,UAAS,4BAAQA,UAAU,uBAAuBsE,QAAS,kBAlDpFxC,OAAOC,aAAa8X,WAAW,cAC/BhZ,EAAQ,MACRsB,EAAsB,MACtBZ,EAAQa,KAAK,UACbN,OAAOwS,SAASC,WA8CkB,oBAI9B,kBAAC,IAAD,CAAMxQ,GAAG,qBAAoB,yBAAK/D,UAAU,gBAAgByZ,EAAO7R,OAAS,GAAK,0BAAM5H,UAAU,6BAA6ByZ,EAAO7R,WAEvI,yBAAK5H,UAAU,6BACb,kBAAC,IAAD,CAAM+D,GAAG,aAAY,4BAAQ/D,UAAU,yBAAlB,mBACrB,kBAAC,IAAD,CAAM+D,GAAG,kBAAiB,4BAAQ/D,UAAU,yBAAlB,8BAChB,OAAT6B,GAAiB,kBAAC,IAAD,CAAMkC,GAAG,UAAS,4BAAQ/D,UAAU,uBAAlB,WAEtC,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAO8Z,OAAK,EAACC,KAAK,IAAI9H,OAAQ,kBAAM,kBAAC,EAAD,CAAWnP,MAAOA,EAAOC,gBAAiBA,OAC9E,kBAAC,IAAD,CAAO+W,OAAK,EAACC,KAAK,eAAe9H,OAAQ,SAACoH,GAAD,OAAW,kBAAC,GAAD,iBAAUA,EAAV,CAAiBxX,KAAMA,EAAMkB,gBAAiBA,EAAiBD,MAAOA,EAAO8D,SAAUA,EAAU0R,iBAAkBA,QACvK,kBAAC,IAAD,CAAOyB,KAAK,YAAY9H,OAAQ,kBAAM,kBAAC,GAAD,CAAUpQ,KAAMA,EAAM6G,cAAe5F,EAAOC,gBAAiBA,EAAiB4F,kBAAmBA,OACvI,kBAAC,IAAD,CAAOoR,KAAK,oBAAoB9H,OAAQ,kBAAM,kBAAC,GAAD,CAAQnP,MAAO2W,EAAQtP,qBAAsBA,EAAsBxB,kBAAmBA,EAAmByB,oBAAqBA,OAC5K,kBAAC,IAAD,CAAO2P,KAAK,iBAAiB9H,OAAQ,kBAAM,kBAAC,EAAD,CAAOpR,QAASA,OAC3D,kBAAC,IAAD,CAAOkZ,KAAK,iBAAiB9H,OAAQ,kBAAM,kBAAC,GAAD,SAC3C,kBAAC,IAAD,CAAO8H,KAAK,WAAW9H,OAAQ,kBAAOlQ,aAAa4T,QAAQ,cAAgB,kBAAC,GAAD,CAAM9T,KAAMA,EAAMhB,QAASA,IAAc,kBAAC,IAAD,CAAUkD,GAAG,SACjI,kBAAC,IAAD,CAAOgW,KAAK,SAAS9H,OAAQ,kBAAOlQ,aAAa4T,QAAQ,cAAgB,kBAAC,GAAD,MAAY,kBAAC,IAAD,CAAU5R,GAAG,SAClG,kBAAC,IAAD,CAAOgW,KAAK,eAAe9H,OAAQ,kBAAOlQ,aAAa4T,QAAQ,cAAgB,kBAAC,GAAD,MAAe,kBAAC,IAAD,CAAU5R,GAAG,SAC3G,kBAAC,IAAD,CAAOgW,KAAK,0BAA0B9H,OAAQ,kBAAOlQ,aAAa4T,QAAQ,cAAgB,kBAAC,GAAD,MAAsB,kBAAC,IAAD,CAAU5R,GAAG,Y,OCpHrIiW,IAAS/H,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEFgI,SAASC,eAAe,W","file":"static/js/main.1706da08.chunk.js","sourcesContent":["import React from 'react'\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/login`\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","let token = null\n\nconst getToken = () => token\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nexport default { getToken, setToken }\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Notification from './Notification'\nimport loginService from '../services/login'\nimport tokenService from '../services/token'\n\nconst Login = ({ setUser }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const history = useHistory()\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, email, password,\n      })\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user),\n      )\n      setUser(user)\n      tokenService.setToken(user.token)\n      setUsername('')\n      setEmail('')\n      setPassword('')\n      history.push('/')\n    } catch (exception) {\n      setErrorMessage('Väärä käyttäjätunnus/salasana')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"login-form\">\n      <h2>Kirjaudu sisään</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleLogin}>\n        <div>\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            placeholder=\"Salasana\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"login-button\">Kirjaudu</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Login\n","import React from 'react'\n\nconst FrontPageInfo = () => {\n\n  return (\n    <div className=\"frontpage-info\">\n      <h2>Kisatehtäväpankki</h2>\n      <p>Kisatehtäväpankki on arkisto,\n      johon voidaan tallettaa tehtäviä.\n      Sivustolle voi tallettaa tehtävän,\n      sekä siihen liittyvät liitetiedostot.\n      </p>\n      <p>\n        Kirjautumattomana käyttäjänä voit\n        koostaa tehtävistä kisaa varten\n        kokonaisuuksia, sekä ladata ne\n        PDF-tiedostona itsellesi. Tehtävän lisääminen \"kisakoriin\"\n        onnistuu painamalla tehtävässä esiintyvää koripainiketta,\n        ja jo mukaan otetut tehtävät löydät yläreunan koria painamalla.\n      </p>\n      <p>\n        Voit myöskin selailla tehtäviä, arvostella tehtäviä\n        ja lisätä uusia tehtäviä. Uuden tehtävän lisääminen arkistoon\n        vaatii ensin ylläpitäjän hyväksynnän uudelle tehtävälle.\n      </p>\n    </div>\n  )\n}\n\nexport default FrontPageInfo","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport FrontPageInfo from './FrontPageInfo'\n\nconst FrontPage = ({ tasks, addTaskToBasket }) => {\n  const [newTasks, setNewTasks] = useState([])\n  const [favoriteTasks, setFavoriteTasks] = useState([])\n\n  useEffect(() => {\n    setNewTasks([...tasks].sort(compareCreated).slice(0, 5))\n    setFavoriteTasks([...tasks].sort(compareRatings).slice(0, 5))\n  }, [tasks])\n\n  const compareCreated = (a, b) => {\n    return b.created.localeCompare(a.created)\n  }\n\n  const compareRatings = (a, b) => {\n    return b.ratingsAVG - a.ratingsAVG\n  }\n\n  return (\n    <div className=\"frontpage\">\n      <h1>Tervetuloa Kisatehtäväpankkiin!</h1>\n      <div className=\"task-list frontpage-container\">\n        <FrontPageInfo />\n        <div className=\"new-favorite-lists\">\n          <div className=\"new-list\">\n            <div className=\"image-on-background\">\n              <h2>Uusimmat tehtävät</h2>\n              <div className=\"task-list-title frontpage-item\">\n                <span >Tehtävän nimi</span>\n                <span>Sarja</span>\n                <span>Kategoria</span>\n                <span></span>\n              </div>\n            </div>\n            {newTasks.map((task) => (\n              <Link className=\"no-underline\" to={`/tehtava/${task.id}`}>\n                <div className=\"task-list-item frontpage-item new-item\" key={task.id}>\n                  <span className=\"span-bigger\">\n                    <p className=\"bigger-task-name-frontpage\">{task.name}</p>\n                    <p>Katselukertoja: {task.views}</p>\n                  </span>\n                  <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n                  <span>{task.category && task.category.name}</span>\n                  <span><div className=\"black-basket\" onClick={() => addTaskToBasket(task)} /></span>\n                </div>\n              </Link>\n\n            ))}\n          </div>\n\n          <div className=\"favorite-list\">\n            <div className=\"image-on-background\">\n              <h2>Suosituimmat tehtävät</h2>\n              <div className=\"task-list-title frontpage-item\">\n                <span>Tehtävän nimi</span>\n                <span>Sarja</span>\n                <span>Kategoria</span>\n                <span></span>\n              </div>\n            </div>\n            {favoriteTasks.map((task) => (\n              <Link className=\"no-underline\" to={`/tehtava/${task.id}`}>\n\n                <div className=\"task-list-item frontpage-item favorite-item\" key={task.id}>\n                  <span className=\"span-bigger\">\n                    <p className=\"bigger-task-name-frontpage\">{task.name}</p>\n                    <p>Katselukertoja: {task.views}</p>\n                  </span>\n                  <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n                  <span>{task.category && task.category.name}</span>\n                  <span><div className=\"black-basket\" onClick={() => addTaskToBasket(task)} /></span>\n                </div>\n              </Link>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default FrontPage\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/task`\nconst baseUrlPending = `${process.env.REACT_APP_API_URL}/task/pending`\n\n\nconst getTasks = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getPendingTasks = async () => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  const response = await axios.get(baseUrlPending, config)\n  return response.data\n}\n\nconst getSearchedTasks = async (search) => {\n  const response = await axios.post(`${baseUrl}/search`, search)\n  return response.data\n}\n\nconst getOneTask = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst addtask = async (task) => {\n  let config = null\n  const token = tokenService.getToken()\n\n  if (token) {\n    config = {\n      headers: { Authorization: token }\n    }\n  }\n\n  const response = await axios.post(baseUrl, task, config)\n  return response.data\n}\n\nconst updateTask = async (task) => {\n  let config = null\n  const token = tokenService.getToken()\n\n  if (token) {\n    config = {\n      headers: { Authorization: token },\n    }\n  }\n\n  const response = await axios.put(`${baseUrl}/${task.id}`, task, config)\n  return response.data\n}\n\nconst deleteTask = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nconst acceptTask = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  const response = await axios.put(`${baseUrl}/${id}/accept`, id, config)\n  return response.data\n}\n\nconst addRating = async (id, rating) => {\n\n  const response = await axios.post(`${baseUrl}/${id}/rate`, rating)\n  return response.data\n}\n\n\nconst updateViews = async (id) => {\n  const response = await axios.post(`${baseUrl}/${id}/views`)\n  return response.data\n}\n\nexport default { addtask, getTasks, getOneTask, getSearchedTasks, updateTask, deleteTask, getPendingTasks, acceptTask, updateViews, addRating }\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/series`\n\nconst getSeries = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addSeries = async (series) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, series, config)\n  return response.data\n}\n\nconst editSerie = async (serie) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${serie.id}`, serie, config)\n  return response.data\n\n}\n\nconst deleteSerie = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addSeries, getSeries, deleteSerie, editSerie }\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/rule`\n\nconst getRules = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addRule = async (rule) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, rule, config)\n  return response.data\n}\n\nconst editRule = async (rule) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${rule.id}`, rule, config)\n  return response.data\n\n}\n\nconst deleteRule = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addRule, getRules, editRule, deleteRule }\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/category`\n\nconst getCategories = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addCategory = async (cat) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, cat, config)\n  return response.data\n}\n\nconst editCategory = async (category) => {\n  console.log(category)\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${category.id}`, category, config)\n  return response.data\n\n}\n\nconst deleteCategory = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\n\nexport default { addCategory, getCategories, editCategory, deleteCategory }\n","import React, { useState } from 'react'\nimport taskService from '../services/task'\nimport Notification from './Notification'\n\nconst Search = ({ setTasks, setAllTasks }) => {\n\n  const [search, setSearch] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const handleSearch = async (event) => {\n    event.preventDefault()\n    try {\n      const response = await taskService.getSearchedTasks({ search })\n      setTasks(response)\n      setAllTasks(response)\n    } catch (exception) {\n      setErrorMessage('Haku ei onnistunut')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"search\">\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleSearch} className=\"search-form\">\n        <input\n          className=\"search-input\"\n          type=\"text\"\n          defaultValue=''\n          name=\"search\"\n          placeholder=\"Hakutermi\"\n          onChange={({ target }) => setSearch(target.value)}\n        />\n        <button type=\"submit\" className=\"search-tasks-button\">Hae</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Search","import React, { useState, useEffect, Fragment } from 'react'\nimport Select from 'react-select'\n\n\nconst Filter = ({ allTasks, categories, rules, series, tasks, setTasks }) => {\n\n  const [selectedCategory, setSelectedCategory] = useState([])\n  const [selectedSeries, setSelectedSeries] = useState([])\n  const [selectedRules, setSelectedRules] = useState('')\n\n\n  useEffect(() => {\n    if (selectedSeries.length > 0 && selectedCategory.length > 0 && selectedRules) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedSeries.length > 0 && selectedCategory.length > 0) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedSeries.length > 0 && selectedRules) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedCategory.length > 0 && selectedRules) {\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id) && task.rules.id === selectedRules.id))\n    } else if (selectedSeries.length > 0) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedCategory.length > 0) {\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id)))\n    } else if (selectedRules) {\n      setTasks(allTasks.filter(task => task.rules.id === selectedRules.id))\n    } else {\n      setTasks(allTasks)\n    }\n  }, [selectedCategory, selectedSeries, selectedRules])\n\n  const handleSeriesFiltering = (series) => {\n    if (series && series.length > 0) {\n      setSelectedSeries(series.map(s => s.id))\n    } else {\n      setSelectedSeries([])\n      setTasks(allTasks)\n    }\n  }\n\n  const handleCategoryFiltering = (category) => {\n    if (category && category.length > 0) {\n      setSelectedCategory(category.map(c => c.id))\n    } else {\n      setSelectedCategory([])\n      setTasks(allTasks)\n    }\n  }\n\n  const handleRuleFiltering = (rules) => {\n    if (rules) {\n      setSelectedRules(rules)\n    } else {\n      setSelectedRules('')\n      setTasks(allTasks)\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className=\"filter\">\n        <Select\n          name=\"filter-series\"\n          getOptionLabel={option => `${option.name}`}\n          getOptionValue={option => `${option.id}`}\n          onChange={handleSeriesFiltering}\n          options={series}\n          isClearable={true}\n          placeholder={\"Sarja\"}\n          isMulti={true}\n        />\n      </div>\n\n      <div className=\"filter\">\n        <Select\n          name=\"filter-category\"\n          getOptionLabel={option => `${option.name}`}\n          getOptionValue={option => `${option.id}`}\n          onChange={handleCategoryFiltering}\n          options={categories}\n          isClearable={true}\n          placeholder={\"Kategoria\"}\n          isMulti={true}\n        />\n      </div>\n\n      <div className=\"filter\">\n        <Select\n          name=\"filter-rules\"\n          getOptionLabel={option => `${option.name}`}\n          getOptionValue={option => `${option.id}`}\n          onChange={handleRuleFiltering}\n          options={rules}\n          isClearable={true}\n          placeholder={\"Säännöt\"}\n        />\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Filter","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport taskService from '../services/task'\nimport seriesService from '../services/series'\nimport ruleService from '../services/rule'\nimport categoryService from '../services/category'\nimport Notification from './Notification'\nimport Search from './Search'\nimport StarRatings from 'react-star-ratings'\nimport Filter from './Filter'\nimport Moment from 'react-moment'\n\nconst TaskList = ({ user, originalTasks, addTaskToBasket, handleUpdateViews }) => {\n  const [tasks, setTasks] = useState(originalTasks)\n  const [allTasks, setAllTasks] = useState(originalTasks)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [categories, setCategories] = useState([])\n  const [rules, setRules] = useState([])\n  const [seriess, setSeriess] = useState([])\n\n  useEffect(() => {\n    categoryService.getCategories().then((response) => {\n      setCategories(response)\n    })\n\n    seriesService.getSeries().then((response) => {\n      setSeriess(response)\n    })\n\n    ruleService.getRules().then((response) => {\n      setRules(response)\n    })\n  }, [])\n\n  useEffect(() => {\n    setTasks(originalTasks)\n    setAllTasks(originalTasks)\n  }, [originalTasks])\n\n\n\n  const handleDelete = async (task) => {\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\n        await taskService.deleteTask(task.id)\n        setTasks(tasks.filter(t => t.id !== task.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSortByNameAsc = () => {\n    setTasks(tasks.sort(compareNamesAsc).concat([]))\n  }\n\n  const handleSortByNameDesc = () => {\n    setTasks(tasks.sort(compareNamesDesc).concat([]))\n  }\n\n  const handleSortByRatingsAsc = () => {\n    setTasks(tasks.sort(compareRatingsAsc).concat([]))\n  }\n\n  const handleSortByRatingsDesc = () => {\n    setTasks(tasks.sort(compareRatingsDesc).concat([]))\n  }\n\n  const handleSortByCreatedAsc = () => {\n    setTasks(tasks.sort(compareCreatedAsc).concat([]))\n  }\n\n  const handleSortByCreatedDesc = () => {\n    setTasks(tasks.sort(compareCreatedDesc).concat([]))\n  }\n\n  const compareNamesAsc = (a, b) => {\n    return b.name.localeCompare(a.name)\n  }\n\n  const compareNamesDesc = (a, b) => {\n    return a.name.localeCompare(b.name)\n  }\n\n  const compareRatingsAsc = (a, b) => {\n    return a.ratingsAVG - b.ratingsAVG\n  }\n\n  const compareRatingsDesc = (a, b) => {\n    return b.ratingsAVG - a.ratingsAVG\n  }\n\n  const compareCreatedAsc = (a, b) => {\n    return a.created.localeCompare(b.created)\n  }\n\n  const compareCreatedDesc = (a, b) => {\n    return b.created.localeCompare(a.created)\n  }\n\n  return (\n    <div className=\"task-list\">\n      <h1>Kisatehtäväpankki</h1>\n      <div className=\"search-filter-container\">\n        <Search\n          setTasks={setTasks}\n          setAllTasks={setAllTasks}\n        />\n        <Filter\n          tasks={tasks}\n          allTasks={allTasks}\n          categories={categories}\n          rules={rules}\n          series={seriess}\n          setTasks={setTasks}\n        />\n      </div>\n\n      <Notification message={errorMessage} />\n      {tasks && tasks.length > 0 &&\n        <div className=\"task-list-title\">\n          <span className=\"arrow-inline\">Tehtävän nimi <span className=\"arrow-container\"><i className=\"name-arrow-up\" onClick={handleSortByNameAsc} /><i className=\"name-arrow-down\" onClick={handleSortByNameDesc} /></span></span>\n          <span>Sarja</span>\n          <span>Kategoria</span>\n          <span className=\"arrow-inline\">Arvostelu <span className=\"arrow-container\"><i className=\"rating-arrow-up\" onClick={handleSortByRatingsAsc} /><i className=\"rating-arrow-down\" onClick={handleSortByRatingsDesc} /></span></span>\n          <span className=\"arrow-inline\">Lisätty <span className=\"arrow-container\"><i className=\"created-arrow-up\" onClick={handleSortByCreatedAsc} /><i className=\"created-arrow-down\" onClick={handleSortByCreatedDesc} /></span></span>\n          {user && <span></span>}\n          <span></span>\n        </div>\n      }\n      {tasks.map((task) => (\n        <Link className=\"no-underline\" to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task.id)}>\n          <div className=\"task-list-item\" key={task.id}>\n            <span className=\"span-bigger\">\n              <p className=\"bigger-task-name\">{task.name}</p>\n              <p>Katselukertoja: {task.views}</p>\n            </span>\n            <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n            <span>{task.category && task.category.name}</span>\n            <span>\n              <StarRatings\n                rating={task.ratingsAVG}\n                starRatedColor=\"#f0e105\"\n                starDimension=\"20px\"\n                starSpacing=\"10px\"\n              />\n            </span>\n            {task.created && <span><Moment format=\"DD.MM.YYYY HH:mm\">{task.created}</Moment></span>}\n            {user && <span className=\"task-list-delete\"><button className=\"delete-button\" onClick={() => handleDelete(task)}>Poista</button></span>}\n            <span><div className=\"black-basket\" onClick={() => addTaskToBasket(task)} /></span>\n          </div>\n        </Link>\n      ))}\n\n    </div>\n\n  )\n}\n\nexport default TaskList\n\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Notification from './Notification'\n\nconst Basket = ({ tasks, removeTaskFromBasket, handleUpdateViews, removeAllFromBasket }) => {\n\n  return (\n    <div className=\"task-list\">\n      <h2 className=\"basket-title\">Kisaan valitut tehtävät</h2>\n      {tasks && tasks.length > 0 && <button className=\"basket-delete-all\" onClick={removeAllFromBasket}>Poista kaikki</button>}\n\n      {tasks && tasks.length === 0 && <div className=\"empty-basket\">Ei valittuja tehtäviä</div>}\n\n      {tasks && tasks.length > 0 &&\n        <div className=\"task-list-title\">\n          <span>Tehtävän nimi</span>\n          <span>Sarja</span>\n          <span>Kategoria</span>\n          <span>Liitetiedostot</span>\n          <span></span>\n        </div>\n      }\n      {tasks.map((task) => (\n        <div className=\"task-list-item\" key={task.id}>\n          <div className=\"delete-task-from-basket-mobile\" onClick={() => removeTaskFromBasket(task.id)} />\n          <span>\n            <Link to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task.id)}>\n              {task.name}\n            </Link>\n            <p>Katselukertoja: {task.views}</p>\n          </span>\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n          <span>{task.category && task.category.name}</span>\n          <span>\n            {task.files && task.files.map((file) => (\n                <div key={file}>\n                  <a href={`https://kisapankki.blob.core.windows.net/files/${file}`}>\n                    {file.substring(file.indexOf('-') + 1, file.length)}\n                  </a>\n                </div>\n              ))}\n          </span>\n          <span className=\"delete-task-from-basket\" onClick={() => removeTaskFromBasket(task.id)} />\n        </div>\n      ))}\n    </div>\n\n  )\n}\n\nexport default Basket\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/user`\n\nconst getUsers = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addUser = async (credentials) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() }\n  }\n  const response = await axios.post(baseUrl, credentials, config)\n  return response.data\n}\n\nconst editUser = async (user) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() }\n  }\n\n  const response = await axios.put(baseUrl, user, config)\n  return response.data\n}\n\nexport default { addUser, getUsers, editUser }\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst AddAdmin = () => {\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(null)\n  const [emailErrorMessage, setEmailErrorMessage] = useState(null)\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [users, setUsers] = useState([])\n  const [email, setEmail] = useState('')\n  const [allowNotifications, setAllowNotifications] = useState(true)\n\n  useEffect(() => {\n    userService.getUsers().then((response) => {\n      setUsers(response)\n    })\n  }, [])\n\n  const handleAddAdmin = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setUsernameErrorMessage(null)\n    setPasswordErrorMessage(null)\n    setEmailErrorMessage(null)\n    if (name.length < 3) {\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\n    }\n    if (username.length < 3) {\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\n    }\n    if (password.length < 3) {\n      setPasswordErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\n    }\n    if (users.some((user) => (user.username === username))) {\n      setUsernameErrorMessage('Käyttäjätunnus on varattu')\n    }\n\n    if (name.length < 3 || username.length < 3 || password.length < 3\n      || users.some((user) => (user.username === username))) {\n      return\n    }\n    try {\n      await userService.addUser({\n        name, username, email, password, allowNotifications\n      })\n      setName('')\n      setUsername('')\n      setEmail('')\n      setPassword('')\n      setAllowNotifications(true)\n      setMessage('Ylläpitäjä lisätty!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setErrorMessage('Lisääminen epäonnistui')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"signup-form\">\n      <h2>Lisää ylläpitäjä</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleAddAdmin}>\n        <div className=\"Testi\">\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={usernameErrorMessage} type=\"error\" />\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={emailErrorMessage} type=\"error\" />\n          <input\n            className=\"email\"\n            type=\"email\"\n            value={email}\n            name=\"email\"\n            placeholder=\"Sähköpostiosoite\"\n            onChange={({ target }) => setEmail(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={passwordErrorMessage} type=\"error\" />\n          <input\n            className=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            placeholder=\"Salasana\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <div>\n          <label>\n            Vastaanota ilmoituksia:\n            <div className=\"admin-radio\" onChange={({ target }) => setAllowNotifications(target.value)}>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"notifications\"\n                  value={true}\n                  defaultChecked\n                />\n                Kyllä\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"notifications\"\n                  value={false}\n                />\n                Ei\n              </label>\n            </div>\n          </label>\n        </div>\n        <button type=\"submit\" className=\"signup-button\">Lisää</button>\n      </form>\n    </div>\n  )\n}\n\nexport default AddAdmin\n","import React, { useState, Fragment } from 'react'\nimport Notification from './Notification'\nimport ruleService from '../services/rule'\nimport Select from 'react-select'\n\nconst Rule = ({ rules, setRules, categories }) => {\n  const [newRuleName, setNewRuleName] = useState('')\n  const [modifiedRuleName, setModifiedRuleName] = useState('')\n  const [modifiedRuleId, setModifiedRuleId] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n  const [acceptedCategories, setAcceptedCategories] = useState([])\n  const [modifiedCategories, setModifiedCategories] = useState([])\n  const [isClearable, setIsClearable] = useState(true)\n\n  const handleRuleAdd = async (event) => {\n    event.preventDefault()\n    const newCategories = acceptedCategories\n    try {\n      const addedRule = await ruleService.addRule({\n        rules: newRuleName, acceptedCategories: acceptedCategories.map(category => category.id)\n      })\n      setNewRuleName('')\n      setAcceptedCategories([])\n      setRules(rules.concat({ ...addedRule, acceptedCategories: newCategories }))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleRuleDelete = async (rule) => {\n    try {\n      if (window.confirm(`Haluatko poistaa säännön: ${rule.name}`)) {\n        await ruleService.deleteRule(rule.id)\n        setRules(rules.filter(r => r.id !== rule.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleRuleModify = async (event) => {\n    event.preventDefault()\n    const modifiedRule = { id: modifiedRuleId, name: modifiedRuleName, acceptedCategories: modifiedCategories }\n    try {\n      await ruleService.editRule({ id: modifiedRuleId, name: modifiedRuleName, acceptedCategories: modifiedCategories.map(category => category.id) })\n      setModifyVisible(false)\n      setRules(rules.map(rule => rule.id !== modifiedRule.id ? rule : modifiedRule))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (rule) => {\n    setModifyVisible(true)\n    setModifiedRuleId(rule.id)\n    setModifiedRuleName(rule.name)\n    setModifiedCategories(rule.acceptedCategories)\n  }\n\n  const handleAddCategories = (categories) => {\n    setAcceptedCategories(categories)\n  }\n\n  const handleModifyCategories = (categories) => {\n    setModifiedCategories(categories)\n  }\n\n  return (\n    <div className=\"rule-form\">\n      <Notification message={errorMessage} type=\"error\" />\n\n      {rules && rules.map((rule) => (\n        <div className=\"rule-list-item\" key={rule.id}>\n          {modifyVisible && modifiedRuleId === rule.id ?\n            <div className=\"rule-form-item\">\n              <form onSubmit={handleRuleModify}>\n                <div className=\"item-modify\">\n                  <input\n                    className=\"rule\"\n                    type=\"text\"\n                    value={modifiedRuleName}\n                    name=\"Category\"\n                    onChange={({ target }) => setModifiedRuleName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"rule-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                </div>\n                <div className=\"modify-acceptedCategories\">\n                  <Select\n                    name=\"accepted-categories\"\n                    value={modifiedCategories}\n                    getOptionLabel={option => `${option.name}`}\n                    getOptionValue={option => `${option.id}`}\n                    onChange={handleModifyCategories}\n                    options={categories}\n                    isClearable={isClearable}\n                    placeholder={\"Säännön kategoriat\"}\n                    isMulti={true}\n                  />\n                </div>\n              </form>\n            </div>\n          :\n          <Fragment>\n            <p className=\"item-name\">{rule.name}</p>\n            <div className=\"item-buttons\">\n              <button onClick={() => handleShowModify(rule)} className=\"modify-button\">Muokkaa</button>\n              <button onClick={() => handleRuleDelete(rule)} className=\"delete-button\">Poista</button>\n            </div>\n            <div className=\"break\"></div>\n            <div className=\"accepted-categories-list\">\n              {rule.acceptedCategories && rule.acceptedCategories.map(category => (\n                  <span key={category.id}>{category.name} </span>\n                ))}\n            </div>\n          </Fragment>\n          }\n        </div>))\n      }\n\n      <form onSubmit={handleRuleAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"rule\"\n            type=\"text\"\n            value={newRuleName}\n            name=\"Rules\"\n            placeholder=\"Uusi sääntö\"\n            onChange={({ target }) => setNewRuleName(target.value)}\n          />\n          <button type=\"submit\" className=\"rule-add-button\">Lisää</button>\n        </div>\n\n        <div className=\"add-acceptedCategories\">\n          <Select\n            name=\"accepted-categories\"\n            value={acceptedCategories}\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleAddCategories}\n            options={categories}\n            isClearable={isClearable}\n            placeholder={\"Uuden säännön kategoriat\"}\n            isMulti={true}\n          />\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\n\nexport default Rule\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/language`\n\nconst getLanguages = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addLanguage = async (language) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, language, config)\n  return response.data\n}\n\nconst editLanguage = async (language) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.put(`${baseUrl}/${language.id}`, language, config)\n  return response.data\n\n}\n\n\nconst deleteLanguage = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addLanguage, getLanguages, deleteLanguage, editLanguage }\n","import React, { useState, Fragment } from 'react'\nimport Notification from './Notification'\nimport languageService from '../services/language'\n\nconst Language = ({ languages, setLanguages }) => {\n  const [languageName, setLanguageName] = useState('')\n  const [modifiedLanguageName, setModifiedLanguageName] = useState('')\n  const [modifiedLanguageId, setModifiedLanguageId] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  const handleLanguageAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedLanguage = await languageService.addLanguage({\n        language: languageName,\n      })\n      setLanguageName('')\n      setLanguages(languages.concat(addedLanguage))\n    } catch (exception) {\n      setErrorMessage('Kielen lisääminen ei onnistunut')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLanguageDelete = async (language) => {\n    try {\n      if (window.confirm(`Haluatko poistaa kielen: ${language.name}`)) {\n        await languageService.deleteLanguage(language.id)\n        setLanguages(languages.filter(l => l.id !== language.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLanguageModify = async (event) => {\n    event.preventDefault()\n    const modifiedLanguage = { id: modifiedLanguageId, name: modifiedLanguageName }\n    try {\n      await languageService.editLanguage(modifiedLanguage)\n      setModifyVisible(false)\n      setLanguages(languages.map(language => language.id !== modifiedLanguage.id ? language : modifiedLanguage))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (language) => {\n    setModifyVisible(true)\n    setModifiedLanguageId(language.id)\n    setModifiedLanguageName(language.name)\n  }\n\n  return (\n    <div className=\"language-form\">\n      <Notification message={errorMessage} type=\"error\" />\n\n      {languages && languages.map((language) => (\n        <div className=\"language-list-item\" key={language.id}>\n          {modifyVisible && modifiedLanguageId === language.id ?\n            <div className=\"language-form-item\">\n              <form onSubmit={handleLanguageModify} >\n                <div className=\"item-modify\">\n                  <input\n                    className=\"language\"\n                    type=\"text\"\n                    value={modifiedLanguageName}\n                    name=\"Language\"\n                    onChange={({ target }) => setModifiedLanguageName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"language-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n            :\n            <Fragment>\n              <p className=\"item-name\">{language.name}</p>\n              <div className=\"item-buttons\">\n                <button onClick={() => handleShowModify(language)} className=\"modify-button\">Muokkaa</button>\n                <button onClick={() => handleLanguageDelete(language)} className=\"delete-button\">Poista</button>\n              </div>\n            </Fragment>\n            }\n        </div>))\n      }\n\n      <form onSubmit={handleLanguageAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"language\"\n            type=\"text\"\n            value={languageName}\n            name=\"Language\"\n            placeholder=\"Uusi kieli\"\n            onChange={({ target }) => setLanguageName(target.value)}\n          />\n          <button type=\"submit\" className=\"language-add-button\">Lisää</button>\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\n\nexport default Language\n","import React, { useState, Fragment } from 'react'\nimport { CirclePicker } from 'react-color'\nimport Notification from './Notification'\nimport seriesService from '../services/series'\n\nconst Series = ({ series, setSeries }) => {\n  const [name, setName] = useState('')\n  const [modifiedSerieName, setModifiedSerieName] = useState('')\n  const [modifiedSerieId, setModifiedSerieId] = useState('')\n  const [modifiedSerieColor, setModifiedSerieColor] = useState('')\n  const [color, setColor] = useState('#ffffff')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  const handleSeriesAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedSerie = await seriesService.addSeries({ name, color })\n      setName('')\n      setColor('')\n      setSeries(series.concat(addedSerie))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSerieDelete = async (serie) => {\n    try {\n      if (window.confirm(`Haluatko poistaa sarjan: ${serie.name}`)) {\n        await seriesService.deleteSerie(serie.id)\n        setSeries(series.filter(s => s.id !== serie.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSerieModify = async (event) => {\n    event.preventDefault()\n    const modifiedSerie = { id: modifiedSerieId, name: modifiedSerieName, color: modifiedSerieColor }\n    try {\n      await seriesService.editSerie(modifiedSerie)\n      setModifyVisible(false)\n      setSeries(series.map(serie => serie.id !== modifiedSerie.id ? serie : modifiedSerie))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (serie) => {\n    setModifyVisible(true)\n    setModifiedSerieId(serie.id)\n    setModifiedSerieName(serie.name)\n    setModifiedSerieColor(serie.color)\n  }\n\n  return (\n    <div className=\"series-form\">\n      <Notification message={errorMessage} type=\"error\" />\n\n      {series && series.map((serie) => (\n        <div className=\"serie-list-item\" key={serie.id}>\n          {modifyVisible && modifiedSerieId === serie.id ?\n            <div className=\"serie-form-item\">\n              <form onSubmit={handleSerieModify} >\n                <div className=\"item-modify\">\n                  <input\n                    className=\"serie\"\n                    type=\"text\"\n                    value={modifiedSerieName}\n                    name=\"Serie\"\n                    onChange={({ target }) => setModifiedSerieName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"serie-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                  <div className=\"color-picker\">\n                    <CirclePicker\n                      color={modifiedSerieColor}\n                      onChangeComplete={color => setModifiedSerieColor(color.hex)}\n                      colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\n                        \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\n                    />\n                  </div>\n                </div>\n              </form>\n            </div>\n          :\n          <Fragment>\n            <p className=\"item-name\"><span>{serie.name}</span><span style={{ backgroundColor: serie.color, display: 'inline-block', borderRadius: '50%', height: '27px', width: '27px', marginLeft: '5px' }} /></p>\n            <div className=\"item-buttons\">\n              <button onClick={() => handleShowModify(serie)} className=\"modify-button\">Muokkaa</button>\n              <button onClick={() => handleSerieDelete(serie)} className=\"delete-button\">Poista</button>\n            </div>\n          </Fragment>\n          }\n        </div>))\n      }\n\n      <form onSubmit={handleSeriesAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Uusi sarja\"\n            onChange={({ target }) => setName(target.value)}\n          />\n          <button type=\"submit\" className=\"series-submit-button\">Lisää</button>\n        </div>\n        <div className=\"color-picker\">\n          <CirclePicker\n            color={color}\n            onChangeComplete={color => setColor(color.hex)}\n            colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\n              \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\n          />\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\nexport default Series\n","import React, { useState, Fragment } from 'react'\nimport Notification from './Notification'\nimport categoryService from '../services/category'\n\nconst Category = ({ categories, setCategories }) => {\n  const [newCategoryName, setNewCategoryName] = useState('')\n  const [modifiedCategoryName, setModifiedCategoryName] = useState('')\n  const [modifiedCategoryId, setModifiedCategoryId] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  const handleCategoryAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedCategory = await categoryService.addCategory({\n        category: newCategoryName\n      })\n      setNewCategoryName('')\n      setCategories(categories.concat(addedCategory))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCategoryDelete = async (category) => {\n    try {\n      if (window.confirm(`Haluatko poistaa kategorian: ${category.name}`)) {\n        await categoryService.deleteCategory(category.id)\n        setCategories(categories.filter(c => c.id !== category.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCategoryModify = async (event) => {\n    event.preventDefault()\n    const modifiedCategory = { id: modifiedCategoryId, name: modifiedCategoryName }\n    try {\n      await categoryService.editCategory(modifiedCategory)\n      setModifyVisible(false)\n      setCategories(categories.map(category => category.id !== modifiedCategory.id ? category : modifiedCategory))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (category) => {\n    setModifyVisible(true)\n    setModifiedCategoryId(category.id)\n    setModifiedCategoryName(category.name)\n  }\n\n  return (\n    <div className=\"category-form\" >\n      <Notification message={errorMessage} type=\"error\" />\n\n      {categories && categories.map((category) => (\n        <div className=\"category-list-item\" key={category.id}>\n          {modifyVisible && modifiedCategoryId === category.id ?\n            <div className=\"category-form-item\">\n              <form onSubmit={handleCategoryModify} >\n                <div className=\"item-modify\">\n                  <input\n                    className=\"category\"\n                    type=\"text\"\n                    value={modifiedCategoryName}\n                    name=\"Category\"\n                    onChange={({ target }) => setModifiedCategoryName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"category-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n            :\n            <Fragment>\n              <p className=\"item-name\">{category.name}</p>\n              <div className=\"item-buttons\">\n                <button onClick={() => handleShowModify(category)} className=\"modify-button\">Muokkaa</button>\n                <button onClick={() => handleCategoryDelete(category)} className=\"delete-button\">Poista</button>\n              </div>\n            </Fragment>\n          }\n        </div>))\n      }\n\n      <form onSubmit={handleCategoryAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"category\"\n            type=\"text\"\n            value={newCategoryName}\n            name=\"Category\"\n            placeholder=\"Uusi kategoria\"\n            onChange={({ target }) => setNewCategoryName(target.value)}\n          />\n          <button type=\"submit\" className=\"category-add-button\">Lisää</button>\n        </div>\n      </form>\n    </div>\n\n  )\n}\n\nexport default Category\n","import React, { useState, useEffect, Fragment } from 'react'\nimport Rule from './Rule'\nimport Language from './Language'\nimport Series from './Series'\nimport Category from './Category'\nimport ruleService from '../services/rule'\nimport seriesService from '../services/series'\nimport languageService from '../services/language'\nimport categoryService from '../services/category'\n\nconst AddTaskDropdown = () => {\n  const [rules, setRules] = useState([])\n  const [categories, setCategories] = useState([])\n  const [languages, setLanguages] = useState([])\n  const [series, setSeries] = useState([])\n  const [showCategories, setShowCategories] = useState(false)\n  const [showRules, setShowRules] = useState(false)\n  const [showLanguages, setShowLanguages] = useState(false)\n  const [showSeries, setShowSeries] = useState(false)\n\n  useEffect(() => {\n    ruleService.getRules().then((response) => {\n      setRules(response)\n    })\n    categoryService.getCategories().then((response) => {\n      setCategories(response)\n    })\n    seriesService.getSeries().then((response) => {\n      setSeries(response)\n    })\n    languageService.getLanguages().then((response) => {\n      setLanguages(response)\n    })\n  }, [])\n\n  return (\n    <div className=\"crls-container\">\n      <div className=\"task-types-menu\">\n        {showSeries ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowSeries(!showSeries)}>Sulje sarjat</button>\n            <Series series={series} setSeries={setSeries} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowSeries(!showSeries)}>Sarjat</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showRules ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowRules(!showRules)}>Sulje säännöt</button>\n            <Rule rules={rules} setRules={setRules} categories={categories} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowRules(!showRules)}>Säännöt</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showCategories ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowCategories(!showCategories)}>Sulje kategoriat</button>\n            <Category categories={categories} setCategories={setCategories} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowCategories(!showCategories)}>Kategoriat</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showLanguages ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowLanguages(!showLanguages)}>Sulje kielet</button>\n            <Language languages={languages} setLanguages={setLanguages} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowLanguages(!showLanguages)}>Kielet</button>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default AddTaskDropdown\n","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/file`\n\nconst updateFiles = async (files) => {\n  const config = {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }\n\n  const response = await axios.post(baseUrl, files, config)\n  return response.data\n}\n\nexport default { updateFiles }\n","import React from 'react'\nimport MarkdownIt from 'markdown-it'\nimport MdEditor from 'react-markdown-editor-lite'\nimport 'react-markdown-editor-lite/lib/index.css'\n\nconst MDEditor = ({ setText, setMD, value }) => {\n  const mdParser = new MarkdownIt()\n\n  const handleEditorChange = ({ html, text }) => {\n    setText(html)\n    setMD(text)\n  }\n\n  return (\n    <MdEditor\n      value={value}\n      renderHTML={(text) => mdParser.render(text)}\n      onChange={handleEditorChange}\n    />\n  )\n}\n\nexport default MDEditor\n\n\n\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport taskService from '../services/task'\nimport fileService from '../services/file'\nimport ruleService from '../services/rule'\nimport seriesService from '../services/series'\nimport languageService from '../services/language'\nimport MDEditor from './MDEditor'\nimport Dropzone from 'react-dropzone'\n\nconst AddTask = () => {\n\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [name, setName] = useState('')\n  const [assignmentText, setAssignmentText] = useState('')\n  const [gradingScale, setGradingScale] = useState('')\n  const [supervisorInstructions, setSupervisorInstructions] = useState('')\n  const [assignmentTextMD, setAssignmentTextMD] = useState('')\n  const [gradingScaleMD, setGradingScaleMD] = useState('')\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState('')\n  const [rules, setRules] = useState([])\n  const [rule, setRule] = useState('')\n  const [categories, setCategories] = useState([])\n  const [category, setCategory] = useState('')\n  const [seriess, setSeriess] = useState([])\n  const [series, setSeries] = useState([])\n  const [languages, setLanguages] = useState([])\n  const [language, setLanguage] = useState('')\n  const [creatorName, setCreatorName] = useState('')\n  const [creatorEmail, setCreatorEmail] = useState('')\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\n  const [files, setFiles] = useState([])\n\n  useEffect(() => {\n    ruleService.getRules().then(response => {\n      setRules(response)\n    })\n    seriesService.getSeries().then(response => {\n      setSeriess(response)\n    })\n    languageService.getLanguages().then(response => {\n      setLanguages(response)\n    })\n  }, [])\n\n  const handleRuleChange = (e) => {\n    setRule(e.target.value)\n    setCategory('')\n    if (e.target.value) {\n      const foundRule = rules.find(r => r.id === e.target.value)\n      setCategories(foundRule.acceptedCategories)\n    } else {\n      setCategories([])\n    }\n  }\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value)\n  }\n\n  const handleSeriesChange = (e) => {\n    let options = e.target.options\n    let values = []\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected && options[i].value !== '') {\n        values.push(options[i].value)\n      }\n    }\n    setSeries(values)\n  }\n\n  const handleLanguageChange = (e) => {\n    setLanguage(e.target.value)\n  }\n\n  const handleAddTask = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setAssignmentTextErrorMessage(null)\n    setCreatorNameErrorMessage(null)\n    setCreatorEmailErrorMessage(null)\n    setDropDownErrorMessage(null)\n    if (name.length < 1) {\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\n    }\n    if (assignmentText.length < 1) {\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\n    }\n    if (creatorName.length < 1) {\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\n    }\n    if (creatorEmail.length < 1) {\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\n    }\n    if (language === '' || rule === '' || series === '' || category === '') {\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\n    }\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\n            || language === '' || rule === '' || series === '' || category === '') {\n      return\n    }\n    setAssignmentText(JSON.stringify(assignmentText))\n    setGradingScale(JSON.stringify(gradingScale))\n    setSupervisorInstructions(JSON.stringify(supervisorInstructions))\n\n    let formData = new FormData()\n\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n          formData.append('filesToAdd', files[i], files[i].name)\n      }\n    }\n\n    let addedFiles = []\n\n    try {\n      addedFiles = await fileService.updateFiles(formData)\n      await taskService.addtask({\n        name, rule, category, series,\n        language, assignmentText, gradingScale,\n        creatorName, creatorEmail, supervisorInstructions,\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD,\n        files: addedFiles\n      })\n      setName('')\n      setRule('')\n      setCategory('')\n      setSeries('')\n      setLanguage('')\n      setAssignmentText('')\n      setGradingScale('')\n      setCreatorEmail('')\n      setCreatorName('')\n      setSupervisorInstructions('')\n      setMessage('Tehtävä lisätty!')\n      setTimeout(() => {\n        setMessage(null)\n        window.location.reload()\n      }, 2000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const onDrop = (newFiles) => {\n    setFiles(files.concat(newFiles))\n  }\n\n  const handleDeleteFile = (e, name) => {\n    e.stopPropagation()\n    setFiles(files.filter(file => file.name !== name))\n  }\n\n  return (\n    <div className=\"add-task-container\">\n      <h2>Lisää tehtävä</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleAddTask}>\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"task-title\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Tehtävän nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <h4>Tehtävänanto</h4>\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} />\n        </div>\n        <div>\n          <h4>Arvostelu</h4>\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} />\n        </div>\n        <div className=\"instructions\">\n          <h4>Rastimiehen ohje</h4>\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} />\n        </div>\n        <Notification message={dropDownErrorMessage} type=\"error\" />\n        <div className=\"dropdowns\">\n          <div>\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <select className=\"rule-select\" value={rule} onChange={(e) => handleRuleChange(e)}>\n              <option value=\"\">Säännöt</option>\n              {rules.map(rule => <option className=\"rule-options\" key={rule.id} value={rule.id}>{rule.name}</option>)}\n            </select>\n            <br/>\n            <select className=\"category-select\" value={category} onChange={(e) => handleCategoryChange(e)}>\n              <option value=\"\">Kategoria</option>\n              {categories.map(category => <option className=\"category-options\" key={category.id} value={category.id}>{category.name}</option>)}\n            </select>\n            <br/>\n            <select className=\"language-select\" value={language} onChange={(e) => handleLanguageChange(e)}>\n              <option value=\"\">Kieli</option>\n              {languages.map(language => <option className=\"language-options\" key={language.id} value={language.id}>{language.name}</option>)}\n            </select>\n          </div>\n        </div>\n        <div className=\"creator\">\n          <div>\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              value={creatorName}\n              name=\"CreatorName\"\n              placeholder=\"Lisääjän nimi\"\n              onChange={({ target }) => setCreatorName(target.value)}\n            />\n          </div>\n          <div>\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              value={creatorEmail}\n              name=\"CreatorEmail\"\n              placeholder=\"Lisääjän sähköposti\"\n              onChange={({ target }) => setCreatorEmail(target.value)}\n            />\n          </div>\n        </div>\n\n        <Dropzone onDrop={onDrop}>\n          {({getRootProps, getInputProps}) => (\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              <div className=\"files\">\n                <div className=\"title\">Liitetiedostot</div>\n                {files.length > 0 &&\n                  <React.Fragment>\n                    {files.map((file) => (\n                      <div key={file.name}>{file.name}<span onClick={(e) => handleDeleteFile(e, file.name)}className=\"remove-file\" /></div>\n                    ))}\n                  </React.Fragment>\n                }\n              </div>\n            </div>\n          )}\n        </Dropzone>\n\n        <button type=\"submit\" className=\"add-task-button\">Lisää tehtävä</button>\n      </form>\n    </div>\n  )\n}\nexport default AddTask","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport taskService from '../services/task'\nimport Notification from './Notification'\nimport tokenService from '../services/token'\n\n\nconst TaskListPending = () => {\n  const [tasks, setTasks] = useState([])\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    if (!tokenService.getToken()) {\n      const loggedUserJSON = window.localStorage.getItem('loggedUser')\n      if (loggedUserJSON) {\n        const loggedUser = JSON.parse(loggedUserJSON)\n        tokenService.setToken(loggedUser.token)\n      }\n    }\n    taskService.getPendingTasks().then((response) => {\n      setTasks(response)\n    })\n  }, [])\n\n  const handleAccept = (id) => {\n    try {\n      taskService.acceptTask(id)\n      setTasks(tasks.filter(t => t.id !== id))\n      setMessage('Tehtävä hyväksytty')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleDelete = async (id) => {\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${tasks.find(t => t.id === id).name}`)) {\n        await taskService.deleteTask(id)\n        setTasks(tasks.filter(t => t.id !== id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"task-list\">\n      <h1>Hyväksyntää odottavat kisatehtävät</h1>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      {tasks && tasks.length > 0 &&\n        <div className=\"task-list-title\">\n          <span>Tehtävän nimi</span>\n          <span>Sarja</span>\n          <span>Kategoria</span>\n          <span></span>\n          <span></span>\n        </div>\n      }\n      \n      {tasks.map((task) => (\n        <Link className=\"no-underline\" to={`/tehtava/${task.id}`} onClick={() => taskService.updateViews(task.id)}>\n        <div className=\"task-list-item\" key={task.id}>\n          <span>\n          <p> {task.name}</p>\n            <p>Katselukertoja: {task.views}</p>\n          </span>\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n          <span>{task.category && task.category.name}</span>\n          <button className=\"accept-button\" onClick={() => handleAccept(task.id)}>Hyväksy</button>\n            <button className=\"delete-button\" onClick={() => handleDelete(task.id)}>Poista</button>\n        </div>\n      </Link>\n      ))}\n\n    </div>\n\n  )\n}\n\nexport default TaskListPending\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport TaskListPending from './TaskListPending'\n\nconst Admin = () => (\n  <div >\n    <TaskListPending />\n    <Link className=\"no-underline\" to=\"/omasivu\">Omat tiedot</Link>\n    <br />\n    <Link className=\"no-underline\" to=\"/lisaa_admin\">Lisää ylläpitäjä</Link>\n    <br />\n    <Link className=\"no-underline\" to=\"/lisaa_pudotusvalikkoon\">Hallinnoi sääntöjä/kieliä/sarjoja/kategorioita</Link>\n  </div>\n)\n\nexport default Admin\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst EditUser = ({ setShowEdit, user, setUser, setMessage }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\n  const [emailErrorMessage, setEmailErrorMessage] = useState(null)\n  const [name, setName] = useState(user.name)\n  const [username, setUsername] = useState(user.username)\n  const [email, setEmail] = useState(user.email)\n  const [allowNotifications, setAllowNotifications] = useState(user.allowNotifications)\n\n  const handleEditUser = async (event) => {\n\n\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setUsernameErrorMessage(null)\n    setEmailErrorMessage(null)\n    if (name.length < 3) {\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\n    }\n    if (username.length < 3) {\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\n    }\n    if (email.length < 5) {\n      setEmailErrorMessage('Sähköpostissa pitää olla vähintään 5 kirjainta')\n    }\n    if (name.length < 3 || username.length < 3) {\n      return\n    }\n    try {\n      const editedUser = await userService.editUser({\n        name, username, email, allowNotifications\n      })\n      setUser(editedUser)\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(editedUser),\n      )\n      setShowEdit(false)\n      setMessage('Tietoja muokattu!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"username already exists\") {\n        setErrorMessage('Käyttäjätunnus on varattu')\n      } else {\n        setErrorMessage('Muokkaaminen epäonnistui')\n      }\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n\n    <div className=\"edit-user-form\">\n      <h2>Omat tiedot</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleEditUser}>\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <label>Nimi</label><br />\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={usernameErrorMessage} type=\"error\" />\n          <label>Käyttäjätunnus</label><br />\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={emailErrorMessage} type=\"error\" />\n          <label>Sähköposti</label><br />\n          <input\n            className=\"email\"\n            type=\"text\"\n            value={email}\n            name=\"Email\"\n            placeholder=\"Sähköposti\"\n            onChange={({ target }) => setEmail(target.value)}\n          />\n        </div>\n        <div>\n          <label>\n            Vastaanota ilmoituksia:\n            <div className=\"admin-radio\" onChange={({ target }) => setAllowNotifications(target.value)}>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"notifications\"\n                  value={true}\n                  defaultChecked={allowNotifications}\n                />\n                Kyllä\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"notifications\"\n                  value={false}\n                  defaultChecked={!allowNotifications}\n                />\n                Ei\n              </label>\n            </div>\n          </label>\n        </div>\n        <button type=\"submit\" className=\"edit-button\">Tallenna</button>\n        <button onClick={() => setShowEdit(false)} className=\"cancel-button\">Peruuta</button>\n      </form>\n    </div>\n  )\n}\n\nexport default EditUser\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst ChangePassword = ({ setShowChangePassword, setMessage }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [newPasswordAgain, setNewPasswordAgain] = useState('')\n\n  const handleChangePassword = async (event) => {\n    event.preventDefault()\n    setErrorMessage(null)\n    if (newPassword.length < 3) {\n      setErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\n      return\n    }\n    if (newPassword !== newPasswordAgain) {\n      setErrorMessage('Salasanat eivät täsmää')\n      return\n    }\n    try {\n      await userService.editUser({\n        oldPassword, newPassword\n      })\n      setOldPassword('')\n      setNewPassword('')\n      setNewPasswordAgain('')\n      setShowChangePassword(false)\n      setMessage('Salasana vaihdettu!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"incorrect password\") {\n        setErrorMessage('Vanha salasana ei täsmää')\n      } else {\n        setErrorMessage('Salasanan vaihtaminen epäonnistui')\n      }\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"change-password-form\">\n      <h2>Vaihda salasana</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleChangePassword}>\n        <div>\n          <input\n            className=\"old-password\"\n            type=\"password\"\n            value={oldPassword}\n            placeholder=\"Vanha salasana\"\n            onChange={({ target }) => setOldPassword(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"new-password\"\n            type=\"password\"\n            value={newPassword}\n            placeholder=\"Uusi salasana\"\n            onChange={({ target }) => setNewPassword(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"new-password-again\"\n            type=\"password\"\n            value={newPasswordAgain}\n            placeholder=\"Uusi salasana uudelleen\"\n            onChange={({ target }) => setNewPasswordAgain(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"change-password-button\">Tallenna</button>\n        <button onClick={() => setShowChangePassword(false)} className=\"cancel-button\">Peruuta</button>\n      </form>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport EditUser from './EditUser'\nimport ChangePassword from './ChangePassword'\n\nconst User = ({ user, setUser }) => {\n  const [message, setMessage] = useState(null)\n  const [showEdit, setShowEdit] = useState(false)\n  const [showChangePassword, setShowChangePassword] = useState(false)\n\n  const editUser = () => {\n    setShowChangePassword(false)\n    setShowEdit(true)\n  }\n\n\n  const changePassword = () => {\n    setShowEdit(false)\n    setShowChangePassword(true)\n  }\n\n  return (\n    <div>\n      {user\n        && (\n          <div className=\"user-info\">\n            {!showEdit && !showChangePassword\n              && (\n                <div>\n                  <Notification message={message} type=\"success\" />\n                  <h2>Omat tiedot</h2>\n                  <p>\n                    <b>Nimi: </b>\n                    {user.name}\n                  </p>\n                  <p>\n                    <b>Käyttäjätunnus: </b>\n                    {user.username}\n                  </p>\n                  <p>\n                    <b>Sähköpostiosoite: </b>\n                    {user.email}\n                  </p>\n                  <p>\n                    <b>Ilmoitukset: </b>\n                    {user.allowNotifications ?\n                      <span>Päällä</span>\n                      :\n                      <span>Pois päältä</span>\n                    }\n                  </p>\n                  <button className=\"edit-user-button\" onClick={() => editUser()}>Muokkaa</button>\n                  <button className=\"change-password-button\" onClick={() => changePassword()}>Vaihda salasana</button>\n                </div>\n              )}\n            {showEdit && <EditUser setShowEdit={setShowEdit} user={user} setUser={setUser} setMessage={setMessage} />}\n            {showChangePassword && <ChangePassword setShowChangePassword={setShowChangePassword} setMessage={setMessage} />}\n          </div>\n        )}\n    </div>\n  )\n}\n\nexport default User\n","import React, { useState, useEffect } from 'react'\nimport StarRatings from 'react-star-ratings'\nimport taskService from '../services/task'\nimport Notification from './Notification'\n\nconst Rating = ({ task, tasks, setTasks }) => {\n  const [rating, setRating] = useState()\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [confirmMessage, setConfirmMessage] = useState(null)\n  const [ratedMessage, setRatedMessage] = useState(null)\n  const [ratingsAVG, setRatingsAVG] = useState(task.ratingsAVG)\n  const [ratingsAmount, setRatingsAmount] = useState(task.ratingsAmount)\n  const [disabled, setDisabled] = useState(false)\n\n\n  useEffect(() => {\n    const votesJSON = window.localStorage.getItem('votes')\n    if (votesJSON) {\n      const votes = JSON.parse(votesJSON)\n      const foundVote = votes.find(t => t === task.id)\n      if (foundVote) {\n        setDisabled(true)\n        setRatedMessage('Kiitos! Olet jo arvioinut tämän rastin.')\n      }\n    }\n  }, [])\n\n  const changeRating = async (newRating) => {\n    try {\n      const updatedValues = await taskService.addRating(task.id, {\n        rating: newRating\n      })\n      const votesJSON = window.localStorage.getItem('votes')\n      if (votesJSON) {\n        const votes = JSON.parse(votesJSON)\n        const newVotes = votes.concat(task.id)\n        window.localStorage.setItem('votes', JSON.stringify(newVotes))\n      }\n      task.ratings[newRating - 1] = task.ratings[newRating - 1] + 1\n      task.ratingsAVG = updatedValues.ratingsAVG\n      setTasks(tasks.map((t) =>\n        (t.id == task.id) ? task : t))\n      setRatingsAVG(updatedValues.ratingsAVG)\n      setRatingsAmount(updatedValues.ratingsAmount)\n      setDisabled(true)\n      setConfirmMessage('Arvostelu lähetetty')\n    }\n    catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"task-rating\">\n      <Notification message={errorMessage} type=\"error\" />\n      <Notification message={confirmMessage} type=\"success\" />\n      <div className=\"rating\">\n        <div>\n          <h4>Keskiarvo:</h4>\n          <StarRatings\n            rating={Number(ratingsAVG)}\n            starRatedColor=\"yellow\"\n            starDimension=\"20px\"\n            starSpacing=\"10px\"\n          />\n        </div>\n        <div className=\"rating-amount\">\n          ({ratingsAmount})\n        </div>\n      </div>\n      <Notification message={ratedMessage} type=\"rated\" />\n      {!disabled &&\n        <div>\n          <h4>Arvostele:</h4>\n          <StarRatings\n            rating={rating}\n            changeRating={changeRating}\n            starDimension=\"30px\"\n            starSpacing=\"10px\"\n          />\n        </div>\n      }\n\n    </div>\n  )\n}\n\nexport default Rating\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport taskService from '../services/task'\nimport fileService from '../services/file'\nimport ruleService from '../services/rule'\nimport seriesService from '../services/series'\nimport languageService from '../services/language'\nimport MDEditor from './MDEditor'\nimport Dropzone from 'react-dropzone'\n\nconst ModifyTask = ({ setModifyVisible, task, setTask, handleUpdateTask }) => {\n\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [name, setName] = useState(task.name)\n  const [assignmentText, setAssignmentText] = useState(task.assignmentText)\n  const [gradingScale, setGradingScale] = useState(task.gradingScale)\n  const [supervisorInstructions, setSupervisorInstructions] = useState(task.supervisorInstructions)\n  const [assignmentTextMD, setAssignmentTextMD] = useState(task.assignmentTextMD)\n  const [gradingScaleMD, setGradingScaleMD] = useState(task.gradingScaleMD)\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState(task.supervisorInstructionsMD)\n  const [rules, setRules] = useState([])\n  const [rule, setRule] = useState(task.rules ? task.rules.id : null)\n  const [categories, setCategories] = useState([])\n  const [category, setCategory] = useState(task.category ? task.category.id : null)\n  const [seriess, setSeriess] = useState([])\n  const [series, setSeries] = useState(task.series.map(s => s.id))\n  const [languages, setLanguages] = useState([])\n  const [language, setLanguage] = useState(task.language ? task.language.id : null)\n  const [creatorName, setCreatorName] = useState(task.creatorName)\n  const [creatorEmail, setCreatorEmail] = useState(task.creatorEmail)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\n  const [oldFiles, setOldFiles] = useState(task.files || [])\n  const [newFiles, setNewFiles] = useState([])\n  const [filesToDelete, setFilesToDelete] = useState([])\n\n  let id = task.id\n\n  useEffect(() => {\n    ruleService.getRules().then(response => {\n      setRules(response)\n      if (task.rules && task.rules.id) {\n        const foundRule = response.find(r => r.id === task.rules.id)\n        if (foundRule) {\n          setCategories(foundRule.acceptedCategories)\n        }\n      }\n    })\n    seriesService.getSeries().then(response => {\n      setSeriess(response)\n    })\n    languageService.getLanguages().then(response => {\n      setLanguages(response)\n    })\n  }, [])\n\n  const handleRuleChange = (e) => {\n    setRule(e.target.value)\n    setCategory('')\n    if (e.target.value) {\n      const foundRule = rules.find(r => r.id === e.target.value)\n      setCategories(foundRule.acceptedCategories)\n    } else {\n      setCategories([])\n    }\n  }\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value)\n  }\n\n  const handleSeriesChange = (e) => {\n    let options = e.target.options\n    let values = []\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected && options[i].value !== '') {\n        values.push(options[i].value)\n      }\n    }\n    setSeries(values)\n  }\n\n  const handleLanguageChange = (e) => {\n    setLanguage(e.target.value)\n  }\n\n  const handleModifyTask = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setAssignmentTextErrorMessage(null)\n    setCreatorNameErrorMessage(null)\n    setCreatorEmailErrorMessage(null)\n    setDropDownErrorMessage(null)\n    if (name.length < 1) {\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\n    }\n    if (assignmentText.length < 1) {\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\n    }\n    if (creatorName.length < 1) {\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\n    }\n    if (creatorEmail.length < 1) {\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\n    }\n    if (language === '' || rule === '' || series === '' || category === '') {\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\n    }\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\n      || language === '' || rule === '' || series === '' || category === '') {\n      return\n    }\n\n    let formData = new FormData()\n\n    formData.append('filesToDelete', filesToDelete)\n\n    if (newFiles.length > 0) {\n      for (let i = 0; i < newFiles.length; i++) {\n          formData.append('filesToAdd', newFiles[i], newFiles[i].name)\n      }\n    }\n\n    let addedFiles = []\n\n    try {\n      addedFiles = await fileService.updateFiles(formData)\n      const modifiedTask = await taskService.updateTask({\n        name, rule, category, series,\n        language, assignmentText, gradingScale,\n        creatorName, creatorEmail, supervisorInstructions, id,\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD,\n        files: oldFiles.concat(addedFiles)\n      })\n      console.log(modifiedTask)\n      setMessage('Tehtävä tallennettu!')\n      setTask(modifiedTask)\n      handleUpdateTask(modifiedTask)\n      setTimeout(() => {\n        setMessage(null)\n        window.location.reload()\n      }, 1000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCancel = () => {\n    setModifyVisible(false)\n  }\n\n  const onDrop = (files) => {\n    setNewFiles(newFiles.concat(files))\n  }\n\n  const handleDeleteOldFile = (e, name) => {\n    e.stopPropagation()\n    setOldFiles(oldFiles.filter(file => file !== name))\n    setFilesToDelete(filesToDelete.concat(name))\n  }\n\n  const handleDeleteNewFile = (e, name) => {\n    e.stopPropagation()\n    setNewFiles(newFiles.filter(file => file.name !== name))\n  }\n\n  return (\n    <div className=\"modify-task-container\">\n      <h2>Muokkaa tehtävää</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleModifyTask} className=\"modify-form\">\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"task-title\"\n            type=\"text\"\n            defaultValue={name}\n            name=\"Name\"\n            placeholder=\"Tehtävän nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <h4>Tehtävänanto</h4>\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} value={assignmentTextMD} placeHolder=\"Tehtävänanto\" />\n        </div>\n        <div>\n          <h4>Arvostelu</h4>\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} value={gradingScaleMD} placeHolder=\"Arvostelu\" />\n        </div>\n        <div className=\"instructions\">\n          <h4>Rastimiehen ohje</h4>\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} value={supervisorInstructionsMD} placeHolder=\"Rastimiehen ohje\" />\n        </div>\n        <Notification message={dropDownErrorMessage} type=\"error\" />\n        <div className=\"dropdowns\">\n          <div>\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <select value={rule} onChange={(e) => handleRuleChange(e)}>\n              <option value=\"\">Säännöt</option>\n              {rules.map(rule => <option key={rule.id} value={rule.id}>{rule.name}</option>)}\n            </select>\n            <br/>\n            <select value={category} onChange={(e) => handleCategoryChange(e)}>\n              <option value=\"\">Kategoria</option>\n              {categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)}\n            </select>\n            <br/>\n            <select value={language} onChange={(e) => handleLanguageChange(e)}>\n              <option value=\"\">Kieli</option>\n              {languages.map(language => <option key={language.id} value={language.id}>{language.name}</option>)}\n            </select>\n          </div>\n        </div>\n        <div className=\"creator\">\n          <div>\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              defaultValue={creatorName}\n              name=\"CreatorName\"\n              placeholder=\"Muokkaajan nimi\"\n              onChange={({ target }) => setCreatorName(target.value)}\n            />\n          </div>\n          <div>\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              defaultValue={creatorEmail}\n              name=\"CreatorEmail\"\n              placeholder=\"Muokkaajan sähköposti\"\n              onChange={({ target }) => setCreatorEmail(target.value)}\n            />\n          </div>\n        </div>\n\n        <Dropzone onDrop={onDrop}>\n          {({getRootProps, getInputProps}) => (\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              <div className=\"files\">\n                <div className=\"title\">Liitetiedostot</div>\n                {oldFiles && oldFiles.length > 0 &&\n                  <React.Fragment>\n                    {oldFiles.map((file) => (\n                      <div key={file}>{file.substring(file.indexOf('-') + 1, file.length)}<span onClick={(e) => handleDeleteOldFile(e, file)} className=\"remove-file\" /></div>\n                    ))}\n                  </React.Fragment>\n                }\n                {newFiles && newFiles.length > 0 &&\n                  <React.Fragment>\n                    {newFiles.map((file) => (\n                      <div key={file.name}>{file.name}<span onClick={(e) => handleDeleteNewFile(e, file.name)} className=\"remove-file\" /></div>\n                    ))}\n                  </React.Fragment>\n                }\n              </div>\n            </div>\n          )}\n        </Dropzone>\n\n        <div>\n          <button type=\"submit\" className=\"save-task-button\">Tallenna</button>\n          <button onClick={() => handleCancel()} className=\"return-button\">Peruuta</button>\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default ModifyTask","import React from 'react'\n\nconst TaskTextDisplay = ({ text }) => {\n  const htmlConverter = () => {\n    return { __html: `${text}` }\n  }\n\n  return (\n    <div dangerouslySetInnerHTML={htmlConverter()} />\n  )\n}\n\nexport default TaskTextDisplay","import React, { useState, useEffect } from 'react'\nimport taskService from '../services/task'\nimport Rating from './Rating'\nimport ModifyTask from './ModifyTask'\nimport Notification from './Notification'\nimport TaskTextDisplay from './TaskTextDisplay'\nimport Moment from 'react-moment'\nimport { useHistory } from 'react-router-dom'\n\nconst Task = ({ match, user, addTaskToBasket, tasks, setTasks, handleUpdateTask }) => {\n\n  const [task, setTask] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const history = useHistory()\n\n  useEffect(() => {\n    taskService.getOneTask(match.params.id).then((response) => {\n      setTask(response)\n    })\n  }, [])\n\n  const handleDelete = () => {\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\n        taskService.deleteTask(task.id)\n        setMessage('Tehtävä poistettu')\n        setTimeout(() => {\n          setMessage(null)\n          if (task.pending) {\n            history.push('/admin')\n          } else {\n            history.push('/')\n          }\n        }, 2000)\n      }\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleAccept = () => {\n    try {\n      taskService.acceptTask(task.id)\n      setMessage('Tehtävä hyväksytty')\n      setTimeout(() => {\n        setMessage(null)\n        history.push('/admin')\n      }, 2000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      {modifyVisible ?\n        <ModifyTask setModifyVisible={setModifyVisible} task={task} setTask={setTask} handleUpdateTask={handleUpdateTask} />\n        :\n        <div className=\"task-view-info-background\">\n          <Notification message={message} type=\"success\" />\n          <Notification message={errorMessage} type=\"error\" />\n          {task &&\n            <div className=\"task-view-info\">\n              <div>\n                <h2>{task.name}</h2>\n                <span><div className=\"black-basket basket-task-view\" onClick={() => addTaskToBasket(task)} /></span>\n                <Rating task={task} tasks={tasks} setTasks={setTasks} />\n              </div>\n              <h3>Tehtävänanto:</h3>\n              <TaskTextDisplay text={task.assignmentText} />\n              <h3>Rastimiehen ohjeet:</h3>\n              <TaskTextDisplay text={task.supervisorInstructions} />\n              <h3>Arvosteluasteikko:</h3>\n              <TaskTextDisplay text={task.gradingScale} />\n              <h3>Sarja:</h3>\n              {task.series.map(s => <span key={task.id + s.id}>{s.name}<br /></span>)}\n              <h3>Kategoria:</h3>\n              <p>{task.category && task.category.name}</p>\n              <h3>Sääntöluokka:</h3>\n              <p>{task.rules && task.rules.name}</p>\n              <h3>Tehtävän viimeisin muokkaaja:</h3>\n              <p>{task.creatorName}<br />{task.creatorEmail}</p>\n              <h3>Tehtävä lisätty:</h3>\n              {task.created && <p><Moment format=\"DD.MM.YYYY HH:mm\">{task.created}</Moment></p>}\n              <h3>Liitetiedostot:</h3>\n              {task.files && task.files.length === 0 && <p>-</p>}\n              {task.files && task.files.map((file) => (\n                <div key={file}>\n                  <a href={`https://kisapankki.blob.core.windows.net/files/${file}`}>\n                    {file.substring(file.indexOf('-') + 1, file.length)}\n                  </a>\n                </div>\n              ))}\n              {user &&\n                <div className=\"buttons\">\n                  <button onClick={() => setModifyVisible(true)} className=\"modify-view-button\">Muokkaa</button>\n                  {task.pending && <button className=\"accept-button\" onClick={() => handleAccept()}>Hyväksy</button>}\n                  <button className=\"delete-button\" onClick={() => handleDelete()}>Poista</button>\n                </div>}\n            </div>\n          }\n        </div>\n\n      }\n    </div>\n\n  )\n}\n\nexport default Task\n","import React, { useState, useEffect, Fragment } from 'react'\nimport { Route, Link, Redirect, useHistory } from 'react-router-dom'\nimport Login from './components/Login'\nimport FrontPage from './components/FrontPage'\nimport TaskList from './components/TaskList'\nimport Basket from './components/Basket'\nimport AddAdmin from './components/AddAdmin'\nimport AddTaskDropdown from './components/AddTaskDropdown'\nimport AddTask from './components/AddTask'\nimport Admin from './components/Admin'\nimport User from './components/User'\nimport Task from './components/Task'\nimport tokenService from './services/token'\nimport taskService from './services/task'\n\nconst App = () => {\n  const [basket, setBasket] = useState([])\n  const [tasks, setTasks] = useState([])\n  const [user, setUser] = useState(null)\n  const history = useHistory()\n\n  useEffect(() => {\n    taskService.getTasks().then((response) => {\n      setTasks(response)\n    })\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const loggedUser = JSON.parse(loggedUserJSON)\n      setUser(loggedUser)\n      tokenService.setToken(loggedUser.token)\n    }\n    const votes = window.localStorage.getItem('votes')\n    if (!votes) {\n      const votes = []\n      window.localStorage.setItem('votes', JSON.stringify(votes))\n    }\n    const basketJSON = window.localStorage.getItem('basket')\n    \n    if (basketJSON) {\n      const foundBasket = JSON.parse(basketJSON)\n      setBasket(foundBasket)\n    }\n  }, [])\n\n  useEffect(() => {\n    window.localStorage.setItem(\n      'basket', JSON.stringify(basket)\n    )\n  }, [basket])\n\n  const logout = () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n    tokenService.setToken(null)\n    history.push('/')\n    window.location.reload()\n  }\n\n  const addTaskToBasket = (task) => {\n    const foundTask = basket.find(t => t.id === task.id)\n    if (!foundTask) {\n      setBasket(basket.concat(task))\n    }\n  }\n\n  const removeTaskFromBasket = (id) => {\n    setBasket(basket.filter(task => task.id !== id))\n  }\n\n  const removeAllFromBasket = () => {\n    setBasket([])\n  }\n\n  const handleUpdateViews = (id) => {\n    taskService.updateViews(id).then(response => {\n      setTasks(tasks.map(task => task.id !== id ? task : { ...task, views: task.views + 1 }))\n      setBasket(basket.map(task => task.id !== id ? task : { ...task, views: task.views + 1 }))\n    })\n  }\n\n  const handleUpdateTask = (modifiedTask) => {\n    setTasks(tasks.map(task => task.id !== modifiedTask.id ? task : modifiedTask))\n    setBasket(basket.map(task => task.id !== modifiedTask.id ? task : modifiedTask))\n  }\n\n  return (\n    <div>\n      <div className=\"header\">\n        <Link to=\"/\"><div className=\"logo\" /></Link>\n        <Link to=\"/tehtavat\"><button className=\"addtask-button-header\">Tehtävät</button></Link>\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-header\">Lisää tehtävä</button></Link>\n\n        {user === null ?\n          <Fragment>\n            <Link to=\"/kirjautuminen\"><button className=\"login-button-header\">Kirjaudu</button></Link>\n          </Fragment>\n          :\n          <Fragment>\n            <Link to=\"/admin\"><button className=\"admin-button-header\">Admin</button></Link>\n            <div>\n              <div className=\"logged\">Kirjautuneena <Link to=\"/omasivu\" className=\"username-header\">{user.username}</Link></div>\n              <div className=\"logout\"><button className=\"logout-button-header\" onClick={() => logout()}>Kirjaudu ulos</button></div>\n            </div>\n          </Fragment>\n        }\n        <Link to=\"/valitut_tehtavat\"><div className=\"white-basket\">{basket.length > 0 && <span className=\"number-of-tasks-in-basket\">{basket.length}</span>}</div></Link>\n      </div>\n      <div className=\"admin-task-buttons-mobile\">\n        <Link to=\"/tehtavat\"><button className=\"addtask-button-mobile\">Tehtävät</button></Link>\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-mobile\">Lisää tehtävä</button></Link>\n        {user !== null && <Link to=\"/admin\"><button className=\"admin-button-mobile\">Admin</button></Link>}\n      </div>\n      <div className=\"container\">\n        <Route exact path=\"/\" render={() => <FrontPage tasks={tasks} addTaskToBasket={addTaskToBasket} />} />\n        <Route exact path=\"/tehtava/:id\" render={(match) => <Task {...match} user={user} addTaskToBasket={addTaskToBasket} tasks={tasks} setTasks={setTasks} handleUpdateTask={handleUpdateTask} />} />\n        <Route path=\"/tehtavat\" render={() => <TaskList user={user} originalTasks={tasks} addTaskToBasket={addTaskToBasket} handleUpdateViews={handleUpdateViews} />} />\n        <Route path=\"/valitut_tehtavat\" render={() => <Basket tasks={basket} removeTaskFromBasket={removeTaskFromBasket} handleUpdateViews={handleUpdateViews} removeAllFromBasket={removeAllFromBasket} />} />\n        <Route path=\"/kirjautuminen\" render={() => <Login setUser={setUser} />} />\n        <Route path=\"/lisaa_tehtava\" render={() => <AddTask />} />\n        <Route path=\"/omasivu\" render={() => (localStorage.getItem('loggedUser') ? <User user={user} setUser={setUser} /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/admin\" render={() => (localStorage.getItem('loggedUser') ? <Admin /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/lisaa_admin\" render={() => (localStorage.getItem('loggedUser') ? <AddAdmin /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/lisaa_pudotusvalikkoon\" render={() => (localStorage.getItem('loggedUser') ? <AddTaskDropdown /> : <Redirect to=\"/\" />)} />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}