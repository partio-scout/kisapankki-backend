{"version":3,"sources":["components/Notification.js","services/login.js","services/token.js","components/Login.js","components/FrontPageInfo.js","services/task.js","components/FrontPage.js","components/Search.js","components/Filter.js","components/TaskList.js","components/Competition.js","components/Basket.js","services/user.js","components/AddAdmin.js","services/rule.js","components/Rule.js","services/language.js","components/Language.js","services/series.js","components/Series.js","services/category.js","components/Category.js","components/AddTaskDropdown.js","services/file.js","components/MDEditor.js","components/AddTask.js","components/TaskListPending.js","components/Admin.js","components/EditUser.js","components/ChangePassword.js","components/User.js","components/Rating.js","components/ModifyTask.js","components/TaskTextDisplay.js","components/Task.js","App.js","index.js"],"names":["Notification","message","type","className","baseUrl","process","login","credentials","a","axios","post","response","data","token","newToken","Login","setUser","useState","errorMessage","setErrorMessage","username","setUsername","email","setEmail","password","setPassword","history","useHistory","handleLogin","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","tokenService","push","setTimeout","onSubmit","value","name","placeholder","onChange","target","FrontPageInfo","baseUrlPending","getTasks","get","getPendingTasks","config","headers","Authorization","getSearchedTasks","search","getOneTask","id","addtask","task","updateTask","put","deleteTask","delete","acceptTask","addRating","rating","updateViews","makePDF","formData","responseType","makePDFs","FrontPage","tasks","addTaskToBasket","handleUpdateTask","newTasks","setNewTasks","favoriteTasks","setFavoriteTasks","useEffect","sort","compareCreated","slice","compareRatings","handleUpdateViews","taskService","views","b","created","localeCompare","ratingsAVG","map","to","onClick","key","series","s","category","title","e","Search","setTasks","setAllTasks","setSearch","handleSearch","defaultValue","Filter","allTasks","categories","rules","selectedCategory","setSelectedCategory","selectedSeries","setSelectedSeries","selectedRules","setSelectedRules","length","array","i","j","includes","filter","getOptionLabel","option","getOptionValue","options","isClearable","isMulti","c","TaskList","originalTasks","seriess","handleDeleteTask","handleDelete","confirm","compareNamesAsc","compareNamesDesc","compareRatingsAsc","compareRatingsDesc","compareCreatedAsc","compareCreatedDesc","concat","starRatedColor","starDimension","starSpacing","format","Competition","date","place","logo","setName","setDate","setPlace","setType","setLogo","onDrop","getRootProps","getInputProps","stopPropagation","handleDeleteLogo","Basket","removeTaskFromBasket","removeAllFromBasket","handleMakePDFs","FormData","competition","t","append","PDFs","url","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","files","file","substring","indexOf","getUsers","addUser","editUser","AddAdmin","setMessage","nameErrorMessage","setNameErrorMessage","usernameErrorMessage","setUsernameErrorMessage","passwordErrorMessage","setPasswordErrorMessage","emailErrorMessage","setEmailErrorMessage","users","setUsers","allowNotifications","setAllowNotifications","userService","then","handleAddAdmin","some","defaultChecked","getRules","addRule","rule","editRule","deleteRule","Rule","setRules","newRuleName","setNewRuleName","modifiedRuleName","setModifiedRuleName","modifiedRuleId","setModifiedRuleId","modifyVisible","setModifyVisible","acceptedCategories","setAcceptedCategories","modifiedCategories","setModifiedCategories","handleRuleAdd","newCategories","ruleService","addedRule","handleRuleDelete","r","handleRuleModify","modifiedRule","handleModifyCategories","handleShowModify","getLanguages","addLanguage","language","editLanguage","deleteLanguage","Language","languages","setLanguages","languageName","setLanguageName","modifiedLanguageName","setModifiedLanguageName","modifiedLanguageId","setModifiedLanguageId","handleLanguageAdd","languageService","addedLanguage","handleLanguageDelete","l","handleLanguageModify","modifiedLanguage","getSeries","addSeries","editSerie","serie","deleteSerie","Series","setSeries","modifiedSerieName","setModifiedSerieName","modifiedSerieId","setModifiedSerieId","modifiedSerieColor","setModifiedSerieColor","color","setColor","handleSeriesAdd","seriesService","addedSerie","handleSerieDelete","handleSerieModify","modifiedSerie","onChangeComplete","hex","colors","style","backgroundColor","display","borderRadius","height","width","marginLeft","getCategories","addCategory","cat","editCategory","console","log","deleteCategory","Category","setCategories","newCategoryName","setNewCategoryName","modifiedCategoryName","setModifiedCategoryName","modifiedCategoryId","setModifiedCategoryId","handleCategoryAdd","categoryService","addedCategory","handleCategoryDelete","handleCategoryModify","modifiedCategory","AddTaskDropdown","showCategories","setShowCategories","showRules","setShowRules","showLanguages","setShowLanguages","showSeries","setShowSeries","updateFiles","MDEditor","setText","setMD","mdParser","MarkdownIt","renderHTML","text","render","html","AddTask","assignmentText","setAssignmentText","gradingScale","setGradingScale","supervisorInstructions","setSupervisorInstructions","assignmentTextMD","setAssignmentTextMD","gradingScaleMD","setGradingScaleMD","supervisorInstructionsMD","setSupervisorInstructionsMD","setRule","setCategory","setLanguage","creatorName","setCreatorName","creatorEmail","setCreatorEmail","assignmentTextErrorMessage","setAssignmentTextErrorMessage","creatorNameErrorMessage","setCreatorNameErrorMessage","creatorEmailErrorMessage","setCreatorEmailErrorMessage","dropDownErrorMessage","setDropDownErrorMessage","setFiles","handleAddTask","addedFiles","fileService","location","reload","multiple","values","selected","handleSeriesChange","foundRule","find","handleRuleChange","handleCategoryChange","handleLanguageChange","newFiles","Fragment","handleDeleteFile","TaskListPending","loggedUserJSON","getItem","loggedUser","parse","exception","handleAccept","Admin","EditUser","setShowEdit","handleEditUser","editedUser","error","ChangePassword","setShowChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","newPasswordAgain","setNewPasswordAgain","handleChangePassword","User","showEdit","showChangePassword","Rating","confirmMessage","setConfirmMessage","ratedMessage","setRatedMessage","setRatingsAVG","ratingsAmount","setRatingsAmount","disabled","setDisabled","votesJSON","changeRating","newRating","updatedValues","votes","newVotes","ratings","Number","ModifyTask","setTask","oldFiles","setOldFiles","setNewFiles","filesToDelete","setFilesToDelete","handleModifyTask","modifiedTask","placeHolder","handleDeleteOldFile","handleDeleteNewFile","TaskTextDisplay","dangerouslySetInnerHTML","__html","Task","match","showMakePDF","setShowMakePDF","params","handleMakePDF","PDF","pending","App","basket","setBasket","setSeriess","basketJSON","foundBasket","removeItem","exact","path","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a3c3a2d1.chunk.js","sourcesContent":["import React from 'react'\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/login`\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","let token = null\n\nconst getToken = () => token\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nexport default { getToken, setToken }\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Notification from './Notification'\nimport loginService from '../services/login'\nimport tokenService from '../services/token'\n\nconst Login = ({ setUser }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const history = useHistory()\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, email, password,\n      })\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user),\n      )\n      setUser(user)\n      tokenService.setToken(user.token)\n      setUsername('')\n      setEmail('')\n      setPassword('')\n      history.push('/')\n    } catch (exception) {\n      setErrorMessage('Väärä käyttäjätunnus/salasana')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"login-form\">\n      <h2>Kirjaudu sisään</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleLogin}>\n        <div>\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            placeholder=\"Salasana\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"login-button\">Kirjaudu</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Login\n","import React from 'react'\n\nconst FrontPageInfo = () => {\n\n  return (\n    <div className=\"frontpage-info\">\n      <h2>Kisatehtäväpankki</h2>\n      <p>Kisatehtäväpankki on arkisto,\n      johon voidaan tallettaa tehtäviä.\n      Sivustolle voi tallettaa tehtävän,\n      sekä siihen liittyvät liitetiedostot.\n      </p>\n      <p>\n        Kirjautumattomana käyttäjänä voit\n        koostaa tehtävistä kisaa varten\n        kokonaisuuksia, sekä ladata ne\n        PDF-tiedostona itsellesi. Tehtävän lisääminen \"kisakoriin\"\n        onnistuu painamalla tehtävässä esiintyvää koripainiketta,\n        ja jo mukaan otetut tehtävät löydät yläreunan koria painamalla.\n      </p>\n      <p>\n        Voit myöskin selailla tehtäviä, arvostella tehtäviä\n        ja lisätä uusia tehtäviä. Uuden tehtävän lisääminen arkistoon\n        vaatii ensin ylläpitäjän hyväksynnän uudelle tehtävälle.\n      </p>\n    </div>\n  )\n}\n\nexport default FrontPageInfo","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/task`\nconst baseUrlPending = `${process.env.REACT_APP_API_URL}/task/pending`\n\n\nconst getTasks = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getPendingTasks = async () => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  const response = await axios.get(baseUrlPending, config)\n  return response.data\n}\n\nconst getSearchedTasks = async (search) => {\n  const response = await axios.post(`${baseUrl}/search`, search)\n  return response.data\n}\n\nconst getOneTask = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst addtask = async (task) => {\n  let config = null\n  const token = tokenService.getToken()\n\n  if (token) {\n    config = {\n      headers: { Authorization: token }\n    }\n  }\n\n  const response = await axios.post(baseUrl, task, config)\n  return response.data\n}\n\nconst updateTask = async (task) => {\n  let config = null\n  const token = tokenService.getToken()\n\n  if (token) {\n    config = {\n      headers: { Authorization: token },\n    }\n  }\n\n  const response = await axios.put(`${baseUrl}/${task.id}`, task, config)\n  return response.data\n}\n\nconst deleteTask = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nconst acceptTask = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  const response = await axios.put(`${baseUrl}/${id}/accept`, id, config)\n  return response.data\n}\n\nconst addRating = async (id, rating) => {\n\n  const response = await axios.post(`${baseUrl}/${id}/rate`, rating)\n  return response.data\n}\n\nconst updateViews = async (id) => {\n  const response = await axios.post(`${baseUrl}/${id}/views`)\n  return response.data\n}\n\nconst makePDF = async (formData, id) => {\n  const config = {\n    headers: { 'Content-Type': 'multipart/form-data' },\n    responseType: 'blob'\n  }\n\n  const response = await axios.post(`${baseUrl}/${id}/pdf`, formData, config)\n  return response.data\n}\n\nconst makePDFs = async (formData) => {\n  const config = {\n    headers: { 'Content-Type': 'multipart/form-data' },\n    responseType: 'blob'\n  }\n\n  const response = await axios.post(`${baseUrl}/pdf`, formData, config)\n  return response.data\n}\n\nexport default { addtask, getTasks, getOneTask, getSearchedTasks, updateTask, deleteTask, getPendingTasks, acceptTask, updateViews, addRating, makePDF, makePDFs }\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport FrontPageInfo from './FrontPageInfo'\nimport taskService from '../services/task'\n\nconst FrontPage = ({ tasks, addTaskToBasket, handleUpdateTask }) => {\n  const [newTasks, setNewTasks] = useState([])\n  const [favoriteTasks, setFavoriteTasks] = useState([])\n\n  useEffect(() => {\n    setNewTasks([...tasks].sort(compareCreated).slice(0, 5))\n    setFavoriteTasks([...tasks].sort(compareRatings).slice(0, 5))\n  }, [tasks])\n\n  const handleUpdateViews = async (task) => {\n    try {\n      await taskService.updateViews(task.id)\n      handleUpdateTask({ ...task, views: task.views + 1 })\n    } catch (exeption) {\n    }\n  }\n\n  const compareCreated = (a, b) => {\n    return b.created.localeCompare(a.created)\n  }\n\n  const compareRatings = (a, b) => {\n    return b.ratingsAVG - a.ratingsAVG\n  }\n\n  return (\n    <div className=\"frontpage\">\n      <h1>Tervetuloa Kisatehtäväpankkiin!</h1>\n      <div className=\"task-list frontpage-container\">\n        <FrontPageInfo />\n        <div className=\"new-favorite-lists\">\n\n          <div className=\"new-list\">\n            <div className=\"image-on-background\">\n              <h2>Uusimmat tehtävät</h2>\n              <div className=\"task-list-title frontpage-item\">\n                <span >Tehtävän nimi</span>\n                <span>Sarja</span>\n                <span>Kategoria</span>\n                <span></span>\n              </div>\n            </div>\n            {newTasks.map((task) => (\n              <Link className=\"no-underline\" to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task)} key={task.id}>\n                <div className=\"task-list-item frontpage-item new-item\">\n                  <span className=\"span-bigger\">\n                    <p className=\"bigger-task-name-frontpage\">{task.name}</p>\n                    <p>Katselukertoja: {task.views}</p>\n                  </span>\n                  <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n                  <span>{task.category && task.category.name}</span>\n                  <span><div className=\"black-basket\" title=\"Lisää koriin\" onClick={(e) => addTaskToBasket(e, task)} /></span>\n                </div>\n              </Link>\n            ))}\n          </div>\n\n          <div className=\"favorite-list\">\n            <div className=\"image-on-background\">\n              <h2>Suosituimmat tehtävät</h2>\n              <div className=\"task-list-title frontpage-item\">\n                <span>Tehtävän nimi</span>\n                <span>Sarja</span>\n                <span>Kategoria</span>\n                <span></span>\n              </div>\n            </div>\n            {favoriteTasks.map((task) => (\n              <Link className=\"no-underline\" to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task)} key={task.id}>\n                <div className=\"task-list-item frontpage-item favorite-item\">\n                  <span className=\"span-bigger\">\n                    <p className=\"bigger-task-name-frontpage\">{task.name}</p>\n                    <p>Katselukertoja: {task.views}</p>\n                  </span>\n                  <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n                  <span>{task.category && task.category.name}</span>\n                  <span><div className=\"black-basket\" title=\"Lisää koriin\" onClick={(e) => addTaskToBasket(e, task)} /></span>\n                </div>\n              </Link>\n            ))}\n\n          </div>\n        </div>\n      </div>\n      <footer>\n        <p>Kuva: Suomen Partiolaiset/Eeva Helle</p>\n      </footer>\n    </div>\n  )\n}\n\nexport default FrontPage\n","import React, { useState } from 'react'\nimport taskService from '../services/task'\nimport Notification from './Notification'\n\nconst Search = ({ setTasks, setAllTasks }) => {\n\n  const [search, setSearch] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const handleSearch = async (event) => {\n    event.preventDefault()\n    try {\n      const response = await taskService.getSearchedTasks({ search })\n      setTasks(response)\n      setAllTasks(response)\n    } catch (exception) {\n      setErrorMessage('Haku ei onnistunut')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"search\">\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleSearch} className=\"search-form\">\n        <input\n          className=\"search-input\"\n          type=\"text\"\n          defaultValue=''\n          name=\"search\"\n          placeholder=\"Hakutermi\"\n          onChange={({ target }) => setSearch(target.value)}\n        />\n        <button type=\"submit\" className=\"search-tasks-button\">Hae</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Search","import React, { useState, useEffect, Fragment } from 'react'\nimport Select from 'react-select'\n\n\nconst Filter = ({ allTasks, categories, rules, series, tasks, setTasks }) => {\n\n  const [selectedCategory, setSelectedCategory] = useState([])\n  const [selectedSeries, setSelectedSeries] = useState([])\n  const [selectedRules, setSelectedRules] = useState('')\n\n\n  useEffect(() => {\n    if (selectedSeries.length > 0 && selectedCategory.length > 0 && selectedRules) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedSeries.length > 0 && selectedCategory.length > 0) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedSeries.length > 0 && selectedRules) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedCategory.length > 0 && selectedRules) {\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id) && task.rules.id === selectedRules.id))\n    } else if (selectedSeries.length > 0) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedCategory.length > 0) {\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id)))\n    } else if (selectedRules) {\n      setTasks(allTasks.filter(task => task.rules.id === selectedRules.id))\n    } else {\n      setTasks(allTasks)\n    }\n  }, [selectedCategory, selectedSeries, selectedRules])\n\n  const handleSeriesFiltering = (series) => {\n    if (series && series.length > 0) {\n      setSelectedSeries(series.map(s => s.id))\n    } else {\n      setSelectedSeries([])\n      setTasks(allTasks)\n    }\n  }\n\n  const handleCategoryFiltering = (category) => {\n    if (category && category.length > 0) {\n      setSelectedCategory(category.map(c => c.id))\n    } else {\n      setSelectedCategory([])\n      setTasks(allTasks)\n    }\n  }\n\n  const handleRuleFiltering = (rules) => {\n    if (rules) {\n      setSelectedRules(rules)\n    } else {\n      setSelectedRules('')\n      setTasks(allTasks)\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className=\"filter\">\n        <Select\n          name=\"filter-series\"\n          getOptionLabel={option => `${option.name}`}\n          getOptionValue={option => `${option.id}`}\n          onChange={handleSeriesFiltering}\n          options={series}\n          isClearable={true}\n          placeholder={\"Sarja\"}\n          isMulti={true}\n        />\n      </div>\n\n      <div className=\"filter\">\n        <Select\n          name=\"filter-category\"\n          getOptionLabel={option => `${option.name}`}\n          getOptionValue={option => `${option.id}`}\n          onChange={handleCategoryFiltering}\n          options={categories}\n          isClearable={true}\n          placeholder={\"Kategoria\"}\n          isMulti={true}\n        />\n      </div>\n\n      <div className=\"filter\">\n        <Select\n          name=\"filter-rules\"\n          getOptionLabel={option => `${option.name}`}\n          getOptionValue={option => `${option.id}`}\n          onChange={handleRuleFiltering}\n          options={rules}\n          isClearable={true}\n          placeholder={\"Säännöt\"}\n        />\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Filter","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport taskService from '../services/task'\nimport Notification from './Notification'\nimport Search from './Search'\nimport StarRatings from 'react-star-ratings'\nimport Filter from './Filter'\nimport Moment from 'react-moment'\n\nconst TaskList = ({ user, originalTasks, categories, rules, seriess, addTaskToBasket, handleUpdateTask, handleDeleteTask }) => {\n  const [tasks, setTasks] = useState(originalTasks)\n  const [allTasks, setAllTasks] = useState(originalTasks)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    setTasks(originalTasks)\n    setAllTasks(originalTasks)\n  }, [originalTasks])\n\n  const handleUpdateViews = async (task) => {\n    try {\n      await taskService.updateViews(task.id)\n      handleUpdateTask({ ...task, views: task.views + 1 })\n    } catch (exeption) {\n    }\n  }\n\n  const handleDelete = async (e, task) => {\n    e.preventDefault()\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\n        await taskService.deleteTask(task.id)\n        handleDeleteTask(task.id)\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSortByNameAsc = () => {\n    setTasks(tasks.sort(compareNamesAsc).concat([]))\n  }\n\n  const handleSortByNameDesc = () => {\n    setTasks(tasks.sort(compareNamesDesc).concat([]))\n  }\n\n  const handleSortByRatingsAsc = () => {\n    setTasks(tasks.sort(compareRatingsAsc).concat([]))\n  }\n\n  const handleSortByRatingsDesc = () => {\n    setTasks(tasks.sort(compareRatingsDesc).concat([]))\n  }\n\n  const handleSortByCreatedAsc = () => {\n    setTasks(tasks.sort(compareCreatedAsc).concat([]))\n  }\n\n  const handleSortByCreatedDesc = () => {\n    setTasks(tasks.sort(compareCreatedDesc).concat([]))\n  }\n\n  const compareNamesAsc = (a, b) => {\n    return b.name.localeCompare(a.name)\n  }\n\n  const compareNamesDesc = (a, b) => {\n    return a.name.localeCompare(b.name)\n  }\n\n  const compareRatingsAsc = (a, b) => {\n    return a.ratingsAVG - b.ratingsAVG\n  }\n\n  const compareRatingsDesc = (a, b) => {\n    return b.ratingsAVG - a.ratingsAVG\n  }\n\n  const compareCreatedAsc = (a, b) => {\n    return a.created.localeCompare(b.created)\n  }\n\n  const compareCreatedDesc = (a, b) => {\n    return b.created.localeCompare(a.created)\n  }\n\n  return (\n    <div className=\"task-list\">\n      <h1>Kisatehtäväpankki</h1>\n      <div className=\"search-filter-container\">\n        <Search\n          setTasks={setTasks}\n          setAllTasks={setAllTasks}\n        />\n        <Filter\n          tasks={tasks}\n          allTasks={allTasks}\n          categories={categories}\n          rules={rules}\n          series={seriess}\n          setTasks={setTasks}\n        />\n      </div>\n\n      <Notification message={errorMessage} />\n      {tasks && tasks.length > 0 &&\n        <div className=\"task-list-title\">\n          <span className=\"arrow-inline\">Tehtävän nimi <span className=\"arrow-container\"><i className=\"name-arrow-up\" onClick={handleSortByNameAsc} /><i className=\"name-arrow-down\" onClick={handleSortByNameDesc} /></span></span>\n          <span>Sarja</span>\n          <span>Kategoria</span>\n          <span className=\"arrow-inline\">Arvostelu <span className=\"arrow-container\"><i className=\"rating-arrow-up\" onClick={handleSortByRatingsAsc} /><i className=\"rating-arrow-down\" onClick={handleSortByRatingsDesc} /></span></span>\n          <span className=\"arrow-inline\">Lisätty <span className=\"arrow-container\"><i className=\"created-arrow-up\" onClick={handleSortByCreatedAsc} /><i className=\"created-arrow-down\" onClick={handleSortByCreatedDesc} /></span></span>\n          {user && <span></span>}\n          <span></span>\n        </div>\n      }\n      {tasks.map((task) => (\n        <Link className=\"no-underline\" to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task)} key={task.id}>\n          <div className=\"task-list-item\">\n            <span className=\"span-bigger\">\n              <p className=\"bigger-task-name\">{task.name}</p>\n              <p>Katselukertoja: {task.views}</p>\n            </span>\n            <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n            <span>{task.category && task.category.name}</span>\n            <span>\n              <StarRatings\n                rating={task.ratingsAVG}\n                starRatedColor=\"#f0e105\"\n                starDimension=\"20px\"\n                starSpacing=\"10px\"\n              />\n            </span>\n            {task.created && <span><Moment format=\"DD.MM.YYYY HH:mm\">{task.created}</Moment></span>}\n            {user && <span className=\"task-list-delete\"><button className=\"delete-button\" onClick={(e) => handleDelete(e, task)}>Poista</button></span>}\n            <span><div className=\"black-basket\" title=\"Lisää koriin\" onClick={(e) => addTaskToBasket(e, task)} /></span>\n          </div>\n        </Link>\n      ))}\n\n    </div>\n\n  )\n}\n\nexport default TaskList\n\n","import React, { useState } from 'react'\nimport Dropzone from 'react-dropzone'\nimport Notification from './Notification'\n\nconst Competition = ({ name, date, place, type, logo, setName, setDate, setPlace, setType, setLogo }) => {\n\n  const onDrop = (logo) => {\n    setLogo(logo[0])\n  }\n\n  const handleDeleteLogo = (e) => {\n    e.stopPropagation()\n    setLogo(null)\n  }\n\n  return (\n    <div>\n      <h2 className=\"basket-title\">Kisan tiedot</h2>\n\n      <div className=\"competition\">\n        <input\n          className=\"competition-name\"\n          type=\"text\"\n          value={name}\n          name=\"Name\"\n          placeholder=\"Kisan nimi\"\n          onChange={({ target }) => setName(target.value)}\n        />\n\n        <input\n          className=\"competition-date\"\n          type=\"text\"\n          value={date}\n          name=\"Name\"\n          placeholder=\"Kisan päivämäärä\"\n          onChange={({ target }) => setDate(target.value)}\n        />\n\n        <input\n          className=\"competition-place\"\n          type=\"text\"\n          value={place}\n          name=\"Name\"\n          placeholder=\"Kisapaikka\"\n          onChange={({ target }) => setPlace(target.value)}\n        />\n\n        <input\n          className=\"competition-type\"\n          type=\"text\"\n          value={type}\n          name=\"Name\"\n          placeholder=\"Kisan laji\"\n          onChange={({ target }) => setType(target.value)}\n        />\n      </div>\n\n      <Dropzone onDrop={onDrop}>\n        {({getRootProps, getInputProps}) => (\n          <div {...getRootProps()}>\n            <input {...getInputProps()} />\n            <div className=\"files\">\n              <div className=\"title\">Logo</div>\n              {logo && <div key={logo.name}>{logo.name}<span onClick={(e) => handleDeleteLogo(e)} className=\"remove-file\" /></div>}\n            </div>\n          </div>\n        )}\n      </Dropzone>\n\n    </div>\n\n  )\n}\n\nexport default Competition\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport Notification from './Notification'\nimport Competition from './Competition'\nimport taskService from '../services/task'\n\nconst Basket = ({ tasks, removeTaskFromBasket, handleUpdateTask, removeAllFromBasket }) => {\n\n  const handleUpdateViews = async (task) => {\n    try {\n      await taskService.updateViews(task.id)\n      handleUpdateTask({ ...task, views: task.views + 1 })\n    } catch (exeption) {\n    }\n  }\n\n  const [name, setName] = useState('')\n  const [date, setDate] = useState('')\n  const [place, setPlace] = useState('')\n  const [type, setType] = useState('')\n  const [logo, setLogo] = useState(null)\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const handleMakePDFs = async (e) => {\n    let formData = new FormData()\n\n    const competition = JSON.stringify({ name, date, place, type, tasks: tasks.map(t => t.id) })\n    formData.append('competition', competition )\n\n    if (logo) {\n      formData.append('logo', logo, logo.name)\n    }\n    \n    try {\n      const PDFs = await taskService.makePDFs(formData)\n      setName('')\n      setDate('')\n      setPlace('')\n      setType('')\n      setLogo(null)\n      const url = window.URL.createObjectURL(new Blob([PDFs], {\n        type: 'application/zip'\n      }))\n      const link = document.createElement('a')\n      link.href = url\n      link.setAttribute('download', 'Rastit.zip')\n      document.body.appendChild(link)\n      link.click()\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"task-list\">\n      <Notification message={errorMessage} type=\"error\" />\n\n      <Competition\n        name={name}\n        date={date}\n        place={place}\n        type={type}\n        logo={logo}\n        setName={setName}\n        setDate={setDate}\n        setPlace={setPlace}\n        setType={setType}\n        setLogo={setLogo}\n      />\n\n      <h2 className=\"basket-title\">Kisaan valitut tehtävät</h2>\n\n      {tasks && tasks.length > 0 && <button className=\"basket-delete-all\" onClick={removeAllFromBasket}>Poista kaikki</button>}\n\n      {tasks && tasks.length === 0 && <div className=\"empty-basket\">Ei valittuja tehtäviä</div>}\n\n      {tasks && tasks.length > 0 &&\n        <div className=\"task-list-title\">\n          <span>Tehtävän nimi</span>\n          <span>Sarja</span>\n          <span>Kategoria</span>\n          <span>Liitetiedostot</span>\n          <span></span>\n        </div>\n      }\n\n      {tasks.map((task) => (\n        <div className=\"task-list-item\" key={task.id}>\n          <div className=\"delete-task-from-basket-mobile\" onClick={() => removeTaskFromBasket(task.id)} />\n          <span>\n            <Link to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task)}>\n              {task.name}\n            </Link>\n            <p>Katselukertoja: {task.views}</p>\n          </span>\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n          <span>{task.category && task.category.name}</span>\n          <span>\n            {task.files && task.files.map((file) => (\n                <div key={file}>\n                  <a href={`https://kisapankki.blob.core.windows.net/files/${file}`}>\n                    {file.substring(file.indexOf('-') + 1, file.length)}\n                  </a>\n                </div>\n              ))}\n          </span>\n          <span className=\"delete-task-from-basket\" onClick={() => removeTaskFromBasket(task.id)} />\n        </div>\n      ))}\n      <div className=\"make-pdfs\"><button onClick={handleMakePDFs}>Tee PDF-tiedostot</button></div>\n    </div>\n  )\n}\n\nexport default Basket\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/user`\n\nconst getUsers = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addUser = async (credentials) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() }\n  }\n  const response = await axios.post(baseUrl, credentials, config)\n  return response.data\n}\n\nconst editUser = async (user) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() }\n  }\n\n  const response = await axios.put(baseUrl, user, config)\n  return response.data\n}\n\nexport default { addUser, getUsers, editUser }\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst AddAdmin = () => {\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(null)\n  const [emailErrorMessage, setEmailErrorMessage] = useState(null)\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [users, setUsers] = useState([])\n  const [email, setEmail] = useState('')\n  const [allowNotifications, setAllowNotifications] = useState(true)\n\n  useEffect(() => {\n    userService.getUsers().then((response) => {\n      setUsers(response)\n    })\n  }, [])\n\n  const handleAddAdmin = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setUsernameErrorMessage(null)\n    setPasswordErrorMessage(null)\n    setEmailErrorMessage(null)\n    if (name.length < 3) {\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\n    }\n    if (username.length < 3) {\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\n    }\n    if (password.length < 3) {\n      setPasswordErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\n    }\n    if (users.some((user) => (user.username === username))) {\n      setUsernameErrorMessage('Käyttäjätunnus on varattu')\n    }\n\n    if (name.length < 3 || username.length < 3 || password.length < 3\n      || users.some((user) => (user.username === username))) {\n      return\n    }\n    try {\n      await userService.addUser({\n        name, username, email, password, allowNotifications\n      })\n      setName('')\n      setUsername('')\n      setEmail('')\n      setPassword('')\n      setAllowNotifications(true)\n      setMessage('Ylläpitäjä lisätty!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setErrorMessage('Lisääminen epäonnistui')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"signup-form\">\n      <h2>Lisää ylläpitäjä</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleAddAdmin}>\n        <div className=\"Testi\">\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={usernameErrorMessage} type=\"error\" />\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={emailErrorMessage} type=\"error\" />\n          <input\n            className=\"email\"\n            type=\"email\"\n            value={email}\n            name=\"email\"\n            placeholder=\"Sähköpostiosoite\"\n            onChange={({ target }) => setEmail(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={passwordErrorMessage} type=\"error\" />\n          <input\n            className=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            placeholder=\"Salasana\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <div>\n          <label>\n            Vastaanota ilmoituksia:\n            <div className=\"admin-radio\" onChange={({ target }) => setAllowNotifications(target.value)}>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"notifications\"\n                  value={true}\n                  defaultChecked\n                />\n                Kyllä\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"notifications\"\n                  value={false}\n                />\n                Ei\n              </label>\n            </div>\n          </label>\n        </div>\n        <button type=\"submit\" className=\"signup-button\">Lisää</button>\n      </form>\n    </div>\n  )\n}\n\nexport default AddAdmin\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/rule`\n\nconst getRules = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addRule = async (rule) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, rule, config)\n  return response.data\n}\n\nconst editRule = async (rule) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${rule.id}`, rule, config)\n  return response.data\n\n}\n\nconst deleteRule = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addRule, getRules, editRule, deleteRule }\n","import React, { useState, Fragment } from 'react'\nimport Notification from './Notification'\nimport ruleService from '../services/rule'\nimport Select from 'react-select'\n\nconst Rule = ({ rules, setRules, categories }) => {\n  const [newRuleName, setNewRuleName] = useState('')\n  const [modifiedRuleName, setModifiedRuleName] = useState('')\n  const [modifiedRuleId, setModifiedRuleId] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n  const [acceptedCategories, setAcceptedCategories] = useState([])\n  const [modifiedCategories, setModifiedCategories] = useState([])\n  const [isClearable, setIsClearable] = useState(true)\n\n  const handleRuleAdd = async (event) => {\n    event.preventDefault()\n    const newCategories = acceptedCategories\n    try {\n      const addedRule = await ruleService.addRule({\n        rules: newRuleName, acceptedCategories: acceptedCategories.map(category => category.id)\n      })\n      setNewRuleName('')\n      setAcceptedCategories([])\n      setRules(rules.concat({ ...addedRule, acceptedCategories: newCategories }))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleRuleDelete = async (rule) => {\n    try {\n      if (window.confirm(`Haluatko poistaa säännön: ${rule.name}`)) {\n        await ruleService.deleteRule(rule.id)\n        setRules(rules.filter(r => r.id !== rule.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleRuleModify = async (event) => {\n    event.preventDefault()\n    const modifiedRule = { id: modifiedRuleId, name: modifiedRuleName, acceptedCategories: modifiedCategories }\n    try {\n      await ruleService.editRule({ id: modifiedRuleId, name: modifiedRuleName, acceptedCategories: modifiedCategories.map(category => category.id) })\n      setModifyVisible(false)\n      setRules(rules.map(rule => rule.id !== modifiedRule.id ? rule : modifiedRule))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (rule) => {\n    setModifyVisible(true)\n    setModifiedRuleId(rule.id)\n    setModifiedRuleName(rule.name)\n    setModifiedCategories(rule.acceptedCategories)\n  }\n\n  const handleAddCategories = (categories) => {\n    setAcceptedCategories(categories)\n  }\n\n  const handleModifyCategories = (categories) => {\n    setModifiedCategories(categories)\n  }\n\n  return (\n    <div className=\"rule-form\">\n      <Notification message={errorMessage} type=\"error\" />\n\n      {rules && rules.map((rule) => (\n        <div className=\"rule-list-item\" key={rule.id}>\n          {modifyVisible && modifiedRuleId === rule.id ?\n            <div className=\"rule-form-item\">\n              <form onSubmit={handleRuleModify}>\n                <div className=\"item-modify\">\n                  <input\n                    className=\"rule\"\n                    type=\"text\"\n                    value={modifiedRuleName}\n                    name=\"Category\"\n                    onChange={({ target }) => setModifiedRuleName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"rule-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                </div>\n                <div className=\"modify-acceptedCategories\">\n                  <Select\n                    name=\"accepted-categories\"\n                    value={modifiedCategories}\n                    getOptionLabel={option => `${option.name}`}\n                    getOptionValue={option => `${option.id}`}\n                    onChange={handleModifyCategories}\n                    options={categories}\n                    isClearable={isClearable}\n                    placeholder={\"Säännön kategoriat\"}\n                    isMulti={true}\n                  />\n                </div>\n              </form>\n            </div>\n          :\n          <Fragment>\n            <p className=\"item-name\">{rule.name}</p>\n            <div className=\"item-buttons\">\n              <button onClick={() => handleShowModify(rule)} className=\"modify-button\">Muokkaa</button>\n              <button onClick={() => handleRuleDelete(rule)} className=\"delete-button\">Poista</button>\n            </div>\n            <div className=\"break\"></div>\n            <div className=\"accepted-categories-list\">\n              {rule.acceptedCategories && rule.acceptedCategories.map(category => (\n                  <span key={category.id}>{category.name} </span>\n                ))}\n            </div>\n          </Fragment>\n          }\n        </div>))\n      }\n\n      <form onSubmit={handleRuleAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"rule\"\n            type=\"text\"\n            value={newRuleName}\n            name=\"Rules\"\n            placeholder=\"Uusi sääntö\"\n            onChange={({ target }) => setNewRuleName(target.value)}\n          />\n          <button type=\"submit\" className=\"rule-add-button\">Lisää</button>\n        </div>\n\n        <div className=\"add-acceptedCategories\">\n          <Select\n            name=\"accepted-categories\"\n            value={acceptedCategories}\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleAddCategories}\n            options={categories}\n            isClearable={isClearable}\n            placeholder={\"Uuden säännön kategoriat\"}\n            isMulti={true}\n          />\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\n\nexport default Rule\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/language`\n\nconst getLanguages = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addLanguage = async (language) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, language, config)\n  return response.data\n}\n\nconst editLanguage = async (language) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.put(`${baseUrl}/${language.id}`, language, config)\n  return response.data\n\n}\n\n\nconst deleteLanguage = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addLanguage, getLanguages, deleteLanguage, editLanguage }\n","import React, { useState, Fragment } from 'react'\nimport Notification from './Notification'\nimport languageService from '../services/language'\n\nconst Language = ({ languages, setLanguages }) => {\n  const [languageName, setLanguageName] = useState('')\n  const [modifiedLanguageName, setModifiedLanguageName] = useState('')\n  const [modifiedLanguageId, setModifiedLanguageId] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  const handleLanguageAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedLanguage = await languageService.addLanguage({\n        language: languageName,\n      })\n      setLanguageName('')\n      setLanguages(languages.concat(addedLanguage))\n    } catch (exception) {\n      setErrorMessage('Kielen lisääminen ei onnistunut')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLanguageDelete = async (language) => {\n    try {\n      if (window.confirm(`Haluatko poistaa kielen: ${language.name}`)) {\n        await languageService.deleteLanguage(language.id)\n        setLanguages(languages.filter(l => l.id !== language.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLanguageModify = async (event) => {\n    event.preventDefault()\n    const modifiedLanguage = { id: modifiedLanguageId, name: modifiedLanguageName }\n    try {\n      await languageService.editLanguage(modifiedLanguage)\n      setModifyVisible(false)\n      setLanguages(languages.map(language => language.id !== modifiedLanguage.id ? language : modifiedLanguage))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (language) => {\n    setModifyVisible(true)\n    setModifiedLanguageId(language.id)\n    setModifiedLanguageName(language.name)\n  }\n\n  return (\n    <div className=\"language-form\">\n      <Notification message={errorMessage} type=\"error\" />\n\n      {languages && languages.map((language) => (\n        <div className=\"language-list-item\" key={language.id}>\n          {modifyVisible && modifiedLanguageId === language.id ?\n            <div className=\"language-form-item\">\n              <form onSubmit={handleLanguageModify} >\n                <div className=\"item-modify\">\n                  <input\n                    className=\"language\"\n                    type=\"text\"\n                    value={modifiedLanguageName}\n                    name=\"Language\"\n                    onChange={({ target }) => setModifiedLanguageName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"language-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n            :\n            <Fragment>\n              <p className=\"item-name\">{language.name}</p>\n              <div className=\"item-buttons\">\n                <button onClick={() => handleShowModify(language)} className=\"modify-button\">Muokkaa</button>\n                <button onClick={() => handleLanguageDelete(language)} className=\"delete-button\">Poista</button>\n              </div>\n            </Fragment>\n            }\n        </div>))\n      }\n\n      <form onSubmit={handleLanguageAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"language\"\n            type=\"text\"\n            value={languageName}\n            name=\"Language\"\n            placeholder=\"Uusi kieli\"\n            onChange={({ target }) => setLanguageName(target.value)}\n          />\n          <button type=\"submit\" className=\"language-add-button\">Lisää</button>\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\n\nexport default Language\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/series`\n\nconst getSeries = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addSeries = async (series) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, series, config)\n  return response.data\n}\n\nconst editSerie = async (serie) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${serie.id}`, serie, config)\n  return response.data\n\n}\n\nconst deleteSerie = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addSeries, getSeries, deleteSerie, editSerie }\n","import React, { useState, Fragment } from 'react'\nimport { CirclePicker } from 'react-color'\nimport Notification from './Notification'\nimport seriesService from '../services/series'\n\nconst Series = ({ series, setSeries }) => {\n  const [name, setName] = useState('')\n  const [modifiedSerieName, setModifiedSerieName] = useState('')\n  const [modifiedSerieId, setModifiedSerieId] = useState('')\n  const [modifiedSerieColor, setModifiedSerieColor] = useState('')\n  const [color, setColor] = useState('#ffffff')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  const handleSeriesAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedSerie = await seriesService.addSeries({ name, color })\n      setName('')\n      setColor('')\n      setSeries(series.concat(addedSerie))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSerieDelete = async (serie) => {\n    try {\n      if (window.confirm(`Haluatko poistaa sarjan: ${serie.name}`)) {\n        await seriesService.deleteSerie(serie.id)\n        setSeries(series.filter(s => s.id !== serie.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSerieModify = async (event) => {\n    event.preventDefault()\n    const modifiedSerie = { id: modifiedSerieId, name: modifiedSerieName, color: modifiedSerieColor }\n    try {\n      await seriesService.editSerie(modifiedSerie)\n      setModifyVisible(false)\n      setSeries(series.map(serie => serie.id !== modifiedSerie.id ? serie : modifiedSerie))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (serie) => {\n    setModifyVisible(true)\n    setModifiedSerieId(serie.id)\n    setModifiedSerieName(serie.name)\n    setModifiedSerieColor(serie.color)\n  }\n\n  return (\n    <div className=\"series-form\">\n      <Notification message={errorMessage} type=\"error\" />\n\n      {series && series.map((serie) => (\n        <div className=\"serie-list-item\" key={serie.id}>\n          {modifyVisible && modifiedSerieId === serie.id ?\n            <div className=\"serie-form-item\">\n              <form onSubmit={handleSerieModify} >\n                <div className=\"item-modify\">\n                  <input\n                    className=\"serie\"\n                    type=\"text\"\n                    value={modifiedSerieName}\n                    name=\"Serie\"\n                    onChange={({ target }) => setModifiedSerieName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"serie-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                  <div className=\"color-picker\">\n                    <CirclePicker\n                      color={modifiedSerieColor}\n                      onChangeComplete={color => setModifiedSerieColor(color.hex)}\n                      colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\n                        \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\n                    />\n                  </div>\n                </div>\n              </form>\n            </div>\n          :\n          <Fragment>\n            <p className=\"item-name\"><span>{serie.name}</span><span style={{ backgroundColor: serie.color, display: 'inline-block', borderRadius: '50%', height: '27px', width: '27px', marginLeft: '5px' }} /></p>\n            <div className=\"item-buttons\">\n              <button onClick={() => handleShowModify(serie)} className=\"modify-button\">Muokkaa</button>\n              <button onClick={() => handleSerieDelete(serie)} className=\"delete-button\">Poista</button>\n            </div>\n          </Fragment>\n          }\n        </div>))\n      }\n\n      <form onSubmit={handleSeriesAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Uusi sarja\"\n            onChange={({ target }) => setName(target.value)}\n          />\n          <button type=\"submit\" className=\"series-submit-button\">Lisää</button>\n        </div>\n        <div className=\"color-picker\">\n          <CirclePicker\n            color={color}\n            onChangeComplete={color => setColor(color.hex)}\n            colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\n              \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\n          />\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\nexport default Series\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/category`\n\nconst getCategories = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addCategory = async (cat) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, cat, config)\n  return response.data\n}\n\nconst editCategory = async (category) => {\n  console.log(category)\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${category.id}`, category, config)\n  return response.data\n\n}\n\nconst deleteCategory = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\n\nexport default { addCategory, getCategories, editCategory, deleteCategory }\n","import React, { useState, Fragment } from 'react'\nimport Notification from './Notification'\nimport categoryService from '../services/category'\n\nconst Category = ({ categories, setCategories }) => {\n  const [newCategoryName, setNewCategoryName] = useState('')\n  const [modifiedCategoryName, setModifiedCategoryName] = useState('')\n  const [modifiedCategoryId, setModifiedCategoryId] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  const handleCategoryAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedCategory = await categoryService.addCategory({\n        category: newCategoryName\n      })\n      setNewCategoryName('')\n      setCategories(categories.concat(addedCategory))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCategoryDelete = async (category) => {\n    try {\n      if (window.confirm(`Haluatko poistaa kategorian: ${category.name}`)) {\n        await categoryService.deleteCategory(category.id)\n        setCategories(categories.filter(c => c.id !== category.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCategoryModify = async (event) => {\n    event.preventDefault()\n    const modifiedCategory = { id: modifiedCategoryId, name: modifiedCategoryName }\n    try {\n      await categoryService.editCategory(modifiedCategory)\n      setModifyVisible(false)\n      setCategories(categories.map(category => category.id !== modifiedCategory.id ? category : modifiedCategory))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (category) => {\n    setModifyVisible(true)\n    setModifiedCategoryId(category.id)\n    setModifiedCategoryName(category.name)\n  }\n\n  return (\n    <div className=\"category-form\" >\n      <Notification message={errorMessage} type=\"error\" />\n\n      {categories && categories.map((category) => (\n        <div className=\"category-list-item\" key={category.id}>\n          {modifyVisible && modifiedCategoryId === category.id ?\n            <div className=\"category-form-item\">\n              <form onSubmit={handleCategoryModify} >\n                <div className=\"item-modify\">\n                  <input\n                    className=\"category\"\n                    type=\"text\"\n                    value={modifiedCategoryName}\n                    name=\"Category\"\n                    onChange={({ target }) => setModifiedCategoryName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"category-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n            :\n            <Fragment>\n              <p className=\"item-name\">{category.name}</p>\n              <div className=\"item-buttons\">\n                <button onClick={() => handleShowModify(category)} className=\"modify-button\">Muokkaa</button>\n                <button onClick={() => handleCategoryDelete(category)} className=\"delete-button\">Poista</button>\n              </div>\n            </Fragment>\n          }\n        </div>))\n      }\n\n      <form onSubmit={handleCategoryAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"category\"\n            type=\"text\"\n            value={newCategoryName}\n            name=\"Category\"\n            placeholder=\"Uusi kategoria\"\n            onChange={({ target }) => setNewCategoryName(target.value)}\n          />\n          <button type=\"submit\" className=\"category-add-button\">Lisää</button>\n        </div>\n      </form>\n    </div>\n\n  )\n}\n\nexport default Category\n","import React, { useState, Fragment } from 'react'\nimport Rule from './Rule'\nimport Language from './Language'\nimport Series from './Series'\nimport Category from './Category'\n\nconst AddTaskDropdown = ({ rules, categories, languages, series, setRules, setCategories, setLanguages, setSeries }) => {\n  const [showCategories, setShowCategories] = useState(false)\n  const [showRules, setShowRules] = useState(false)\n  const [showLanguages, setShowLanguages] = useState(false)\n  const [showSeries, setShowSeries] = useState(false)\n\n  return (\n    <div className=\"crls-container\">\n      <div className=\"task-types-menu\">\n        {showSeries ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowSeries(!showSeries)}>Sulje sarjat</button>\n            <Series series={series} setSeries={setSeries} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowSeries(!showSeries)}>Sarjat</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showRules ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowRules(!showRules)}>Sulje säännöt</button>\n            <Rule rules={rules} setRules={setRules} categories={categories} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowRules(!showRules)}>Säännöt</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showCategories ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowCategories(!showCategories)}>Sulje kategoriat</button>\n            <Category categories={categories} setCategories={setCategories} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowCategories(!showCategories)}>Kategoriat</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showLanguages ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowLanguages(!showLanguages)}>Sulje kielet</button>\n            <Language languages={languages} setLanguages={setLanguages} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowLanguages(!showLanguages)}>Kielet</button>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default AddTaskDropdown\n","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/file`\n\nconst updateFiles = async (files) => {\n  const config = {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }\n\n  const response = await axios.post(baseUrl, files, config)\n  return response.data\n}\n\nexport default { updateFiles }\n","import React from 'react'\nimport MarkdownIt from 'markdown-it'\nimport MdEditor from 'react-markdown-editor-lite'\nimport 'react-markdown-editor-lite/lib/index.css'\n\nconst MDEditor = ({ setText, setMD, value }) => {\n  const mdParser = new MarkdownIt()\n\n  const handleEditorChange = ({ html, text }) => {\n    setText(html)\n    setMD(text)\n  }\n\n  return (\n    <MdEditor\n      value={value}\n      renderHTML={(text) => mdParser.render(text)}\n      onChange={handleEditorChange}\n    />\n  )\n}\n\nexport default MDEditor\n\n\n\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport taskService from '../services/task'\nimport fileService from '../services/file'\nimport MDEditor from './MDEditor'\nimport Dropzone from 'react-dropzone'\n\nconst AddTask = ({ rules, seriess, languages }) => {\n\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [name, setName] = useState('')\n  const [assignmentText, setAssignmentText] = useState('')\n  const [gradingScale, setGradingScale] = useState('')\n  const [supervisorInstructions, setSupervisorInstructions] = useState('')\n  const [assignmentTextMD, setAssignmentTextMD] = useState('')\n  const [gradingScaleMD, setGradingScaleMD] = useState('')\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState('')\n  const [rule, setRule] = useState('')\n  const [categories, setCategories] = useState([])\n  const [category, setCategory] = useState('')\n  const [series, setSeries] = useState([])\n  const [language, setLanguage] = useState('')\n  const [creatorName, setCreatorName] = useState('')\n  const [creatorEmail, setCreatorEmail] = useState('')\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\n  const [files, setFiles] = useState([])\n\n  const handleRuleChange = (e) => {\n    setRule(e.target.value)\n    setCategory('')\n    if (e.target.value) {\n      const foundRule = rules.find(r => r.id === e.target.value)\n      setCategories(foundRule.acceptedCategories)\n    } else {\n      setCategories([])\n    }\n  }\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value)\n  }\n\n  const handleSeriesChange = (e) => {\n    let options = e.target.options\n    let values = []\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected && options[i].value !== '') {\n        values.push(options[i].value)\n      }\n    }\n    setSeries(values)\n  }\n\n  const handleLanguageChange = (e) => {\n    setLanguage(e.target.value)\n  }\n\n  const handleAddTask = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setAssignmentTextErrorMessage(null)\n    setCreatorNameErrorMessage(null)\n    setCreatorEmailErrorMessage(null)\n    setDropDownErrorMessage(null)\n    if (name.length < 1) {\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\n    }\n    if (assignmentText.length < 1) {\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\n    }\n    if (creatorName.length < 1) {\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\n    }\n    if (creatorEmail.length < 1) {\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\n    }\n    if (language === '' || rule === '' || series === '' || category === '') {\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\n    }\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\n            || language === '' || rule === '' || series === '' || category === '') {\n      return\n    }\n    setAssignmentText(JSON.stringify(assignmentText))\n    setGradingScale(JSON.stringify(gradingScale))\n    setSupervisorInstructions(JSON.stringify(supervisorInstructions))\n\n    let formData = new FormData()\n\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n          formData.append('filesToAdd', files[i], files[i].name)\n      }\n    }\n\n    let addedFiles = []\n\n    try {\n      addedFiles = await fileService.updateFiles(formData)\n      await taskService.addtask({\n        name, rule, category, series,\n        language, assignmentText, gradingScale,\n        creatorName, creatorEmail, supervisorInstructions,\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD,\n        files: addedFiles\n      })\n      setName('')\n      setRule('')\n      setCategory('')\n      setSeries('')\n      setLanguage('')\n      setAssignmentText('')\n      setGradingScale('')\n      setCreatorEmail('')\n      setCreatorName('')\n      setSupervisorInstructions('')\n      setMessage('Tehtävä lisätty!')\n      setTimeout(() => {\n        setMessage(null)\n        window.location.reload()\n      }, 2000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const onDrop = (newFiles) => {\n    setFiles(files.concat(newFiles))\n  }\n\n  const handleDeleteFile = (e, name) => {\n    e.stopPropagation()\n    setFiles(files.filter(file => file.name !== name))\n  }\n\n  return (\n    <div className=\"add-task-container\">\n      <h2>Lisää tehtävä</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleAddTask}>\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"task-title\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Tehtävän nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <h4>Tehtävänanto</h4>\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} />\n        </div>\n        <div>\n          <h4>Arvostelu</h4>\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} />\n        </div>\n        <div className=\"instructions\">\n          <h4>Rastimiehen ohje</h4>\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} />\n        </div>\n        <Notification message={dropDownErrorMessage} type=\"error\" />\n        <div className=\"dropdowns\">\n          <div>\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <select className=\"rule-select\" value={rule} onChange={(e) => handleRuleChange(e)}>\n              <option value=\"\">Säännöt</option>\n              {rules.map(rule => <option className=\"rule-options\" key={rule.id} value={rule.id}>{rule.name}</option>)}\n            </select>\n            <br/>\n            <select className=\"category-select\" value={category} onChange={(e) => handleCategoryChange(e)}>\n              <option value=\"\">Kategoria</option>\n              {categories.map(category => <option className=\"category-options\" key={category.id} value={category.id}>{category.name}</option>)}\n            </select>\n            <br/>\n            <select className=\"language-select\" value={language} onChange={(e) => handleLanguageChange(e)}>\n              <option value=\"\">Kieli</option>\n              {languages.map(language => <option className=\"language-options\" key={language.id} value={language.id}>{language.name}</option>)}\n            </select>\n          </div>\n        </div>\n        <div className=\"creator\">\n          <div>\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              value={creatorName}\n              name=\"CreatorName\"\n              placeholder=\"Lisääjän nimi\"\n              onChange={({ target }) => setCreatorName(target.value)}\n            />\n          </div>\n          <div>\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              value={creatorEmail}\n              name=\"CreatorEmail\"\n              placeholder=\"Lisääjän sähköposti\"\n              onChange={({ target }) => setCreatorEmail(target.value)}\n            />\n          </div>\n        </div>\n\n        <Dropzone onDrop={onDrop}>\n          {({getRootProps, getInputProps}) => (\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              <div className=\"files\">\n                <div className=\"title\">Liitetiedostot</div>\n                {files.length > 0 &&\n                  <React.Fragment>\n                    {files.map((file) => (\n                      <div key={file.name}>{file.name}<span onClick={(e) => handleDeleteFile(e, file.name)}className=\"remove-file\" /></div>\n                    ))}\n                  </React.Fragment>\n                }\n              </div>\n            </div>\n          )}\n        </Dropzone>\n\n        <button type=\"submit\" className=\"add-task-button\">Lisää tehtävä</button>\n      </form>\n    </div>\n  )\n}\nexport default AddTask","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport taskService from '../services/task'\nimport Notification from './Notification'\nimport tokenService from '../services/token'\n\n\nconst TaskListPending = ({ handleAddTask, handleUpdateTask, handleDeleteTask }) => {\n  const [tasks, setTasks] = useState([])\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    if (!tokenService.getToken()) {\n      const loggedUserJSON = window.localStorage.getItem('loggedUser')\n      if (loggedUserJSON) {\n        const loggedUser = JSON.parse(loggedUserJSON)\n        tokenService.setToken(loggedUser.token)\n      }\n    }\n    taskService.getPendingTasks().then((response) => {\n      setTasks(response)\n    })\n  }, [])\n\n  const handleAccept = (e, task) => {\n    e.preventDefault()\n    try {\n      taskService.acceptTask(task.id)\n      setTasks(tasks.filter(t => t.id !== task.id))\n      handleAddTask(task)\n      setMessage('Tehtävä hyväksytty')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleUpdateViews = async (task) => {\n    try {\n      await taskService.updateViews(task.id)\n      handleUpdateTask({ ...task, views: task.views + 1 })\n    } catch (exeption) {\n    }\n  }\n\n  const handleDelete = async (e, task) => {\n    e.preventDefault()\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\n        await taskService.deleteTask(task.id)\n        handleDeleteTask(task.id)\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"task-list\">\n      <h1>Hyväksyntää odottavat kisatehtävät</h1>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      {tasks && tasks.length > 0 &&\n        <div className=\"task-list-title\">\n          <span>Tehtävän nimi</span>\n          <span>Sarja</span>\n          <span>Kategoria</span>\n          <span></span>\n          <span></span>\n        </div>\n      }\n      \n      {tasks.map((task) => (\n        <Link className=\"no-underline\" to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task)} key={task.id}>\n        <div className=\"task-list-item\">\n          <span>\n            {task.name}\n            <p>Katselukertoja: {task.views}</p>\n          </span>\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n          <span>{task.category && task.category.name}</span>\n          <button className=\"accept-button\" onClick={(e) => handleAccept(e, task)}>Hyväksy</button>\n            <button className=\"delete-button\" onClick={(e) => handleDelete(e, task)}>Poista</button>\n        </div>\n      </Link>\n      ))}\n\n    </div>\n\n  )\n}\n\nexport default TaskListPending\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport TaskListPending from './TaskListPending'\n\nconst Admin = ({ handleAddTask, handleUpdateTask, handleDeleteTask }) => (\n  <div >\n    <TaskListPending handleAddTask={handleAddTask} handleUpdateTask={handleUpdateTask} handleDeleteTask={handleDeleteTask} />\n    <Link className=\"no-underline\" to=\"/omasivu\">Omat tiedot</Link>\n    <br />\n    <Link className=\"no-underline\" to=\"/lisaa_admin\">Lisää ylläpitäjä</Link>\n    <br />\n    <Link className=\"no-underline\" to=\"/lisaa_pudotusvalikkoon\">Hallinnoi sääntöjä/kieliä/sarjoja/kategorioita</Link>\n  </div>\n)\n\nexport default Admin\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst EditUser = ({ setShowEdit, user, setUser, setMessage }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\n  const [emailErrorMessage, setEmailErrorMessage] = useState(null)\n  const [name, setName] = useState(user.name)\n  const [username, setUsername] = useState(user.username)\n  const [email, setEmail] = useState(user.email)\n  const [allowNotifications, setAllowNotifications] = useState(user.allowNotifications)\n\n  const handleEditUser = async (event) => {\n\n\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setUsernameErrorMessage(null)\n    setEmailErrorMessage(null)\n    if (name.length < 3) {\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\n    }\n    if (username.length < 3) {\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\n    }\n    if (email.length < 5) {\n      setEmailErrorMessage('Sähköpostissa pitää olla vähintään 5 kirjainta')\n    }\n    if (name.length < 3 || username.length < 3) {\n      return\n    }\n    try {\n      const editedUser = await userService.editUser({\n        name, username, email, allowNotifications\n      })\n      setUser(editedUser)\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(editedUser),\n      )\n      setShowEdit(false)\n      setMessage('Tietoja muokattu!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"username already exists\") {\n        setErrorMessage('Käyttäjätunnus on varattu')\n      } else {\n        setErrorMessage('Muokkaaminen epäonnistui')\n      }\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n\n    <div className=\"edit-user-form\">\n      <h2>Omat tiedot</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleEditUser}>\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <label>Nimi</label><br />\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={usernameErrorMessage} type=\"error\" />\n          <label>Käyttäjätunnus</label><br />\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={emailErrorMessage} type=\"error\" />\n          <label>Sähköposti</label><br />\n          <input\n            className=\"email\"\n            type=\"text\"\n            value={email}\n            name=\"Email\"\n            placeholder=\"Sähköposti\"\n            onChange={({ target }) => setEmail(target.value)}\n          />\n        </div>\n        <div>\n          <label>\n            Vastaanota ilmoituksia:\n            <div className=\"admin-radio\" onChange={({ target }) => setAllowNotifications(target.value)}>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"notifications\"\n                  value={true}\n                  defaultChecked={allowNotifications}\n                />\n                Kyllä\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"notifications\"\n                  value={false}\n                  defaultChecked={!allowNotifications}\n                />\n                Ei\n              </label>\n            </div>\n          </label>\n        </div>\n        <button type=\"submit\" className=\"edit-button\">Tallenna</button>\n        <button onClick={() => setShowEdit(false)} className=\"cancel-button\">Peruuta</button>\n      </form>\n    </div>\n  )\n}\n\nexport default EditUser\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst ChangePassword = ({ setShowChangePassword, setMessage }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [newPasswordAgain, setNewPasswordAgain] = useState('')\n\n  const handleChangePassword = async (event) => {\n    event.preventDefault()\n    setErrorMessage(null)\n    if (newPassword.length < 3) {\n      setErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\n      return\n    }\n    if (newPassword !== newPasswordAgain) {\n      setErrorMessage('Salasanat eivät täsmää')\n      return\n    }\n    try {\n      await userService.editUser({\n        oldPassword, newPassword\n      })\n      setOldPassword('')\n      setNewPassword('')\n      setNewPasswordAgain('')\n      setShowChangePassword(false)\n      setMessage('Salasana vaihdettu!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"incorrect password\") {\n        setErrorMessage('Vanha salasana ei täsmää')\n      } else {\n        setErrorMessage('Salasanan vaihtaminen epäonnistui')\n      }\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"change-password-form\">\n      <h2>Vaihda salasana</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleChangePassword}>\n        <div>\n          <input\n            className=\"old-password\"\n            type=\"password\"\n            value={oldPassword}\n            placeholder=\"Vanha salasana\"\n            onChange={({ target }) => setOldPassword(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"new-password\"\n            type=\"password\"\n            value={newPassword}\n            placeholder=\"Uusi salasana\"\n            onChange={({ target }) => setNewPassword(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"new-password-again\"\n            type=\"password\"\n            value={newPasswordAgain}\n            placeholder=\"Uusi salasana uudelleen\"\n            onChange={({ target }) => setNewPasswordAgain(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"change-password-button\">Tallenna</button>\n        <button onClick={() => setShowChangePassword(false)} className=\"cancel-button\">Peruuta</button>\n      </form>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport EditUser from './EditUser'\nimport ChangePassword from './ChangePassword'\n\nconst User = ({ user, setUser }) => {\n  const [message, setMessage] = useState(null)\n  const [showEdit, setShowEdit] = useState(false)\n  const [showChangePassword, setShowChangePassword] = useState(false)\n\n  const editUser = () => {\n    setShowChangePassword(false)\n    setShowEdit(true)\n  }\n\n\n  const changePassword = () => {\n    setShowEdit(false)\n    setShowChangePassword(true)\n  }\n\n  return (\n    <div>\n      {user\n        && (\n          <div className=\"user-info\">\n            {!showEdit && !showChangePassword\n              && (\n                <div>\n                  <Notification message={message} type=\"success\" />\n                  <h2>Omat tiedot</h2>\n                  <p>\n                    <b>Nimi: </b>\n                    {user.name}\n                  </p>\n                  <p>\n                    <b>Käyttäjätunnus: </b>\n                    {user.username}\n                  </p>\n                  <p>\n                    <b>Sähköpostiosoite: </b>\n                    {user.email}\n                  </p>\n                  <p>\n                    <b>Ilmoitukset: </b>\n                    {user.allowNotifications ?\n                      <span>Päällä</span>\n                      :\n                      <span>Pois päältä</span>\n                    }\n                  </p>\n                  <button className=\"edit-user-button\" onClick={() => editUser()}>Muokkaa</button>\n                  <button className=\"change-password-button\" onClick={() => changePassword()}>Vaihda salasana</button>\n                </div>\n              )}\n            {showEdit && <EditUser setShowEdit={setShowEdit} user={user} setUser={setUser} setMessage={setMessage} />}\n            {showChangePassword && <ChangePassword setShowChangePassword={setShowChangePassword} setMessage={setMessage} />}\n          </div>\n        )}\n    </div>\n  )\n}\n\nexport default User\n","import React, { useState, useEffect } from 'react'\nimport StarRatings from 'react-star-ratings'\nimport taskService from '../services/task'\nimport Notification from './Notification'\n\nconst Rating = ({ task, handleUpdateTask }) => {\n  const [rating, setRating] = useState()\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [confirmMessage, setConfirmMessage] = useState(null)\n  const [ratedMessage, setRatedMessage] = useState(null)\n  const [ratingsAVG, setRatingsAVG] = useState(task.ratingsAVG)\n  const [ratingsAmount, setRatingsAmount] = useState(task.ratingsAmount)\n  const [disabled, setDisabled] = useState(false)\n\n\n  useEffect(() => {\n    const votesJSON = window.localStorage.getItem('votes')\n    if (votesJSON) {\n      const votes = JSON.parse(votesJSON)\n      const foundVote = votes.find(t => t === task.id)\n      if (foundVote) {\n        setDisabled(true)\n        setRatedMessage('Kiitos! Olet jo arvioinut tämän rastin.')\n      }\n    }\n  }, [])\n\n  const changeRating = async (newRating) => {\n    try {\n      const updatedValues = await taskService.addRating(task.id, {\n        rating: newRating\n      })\n      const votesJSON = window.localStorage.getItem('votes')\n      if (votesJSON) {\n        const votes = JSON.parse(votesJSON)\n        const newVotes = votes.concat(task.id)\n        window.localStorage.setItem('votes', JSON.stringify(newVotes))\n      }\n      setRatingsAVG(updatedValues.ratingsAVG)\n      setRatingsAmount(updatedValues.ratingsAmount)\n      handleUpdateTask({ ...task, ratings: task.ratings[newRating - 1] + 1, ratingsAVG: updatedValues.ratingsAVG, ratingsAmount: updatedValues.ratingsAmount })\n      setDisabled(true)\n      setConfirmMessage('Arvostelu lähetetty')\n    }\n    catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"task-rating\">\n      <Notification message={errorMessage} type=\"error\" />\n      <Notification message={confirmMessage} type=\"success\" />\n      <div className=\"rating\">\n        <div>\n          <h4>Keskiarvo:</h4>\n          <StarRatings\n            rating={Number(ratingsAVG)}\n            starRatedColor=\"yellow\"\n            starDimension=\"20px\"\n            starSpacing=\"10px\"\n          />\n        </div>\n        <div className=\"rating-amount\">\n          ({ratingsAmount})\n        </div>\n      </div>\n      <Notification message={ratedMessage} type=\"rated\" />\n      {!disabled &&\n        <div>\n          <h4>Arvostele:</h4>\n          <StarRatings\n            rating={rating}\n            changeRating={changeRating}\n            starDimension=\"30px\"\n            starSpacing=\"10px\"\n          />\n        </div>\n      }\n\n    </div>\n  )\n}\n\nexport default Rating\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport taskService from '../services/task'\nimport fileService from '../services/file'\nimport MDEditor from './MDEditor'\nimport Dropzone from 'react-dropzone'\n\nconst ModifyTask = ({ setModifyVisible, task, setTask, handleUpdateTask, rules, seriess, languages }) => {\n\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [name, setName] = useState(task.name)\n  const [assignmentText, setAssignmentText] = useState(task.assignmentText)\n  const [gradingScale, setGradingScale] = useState(task.gradingScale)\n  const [supervisorInstructions, setSupervisorInstructions] = useState(task.supervisorInstructions)\n  const [assignmentTextMD, setAssignmentTextMD] = useState(task.assignmentTextMD)\n  const [gradingScaleMD, setGradingScaleMD] = useState(task.gradingScaleMD)\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState(task.supervisorInstructionsMD)\n  const [categories, setCategories] = useState([])\n  const [rule, setRule] = useState(task.rules ? task.rules.id : null)\n  const [category, setCategory] = useState(task.category ? task.category.id : null)\n  const [series, setSeries] = useState(task.series.map(s => s.id))\n  const [language, setLanguage] = useState(task.language ? task.language.id : null)\n  const [creatorName, setCreatorName] = useState(task.creatorName)\n  const [creatorEmail, setCreatorEmail] = useState(task.creatorEmail)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\n  const [oldFiles, setOldFiles] = useState(task.files || [])\n  const [newFiles, setNewFiles] = useState([])\n  const [filesToDelete, setFilesToDelete] = useState([])\n\n  let id = task.id\n\n  useEffect(() => {\n    if (rules && task.rules && task.rules.id) {\n      const foundRule = rules.find(r => r.id === task.rules.id)\n      if (foundRule) {\n        setCategories(foundRule.acceptedCategories)\n      }\n    }\n  }, [])\n\n  const handleRuleChange = (e) => {\n    setRule(e.target.value)\n    setCategory('')\n    if (e.target.value) {\n      const foundRule = rules.find(r => r.id === e.target.value)\n      setCategories(foundRule.acceptedCategories)\n    } else {\n      setCategories([])\n    }\n  }\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value)\n  }\n\n  const handleSeriesChange = (e) => {\n    let options = e.target.options\n    let values = []\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected && options[i].value !== '') {\n        values.push(options[i].value)\n      }\n    }\n    setSeries(values)\n  }\n\n  const handleLanguageChange = (e) => {\n    setLanguage(e.target.value)\n  }\n\n  const handleModifyTask = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setAssignmentTextErrorMessage(null)\n    setCreatorNameErrorMessage(null)\n    setCreatorEmailErrorMessage(null)\n    setDropDownErrorMessage(null)\n    if (name.length < 1) {\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\n    }\n    if (assignmentText.length < 1) {\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\n    }\n    if (creatorName.length < 1) {\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\n    }\n    if (creatorEmail.length < 1) {\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\n    }\n    if (language === '' || rule === '' || series === '' || category === '') {\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\n    }\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\n      || language === '' || rule === '' || series === '' || category === '') {\n      return\n    }\n\n    let formData = new FormData()\n\n    formData.append('filesToDelete', filesToDelete)\n\n    if (newFiles.length > 0) {\n      for (let i = 0; i < newFiles.length; i++) {\n          formData.append('filesToAdd', newFiles[i], newFiles[i].name)\n      }\n    }\n\n    let addedFiles = []\n\n    try {\n      addedFiles = await fileService.updateFiles(formData)\n      const modifiedTask = await taskService.updateTask({\n        name, rule, category, series,\n        language, assignmentText, gradingScale,\n        creatorName, creatorEmail, supervisorInstructions, id,\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD,\n        files: oldFiles.concat(addedFiles)\n      })\n      console.log(modifiedTask)\n      setMessage('Tehtävä tallennettu!')\n      setTask(modifiedTask)\n      handleUpdateTask(modifiedTask)\n      setTimeout(() => {\n        setMessage(null)\n        window.location.reload()\n      }, 1000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCancel = () => {\n    setModifyVisible(false)\n  }\n\n  const onDrop = (files) => {\n    setNewFiles(newFiles.concat(files))\n  }\n\n  const handleDeleteOldFile = (e, name) => {\n    e.stopPropagation()\n    setOldFiles(oldFiles.filter(file => file !== name))\n    setFilesToDelete(filesToDelete.concat(name))\n  }\n\n  const handleDeleteNewFile = (e, name) => {\n    e.stopPropagation()\n    setNewFiles(newFiles.filter(file => file.name !== name))\n  }\n\n  return (\n    <div className=\"modify-task-container\">\n      <h2>Muokkaa tehtävää</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleModifyTask} className=\"modify-form\">\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"task-title\"\n            type=\"text\"\n            defaultValue={name}\n            name=\"Name\"\n            placeholder=\"Tehtävän nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <h4>Tehtävänanto</h4>\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} value={assignmentTextMD} placeHolder=\"Tehtävänanto\" />\n        </div>\n        <div>\n          <h4>Arvostelu</h4>\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} value={gradingScaleMD} placeHolder=\"Arvostelu\" />\n        </div>\n        <div className=\"instructions\">\n          <h4>Rastimiehen ohje</h4>\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} value={supervisorInstructionsMD} placeHolder=\"Rastimiehen ohje\" />\n        </div>\n        <Notification message={dropDownErrorMessage} type=\"error\" />\n        <div className=\"dropdowns\">\n          <div>\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <select value={rule} onChange={(e) => handleRuleChange(e)}>\n              <option value=\"\">Säännöt</option>\n              {rules.map(rule => <option key={rule.id} value={rule.id}>{rule.name}</option>)}\n            </select>\n            <br/>\n            <select value={category} onChange={(e) => handleCategoryChange(e)}>\n              <option value=\"\">Kategoria</option>\n              {categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)}\n            </select>\n            <br/>\n            <select value={language} onChange={(e) => handleLanguageChange(e)}>\n              <option value=\"\">Kieli</option>\n              {languages.map(language => <option key={language.id} value={language.id}>{language.name}</option>)}\n            </select>\n          </div>\n        </div>\n        <div className=\"creator\">\n          <div>\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              defaultValue={creatorName}\n              name=\"CreatorName\"\n              placeholder=\"Muokkaajan nimi\"\n              onChange={({ target }) => setCreatorName(target.value)}\n            />\n          </div>\n          <div>\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              defaultValue={creatorEmail}\n              name=\"CreatorEmail\"\n              placeholder=\"Muokkaajan sähköposti\"\n              onChange={({ target }) => setCreatorEmail(target.value)}\n            />\n          </div>\n        </div>\n\n        <Dropzone onDrop={onDrop}>\n          {({getRootProps, getInputProps}) => (\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              <div className=\"files\">\n                <div className=\"title\">Liitetiedostot</div>\n                {oldFiles && oldFiles.length > 0 &&\n                  <React.Fragment>\n                    {oldFiles.map((file) => (\n                      <div key={file}>{file.substring(file.indexOf('-') + 1, file.length)}<span onClick={(e) => handleDeleteOldFile(e, file)} className=\"remove-file\" /></div>\n                    ))}\n                  </React.Fragment>\n                }\n                {newFiles && newFiles.length > 0 &&\n                  <React.Fragment>\n                    {newFiles.map((file) => (\n                      <div key={file.name}>{file.name}<span onClick={(e) => handleDeleteNewFile(e, file.name)} className=\"remove-file\" /></div>\n                    ))}\n                  </React.Fragment>\n                }\n              </div>\n            </div>\n          )}\n        </Dropzone>\n\n        <div>\n          <button type=\"submit\" className=\"save-task-button\">Tallenna</button>\n          <button onClick={() => handleCancel()} className=\"return-button\">Peruuta</button>\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default ModifyTask","import React from 'react'\n\nconst TaskTextDisplay = ({ text }) => {\n  const htmlConverter = () => {\n    return { __html: `${text}` }\n  }\n\n  return (\n    <div dangerouslySetInnerHTML={htmlConverter()} />\n  )\n}\n\nexport default TaskTextDisplay","import React, { useState, useEffect } from 'react'\nimport taskService from '../services/task'\nimport Rating from './Rating'\nimport ModifyTask from './ModifyTask'\nimport Notification from './Notification'\nimport TaskTextDisplay from './TaskTextDisplay'\nimport Competition from './Competition'\nimport Moment from 'react-moment'\nimport { useHistory } from 'react-router-dom'\n\nconst Task = ({ match, user, rules, seriess, languages, addTaskToBasket, handleAddTask, handleUpdateTask, handleDeleteTask }) => {\n\n  const [task, setTask] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [name, setName] = useState('')\n  const [date, setDate] = useState('')\n  const [place, setPlace] = useState('')\n  const [type, setType] = useState('')\n  const [logo, setLogo] = useState(null)\n  const [showMakePDF, setShowMakePDF] = useState(false)\n  const history = useHistory()\n\n  useEffect(() => {\n    taskService.getOneTask(match.params.id).then((response) => {\n      setTask(response)\n    })\n  }, [])\n\n  const handleDelete = () => {\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\n        taskService.deleteTask(task.id)\n        handleDeleteTask(task.id)\n        setMessage('Tehtävä poistettu')\n        setTimeout(() => {\n          setMessage(null)\n          if (task.pending) {\n            history.push('/admin')\n          } else {\n            history.push('/')\n          }\n        }, 2000)\n      }\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleAccept = () => {\n    try {\n      taskService.acceptTask(task.id)\n      setMessage('Tehtävä hyväksytty')\n      handleAddTask(task)\n      setTimeout(() => {\n        setMessage(null)\n        history.push('/admin')\n      }, 2000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleMakePDF = async () => {\n    let formData = new FormData()\n\n    const competition = JSON.stringify({ name, date, place, type, task: task.id })\n    formData.append('competition', competition)\n\n    if (logo) {\n      formData.append('logo', logo, logo.name)\n    }\n    \n    try {\n      const PDF = await taskService.makePDF(formData, task.id)\n      setName('')\n      setDate('')\n      setPlace('')\n      setType('')\n      setLogo(null)\n      const url = window.URL.createObjectURL(new Blob([PDF], {\n        type: 'application/pdf'\n      }))\n      const link = document.createElement('a')\n      link.href = url\n      link.setAttribute('download', `${name}.pdf`)\n      document.body.appendChild(link)\n      link.click()\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      {modifyVisible ?\n        <ModifyTask setModifyVisible={setModifyVisible} task={task} rules={rules} seriess={seriess} languages={languages} setTask={setTask} handleUpdateTask={handleUpdateTask} />\n        :\n        <div className=\"task-view-info-background\">\n          <Notification message={message} type=\"success\" />\n          <Notification message={errorMessage} type=\"error\" />\n          {task &&\n            <div className=\"task-view-info\">\n              <div>\n                <h2>{task.name}</h2>\n                <span><div className=\"black-basket basket-task-view\" title=\"Lisää koriin\" onClick={(e) => addTaskToBasket(e, task)} /></span>\n                <Rating task={task} handleUpdateTask={handleUpdateTask} />\n              </div>\n              <h3>Tehtävänanto</h3>\n              <TaskTextDisplay text={task.assignmentText} />\n              <h3>Rastimiehen ohjeet</h3>\n              <TaskTextDisplay text={task.supervisorInstructions} />\n              <h3>Arvosteluasteikko</h3>\n              <TaskTextDisplay text={task.gradingScale} />\n              <h3>Sarja</h3>\n              {task.series.map(s => <span key={task.id + s.id}>{s.name}<br /></span>)}\n              <h3>Kategoria</h3>\n              <p>{task.category && task.category.name}</p>\n              <h3>Sääntöluokka</h3>\n              <p>{task.rules && task.rules.name}</p>\n              <h3>Tehtävän viimeisin muokkaaja</h3>\n              <p>{task.creatorName}<br />{task.creatorEmail}</p>\n              <h3>Tehtävä lisätty</h3>\n              {task.created && <p><Moment format=\"DD.MM.YYYY HH:mm\">{task.created}</Moment></p>}\n              <h3>Liitetiedostot</h3>\n              {task.files && task.files.length === 0 && <p>-</p>}\n              {task.files && task.files.map((file) => (\n                <div key={file}>\n                  <a href={`https://kisapankki.blob.core.windows.net/files/${file}`}>\n                    {file.substring(file.indexOf('-') + 1, file.length)}\n                  </a>\n                </div>\n              ))}\n              {showMakePDF ?\n                <div className=\"competition-task\">\n                  <div className=\"make-pdf right\" onClick={() => setShowMakePDF(false)}>Sulje</div>\n                  <Competition\n                    name={name}\n                    date={date}\n                    place={place}\n                    type={type}\n                    logo={logo}\n                    setName={setName}\n                    setDate={setDate}\n                    setPlace={setPlace}\n                    setType={setType}\n                    setLogo={setLogo}\n                  />\n                  <button onClick={() => handleMakePDF()}>Tee PDF-tiedosto</button>\n                </div>\n                :\n                <div className=\"make-pdf\" onClick={() => setShowMakePDF(true)}>Lisää kisan tiedot/Tee PDF</div>\n              }\n              {user &&\n                <div className=\"buttons\">\n                  <button onClick={() => setModifyVisible(true)} className=\"modify-view-button\">Muokkaa</button>\n                  {task.pending && <button className=\"accept-button\" onClick={() => handleAccept()}>Hyväksy</button>}\n                  <button className=\"delete-button\" onClick={() => handleDelete()}>Poista</button>\n                </div>}\n            </div>\n          }\n        </div>\n\n      }\n    </div>\n\n  )\n}\n\nexport default Task\n","import React, { useState, useEffect, Fragment } from 'react'\nimport { Route, Link, Redirect, useHistory } from 'react-router-dom'\nimport Login from './components/Login'\nimport FrontPage from './components/FrontPage'\nimport TaskList from './components/TaskList'\nimport Basket from './components/Basket'\nimport AddAdmin from './components/AddAdmin'\nimport AddTaskDropdown from './components/AddTaskDropdown'\nimport AddTask from './components/AddTask'\nimport Admin from './components/Admin'\nimport User from './components/User'\nimport Task from './components/Task'\nimport tokenService from './services/token'\nimport taskService from './services/task'\nimport seriesService from './services/series'\nimport ruleService from './services/rule'\nimport categoryService from './services/category'\nimport languageService from './services/language'\n\nconst App = () => {\n  const [basket, setBasket] = useState([])\n  const [tasks, setTasks] = useState([])\n  const [user, setUser] = useState(null)\n  const [categories, setCategories] = useState([])\n  const [rules, setRules] = useState([])\n  const [seriess, setSeriess] = useState([])\n  const [languages, setLanguages] = useState([])\n  const history = useHistory()\n\n  useEffect(() => {\n    taskService.getTasks().then((response) => {\n      setTasks(response)\n    })\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const loggedUser = JSON.parse(loggedUserJSON)\n      setUser(loggedUser)\n      tokenService.setToken(loggedUser.token)\n    }\n    const votes = window.localStorage.getItem('votes')\n    if (!votes) {\n      const votes = []\n      window.localStorage.setItem('votes', JSON.stringify(votes))\n    }\n    const basketJSON = window.localStorage.getItem('basket')\n\n    if (basketJSON) {\n      const foundBasket = JSON.parse(basketJSON)\n      setBasket(foundBasket)\n    }\n\n    categoryService.getCategories().then((response) => {\n      setCategories(response)\n    })\n\n    seriesService.getSeries().then((response) => {\n      setSeriess(response)\n    })\n\n    ruleService.getRules().then((response) => {\n      setRules(response)\n    })\n\n    languageService.getLanguages().then(response => {\n      setLanguages(response)\n    })\n  }, [])\n\n  useEffect(() => {\n    window.localStorage.setItem(\n      'basket', JSON.stringify(basket)\n    )\n  }, [basket])\n\n  const logout = () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n    tokenService.setToken(null)\n    history.push('/')\n    window.location.reload()\n  }\n\n  const handleAddTask = (task) => {\n    setTasks(tasks.concat(task))\n  }\n\n  const handleUpdateTask = (modifiedTask) => {\n    setTasks(tasks.map(task => task.id !== modifiedTask.id ? task : modifiedTask))\n    setBasket(basket.map(task => task.id !== modifiedTask.id ? task : modifiedTask))\n  }\n\n  const handleDeleteTask = (id) => {\n    setTasks(tasks.filter(t => t.id !== id))\n    setBasket(basket.filter(t => t.id !== id))\n  }\n\n  const addTaskToBasket = (e, task) => {\n    e.preventDefault()\n    e.stopPropagation()\n    const foundTask = basket.find(t => t.id === task.id)\n    if (!foundTask) {\n      setBasket(basket.concat(task))\n    }\n  }\n\n  const removeTaskFromBasket = (id) => {\n    setBasket(basket.filter(task => task.id !== id))\n  }\n\n  const removeAllFromBasket = () => {\n    setBasket([])\n  }\n\n  return (\n    <div>\n      <div className=\"header\">\n        <Link to=\"/\"><div className=\"logo\" /></Link>\n        <Link to=\"/tehtavat\"><button className=\"addtask-button-header\">Tehtävät</button></Link>\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-header\">Lisää tehtävä</button></Link>\n\n        {user === null ?\n          <Fragment>\n            <Link to=\"/kirjautuminen\"><button className=\"login-button-header\">Kirjaudu</button></Link>\n          </Fragment>\n          :\n          <Fragment>\n            <Link to=\"/admin\"><button className=\"admin-button-header\">Admin</button></Link>\n            <div>\n              <div className=\"logged\">Kirjautuneena <Link to=\"/omasivu\" className=\"username-header\">{user.username}</Link></div>\n              <div className=\"logout\"><button className=\"logout-button-header\" onClick={() => logout()}>Kirjaudu ulos</button></div>\n            </div>\n          </Fragment>\n        }\n        <Link to=\"/valitut_tehtavat\"><div className=\"white-basket\">{basket.length > 0 && <span className=\"number-of-tasks-in-basket\">{basket.length}</span>}</div></Link>\n      </div>\n      <div className=\"admin-task-buttons-mobile\">\n        <Link to=\"/tehtavat\"><button className=\"addtask-button-mobile\">Tehtävät</button></Link>\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-mobile\">Lisää tehtävä</button></Link>\n        {user !== null && <Link to=\"/admin\"><button className=\"admin-button-mobile\">Admin</button></Link>}\n      </div>\n      <div className=\"container\">\n        <Route exact path=\"/\" render={() => <FrontPage tasks={tasks} addTaskToBasket={addTaskToBasket} handleUpdateTask={handleUpdateTask} />} />\n        <Route exact path=\"/tehtava/:id\" render={(match) => <Task {...match} user={user} rules={rules} seriess={seriess} languages={languages} addTaskToBasket={addTaskToBasket} handleAddTask={handleAddTask} handleUpdateTask={handleUpdateTask} handleDeleteTask={handleDeleteTask} />} />\n        <Route path=\"/tehtavat\" render={() => <TaskList user={user} originalTasks={tasks} categories={categories} rules={rules} seriess={seriess} addTaskToBasket={addTaskToBasket} handleUpdateTask={handleUpdateTask} handleDeleteTask={handleDeleteTask} />} />\n        <Route path=\"/valitut_tehtavat\" render={() => <Basket tasks={basket} removeTaskFromBasket={removeTaskFromBasket} removeAllFromBasket={removeAllFromBasket} handleUpdateTask={handleUpdateTask} />} />\n        <Route path=\"/kirjautuminen\" render={() => <Login setUser={setUser} />} />\n        <Route path=\"/lisaa_tehtava\" render={() => <AddTask rules={rules} seriess={seriess} languages={languages} />} />\n        <Route path=\"/omasivu\" render={() => (localStorage.getItem('loggedUser') ? <User user={user} setUser={setUser} /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/admin\" render={() => (localStorage.getItem('loggedUser') ? <Admin handleAddTask={handleAddTask} handleUpdateTask={handleUpdateTask} handleDeleteTask={handleDeleteTask} /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/lisaa_admin\" render={() => (localStorage.getItem('loggedUser') ? <AddAdmin /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/lisaa_pudotusvalikkoon\" render={() => (localStorage.getItem('loggedUser') ? <AddTaskDropdown rules={rules} categories={categories} languages={languages} series={seriess} setRules={setRules} setCategories={setCategories} setLanguages={setLanguages} setSeriess={setSeriess} /> : <Redirect to=\"/\" />)} />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}