{"version":3,"sources":["components/Notification.js","services/login.js","services/token.js","components/Login.js","components/FrontPageInfo.js","components/FrontPage.js","services/task.js","services/series.js","services/rule.js","services/category.js","components/Search.js","components/TaskList.js","components/Basket.js","services/user.js","components/AddAdmin.js","components/Rule.js","services/language.js","components/Language.js","components/Series.js","components/Category.js","components/AddTaskDropdown.js","services/file.js","components/MDEditor.js","components/AddTask.js","components/TaskListPending.js","components/Admin.js","components/EditUser.js","components/ChangePassword.js","components/User.js","components/Rating.js","components/ModifyTask.js","components/TaskTextDisplay.js","components/Task.js","App.js","index.js"],"names":["Notification","message","type","className","baseUrl","process","login","credentials","a","axios","post","response","data","token","newToken","Login","setUser","useState","errorMessage","setErrorMessage","username","setUsername","email","setEmail","password","setPassword","history","useHistory","handleLogin","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","tokenService","push","setTimeout","onSubmit","value","name","placeholder","onChange","target","FrontPageInfo","FrontPage","tasks","addTaskToBasket","newTasks","setNewTasks","favoriteTasks","setFavoriteTasks","useEffect","sort","compareCreated","slice","compareRatings","b","created","localeCompare","ratingsAVG","map","task","key","id","to","series","s","category","onClick","baseUrlPending","getTasks","get","getPendingTasks","config","headers","Authorization","getSearchedTasks","search","getOneTask","addtask","updateTask","put","deleteTask","delete","acceptTask","addRating","rating","updateViews","getSeries","addSeries","editSerie","serie","deleteSerie","getRules","addRule","rule","editRule","deleteRule","getCategories","addCategory","cat","editCategory","console","log","deleteCategory","Search","setTasks","setAllTasks","setSearch","handleSearch","taskService","defaultValue","TaskList","originalTasks","handleUpdateViews","allTasks","selectedCategory","setSelectedCategory","selectedSeries","setSelectedSeries","selectedRules","setSelectedRules","categories","setCategories","rules","setRules","isClearable","seriess","setSeriess","categoryService","then","seriesService","ruleService","length","array","i","j","includes","filter","handleDelete","confirm","t","compareNamesAsc","compareNamesDesc","compareRatingsAsc","compareRatingsDesc","getOptionLabel","option","getOptionValue","options","isMulti","c","concat","views","starRatedColor","starDimension","starSpacing","Basket","removeTaskFromBasket","getUsers","addUser","editUser","AddAdmin","setMessage","nameErrorMessage","setNameErrorMessage","usernameErrorMessage","setUsernameErrorMessage","passwordErrorMessage","setPasswordErrorMessage","emailErrorMessage","setEmailErrorMessage","setName","users","setUsers","allowNotifications","setAllowNotifications","userService","handleAddAdmin","some","defaultChecked","Rule","newRuleName","setNewRuleName","modifiedRuleName","setModifiedRuleName","modifiedRuleId","setModifiedRuleId","modifyVisible","setModifyVisible","acceptedCategories","setAcceptedCategories","modifiedCategories","setModifiedCategories","handleRuleAdd","newCategories","addedRule","handleRuleDelete","r","handleRuleModify","modifiedRule","handleModifyCategories","handleShowModify","getLanguages","addLanguage","language","editLanguage","deleteLanguage","Language","languages","setLanguages","languageName","setLanguageName","modifiedLanguageName","setModifiedLanguageName","modifiedLanguageId","setModifiedLanguageId","handleLanguageAdd","languageService","addedLanguage","handleLanguageDelete","l","handleLanguageModify","modifiedLanguage","Series","setSeries","modifiedSerieName","setModifiedSerieName","modifiedSerieId","setModifiedSerieId","modifiedSerieColor","setModifiedSerieColor","color","setColor","handleSeriesAdd","addedSerie","handleSerieDelete","handleSerieModify","modifiedSerie","onChangeComplete","hex","colors","style","backgroundColor","display","borderRadius","height","width","marginLeft","Category","newCategoryName","setNewCategoryName","modifiedCategoryName","setModifiedCategoryName","modifiedCategoryId","setModifiedCategoryId","handleCategoryAdd","addedCategory","handleCategoryDelete","handleCategoryModify","modifiedCategory","AddTaskDropdown","showCategories","setShowCategories","showRules","setShowRules","showLanguages","setShowLanguages","showSeries","setShowSeries","updateFiles","files","MDEditor","setText","setMD","mdParser","MarkdownIt","renderHTML","text","render","html","AddTask","assignmentText","setAssignmentText","gradingScale","setGradingScale","supervisorInstructions","setSupervisorInstructions","assignmentTextMD","setAssignmentTextMD","gradingScaleMD","setGradingScaleMD","supervisorInstructionsMD","setSupervisorInstructionsMD","setRule","setCategory","setLanguage","creatorName","setCreatorName","creatorEmail","setCreatorEmail","assignmentTextErrorMessage","setAssignmentTextErrorMessage","creatorNameErrorMessage","setCreatorNameErrorMessage","creatorEmailErrorMessage","setCreatorEmailErrorMessage","dropDownErrorMessage","setDropDownErrorMessage","setFiles","handleAddTask","formData","FormData","append","addedFiles","fileService","location","reload","multiple","e","values","selected","handleSeriesChange","foundRule","find","handleRuleChange","handleCategoryChange","handleLanguageChange","onDrop","newFiles","getRootProps","getInputProps","Fragment","file","stopPropagation","handleDeleteFile","TaskListPending","loggedUserJSON","getItem","loggedUser","parse","exception","handleAccept","Admin","EditUser","setShowEdit","handleEditUser","editedUser","error","ChangePassword","setShowChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","newPasswordAgain","setNewPasswordAgain","handleChangePassword","User","showEdit","showChangePassword","Rating","confirmMessage","setConfirmMessage","setRatingsAVG","ratingsAmount","setRatingsAmount","disabled","setDisabled","votesJSON","changeRating","newRating","updatedValues","votes","newVotes","Number","ModifyTask","setTask","oldFiles","setOldFiles","setNewFiles","filesToDelete","setFilesToDelete","handleModifyTask","modifiedTask","placeHolder","substring","indexOf","handleDeleteOldFile","handleDeleteNewFile","TaskTextDisplay","dangerouslySetInnerHTML","__html","Task","match","params","format","href","pending","App","basket","setBasket","basketJSON","foundBasket","removeItem","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0c1ec6e4.chunk.js","sourcesContent":["import React from 'react'\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/login`\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","let token = null\n\nconst getToken = () => token\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nexport default { getToken, setToken }\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Notification from './Notification'\nimport loginService from '../services/login'\nimport tokenService from '../services/token'\n\nconst Login = ({ setUser }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const history = useHistory()\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, email, password,\n      })\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user),\n      )\n      setUser(user)\n      tokenService.setToken(user.token)\n      setUsername('')\n      setEmail('')\n      setPassword('')\n      history.push('/')\n    } catch (exception) {\n      setErrorMessage('Väärä käyttäjätunnus/salasana')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"login-form\">\n      <h2>Kirjaudu sisään</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleLogin}>\n        <div>\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            placeholder=\"Salasana\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"login-button\">Kirjaudu</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Login\n","import React from 'react'\n\nconst FrontPageInfo = () => {\n\n  return (\n    <div className=\"frontpage-info\">\n      <h2>Kisatehtäväpankki</h2>\n      <p>Kisatehtäväpankki on arkisto,\n      johon voidaan tallettaa tehtäviä.\n      Sivustolle voi tallettaa tehtävän,\n      sekä siihen liittyvät liitetiedostot.\n      </p>\n      <p>\n        Kirjautumattomana käyttäjänä voit\n        koostaa tehtävistä kisaa varten\n        kokonaisuuksia, sekä ladata ne\n        PDF-tiedostona itsellesi. Tehtävän lisääminen \"kisakoriin\"\n        onnistuu painamalla tehtävässä esiintyvää koripainiketta,\n        ja jo mukaan otetut tehtävät löydät yläreunan koria painamalla.\n      </p>\n      <p>\n        Voit myöskin selailla tehtäviä, arvostella tehtäviä\n        ja lisätä uusia tehtäviä. Uuden tehtävän lisääminen arkistoon\n        vaatii ensin ylläpitäjän hyväksynnän uudelle tehtävälle.\n      </p>\n    </div>\n  )\n}\n\nexport default FrontPageInfo","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport FrontPageInfo from './FrontPageInfo'\n\nconst FrontPage = ({ tasks, addTaskToBasket }) => {\n  const [newTasks, setNewTasks] = useState([])\n  const [favoriteTasks, setFavoriteTasks] = useState([])\n\n  useEffect(() => {\n    setNewTasks([...tasks].sort(compareCreated).slice(0, 5))\n    setFavoriteTasks([...tasks].sort(compareRatings).slice(0, 5))\n  }, [tasks])\n\n  const compareCreated = (a, b) => {\n    return b.created.localeCompare(a.created)\n  }\n\n  const compareRatings = (a, b) => {\n    return b.ratingsAVG - a.ratingsAVG\n  }\n\n  return (\n    <div className=\"frontpage\">\n      <h1>Tervetuloa Kisatehtäväpankkiin!</h1>\n      <div className=\"task-list frontpage-container\">\n        <FrontPageInfo />\n        <div className=\"new-favorite-lists\">\n          <div className=\"new-list\">\n            <div className=\"image-on-background\">\n              <h2>Uusimmat tehtävät</h2>\n              <div className=\"task-list-title frontpage-item\">\n                <span >Tehtävän nimi</span>\n                <span>Sarja</span>\n                <span>Kategoria</span>\n                <span></span>\n              </div>\n            </div>\n            {newTasks.map((task) => (\n              <div className=\"task-list-item frontpage-item new-item\" key={task.id}>\n                <span>\n                  <Link to={`/tehtava/${task.id}`}>\n                    {task.name}\n                  </Link>\n                </span>\n                <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n                <span>{task.category && task.category.name}</span>\n                <span><div className=\"black-basket\" onClick={() => addTaskToBasket(task)} /></span>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"favorite-list\">\n            <div className=\"image-on-background\">\n              <h2>Suosituimmat tehtävät</h2>\n              <div className=\"task-list-title frontpage-item\">\n                <span>Tehtävän nimi</span>\n                <span>Sarja</span>\n                <span>Kategoria</span>\n                <span></span>\n              </div>\n            </div>\n            {favoriteTasks.map((task) => (\n              <div className=\"task-list-item frontpage-item favorite-item\" key={task.id}>\n                <span>\n                  <Link to={`/tehtava/${task.id}`}>\n                    {task.name}\n                  </Link>\n                </span>\n                <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n                <span>{task.category && task.category.name}</span>\n                <span><div className=\"black-basket\" onClick={() => addTaskToBasket(task)} /></span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default FrontPage\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/task`\nconst baseUrlPending = `${process.env.REACT_APP_API_URL}/task/pending`\n\n\nconst getTasks = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getPendingTasks = async () => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  const response = await axios.get(baseUrlPending, config)\n  return response.data\n}\n\nconst getSearchedTasks = async (search) => {\n  const response = await axios.post(`${baseUrl}/search`, search)\n  return response.data\n}\n\nconst getOneTask = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst addtask = async (task) => {\n  let config = null\n  const token = tokenService.getToken()\n\n  if (token) {\n    config = {\n      headers: { Authorization: token }\n    }\n  }\n\n  const response = await axios.post(baseUrl, task, config)\n  return response.data\n}\n\nconst updateTask = async (task) => {\n  let config = null\n  const token = tokenService.getToken()\n\n  if (token) {\n    config = {\n      headers: { Authorization: token },\n    }\n  }\n\n  const response = await axios.put(`${baseUrl}/${task.id}`, task, config)\n  return response.data\n}\n\nconst deleteTask = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nconst acceptTask = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  const response = await axios.put(`${baseUrl}/${id}/accept`, id, config)\n  return response.data\n}\n\nconst addRating = async (id, rating) => {\n\n  const response = await axios.post(`${baseUrl}/${id}/rate`, rating)\n  return response.data\n}\n\n\nconst updateViews = async (id) => {\n  const response = await axios.post(`${baseUrl}/${id}/views`)\n  return response.data\n}\n\nexport default { addtask, getTasks, getOneTask, getSearchedTasks, updateTask, deleteTask, getPendingTasks, acceptTask, updateViews, addRating }\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/series`\n\nconst getSeries = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addSeries = async (series) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, series, config)\n  return response.data\n}\n\nconst editSerie = async (serie) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${serie.id}`, serie, config)\n  return response.data\n\n}\n\nconst deleteSerie = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addSeries, getSeries, deleteSerie, editSerie }\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/rule`\n\nconst getRules = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addRule = async (rule) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, rule, config)\n  return response.data\n}\n\nconst editRule = async (rule) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${rule.id}`, rule, config)\n  return response.data\n\n}\n\nconst deleteRule = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addRule, getRules, editRule, deleteRule }\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/category`\n\nconst getCategories = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addCategory = async (cat) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, cat, config)\n  return response.data\n}\n\nconst editCategory = async (category) => {\n  console.log(category)\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${category.id}`, category, config)\n  return response.data\n\n}\n\nconst deleteCategory = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\n\nexport default { addCategory, getCategories, editCategory, deleteCategory }\n","import React, { useState } from 'react'\nimport taskService from '../services/task'\nimport Notification from './Notification'\n\nconst Search = ({ setTasks, setAllTasks }) => {\n\n  const [search, setSearch] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const handleSearch = async (event) => {\n    event.preventDefault()\n    try {\n      const response = await taskService.getSearchedTasks({ search })\n      setTasks(response)\n      setAllTasks(response)\n    } catch (exception) {\n      setErrorMessage('Haku ei onnistunut')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleSearch} className=\"search-form\">\n        <input\n          className=\"search-input\"\n          type=\"text\"\n          defaultValue=''\n          name=\"search\"\n          placeholder=\"Hakutermi\"\n          onChange={({ target }) => setSearch(target.value)}\n        />\n        <button type=\"submit\" className=\"search-tasks-button\">Hae</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Search","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport taskService from '../services/task'\nimport seriesService from '../services/series'\nimport ruleService from '../services/rule'\nimport categoryService from '../services/category'\nimport Notification from './Notification'\nimport Select from 'react-select'\nimport Search from './Search'\nimport StarRatings from 'react-star-ratings'\n\nconst TaskList = ({ user, originalTasks, addTaskToBasket, handleUpdateViews }) => {\n  const [tasks, setTasks] = useState(originalTasks)\n  const [allTasks, setAllTasks] = useState(originalTasks)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [selectedCategory, setSelectedCategory] = useState([])\n  const [selectedSeries, setSelectedSeries] = useState([])\n  const [selectedRules, setSelectedRules] = useState('')\n  const [categories, setCategories] = useState([])\n  const [series, setSeries] = useState([])\n  const [rules, setRules] = useState([])\n  const [isClearable, setIsClearable] = useState(true)\n  const [seriess, setSeriess] = useState([])\n\n  useEffect(() => {\n    categoryService.getCategories().then((response) => {\n      setCategories(response)\n    })\n\n    seriesService.getSeries().then((response) => {\n      setSeriess(response)\n    })\n\n    ruleService.getRules().then((response) => {\n      setRules(response)\n    })\n  }, [])\n\n  useEffect(() => {\n    setTasks(originalTasks)\n    setAllTasks(originalTasks)\n  }, [originalTasks])\n\n  useEffect(() => {\n    if (selectedSeries.length > 0 && selectedCategory.length > 0 && selectedRules) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedSeries.length > 0 && selectedCategory.length > 0) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedSeries.length > 0 && selectedRules) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedCategory.length > 0 && selectedRules) {\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id) && task.rules.id === selectedRules.id))\n    } else if (selectedSeries.length > 0) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedCategory.length > 0) {\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id)))\n    } else if (selectedRules) {\n      setTasks(allTasks.filter(task => task.rules.id === selectedRules.id))\n    } else {\n      setTasks(allTasks)\n    }\n  }, [selectedCategory, selectedSeries, selectedRules])\n\n  const handleDelete = async (task) => {\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\n        await taskService.deleteTask(task.id)\n        setTasks(tasks.filter(t => t.id !== task.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSeriesFiltering = (series) => {\n    if (series && series.length > 0) {\n      setSelectedSeries(series.map(s => s.id))\n    } else {\n      setSelectedSeries([])\n      setTasks(allTasks)\n    }\n  }\n\n  const handleCategoryFiltering = (category) => {\n    if (category && category.length > 0) {\n      setSelectedCategory(category.map(c => c.id))\n    } else {\n      setSelectedCategory([])\n      setTasks(allTasks)\n    }\n  }\n\n  const handleRuleFiltering = (rules) => {\n    if (rules) {\n      setSelectedRules(rules)\n    } else {\n      setSelectedRules('')\n      setTasks(allTasks)\n    }\n  }\n\n  const handleSortByNameAsc = () => {\n    setTasks(tasks.sort(compareNamesAsc).concat([]))\n  }\n\n  const handleSortByNameDesc = () => {\n    setTasks(tasks.sort(compareNamesDesc).concat([]))\n  }\n\n  const handleSortByRatingsAsc = () => {\n    setTasks(tasks.sort(compareRatingsAsc).concat([]))\n  }\n\n  const handleSortByRatingsDesc = () => {\n    setTasks(tasks.sort(compareRatingsDesc).concat([]))\n  }\n\n  const compareNamesAsc = (a, b) => {\n    return b.name.localeCompare(a.name)\n  }\n\n  const compareNamesDesc = (a, b) => {\n    return a.name.localeCompare(b.name)\n  }\n\n  const compareRatingsAsc = (a, b) => {\n    return a.ratingsAVG - b.ratingsAVG\n  }\n\n  const compareRatingsDesc = (a, b) => {\n    return b.ratingsAVG - a.ratingsAVG\n  }\n\n  return (\n    <div className=\"task-list\">\n      <h1>Kisatehtäväpankki</h1>\n      <div className=\"search-filter-container\">\n        <div className=\"search\"><Search setTasks={setTasks} setAllTasks={setAllTasks} /></div>\n\n        <div className=\"filter\">\n          <Select\n            name=\"filter-series\"\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleSeriesFiltering}\n            options={seriess}\n            isClearable={isClearable}\n            placeholder={\"Sarja\"}\n            isMulti={true}\n          />\n        </div>\n\n        <div className=\"filter\">\n          <Select\n            name=\"filter-category\"\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleCategoryFiltering}\n            options={categories}\n            isClearable={isClearable}\n            placeholder={\"Kategoria\"}\n            isMulti={true}\n          />\n        </div>\n\n        <div className=\"filter\">\n          <Select\n            name=\"filter-rules\"\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleRuleFiltering}\n            options={rules}\n            isClearable={isClearable}\n            placeholder={\"Säännöt\"}\n          />\n        </div>\n      </div>\n\n      <Notification message={errorMessage} />\n      {tasks && tasks.length > 0 &&\n        <div className=\"task-list-title\">\n          <span className=\"arrow-inline\">Tehtävän nimi <span className=\"arrow-container\"><i className=\"name-arrow-up\" onClick={handleSortByNameAsc} /><i className=\"name-arrow-down\" onClick={handleSortByNameDesc} /></span></span>\n          <span>Sarja</span>\n          <span>Kategoria</span>\n          <span className=\"arrow-inline\">Arvostelu <span className=\"arrow-container\"><i className=\"rating-arrow-up\" onClick={handleSortByRatingsAsc} /><i className=\"rating-arrow-down\" onClick={handleSortByRatingsDesc} /></span></span>\n          {user && <span></span>}\n          <span></span>\n        </div>\n      }\n      {tasks.map((task) => (\n        <div className=\"task-list-item\" key={task.id}>\n          <span>\n            <Link to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task.id)}>\n              {task.name}\n            </Link>\n            <p>Katselukertoja: {task.views}</p>\n          </span>\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n          <span>{task.category && task.category.name}</span>\n          <span>\n            <StarRatings\n              rating={task.ratingsAVG}\n              starRatedColor=\"#f0e105\"\n              starDimension=\"20px\"\n              starSpacing=\"10px\"\n            />\n          </span>\n          {user && <span className=\"task-list-delete\"><button className=\"delete-button\" onClick={() => handleDelete(task)}>Poista</button></span>}\n          <span><div className=\"black-basket\" onClick={() => addTaskToBasket(task)} /></span>\n        </div>\n      ))}\n    </div>\n\n  )\n}\n\nexport default TaskList\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport taskService from '../services/task'\nimport Notification from './Notification'\n\nconst Basket = ({ tasks, removeTaskFromBasket, handleUpdateViews }) => {\n\n  return (\n    <div className=\"task-list\">\n      <h2>Kisaan valitut tehtävät</h2>\n\n      {tasks && tasks.length === 0 && <div>Ei valittuja tehtäviä</div>}\n\n      {tasks && tasks.length > 0 &&\n        <div className=\"task-list-title\">\n          <span>Tehtävän nimi</span>\n          <span>Sarja</span>\n          <span>Kategoria</span>\n          <span></span>\n        </div>\n      }\n      {tasks.map((task) => (\n        <div className=\"task-list-item\" key={task.id}>\n          <span>\n            <Link to={`/tehtava/${task.id}`} onClick={() => handleUpdateViews(task.id)}>\n              {task.name}\n            </Link>\n            <p>Katselukertoja: {task.views}</p>\n          </span>\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n          <span>{task.category && task.category.name}</span>\n          <span className=\"delete-task-from-basket\" onClick={() => removeTaskFromBasket(task.id)}>x</span>\n        </div>\n      ))}\n    </div>\n\n  )\n}\n\nexport default Basket\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/user`\n\nconst getUsers = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addUser = async (credentials) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() }\n  }\n  const response = await axios.post(baseUrl, credentials, config)\n  return response.data\n}\n\nconst editUser = async (user) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() }\n  }\n\n  const response = await axios.put(baseUrl, user, config)\n  return response.data\n}\n\nexport default { addUser, getUsers, editUser }\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst AddAdmin = () => {\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(null)\n  const [emailErrorMessage, setEmailErrorMessage] = useState(null)\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [users, setUsers] = useState([])\n  const [email, setEmail] = useState('')\n  const [allowNotifications, setAllowNotifications] = useState(true)\n\n  useEffect(() => {\n    userService.getUsers().then((response) => {\n      setUsers(response)\n    })\n  }, [])\n\n  const handleAddAdmin = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setUsernameErrorMessage(null)\n    setPasswordErrorMessage(null)\n    setEmailErrorMessage(null)\n    if (name.length < 3) {\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\n    }\n    if (username.length < 3) {\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\n    }\n    if (password.length < 3) {\n      setPasswordErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\n    }\n    if (users.some((user) => (user.username === username))) {\n      setUsernameErrorMessage('Käyttäjätunnus on varattu')\n    }\n\n    if (name.length < 3 || username.length < 3 || password.length < 3\n      || users.some((user) => (user.username === username))) {\n      return\n    }\n    try {\n      await userService.addUser({\n        name, username, email, password, allowNotifications\n      })\n      setName('')\n      setUsername('')\n      setEmail('')\n      setPassword('')\n      setAllowNotifications(true)\n      setMessage('Ylläpitäjä lisätty!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setErrorMessage('Lisääminen epäonnistui')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"signup-form\">\n      <h2>Lisää ylläpitäjä</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleAddAdmin}>\n        <div className=\"Testi\">\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={usernameErrorMessage} type=\"error\" />\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={emailErrorMessage} type=\"error\" />\n          <input\n            className=\"email\"\n            type=\"email\"\n            value={email}\n            name=\"email\"\n            placeholder=\"Sähköpostiosoite\"\n            onChange={({ target }) => setEmail(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={passwordErrorMessage} type=\"error\" />\n          <input\n            className=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            placeholder=\"Salasana\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <div>\n          <label>\n            Vastaanota ilmoituksia:\n            <div className=\"admin-radio\" onChange={({ target }) => setAllowNotifications(target.value)}>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"notifications\"\n                  value={true}\n                  defaultChecked\n                />\n                Kyllä\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"notifications\"\n                  value={false}\n                />\n                Ei\n              </label>\n            </div>\n          </label>\n        </div>\n        <button type=\"submit\" className=\"signup-button\">Lisää</button>\n      </form>\n    </div>\n  )\n}\n\nexport default AddAdmin\n","import React, { useState, Fragment } from 'react'\nimport Notification from './Notification'\nimport ruleService from '../services/rule'\nimport Select from 'react-select'\n\nconst Rule = ({ rules, setRules, categories }) => {\n  const [newRuleName, setNewRuleName] = useState('')\n  const [modifiedRuleName, setModifiedRuleName] = useState('')\n  const [modifiedRuleId, setModifiedRuleId] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n  const [acceptedCategories, setAcceptedCategories] = useState([])\n  const [modifiedCategories, setModifiedCategories] = useState([])\n  const [isClearable, setIsClearable] = useState(true)\n\n  const handleRuleAdd = async (event) => {\n    event.preventDefault()\n    const newCategories = acceptedCategories\n    try {\n      const addedRule = await ruleService.addRule({\n        rules: newRuleName, acceptedCategories: acceptedCategories.map(category => category.id)\n      })\n      setNewRuleName('')\n      setAcceptedCategories([])\n      setRules(rules.concat({ ...addedRule, acceptedCategories: newCategories }))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleRuleDelete = async (rule) => {\n    try {\n      if (window.confirm(`Haluatko poistaa säännön: ${rule.name}`)) {\n        await ruleService.deleteRule(rule.id)\n        setRules(rules.filter(r => r.id !== rule.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleRuleModify = async (event) => {\n    event.preventDefault()\n    const modifiedRule = { id: modifiedRuleId, name: modifiedRuleName, acceptedCategories: modifiedCategories }\n    try {\n      await ruleService.editRule({ id: modifiedRuleId, name: modifiedRuleName, acceptedCategories: modifiedCategories.map(category => category.id) })\n      setModifyVisible(false)\n      setRules(rules.map(rule => rule.id !== modifiedRule.id ? rule : modifiedRule))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (rule) => {\n    setModifyVisible(true)\n    setModifiedRuleId(rule.id)\n    setModifiedRuleName(rule.name)\n    setModifiedCategories(rule.acceptedCategories)\n  }\n\n  const handleAddCategories = (categories) => {\n    setAcceptedCategories(categories)\n  }\n\n  const handleModifyCategories = (categories) => {\n    setModifiedCategories(categories)\n  }\n\n  return (\n    <div className=\"rule-form\">\n      <Notification message={errorMessage} type=\"error\" />\n\n      {rules && rules.map((rule) => (\n        <div className=\"rule-list-item\" key={rule.id}>\n          {modifyVisible && modifiedRuleId === rule.id ?\n            <div className=\"rule-form-item\">\n              <form onSubmit={handleRuleModify}>\n                <div className=\"item-modify\">\n                  <input\n                    className=\"rule\"\n                    type=\"text\"\n                    value={modifiedRuleName}\n                    name=\"Category\"\n                    onChange={({ target }) => setModifiedRuleName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"rule-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                </div>\n                <div className=\"modify-acceptedCategories\">\n                  <Select\n                    name=\"accepted-categories\"\n                    value={modifiedCategories}\n                    getOptionLabel={option => `${option.name}`}\n                    getOptionValue={option => `${option.id}`}\n                    onChange={handleModifyCategories}\n                    options={categories}\n                    isClearable={isClearable}\n                    placeholder={\"Säännön kategoriat\"}\n                    isMulti={true}\n                  />\n                </div>\n              </form>\n            </div>\n          :\n          <Fragment>\n            <p className=\"item-name\">{rule.name}</p>\n            <div className=\"item-buttons\">\n              <button onClick={() => handleShowModify(rule)} className=\"modify-button\">Muokkaa</button>\n              <button onClick={() => handleRuleDelete(rule)} className=\"delete-button\">Poista</button>\n            </div>\n            <div className=\"break\"></div>\n            <div className=\"accepted-categories-list\">\n              {rule.acceptedCategories && rule.acceptedCategories.map(category => (\n                  <span key={category.id}>{category.name} </span>\n                ))}\n            </div>\n          </Fragment>\n          }\n        </div>))\n      }\n\n      <form onSubmit={handleRuleAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"rule\"\n            type=\"text\"\n            value={newRuleName}\n            name=\"Rules\"\n            placeholder=\"Uusi sääntö\"\n            onChange={({ target }) => setNewRuleName(target.value)}\n          />\n          <button type=\"submit\" className=\"rule-add-button\">Lisää</button>\n        </div>\n\n        <div className=\"add-acceptedCategories\">\n          <Select\n            name=\"accepted-categories\"\n            value={acceptedCategories}\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleAddCategories}\n            options={categories}\n            isClearable={isClearable}\n            placeholder={\"Uuden säännön kategoriat\"}\n            isMulti={true}\n          />\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\n\nexport default Rule\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/language`\n\nconst getLanguages = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addLanguage = async (language) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, language, config)\n  return response.data\n}\n\nconst editLanguage = async (language) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.put(`${baseUrl}/${language.id}`, language, config)\n  return response.data\n\n}\n\n\nconst deleteLanguage = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addLanguage, getLanguages, deleteLanguage, editLanguage }\n","import React, { useState, Fragment } from 'react'\nimport Notification from './Notification'\nimport languageService from '../services/language'\n\nconst Language = ({ languages, setLanguages }) => {\n  const [languageName, setLanguageName] = useState('')\n  const [modifiedLanguageName, setModifiedLanguageName] = useState('')\n  const [modifiedLanguageId, setModifiedLanguageId] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  const handleLanguageAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedLanguage = await languageService.addLanguage({\n        language: languageName,\n      })\n      setLanguageName('')\n      setLanguages(languages.concat(addedLanguage))\n    } catch (exception) {\n      setErrorMessage('Kielen lisääminen ei onnistunut')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLanguageDelete = async (language) => {\n    try {\n      if (window.confirm(`Haluatko poistaa kielen: ${language.name}`)) {\n        await languageService.deleteLanguage(language.id)\n        setLanguages(languages.filter(l => l.id !== language.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLanguageModify = async (event) => {\n    event.preventDefault()\n    const modifiedLanguage = { id: modifiedLanguageId, name: modifiedLanguageName }\n    try {\n      await languageService.editLanguage(modifiedLanguage)\n      setModifyVisible(false)\n      setLanguages(languages.map(language => language.id !== modifiedLanguage.id ? language : modifiedLanguage))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (language) => {\n    setModifyVisible(true)\n    setModifiedLanguageId(language.id)\n    setModifiedLanguageName(language.name)\n  }\n\n  return (\n    <div className=\"language-form\">\n      <Notification message={errorMessage} type=\"error\" />\n\n      {languages && languages.map((language) => (\n        <div className=\"language-list-item\" key={language.id}>\n          {modifyVisible && modifiedLanguageId === language.id ?\n            <div className=\"language-form-item\">\n              <form onSubmit={handleLanguageModify} >\n                <div className=\"item-modify\">\n                  <input\n                    className=\"language\"\n                    type=\"text\"\n                    value={modifiedLanguageName}\n                    name=\"Language\"\n                    onChange={({ target }) => setModifiedLanguageName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"language-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n            :\n            <Fragment>\n              <p className=\"item-name\">{language.name}</p>\n              <div className=\"item-buttons\">\n                <button onClick={() => handleShowModify(language)} className=\"modify-button\">Muokkaa</button>\n                <button onClick={() => handleLanguageDelete(language)} className=\"delete-button\">Poista</button>\n              </div>\n            </Fragment>\n            }\n        </div>))\n      }\n\n      <form onSubmit={handleLanguageAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"language\"\n            type=\"text\"\n            value={languageName}\n            name=\"Language\"\n            placeholder=\"Uusi kieli\"\n            onChange={({ target }) => setLanguageName(target.value)}\n          />\n          <button type=\"submit\" className=\"language-add-button\">Lisää</button>\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\n\nexport default Language\n","import React, { useState, Fragment } from 'react'\nimport { CirclePicker } from 'react-color'\nimport Notification from './Notification'\nimport seriesService from '../services/series'\n\nconst Series = ({ series, setSeries }) => {\n  const [name, setName] = useState('')\n  const [modifiedSerieName, setModifiedSerieName] = useState('')\n  const [modifiedSerieId, setModifiedSerieId] = useState('')\n  const [modifiedSerieColor, setModifiedSerieColor] = useState('')\n  const [color, setColor] = useState('#ffffff')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  const handleSeriesAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedSerie = await seriesService.addSeries({ name, color })\n      setName('')\n      setColor('')\n      setSeries(series.concat(addedSerie))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSerieDelete = async (serie) => {\n    try {\n      if (window.confirm(`Haluatko poistaa sarjan: ${serie.name}`)) {\n        await seriesService.deleteSerie(serie.id)\n        setSeries(series.filter(s => s.id !== serie.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSerieModify = async (event) => {\n    event.preventDefault()\n    const modifiedSerie = { id: modifiedSerieId, name: modifiedSerieName, color: modifiedSerieColor }\n    try {\n      await seriesService.editSerie(modifiedSerie)\n      setModifyVisible(false)\n      setSeries(series.map(serie => serie.id !== modifiedSerie.id ? serie : modifiedSerie))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (serie) => {\n    setModifyVisible(true)\n    setModifiedSerieId(serie.id)\n    setModifiedSerieName(serie.name)\n    setModifiedSerieColor(serie.color)\n  }\n\n  return (\n    <div className=\"series-form\">\n      <Notification message={errorMessage} type=\"error\" />\n\n      {series && series.map((serie) => (\n        <div className=\"serie-list-item\" key={serie.id}>\n          {modifyVisible && modifiedSerieId === serie.id ?\n            <div className=\"serie-form-item\">\n              <form onSubmit={handleSerieModify} >\n                <div className=\"item-modify\">\n                  <input\n                    className=\"serie\"\n                    type=\"text\"\n                    value={modifiedSerieName}\n                    name=\"Serie\"\n                    onChange={({ target }) => setModifiedSerieName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"serie-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                  <div className=\"color-picker\">\n                    <CirclePicker\n                      color={modifiedSerieColor}\n                      onChangeComplete={color => setModifiedSerieColor(color.hex)}\n                      colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\n                        \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\n                    />\n                  </div>\n                </div>\n              </form>\n            </div>\n          :\n          <Fragment>\n            <p className=\"item-name\"><span>{serie.name}</span><span style={{ backgroundColor: serie.color, display: 'inline-block', borderRadius: '50%', height: '27px', width: '27px', marginLeft: '5px' }} /></p>\n            <div className=\"item-buttons\">\n              <button onClick={() => handleShowModify(serie)} className=\"modify-button\">Muokkaa</button>\n              <button onClick={() => handleSerieDelete(serie)} className=\"delete-button\">Poista</button>\n            </div>\n          </Fragment>\n          }\n        </div>))\n      }\n\n      <form onSubmit={handleSeriesAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Uusi sarja\"\n            onChange={({ target }) => setName(target.value)}\n          />\n          <button type=\"submit\" className=\"series-submit-button\">Lisää</button>\n        </div>\n        <div className=\"color-picker\">\n          <CirclePicker\n            color={color}\n            onChangeComplete={color => setColor(color.hex)}\n            colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\n              \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\n          />\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\nexport default Series\n","import React, { useState, Fragment } from 'react'\nimport Notification from './Notification'\nimport categoryService from '../services/category'\n\nconst Category = ({ categories, setCategories }) => {\n  const [newCategoryName, setNewCategoryName] = useState('')\n  const [modifiedCategoryName, setModifiedCategoryName] = useState('')\n  const [modifiedCategoryId, setModifiedCategoryId] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  const handleCategoryAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedCategory = await categoryService.addCategory({\n        category: newCategoryName\n      })\n      setNewCategoryName('')\n      setCategories(categories.concat(addedCategory))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCategoryDelete = async (category) => {\n    try {\n      if (window.confirm(`Haluatko poistaa kategorian: ${category.name}`)) {\n        await categoryService.deleteCategory(category.id)\n        setCategories(categories.filter(c => c.id !== category.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCategoryModify = async (event) => {\n    event.preventDefault()\n    const modifiedCategory = { id: modifiedCategoryId, name: modifiedCategoryName }\n    try {\n      await categoryService.editCategory(modifiedCategory)\n      setModifyVisible(false)\n      setCategories(categories.map(category => category.id !== modifiedCategory.id ? category : modifiedCategory))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (category) => {\n    setModifyVisible(true)\n    setModifiedCategoryId(category.id)\n    setModifiedCategoryName(category.name)\n  }\n\n  return (\n    <div className=\"category-form\" >\n      <Notification message={errorMessage} type=\"error\" />\n\n      {categories && categories.map((category) => (\n        <div className=\"category-list-item\" key={category.id}>\n          {modifyVisible && modifiedCategoryId === category.id ?\n            <div className=\"category-form-item\">\n              <form onSubmit={handleCategoryModify} >\n                <div className=\"item-modify\">\n                  <input\n                    className=\"category\"\n                    type=\"text\"\n                    value={modifiedCategoryName}\n                    name=\"Category\"\n                    onChange={({ target }) => setModifiedCategoryName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"category-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n            :\n            <Fragment>\n              <p className=\"item-name\">{category.name}</p>\n              <div className=\"item-buttons\">\n                <button onClick={() => handleShowModify(category)} className=\"modify-button\">Muokkaa</button>\n                <button onClick={() => handleCategoryDelete(category)} className=\"delete-button\">Poista</button>\n              </div>\n            </Fragment>\n          }\n        </div>))\n      }\n\n      <form onSubmit={handleCategoryAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"category\"\n            type=\"text\"\n            value={newCategoryName}\n            name=\"Category\"\n            placeholder=\"Uusi kategoria\"\n            onChange={({ target }) => setNewCategoryName(target.value)}\n          />\n          <button type=\"submit\" className=\"category-add-button\">Lisää</button>\n        </div>\n      </form>\n    </div>\n\n  )\n}\n\nexport default Category\n","import React, { useState, useEffect, Fragment } from 'react'\nimport Rule from './Rule'\nimport Language from './Language'\nimport Series from './Series'\nimport Category from './Category'\nimport ruleService from '../services/rule'\nimport seriesService from '../services/series'\nimport languageService from '../services/language'\nimport categoryService from '../services/category'\n\nconst AddTaskDropdown = () => {\n  const [rules, setRules] = useState([])\n  const [categories, setCategories] = useState([])\n  const [languages, setLanguages] = useState([])\n  const [series, setSeries] = useState([])\n  const [showCategories, setShowCategories] = useState(false)\n  const [showRules, setShowRules] = useState(false)\n  const [showLanguages, setShowLanguages] = useState(false)\n  const [showSeries, setShowSeries] = useState(false)\n\n  useEffect(() => {\n    ruleService.getRules().then((response) => {\n      setRules(response)\n    })\n    categoryService.getCategories().then((response) => {\n      setCategories(response)\n    })\n    seriesService.getSeries().then((response) => {\n      setSeries(response)\n    })\n    languageService.getLanguages().then((response) => {\n      setLanguages(response)\n    })\n  }, [])\n\n  return (\n    <div className=\"crls-container\">\n      <div className=\"task-types-menu\">\n        {showSeries ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowSeries(!showSeries)}>Sulje sarjat</button>\n            <Series series={series} setSeries={setSeries} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowSeries(!showSeries)}>Sarjat</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showRules ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowRules(!showRules)}>Sulje säännöt</button>\n            <Rule rules={rules} setRules={setRules} categories={categories} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowRules(!showRules)}>Säännöt</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showCategories ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowCategories(!showCategories)}>Sulje kategoriat</button>\n            <Category categories={categories} setCategories={setCategories} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowCategories(!showCategories)}>Kategoriat</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showLanguages ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowLanguages(!showLanguages)}>Sulje kielet</button>\n            <Language languages={languages} setLanguages={setLanguages} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowLanguages(!showLanguages)}>Kielet</button>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default AddTaskDropdown\n","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/file`\n\nconst updateFiles = async (files) => {\n  const config = {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }\n\n  const response = await axios.post(baseUrl, files, config)\n  return response.data\n}\n\nexport default { updateFiles }\n","import React from 'react'\nimport MarkdownIt from 'markdown-it'\nimport MdEditor from 'react-markdown-editor-lite'\nimport 'react-markdown-editor-lite/lib/index.css'\n\nconst MDEditor = ({ setText, setMD, value }) => {\n  const mdParser = new MarkdownIt()\n\n  const handleEditorChange = ({ html, text }) => {\n    setText(html)\n    setMD(text)\n  }\n\n  return (\n    <MdEditor\n      value={value}\n      renderHTML={(text) => mdParser.render(text)}\n      onChange={handleEditorChange}\n    />\n  )\n}\n\nexport default MDEditor\n\n\n\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport taskService from '../services/task'\nimport fileService from '../services/file'\nimport ruleService from '../services/rule'\nimport seriesService from '../services/series'\nimport languageService from '../services/language'\nimport MDEditor from './MDEditor'\nimport Dropzone from 'react-dropzone'\n\nconst AddTask = () => {\n\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [name, setName] = useState('')\n  const [assignmentText, setAssignmentText] = useState('')\n  const [gradingScale, setGradingScale] = useState('')\n  const [supervisorInstructions, setSupervisorInstructions] = useState('')\n  const [assignmentTextMD, setAssignmentTextMD] = useState('')\n  const [gradingScaleMD, setGradingScaleMD] = useState('')\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState('')\n  const [rules, setRules] = useState([])\n  const [rule, setRule] = useState('')\n  const [categories, setCategories] = useState([])\n  const [category, setCategory] = useState('')\n  const [seriess, setSeriess] = useState([])\n  const [series, setSeries] = useState([])\n  const [languages, setLanguages] = useState([])\n  const [language, setLanguage] = useState('')\n  const [creatorName, setCreatorName] = useState('')\n  const [creatorEmail, setCreatorEmail] = useState('')\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\n  const [files, setFiles] = useState([])\n\n  useEffect(() => {\n    ruleService.getRules().then(response => {\n      setRules(response)\n    })\n    seriesService.getSeries().then(response => {\n      setSeriess(response)\n    })\n    languageService.getLanguages().then(response => {\n      setLanguages(response)\n    })\n  }, [])\n\n  const handleRuleChange = (e) => {\n    setRule(e.target.value)\n    setCategory('')\n    if (e.target.value) {\n      const foundRule = rules.find(r => r.id === e.target.value)\n      setCategories(foundRule.acceptedCategories)\n    } else {\n      setCategories([])\n    }\n  }\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value)\n  }\n\n  const handleSeriesChange = (e) => {\n    let options = e.target.options\n    let values = []\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected && options[i].value !== '') {\n        values.push(options[i].value)\n      }\n    }\n    setSeries(values)\n  }\n\n  const handleLanguageChange = (e) => {\n    setLanguage(e.target.value)\n  }\n\n  const handleAddTask = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setAssignmentTextErrorMessage(null)\n    setCreatorNameErrorMessage(null)\n    setCreatorEmailErrorMessage(null)\n    setDropDownErrorMessage(null)\n    if (name.length < 1) {\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\n    }\n    if (assignmentText.length < 1) {\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\n    }\n    if (creatorName.length < 1) {\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\n    }\n    if (creatorEmail.length < 1) {\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\n    }\n    if (language === '' || rule === '' || series === '' || category === '') {\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\n    }\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\n            || language === '' || rule === '' || series === '' || category === '') {\n      return\n    }\n    setAssignmentText(JSON.stringify(assignmentText))\n    setGradingScale(JSON.stringify(gradingScale))\n    setSupervisorInstructions(JSON.stringify(supervisorInstructions))\n\n    let formData = new FormData()\n\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n          formData.append('filesToAdd', files[i], files[i].name)\n      }\n    }\n\n    let addedFiles = []\n\n    try {\n      addedFiles = await fileService.updateFiles(formData)\n      await taskService.addtask({\n        name, rule, category, series,\n        language, assignmentText, gradingScale,\n        creatorName, creatorEmail, supervisorInstructions,\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD,\n        files: addedFiles\n      })\n      setName('')\n      setRule('')\n      setCategory('')\n      setSeries('')\n      setLanguage('')\n      setAssignmentText('')\n      setGradingScale('')\n      setCreatorEmail('')\n      setCreatorName('')\n      setSupervisorInstructions('')\n      setMessage('Tehtävä lisätty!')\n      setTimeout(() => {\n        setMessage(null)\n        window.location.reload()\n      }, 2000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const onDrop = (newFiles) => {\n    setFiles(files.concat(newFiles))\n  }\n\n  const handleDeleteFile = (e, name) => {\n    e.stopPropagation()\n    setFiles(files.filter(file => file.name !== name))\n  }\n\n  return (\n    <div className=\"add-task-container\">\n      <h2>Lisää tehtävä</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleAddTask}>\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"task-title\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Tehtävän nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <h4>Tehtävänanto</h4>\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} />\n        </div>\n        <div>\n          <h4>Arvostelu</h4>\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} />\n        </div>\n        <div className=\"instructions\">\n          <h4>Rastimiehen ohje</h4>\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} />\n        </div>\n        <Notification message={dropDownErrorMessage} type=\"error\" />\n        <div className=\"dropdowns\">\n          <div>\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <select className=\"rule-select\" value={rule} onChange={(e) => handleRuleChange(e)}>\n              <option value=\"\">Säännöt</option>\n              {rules.map(rule => <option className=\"rule-options\" key={rule.id} value={rule.id}>{rule.name}</option>)}\n            </select>\n            <br/>\n            <select className=\"category-select\" value={category} onChange={(e) => handleCategoryChange(e)}>\n              <option value=\"\">Kategoria</option>\n              {categories.map(category => <option className=\"category-options\" key={category.id} value={category.id}>{category.name}</option>)}\n            </select>\n            <br/>\n            <select className=\"language-select\" value={language} onChange={(e) => handleLanguageChange(e)}>\n              <option value=\"\">Kieli</option>\n              {languages.map(language => <option className=\"language-options\" key={language.id} value={language.id}>{language.name}</option>)}\n            </select>\n          </div>\n        </div>\n        <div className=\"creator\">\n          <div>\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              value={creatorName}\n              name=\"CreatorName\"\n              placeholder=\"Lisääjän nimi\"\n              onChange={({ target }) => setCreatorName(target.value)}\n            />\n          </div>\n          <div>\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              value={creatorEmail}\n              name=\"CreatorEmail\"\n              placeholder=\"Lisääjän sähköposti\"\n              onChange={({ target }) => setCreatorEmail(target.value)}\n            />\n          </div>\n        </div>\n\n        <Dropzone onDrop={onDrop}>\n          {({getRootProps, getInputProps}) => (\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              <div className=\"files\">\n                <div className=\"title\">Liitetiedostot</div>\n                {files.length > 0 &&\n                  <React.Fragment>\n                    {files.map((file) => (\n                      <div key={file.name}>{file.name}<b onClick={(e) => handleDeleteFile(e, file.name)}>x</b></div>\n                    ))}\n                  </React.Fragment>\n                }\n              </div>\n            </div>\n          )}\n        </Dropzone>\n\n        <button type=\"submit\" className=\"add-task-button\">Lisää tehtävä</button>\n      </form>\n    </div>\n  )\n}\nexport default AddTask","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport taskService from '../services/task'\nimport Notification from './Notification'\nimport tokenService from '../services/token'\n\n\nconst TaskListPending = () => {\n  const [tasks, setTasks] = useState([])\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    if (!tokenService.getToken()) {\n      const loggedUserJSON = window.localStorage.getItem('loggedUser')\n      if (loggedUserJSON) {\n        const loggedUser = JSON.parse(loggedUserJSON)\n        tokenService.setToken(loggedUser.token)\n      }\n    }\n    taskService.getPendingTasks().then((response) => {\n      setTasks(response)\n    })\n  }, [])\n\n  const handleAccept = (id) => {\n    try {\n      taskService.acceptTask(id)\n      setTasks(tasks.filter(t => t.id !== id))\n      setMessage('Tehtävä hyväksytty')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleDelete = async (id) => {\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${tasks.find(t => t.id === id).name}`)) {\n        await taskService.deleteTask(id)\n        setTasks(tasks.filter(t => t.id !== id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"task-list\">\n      <h1>Hyväksyntää odottavat kisatehtävät</h1>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      {tasks && tasks.length > 0 &&\n        <div className=\"task-list-title\">\n          <span>Tehtävän nimi</span>\n          <span>Sarja</span>\n          <span>Kategoria</span>\n          <span></span>\n          <span></span>\n        </div>\n      }\n      {tasks.map((task) => (\n        <div className={`task-list-item pending`} key={task.id}>\n          <span>\n            <Link to={`/tehtava/${task.id}`}>\n              {task.name}\n            </Link>\n          </span>\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n          <span>{task.category && task.category.name}</span>\n          <span>\n            <button className=\"accept-button\" onClick={() => handleAccept(task.id)}>Hyväksy</button>\n            <button className=\"delete-button\" onClick={() => handleDelete(task.id)}>Poista</button>\n          </span>\n          <span></span>\n        </div>\n      ))}\n\n    </div>\n\n  )\n}\n\nexport default TaskListPending\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport TaskListPending from './TaskListPending'\n\nconst Admin = () => (\n  <div>\n    <TaskListPending />\n    <Link to=\"/omasivu\">Omat tiedot</Link>\n    <br />\n    <Link to=\"/lisaa_admin\">Lisää ylläpitäjä</Link>\n    <br />\n    <Link to=\"/lisaa_pudotusvalikkoon\">Hallinnoi sääntöjä/kieliä/sarjoja/kategorioita</Link>\n  </div>\n)\n\nexport default Admin\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst EditUser = ({ setShowEdit, user, setUser, setMessage }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\n  const [emailErrorMessage, setEmailErrorMessage] = useState(null)\n  const [name, setName] = useState(user.name)\n  const [username, setUsername] = useState(user.username)\n  const [email, setEmail] = useState(user.email)\n  const [allowNotifications, setAllowNotifications] = useState(user.allowNotifications)\n\n  const handleEditUser = async (event) => {\n\n\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setUsernameErrorMessage(null)\n    setEmailErrorMessage(null)\n    if (name.length < 3) {\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\n    }\n    if (username.length < 3) {\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\n    }\n    if (email.length < 5) {\n      setEmailErrorMessage('Sähköpostissa pitää olla vähintään 5 kirjainta')\n    }\n    if (name.length < 3 || username.length < 3) {\n      return\n    }\n    try {\n      const editedUser = await userService.editUser({\n        name, username, email, allowNotifications\n      })\n      setUser(editedUser)\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(editedUser),\n      )\n      setShowEdit(false)\n      setMessage('Tietoja muokattu!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"username already exists\") {\n        setErrorMessage('Käyttäjätunnus on varattu')\n      } else {\n        setErrorMessage('Muokkaaminen epäonnistui')\n      }\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n\n    <div className=\"edit-user-form\">\n      <h2>Omat tiedot</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleEditUser}>\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <label>Nimi</label><br />\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={usernameErrorMessage} type=\"error\" />\n          <label>Käyttäjätunnus</label><br />\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={emailErrorMessage} type=\"error\" />\n          <label>Sähköposti</label><br />\n          <input\n            className=\"email\"\n            type=\"text\"\n            value={email}\n            name=\"Email\"\n            placeholder=\"Sähköposti\"\n            onChange={({ target }) => setEmail(target.value)}\n          />\n        </div>\n        <div>\n          <label>\n            Vastaanota ilmoituksia:\n            <div className=\"admin-radio\" onChange={({ target }) => setAllowNotifications(target.value)}>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"notifications\"\n                  value={true}\n                  defaultChecked={allowNotifications}\n                />\n                Kyllä\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"notifications\"\n                  value={false}\n                  defaultChecked={!allowNotifications}\n                />\n                Ei\n              </label>\n            </div>\n          </label>\n        </div>\n        <button type=\"submit\" className=\"edit-button\">Tallenna</button>\n        <button onClick={() => setShowEdit(false)} className=\"cancel-button\">Peruuta</button>\n      </form>\n    </div>\n  )\n}\n\nexport default EditUser\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst ChangePassword = ({ setShowChangePassword, setMessage }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [newPasswordAgain, setNewPasswordAgain] = useState('')\n\n  const handleChangePassword = async (event) => {\n    event.preventDefault()\n    setErrorMessage(null)\n    if (newPassword.length < 3) {\n      setErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\n      return\n    }\n    if (newPassword !== newPasswordAgain) {\n      setErrorMessage('Salasanat eivät täsmää')\n      return\n    }\n    try {\n      await userService.editUser({\n        oldPassword, newPassword\n      })\n      setOldPassword('')\n      setNewPassword('')\n      setNewPasswordAgain('')\n      setShowChangePassword(false)\n      setMessage('Salasana vaihdettu!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"incorrect password\") {\n        setErrorMessage('Vanha salasana ei täsmää')\n      } else {\n        setErrorMessage('Salasanan vaihtaminen epäonnistui')\n      }\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"change-password-form\">\n      <h2>Vaihda salasana</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleChangePassword}>\n        <div>\n          <input\n            className=\"old-password\"\n            type=\"password\"\n            value={oldPassword}\n            placeholder=\"Vanha salasana\"\n            onChange={({ target }) => setOldPassword(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"new-password\"\n            type=\"password\"\n            value={newPassword}\n            placeholder=\"Uusi salasana\"\n            onChange={({ target }) => setNewPassword(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"new-password-again\"\n            type=\"password\"\n            value={newPasswordAgain}\n            placeholder=\"Uusi salasana uudelleen\"\n            onChange={({ target }) => setNewPasswordAgain(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"change-password-button\">Tallenna</button>\n        <button onClick={() => setShowChangePassword(false)} className=\"cancel-button\">Peruuta</button>\n      </form>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport EditUser from './EditUser'\nimport ChangePassword from './ChangePassword'\n\nconst User = ({ user, setUser }) => {\n  const [message, setMessage] = useState(null)\n  const [showEdit, setShowEdit] = useState(false)\n  const [showChangePassword, setShowChangePassword] = useState(false)\n\n  const editUser = () => {\n    setShowChangePassword(false)\n    setShowEdit(true)\n  }\n\n\n  const changePassword = () => {\n    setShowEdit(false)\n    setShowChangePassword(true)\n  }\n\n  return (\n    <div>\n      {user\n        && (\n          <div className=\"user-info\">\n            {!showEdit && !showChangePassword\n              && (\n                <div>\n                  <Notification message={message} type=\"success\" />\n                  <h2>Omat tiedot</h2>\n                  <p>\n                    <b>Nimi: </b>\n                    {user.name}\n                  </p>\n                  <p>\n                    <b>Käyttäjätunnus: </b>\n                    {user.username}\n                  </p>\n                  <p>\n                    <b>Sähköpostiosoite: </b>\n                    {user.email}\n                  </p>\n                  <p>\n                    <b>Ilmoitukset: </b>\n                    {user.allowNotifications ?\n                      <span>Päällä</span>\n                      :\n                      <span>Pois päältä</span>\n                    }\n                  </p>\n                  <button className=\"edit-user-button\" onClick={() => editUser()}>Muokkaa</button>\n                  <button className=\"change-password-button\" onClick={() => changePassword()}>Vaihda salasana</button>\n                </div>\n              )}\n            {showEdit && <EditUser setShowEdit={setShowEdit} user={user} setUser={setUser} setMessage={setMessage} />}\n            {showChangePassword && <ChangePassword setShowChangePassword={setShowChangePassword} setMessage={setMessage} />}\n          </div>\n        )}\n    </div>\n  )\n}\n\nexport default User\n","import React, { useState, useEffect } from 'react'\nimport StarRatings from 'react-star-ratings'\nimport taskService from '../services/task'\nimport Notification from './Notification'\n\nconst Rating = ({ task }) => {\n  const [rating, setRating] = useState()\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [confirmMessage, setConfirmMessage] = useState(null)\n  const [ratingsAVG, setRatingsAVG] = useState(task.ratingsAVG)\n  const [ratingsAmount, setRatingsAmount] = useState(task.ratingsAmount)\n  const [disabled, setDisabled] = useState(false)\n\n\n  useEffect(() => {\n    const votesJSON = window.localStorage.getItem('votes')\n    if (votesJSON) {\n      const votes = JSON.parse(votesJSON)\n      const foundVote = votes.find(t => t === task.id)\n      if (foundVote) {\n        setDisabled(true)\n      }\n    }\n  }, [])\n\n  const changeRating = async (newRating) => {\n    if (!disabled) {\n      try {\n        const updatedValues = await taskService.addRating(task.id, {\n          rating: newRating\n        })\n        const votesJSON = window.localStorage.getItem('votes')\n        if (votesJSON) {\n          const votes = JSON.parse(votesJSON)\n          const newVotes = votes.concat(task.id)\n          window.localStorage.setItem('votes', JSON.stringify(newVotes))\n        }\n        setRatingsAVG(updatedValues.ratingsAVG)\n        setRatingsAmount(updatedValues.ratingsAmount)\n        setDisabled(true)\n        setConfirmMessage('Arvostelu lähetetty')\n        setTimeout(() => {\n          setConfirmMessage(null)\n        }, 2000)\n      }\n      catch (exception) {\n        setErrorMessage('Jotain meni vikaan')\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      }\n    } else {\n      setErrorMessage('Olet jo äänestänyt')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n\n  }\n\n  return (\n    <div>\n      <h4>Arvostele:</h4>\n      <StarRatings\n        rating={rating}\n        changeRating={changeRating}\n        starDimension=\"30px\"\n        starSpacing=\"10px\"\n\n      />\n      <Notification message={errorMessage} type=\"error\" />\n      <Notification message={confirmMessage} type=\"success\" />\n      <div className=\"rating\">\n        <div>\n          <h4>Keskiarvo:</h4>\n          <StarRatings\n            rating={Number(ratingsAVG)}\n            starRatedColor=\"yellow\"\n            starDimension=\"20px\"\n            starSpacing=\"10px\"\n          />\n        </div>\n        <div className=\"rating-avg\">\n          ({ratingsAmount})\n        </div>\n\n      </div>\n\n    </div>\n  )\n}\n\n\n\nexport default Rating\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport taskService from '../services/task'\nimport fileService from '../services/file'\nimport ruleService from '../services/rule'\nimport seriesService from '../services/series'\nimport languageService from '../services/language'\nimport MDEditor from './MDEditor'\nimport Dropzone from 'react-dropzone'\n\nconst ModifyTask = ({ setModifyVisible, task, setTask }) => {\n\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [name, setName] = useState(task.name)\n  const [assignmentText, setAssignmentText] = useState(task.assignmentText)\n  const [gradingScale, setGradingScale] = useState(task.gradingScale)\n  const [supervisorInstructions, setSupervisorInstructions] = useState(task.supervisorInstructions)\n  const [assignmentTextMD, setAssignmentTextMD] = useState(task.assignmentTextMD)\n  const [gradingScaleMD, setGradingScaleMD] = useState(task.gradingScaleMD)\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState(task.supervisorInstructionsMD)\n  const [rules, setRules] = useState([])\n  const [rule, setRule] = useState(task.rules ? task.rules.id : null)\n  const [categories, setCategories] = useState([])\n  const [category, setCategory] = useState(task.category ? task.category.id : null)\n  const [seriess, setSeriess] = useState([])\n  const [series, setSeries] = useState(task.series.map(s => s.id))\n  const [languages, setLanguages] = useState([])\n  const [language, setLanguage] = useState(task.language ? task.language.id : null)\n  const [creatorName, setCreatorName] = useState(task.creatorName)\n  const [creatorEmail, setCreatorEmail] = useState(task.creatorEmail)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\n  const [oldFiles, setOldFiles] = useState(task.files || [])\n  const [newFiles, setNewFiles] = useState([])\n  const [filesToDelete, setFilesToDelete] = useState([])\n\n  let id = task.id\n\n  useEffect(() => {\n    ruleService.getRules().then(response => {\n      setRules(response)\n      if (task.rules && task.rules.id) {\n        const foundRule = response.find(r => r.id === task.rules.id)\n        if (foundRule) {\n          setCategories(foundRule.acceptedCategories)\n        }\n      }\n    })\n    seriesService.getSeries().then(response => {\n      setSeriess(response)\n    })\n    languageService.getLanguages().then(response => {\n      setLanguages(response)\n    })\n  }, [])\n\n  const handleRuleChange = (e) => {\n    setRule(e.target.value)\n    setCategory('')\n    if (e.target.value) {\n      const foundRule = rules.find(r => r.id === e.target.value)\n      setCategories(foundRule.acceptedCategories)\n    } else {\n      setCategories([])\n    }\n  }\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value)\n  }\n\n  const handleSeriesChange = (e) => {\n    let options = e.target.options\n    let values = []\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected && options[i].value !== '') {\n        values.push(options[i].value)\n      }\n    }\n    setSeries(values)\n  }\n\n  const handleLanguageChange = (e) => {\n    setLanguage(e.target.value)\n  }\n\n  const handleModifyTask = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setAssignmentTextErrorMessage(null)\n    setCreatorNameErrorMessage(null)\n    setCreatorEmailErrorMessage(null)\n    setDropDownErrorMessage(null)\n    if (name.length < 1) {\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\n    }\n    if (assignmentText.length < 1) {\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\n    }\n    if (creatorName.length < 1) {\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\n    }\n    if (creatorEmail.length < 1) {\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\n    }\n    if (language === '' || rule === '' || series === '' || category === '') {\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\n    }\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\n      || language === '' || rule === '' || series === '' || category === '') {\n      return\n    }\n\n    let formData = new FormData()\n\n    formData.append('filesToDelete', filesToDelete)\n\n    if (newFiles.length > 0) {\n      for (let i = 0; i < newFiles.length; i++) {\n          formData.append('filesToAdd', newFiles[i], newFiles[i].name)\n      }\n    }\n\n    let addedFiles = []\n\n    try {\n      addedFiles = await fileService.updateFiles(formData)\n      const modifiedTask = await taskService.updateTask({\n        name, rule, category, series,\n        language, assignmentText, gradingScale,\n        creatorName, creatorEmail, supervisorInstructions, id,\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD,\n        files: oldFiles.concat(addedFiles)\n      })\n      console.log(modifiedTask)\n      setMessage('Tehtävä tallennettu!')\n      setTask(modifiedTask)\n      setTimeout(() => {\n        setMessage(null)\n        window.location.reload()\n      }, 1000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCancel = () => {\n    setModifyVisible(false)\n  }\n\n  const onDrop = (files) => {\n    setNewFiles(newFiles.concat(files))\n  }\n\n  const handleDeleteOldFile = (e, name) => {\n    e.stopPropagation()\n    setOldFiles(oldFiles.filter(file => file !== name))\n    setFilesToDelete(filesToDelete.concat(name))\n  }\n\n  const handleDeleteNewFile = (e, name) => {\n    e.stopPropagation()\n    setNewFiles(newFiles.filter(file => file.name !== name))\n  }\n\n  return (\n    <div className=\"modify-task-container\">\n      <h2>Muokkaa tehtävää</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleModifyTask} className=\"modify-form\">\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"task-title\"\n            type=\"text\"\n            defaultValue={name}\n            name=\"Name\"\n            placeholder=\"Tehtävän nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <h4>Tehtävänanto</h4>\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} value={assignmentTextMD} placeHolder=\"Tehtävänanto\" />\n        </div>\n        <div>\n          <h4>Arvostelu</h4>\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} value={gradingScaleMD} placeHolder=\"Arvostelu\" />\n        </div>\n        <div className=\"instructions\">\n          <h4>Rastimiehen ohje</h4>\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} value={supervisorInstructionsMD} placeHolder=\"Rastimiehen ohje\" />\n        </div>\n        <Notification message={dropDownErrorMessage} type=\"error\" />\n        <div className=\"dropdowns\">\n          <div>\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <select value={rule} onChange={(e) => handleRuleChange(e)}>\n              <option value=\"\">Säännöt</option>\n              {rules.map(rule => <option key={rule.id} value={rule.id}>{rule.name}</option>)}\n            </select>\n            <br/>\n            <select value={category} onChange={(e) => handleCategoryChange(e)}>\n              <option value=\"\">Kategoria</option>\n              {categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)}\n            </select>\n            <br/>\n            <select value={language} onChange={(e) => handleLanguageChange(e)}>\n              <option value=\"\">Kieli</option>\n              {languages.map(language => <option key={language.id} value={language.id}>{language.name}</option>)}\n            </select>\n          </div>\n        </div>\n        <div className=\"creator\">\n          <div>\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              defaultValue={creatorName}\n              name=\"CreatorName\"\n              placeholder=\"Muokkaajan nimi\"\n              onChange={({ target }) => setCreatorName(target.value)}\n            />\n          </div>\n          <div>\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              defaultValue={creatorEmail}\n              name=\"CreatorEmail\"\n              placeholder=\"Muokkaajan sähköposti\"\n              onChange={({ target }) => setCreatorEmail(target.value)}\n            />\n          </div>\n        </div>\n\n        <Dropzone onDrop={onDrop}>\n          {({getRootProps, getInputProps}) => (\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              <div className=\"files\">\n                <div className=\"title\">Liitetiedostot</div>\n                {oldFiles && oldFiles.length > 0 &&\n                  <React.Fragment>\n                    {oldFiles.map((file) => (\n                      <div key={file}>{file.substring(file.indexOf('-') + 1, file.length)}<b onClick={(e) => handleDeleteOldFile(e, file)}>x</b></div>\n                    ))}\n                  </React.Fragment>\n                }\n                {newFiles && newFiles.length > 0 &&\n                  <React.Fragment>\n                    {newFiles.map((file) => (\n                      <div key={file.name}>{file.name}<b onClick={(e) => handleDeleteNewFile(e, file.name)}>x</b></div>\n                    ))}\n                  </React.Fragment>\n                }\n              </div>\n            </div>\n          )}\n        </Dropzone>\n\n        <div>\n          <button type=\"submit\" className=\"save-task-button\">Tallenna</button>\n          <button onClick={() => handleCancel()} className=\"return-button\">Peruuta</button>\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default ModifyTask","import React from 'react'\n\nconst TaskTextDisplay = ({ text }) => {\n  const htmlConverter = () => {\n    return { __html: `${text}` }\n  }\n\n  return (\n    <div dangerouslySetInnerHTML={htmlConverter()} />\n  )\n}\n\nexport default TaskTextDisplay","import React, { useState, useEffect } from 'react'\nimport taskService from '../services/task'\nimport Rating from './Rating'\nimport ModifyTask from './ModifyTask'\nimport Notification from './Notification'\nimport TaskTextDisplay from './TaskTextDisplay'\nimport Moment from 'react-moment'\nimport { useHistory } from 'react-router-dom'\n\nconst Task = ({ match, user, addTaskToBasket }) => {\n\n  const [task, setTask] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const history = useHistory()\n\n  useEffect(() => {\n    taskService.getOneTask(match.params.id).then((response) => {\n      setTask(response)\n    })\n  }, [])\n\n  const handleDelete = () => {\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\n        taskService.deleteTask(task.id)\n        setMessage('Tehtävä poistettu')\n        setTimeout(() => {\n          setMessage(null)\n          if (task.pending) {\n            history.push('/admin')\n          } else {\n            history.push('/')\n          }\n        }, 2000)\n      }\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleAccept = () => {\n    try {\n      taskService.acceptTask(task.id)\n      setMessage('Tehtävä hyväksytty')\n      setTimeout(() => {\n        setMessage(null)\n        history.push('/admin')\n      }, 2000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      {modifyVisible ?\n        <ModifyTask setModifyVisible={setModifyVisible} task={task} setTask={setTask} />\n        :\n        <div className=\"task-view-info-background\">\n          <Notification message={message} type=\"success\" />\n          <Notification message={errorMessage} type=\"error\" />\n          {task &&\n            <div className=\"task-view-info\">\n              <h2>{task.name}</h2>\n              <div className=\"task-rating\">\n                <Rating task={task} />\n              </div>\n              <div>\n                <h2>{task.name}<span><div className=\"black-basket basket-task-view\" onClick={() => addTaskToBasket(task)} /></span></h2>\n              </div>\n              <h3>Tehtävänanto:</h3>\n              <TaskTextDisplay text={task.assignmentText} />\n              <h3>Rastimiehen ohjeet:</h3>\n              <TaskTextDisplay text={task.supervisorInstructions} />\n              <h3>Arvosteluasteikko:</h3>\n              <TaskTextDisplay text={task.gradingScale} />\n              <h3>Sarja:</h3>\n              {task.series.map(s => <span key={task.id + s.id}>{s.name}<br /></span>)}\n              <h3>Kategoria:</h3>\n              <p>{task.category && task.category.name}</p>\n              <h3>Sääntöluokka:</h3>\n              <p>{task.rules && task.rules.name}</p>\n              <h3>Tehtävän viimeisin muokkaaja:</h3>\n              <p>{task.creatorName}<br />{task.creatorEmail}</p>\n              <h3>Tehtävä lisätty:</h3>\n              {task.created && <p><Moment format=\"DD.MM.YYYY HH:mm\">{task.created}</Moment></p>}\n              <h3>Liitetiedostot:</h3>\n              {task.files && task.files.length === 0 && <p>-</p>}\n              {task.files && task.files.map((file) => (\n                <div key={file}>\n                  <a href={`https://kisapankki.blob.core.windows.net/files/${file}`}>\n                    {file.substring(file.indexOf('-') + 1, file.length)}\n                  </a>\n                </div>\n              ))}\n              {user &&\n                <div className=\"buttons\">\n                  <button onClick={() => setModifyVisible(true)} className=\"modify-view-button\">Muokkaa</button>\n                  {task.pending && <button className=\"accept-button\" onClick={() => handleAccept()}>Hyväksy</button>}\n                  <button className=\"delete-button\" onClick={() => handleDelete()}>Poista</button>\n                </div>}\n            </div>\n          }\n        </div>\n\n      }\n    </div>\n\n  )\n}\n\nexport default Task\n","import React, { useState, useEffect, Fragment } from 'react'\nimport { Route, Link, Redirect, useHistory } from 'react-router-dom'\nimport Login from './components/Login'\nimport FrontPage from './components/FrontPage'\nimport TaskList from './components/TaskList'\nimport Basket from './components/Basket'\nimport AddAdmin from './components/AddAdmin'\nimport AddTaskDropdown from './components/AddTaskDropdown'\nimport AddTask from './components/AddTask'\nimport Admin from './components/Admin'\nimport User from './components/User'\nimport Task from './components/Task'\nimport tokenService from './services/token'\nimport taskService from './services/task'\n\nconst App = () => {\n  const [basket, setBasket] = useState([])\n  const [tasks, setTasks] = useState([])\n  const [user, setUser] = useState(null)\n  const history = useHistory()\n\n  useEffect(() => {\n    taskService.getTasks().then((response) => {\n      setTasks(response)\n    })\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const loggedUser = JSON.parse(loggedUserJSON)\n      setUser(loggedUser)\n      tokenService.setToken(loggedUser.token)\n    }\n    const votes = window.localStorage.getItem('votes')\n    if (!votes) {\n      const votes = []\n      window.localStorage.setItem('votes', JSON.stringify(votes))\n    }\n    const basketJSON = window.localStorage.getItem('basket')\n    \n    if (basketJSON) {\n      const foundBasket = JSON.parse(basketJSON)\n      setBasket(foundBasket)\n    }\n  }, [])\n\n  useEffect(() => {\n    window.localStorage.setItem(\n      'basket', JSON.stringify(basket)\n    )\n  }, [basket])\n\n  const logout = () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n    tokenService.setToken(null)\n    history.push('/')\n    window.location.reload()\n  }\n\n  const addTaskToBasket = (task) => {\n    const foundTask = basket.find(t => t.id === task.id)\n    if (!foundTask) {\n      setBasket(basket.concat(task))\n    }\n  }\n\n  const removeTaskFromBasket = (id) => {\n    setBasket(basket.filter(task => task.id !== id))\n  }\n\n  const handleUpdateViews = (id) => {\n    taskService.updateViews(id).then(response => {\n      setTasks(tasks.map(task => task.id !== id ? task : { ...task, views: task.views + 1 }))\n      setBasket(basket.map(task => task.id !== id ? task : { ...task, views: task.views + 1 }))\n    })\n  }\n\n  return (\n    <div>\n      <div className=\"header\">\n        <Link to=\"/\"><div className=\"logo\" /></Link>\n        <Link to=\"/tehtavat\"><button className=\"addtask-button-header\">Tehtävät</button></Link>\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-header\">Lisää tehtävä</button></Link>\n\n        {user === null ?\n          <Fragment>\n            <Link to=\"/kirjautuminen\"><button className=\"login-button-header\">Kirjaudu</button></Link>\n          </Fragment>\n          :\n          <Fragment>\n            <Link to=\"/admin\"><button className=\"admin-button-header\">Admin</button></Link>\n            <div>\n              <div className=\"logged\">Kirjautuneena <Link to=\"/omasivu\" className=\"username-header\">{user.username}</Link></div>\n              <div className=\"logout\"><button className=\"logout-button-header\" onClick={() => logout()}>Kirjaudu ulos</button></div>\n            </div>\n          </Fragment>\n        }\n        <Link to=\"/valitut_tehtavat\"><div className=\"white-basket\">{basket.length > 0 && <span className=\"number-of-tasks-in-basket\">{basket.length}</span>}</div></Link>\n      </div>\n      <div className=\"admin-task-buttons-mobile\">\n        <Link to=\"/tehtavat\"><button className=\"addtask-button-mobile\">Tehtävät</button></Link>\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-mobile\">Lisää tehtävä</button></Link>\n        {user !== null && <Link to=\"/admin\"><button className=\"admin-button-mobile\">Admin</button></Link>}\n      </div>\n      <div className=\"container\">\n        <Route exact path=\"/\" render={() => <FrontPage tasks={tasks} addTaskToBasket={addTaskToBasket} />} />\n        <Route exact path=\"/tehtava/:id\" render={(match) => <Task {...match} user={user} addTaskToBasket={addTaskToBasket} />} />\n        <Route path=\"/tehtavat\" render={() => <TaskList user={user} originalTasks={tasks} addTaskToBasket={addTaskToBasket} handleUpdateViews={handleUpdateViews} />} />\n        <Route path=\"/valitut_tehtavat\" render={() => <Basket tasks={basket} removeTaskFromBasket={removeTaskFromBasket} handleUpdateViews={handleUpdateViews} />} />\n        <Route path=\"/kirjautuminen\" render={() => <Login setUser={setUser} />} />\n        <Route path=\"/lisaa_tehtava\" render={() => <AddTask />} />\n        <Route path=\"/omasivu\" render={() => (localStorage.getItem('loggedUser') ? <User user={user} setUser={setUser} /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/admin\" render={() => (localStorage.getItem('loggedUser') ? <Admin /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/lisaa_admin\" render={() => (localStorage.getItem('loggedUser') ? <AddAdmin /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/lisaa_pudotusvalikkoon\" render={() => (localStorage.getItem('loggedUser') ? <AddTaskDropdown /> : <Redirect to=\"/\" />)} />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}