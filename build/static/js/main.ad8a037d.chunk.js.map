{"version":3,"sources":["components/Notification.js","services/login.js","services/token.js","components/Login.js","services/task.js","services/series.js","services/rule.js","services/category.js","components/Search.js","components/TaskList.js","services/user.js","components/AddAdmin.js","components/Rule.js","services/language.js","components/Language.js","components/Series.js","components/Category.js","components/AddTaskDropdown.js","services/file.js","components/MDEditor.js","components/AddTask.js","components/TaskListPending.js","components/Admin.js","components/EditUser.js","components/ChangePassword.js","components/User.js","components/ModifyTask.js","components/TaskTextDisplay.js","components/Task.js","App.js","index.js"],"names":["Notification","message","type","className","baseUrl","process","credentials","a","async","axios","post","response","data","token","newToken","Login","setUser","useState","errorMessage","setErrorMessage","username","setUsername","password","setPassword","history","useHistory","onSubmit","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","tokenService","push","setTimeout","value","name","placeholder","onChange","target","baseUrlPending","task","config","headers","Authorization","get","id","search","put","delete","series","serie","console","log","rule","cat","category","Search","setTasks","setAllTasks","setSearch","taskService","defaultValue","TaskList","allTasks","tasks","selectedCategory","setSelectedCategory","selectedSeries","setSelectedSeries","selectedRules","setSelectedRules","categories","setCategories","rules","setRules","isClearable","seriess","setSeriess","useEffect","then","categoryService","seriesService","ruleService","length","array","i","j","includes","filter","getOptionLabel","option","getOptionValue","map","s","options","isMulti","c","key","to","onClick","confirm","t","handleDelete","AddAdmin","setMessage","nameErrorMessage","setNameErrorMessage","usernameErrorMessage","setUsernameErrorMessage","passwordErrorMessage","setPasswordErrorMessage","setName","users","setUsers","userService","some","Rule","newRuleName","setNewRuleName","modifiedRuleName","setModifiedRuleName","modifiedRuleId","setModifiedRuleId","modifyVisible","setModifyVisible","acceptedCategories","setAcceptedCategories","modifiedCategories","setModifiedCategories","handleRuleModify","modifiedRule","handleModifyCategories","handleShowModify","r","handleRuleDelete","newCategories","addedRule","concat","language","Language","languages","setLanguages","languageName","setLanguageName","modifiedLanguageName","setModifiedLanguageName","modifiedLanguageId","setModifiedLanguageId","handleLanguageModify","modifiedLanguage","languageService","l","handleLanguageDelete","addedLanguage","Series","setSeries","modifiedSerieName","setModifiedSerieName","modifiedSerieId","setModifiedSerieId","modifiedSerieColor","setModifiedSerieColor","color","setColor","handleSerieModify","modifiedSerie","onChangeComplete","hex","colors","style","backgroundColor","display","borderRadius","height","width","handleSerieDelete","addedSerie","Category","newCategoryName","setNewCategoryName","modifiedCategoryName","setModifiedCategoryName","modifiedCategoryId","setModifiedCategoryId","handleCategoryModify","modifiedCategory","handleCategoryDelete","addedCategory","AddTaskDropdown","showCategories","setShowCategories","showRules","setShowRules","showLanguages","setShowLanguages","showSeries","setShowSeries","files","MDEditor","setText","setMD","mdParser","MarkdownIt","renderHTML","text","render","html","AddTask","assignmentText","setAssignmentText","gradingScale","setGradingScale","supervisorInstructions","setSupervisorInstructions","assignmentTextMD","setAssignmentTextMD","gradingScaleMD","setGradingScaleMD","supervisorInstructionsMD","setSupervisorInstructionsMD","setRule","setCategory","setLanguage","creatorName","setCreatorName","creatorEmail","setCreatorEmail","assignmentTextErrorMessage","setAssignmentTextErrorMessage","creatorNameErrorMessage","setCreatorNameErrorMessage","creatorEmailErrorMessage","setCreatorEmailErrorMessage","dropDownErrorMessage","setDropDownErrorMessage","setFiles","formData","FormData","append","addedFiles","fileService","location","reload","multiple","e","values","selected","handleSeriesChange","foundRule","find","handleRuleChange","handleCategoryChange","handleLanguageChange","onDrop","newFiles","getRootProps","getInputProps","Fragment","file","stopPropagation","handleDeleteFile","TaskListPending","loggedUserJSON","getItem","loggedUser","parse","exception","handleAccept","Admin","EditUser","setShowEdit","editedUser","error","ChangePassword","setShowChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","newPasswordAgain","setNewPasswordAgain","User","showEdit","showChangePassword","ModifyTask","setTask","oldFiles","setOldFiles","setNewFiles","filesToDelete","setFilesToDelete","modifiedTask","placeHolder","substring","indexOf","handleDeleteOldFile","handleDeleteNewFile","TaskTextDisplay","dangerouslySetInnerHTML","__html","Task","match","params","href","pending","App","removeItem","exact","path","ReactDOM","document","getElementById"],"mappings":"yPAceA,EAZM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAC/B,OAAgB,OAAZD,EACK,KAIP,yBAAKE,UAAWD,GACbD,I,gBCPDG,EAAO,UAAMC,OAAN,UAOE,EALD,SAAOC,GAAP,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACWE,IAAMC,KAAKN,EAASE,IAD/B,cACNK,EADM,yBAELA,EAASC,MAFJ,sCCJVC,EAAQ,KAQG,EANE,kBAAMA,GAMR,EAJE,SAACC,GAChBD,EAAK,iBAAaC,IC4DLC,EA3DD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACWC,mBAAS,MADpB,mBACtBC,EADsB,KACRC,EADQ,OAEGF,mBAAS,IAFZ,mBAEtBG,EAFsB,KAEZC,EAFY,OAGGJ,mBAAS,IAHZ,mBAGtBK,EAHsB,KAGZC,EAHY,KAIvBC,EAAUC,cAwBhB,OACE,yBAAKtB,UAAU,cACb,qDACA,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAC1C,0BAAMwB,SA1BU,SAAOC,GAAP,eAAApB,EAAAC,OAAA,uDAClBmB,EAAMC,iBADY,oBAAArB,EAAA,MAGGsB,EAAmB,CACpCT,WAAUE,cAJI,OAGVQ,EAHU,OAMhBC,OAAOC,aAAaC,QAClB,aAAcC,KAAKC,UAAUL,IAE/Bd,EAAQc,GACRM,EAAsBN,EAAKjB,OAC3BQ,EAAY,IACZE,EAAY,IACZC,EAAQa,KAAK,KAbG,kDAehBlB,EAAgB,mDAChBmB,YAAW,WACTnB,EAAgB,QACf,KAlBa,2DA2Bd,6BACE,2BACEhB,UAAU,WACVD,KAAK,OACLqC,MAAOnB,EACPoB,KAAK,WACLC,YAAY,0BACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBtB,EAAYsB,EAAOJ,WAGjD,6BACE,2BACEpC,UAAU,WACVD,KAAK,WACLqC,MAAOjB,EACPkB,KAAK,WACLC,YAAY,WACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBpB,EAAYoB,EAAOJ,WAGjD,4BAAQrC,KAAK,SAASC,UAAU,gBAAhC,eCxDFC,EAAO,UAAMC,OAAN,SACPuC,EAAc,UAAMvC,OAAN,iBAuEL,EA7CC,SAAOwC,GAAP,mBAAAtC,EAAAC,OAAA,uDACVsC,EAAS,MACPjC,EAAQuB,OAGZU,EAAS,CACPC,QAAS,CAAEC,cAAenC,KANhB,WAAAN,EAAA,MAUSE,IAAMC,KAAKN,EAASyC,EAAMC,IAVnC,cAURnC,EAVQ,yBAWPA,EAASC,MAXF,sCA6CD,EApEE,0BAAAL,EAAAC,OAAA,kEAAAD,EAAA,MACQE,IAAMwC,IAAI7C,IADlB,cACTO,EADS,yBAERA,EAASC,MAFD,sCAoEF,EAlDI,SAAOsC,GAAP,eAAA3C,EAAAC,OAAA,kEAAAD,EAAA,MACME,IAAMwC,IAAN,UAAa7C,EAAb,YAAwB8C,KAD9B,cACXvC,EADW,yBAEVA,EAASC,MAFC,sCAkDJ,EAvDU,SAAOuC,GAAP,eAAA5C,EAAAC,OAAA,kEAAAD,EAAA,MACAE,IAAMC,KAAN,UAAcN,EAAd,WAAgC+C,IADhC,cACjBxC,EADiB,yBAEhBA,EAASC,MAFO,sCAuDV,EA/BI,SAAOiC,GAAP,mBAAAtC,EAAAC,OAAA,uDACbsC,EAAS,MACPjC,EAAQuB,OAGZU,EAAS,CACPC,QAAS,CAAEC,cAAenC,KANb,WAAAN,EAAA,MAUME,IAAM2C,IAAN,UAAahD,EAAb,YAAwByC,EAAKK,IAAML,EAAMC,IAV/C,cAUXnC,EAVW,yBAWVA,EAASC,MAXC,sCA+BJ,EAjBI,SAAOsC,GAAP,iBAAA3C,EAAAC,OAAA,uDACXsC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,MAFX,WAAA7B,EAAA,MAKME,IAAM4C,OAAN,UAAgBjD,EAAhB,YAA2B8C,GAAMJ,IALvC,cAKXnC,EALW,yBAMVA,EAASC,MANC,sCAiBJ,EA/DS,4BAAAL,EAAAC,OAAA,uDAChBsC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,MAFN,WAAA7B,EAAA,MAICE,IAAMwC,IAAIL,EAAgBE,IAJ3B,cAIhBnC,EAJgB,yBAKfA,EAASC,MALM,sCA+DT,EARI,SAAOsC,GAAP,iBAAA3C,EAAAC,OAAA,uDACXsC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,MAFX,WAAA7B,EAAA,MAIME,IAAM2C,IAAN,UAAahD,EAAb,YAAwB8C,EAAxB,WAAqCA,EAAIJ,IAJ/C,cAIXnC,EAJW,yBAKVA,EAASC,MALC,sCChEbR,EAAO,UAAMC,OAAN,WAoCE,EA7BG,SAAOiD,GAAP,iBAAA/C,EAAAC,OAAA,uDACVsC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,MAFZ,WAAA7B,EAAA,MAKOE,IAAMC,KAAKN,EAASkD,EAAQR,IALnC,cAKVnC,EALU,yBAMTA,EAASC,MANA,sCA6BH,EAlCG,0BAAAL,EAAAC,OAAA,kEAAAD,EAAA,MACOE,IAAMwC,IAAI7C,IADjB,cACVO,EADU,yBAETA,EAASC,MAFA,sCAkCH,EATK,SAAOsC,GAAP,iBAAA3C,EAAAC,OAAA,uDACZsC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,MAFV,WAAA7B,EAAA,MAKKE,IAAM4C,OAAN,UAAgBjD,EAAhB,YAA2B8C,GAAMJ,IALtC,cAKZnC,EALY,yBAMXA,EAASC,MANE,sCASL,EApBG,SAAO2C,GAAP,iBAAAhD,EAAAC,OAAA,uDAChBgD,QAAQC,IAAIF,GACNT,EAAS,CACbC,QAAS,CAAEC,cAAeZ,MAHZ,WAAA7B,EAAA,MAMOE,IAAM2C,IAAN,UAAahD,EAAb,YAAwBmD,EAAML,IAAMK,EAAOT,IANlD,cAMVnC,EANU,yBAOTA,EAASC,MAPA,sCChBZR,EAAO,UAAMC,OAAN,SAmCE,EA5BC,SAAOqD,GAAP,iBAAAnD,EAAAC,OAAA,uDACRsC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,MAFd,WAAA7B,EAAA,MAKSE,IAAMC,KAAKN,EAASsD,EAAMZ,IALnC,cAKRnC,EALQ,yBAMPA,EAASC,MANF,sCA4BD,EAjCE,0BAAAL,EAAAC,OAAA,kEAAAD,EAAA,MACQE,IAAMwC,IAAI7C,IADlB,cACTO,EADS,yBAERA,EAASC,MAFD,sCAiCF,EAnBE,SAAO8C,GAAP,iBAAAnD,EAAAC,OAAA,uDACTsC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,MAFb,WAAA7B,EAAA,MAKQE,IAAM2C,IAAN,UAAahD,EAAb,YAAwBsD,EAAKR,IAAMQ,EAAMZ,IALjD,cAKTnC,EALS,yBAMRA,EAASC,MAND,sCAmBF,EATI,SAAOsC,GAAP,iBAAA3C,EAAAC,OAAA,uDACXsC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,MAFX,WAAA7B,EAAA,MAKME,IAAM4C,OAAN,UAAgBjD,EAAhB,YAA2B8C,GAAMJ,IALvC,cAKXnC,EALW,yBAMVA,EAASC,MANC,sCC1BbR,EAAO,UAAMC,OAAN,aAqCE,EA9BK,SAAOsD,GAAP,iBAAApD,EAAAC,OAAA,uDACZsC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,MAFV,WAAA7B,EAAA,MAKKE,IAAMC,KAAKN,EAASuD,EAAKb,IAL9B,cAKZnC,EALY,yBAMXA,EAASC,MANE,sCA8BL,EAnCO,0BAAAL,EAAAC,OAAA,kEAAAD,EAAA,MACGE,IAAMwC,IAAI7C,IADb,cACdO,EADc,yBAEbA,EAASC,MAFI,sCAmCP,EArBM,SAAOgD,GAAP,iBAAArD,EAAAC,OAAA,uDACnBgD,QAAQC,IAAIG,GACNd,EAAS,CACbC,QAAS,CAAEC,cAAeZ,MAHT,WAAA7B,EAAA,MAMIE,IAAM2C,IAAN,UAAahD,EAAb,YAAwBwD,EAASV,IAAMU,EAAUd,IANrD,cAMbnC,EANa,yBAOZA,EAASC,MAPG,sCAqBN,EAVQ,SAAOsC,GAAP,iBAAA3C,EAAAC,OAAA,uDACfsC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,MAFP,WAAA7B,EAAA,MAKEE,IAAM4C,OAAN,UAAgBjD,EAAhB,YAA2B8C,GAAMJ,IALnC,cAKfnC,EALe,yBAMdA,EAASC,MANK,sC,QCWRiD,EArCA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAAkB,EAEhB9C,mBAAS,IAFO,mBAErCkC,EAFqC,KAE7Ba,EAF6B,OAGJ/C,mBAAS,IAHL,mBAGrCC,EAHqC,KAGvBC,EAHuB,KAmB5C,OACE,6BACE,kBAAC,EAAD,CAAclB,QAASiB,EAAchB,KAAK,UAC1C,0BAAMwB,SAjBW,SAAOC,GAAP,eAAApB,EAAAC,OAAA,uDACnBmB,EAAMC,iBADa,oBAAArB,EAAA,MAGM0D,EAA6B,CAAEd,YAHrC,OAGXxC,EAHW,OAIjBmD,EAASnD,GACToD,EAAYpD,GALK,gDAOjBQ,EAAgB,sBAChBmB,YAAW,WACTnB,EAAgB,QACf,KAVc,yDAiBahB,UAAU,eACtC,2BACEA,UAAU,eACVD,KAAK,OACLgE,aAAa,GACb1B,KAAK,SACLC,YAAY,YACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBqB,EAAUrB,EAAOJ,UAE7C,4BAAQrC,KAAK,SAASC,UAAU,uBAAhC,UC4KOgE,EArME,SAAC,GAAc,IAAZrC,EAAW,EAAXA,KAAW,EACGb,mBAAS,IADZ,mBACtBmD,EADsB,KACZL,EADY,OAEH9C,mBAAS,IAFN,mBAEtBoD,EAFsB,KAEfP,EAFe,OAGW7C,mBAAS,MAHpB,mBAGtBC,EAHsB,KAGRC,EAHQ,OAImBF,mBAAS,IAJ5B,mBAItBqD,EAJsB,KAIJC,EAJI,OAKetD,mBAAS,IALxB,mBAKtBuD,EALsB,KAKNC,EALM,OAMaxD,mBAAS,IANtB,mBAMtByD,EANsB,KAMPC,EANO,OAOO1D,mBAAS,IAPhB,mBAOtB2D,EAPsB,KAOVC,EAPU,OAQD5D,mBAAS,IARR,gCASHA,mBAAS,KATN,mBAStB6D,EATsB,KASfC,EATe,OAUS9D,oBAAS,GAVlB,mBAUtB+D,EAVsB,aAWC/D,mBAAS,KAXV,mBAWtBgE,GAXsB,KAWbC,GAXa,KAa7BC,qBAAU,WACRlB,IAAuBmB,MAAK,SAACzE,GAC3BmD,EAASnD,GACToD,EAAYpD,MAGd0E,IAAgCD,MAAK,SAACzE,GACpCkE,EAAclE,MAGhB2E,IAA0BF,MAAK,SAACzE,GAC9BuE,GAAWvE,MAGb4E,IAAuBH,MAAK,SAACzE,GAC3BoE,EAASpE,QAEV,IAEHwE,qBAAU,WACR,GAAIX,EAAegB,OAAS,GAAKlB,EAAiBkB,OAAS,GAAKd,EAAe,CAE7E,IADA,IAAIe,EAAQ,GACHC,EAAI,EAAGA,EAAItB,EAASoB,OAAQE,IACnC,IAAK,IAAIC,EAAI,EAAGA,EAAIvB,EAASsB,GAAGpC,OAAOkC,OAAQG,IACzCnB,EAAeoB,SAASxB,EAASsB,GAAGpC,OAAOqC,GAAGzC,KAAOoB,EAAiBsB,SAASxB,EAASsB,GAAG9B,SAASV,KAAOkB,EAASsB,GAAGZ,MAAM5B,KAAOwB,EAAcxB,KAAOuC,EAAMG,SAASxB,EAASsB,KACnLD,EAAMpD,KAAK+B,EAASsB,IAI1B5B,EAAS2B,QACJ,GAAIjB,EAAegB,OAAS,GAAKlB,EAAiBkB,OAAS,EAAG,CAEnE,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,EAAItB,EAASoB,OAAQE,IACnC,IAAK,IAAIC,EAAI,EAAGA,EAAIvB,EAASsB,GAAGpC,OAAOkC,OAAQG,IACzCnB,EAAeoB,SAASxB,EAASsB,GAAGpC,OAAOqC,GAAGzC,KAAOoB,EAAiBsB,SAASxB,EAASsB,GAAG9B,SAASV,MAAQuC,EAAMG,SAASxB,EAASsB,KACtID,EAAMpD,KAAK+B,EAASsB,IAI1B5B,EAAS2B,QACJ,GAAIjB,EAAegB,OAAS,GAAKd,EAAe,CAErD,IADA,IAAIe,EAAQ,GACHC,EAAI,EAAGA,EAAItB,EAASoB,OAAQE,IACnC,IAAK,IAAIC,EAAI,EAAGA,EAAIvB,EAASsB,GAAGpC,OAAOkC,OAAQG,IACzCnB,EAAeoB,SAASxB,EAASsB,GAAGpC,OAAOqC,GAAGzC,KAAOkB,EAASsB,GAAGZ,MAAM5B,KAAOwB,EAAcxB,KAAOuC,EAAMG,SAASxB,EAASsB,KAC7HD,EAAMpD,KAAK+B,EAASsB,IAI1B5B,EAAS2B,QACJ,GAAInB,EAAiBkB,OAAS,GAAKd,EACxCZ,EAASM,EAASyB,QAAO,SAAAhD,GAAI,OAAIyB,EAAiBsB,SAAS/C,EAAKe,SAASV,KAAOL,EAAKiC,MAAM5B,KAAOwB,EAAcxB,YAC3G,GAAIsB,EAAegB,OAAS,EAAG,CAEpC,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,EAAItB,EAASoB,OAAQE,IACnC,IAAK,IAAIC,EAAI,EAAGA,EAAIvB,EAASsB,GAAGpC,OAAOkC,OAAQG,IACzCnB,EAAeoB,SAASxB,EAASsB,GAAGpC,OAAOqC,GAAGzC,MAAQuC,EAAMG,SAASxB,EAASsB,KAChFD,EAAMpD,KAAK+B,EAASsB,IAI1B5B,EAAS2B,QACAnB,EAAiBkB,OAAS,EACnC1B,EAASM,EAASyB,QAAO,SAAAhD,GAAI,OAAIyB,EAAiBsB,SAAS/C,EAAKe,SAASV,QAEzEY,EADSY,EACAN,EAASyB,QAAO,SAAAhD,GAAI,OAAIA,EAAKiC,MAAM5B,KAAOwB,EAAcxB,MAExDkB,KAEV,CAACE,EAAkBE,EAAgBE,IA2CtC,OACE,yBAAKvE,UAAU,aACb,uDACA,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,UAAS,kBAAC,EAAD,CAAQ2D,SAAUA,EAAUC,YAAaA,KAEjE,yBAAK5D,UAAU,UACb,kBAAC,IAAD,CACEqC,KAAK,gBACLsD,eAAgB,SAAAC,GAAM,gBAAOA,EAAOvD,OACpCwD,eAAgB,SAAAD,GAAM,gBAAOA,EAAO7C,KACpCR,SAtCoB,SAACY,GACzBA,GAAUA,EAAOkC,OAAS,EAC5Bf,EAAkBnB,EAAO2C,KAAI,SAAAC,GAAC,OAAIA,EAAEhD,QAEpCuB,EAAkB,IAClBX,EAASM,KAkCH+B,QAASlB,GACTD,YAAaA,EACbvC,YAAa,QACb2D,SAAS,KAIb,yBAAKjG,UAAU,UACb,kBAAC,IAAD,CACEqC,KAAK,kBACLsD,eAAgB,SAAAC,GAAM,gBAAOA,EAAOvD,OACpCwD,eAAgB,SAAAD,GAAM,gBAAOA,EAAO7C,KACpCR,SA1CsB,SAACkB,GAC3BA,GAAYA,EAAS4B,OAAS,EAChCjB,EAAoBX,EAASqC,KAAI,SAAAI,GAAC,OAAIA,EAAEnD,QAExCqB,EAAoB,IACpBT,EAASM,KAsCH+B,QAASvB,EACTI,YAAaA,EACbvC,YAAa,YACb2D,SAAS,KAIb,yBAAKjG,UAAU,UACb,kBAAC,IAAD,CACEqC,KAAK,eACLsD,eAAgB,SAAAC,GAAM,gBAAOA,EAAOvD,OACpCwD,eAAgB,SAAAD,GAAM,gBAAOA,EAAO7C,KACpCR,SA9CkB,SAACoC,GACvBA,EACFH,EAAiBG,IAEjBH,EAAiB,IACjBb,EAASM,KA0CH+B,QAASrB,EACTE,YAAaA,EACbvC,YAAa,uBAKnB,kBAAC,EAAD,CAAcxC,QAASiB,IACtBmD,GAASA,EAAMmB,OAAS,GACvB,yBAAKrF,UAAU,mBACb,qDACA,uCACA,2CACC2B,GAAQ,gCAGZuC,EAAM4B,KAAI,SAACpD,GAAD,OACT,yBAAK1C,UAAU,iBAAiBmG,IAAKzD,EAAKK,IACxC,8BACE,kBAAC,IAAD,CAAMqD,GAAE,mBAAc1D,EAAKK,KACxBL,EAAKL,OAGV,8BAAOK,EAAKS,OAAO2C,KAAI,SAAAC,GAAC,OAAI,yBAAKI,IAAKzD,EAAKK,GAAKgD,EAAEhD,IAAKgD,EAAE1D,KAA7B,SAC5B,8BAAOK,EAAKe,UAAYf,EAAKe,SAASpB,MACrCV,GAAQ,8BAAM,4BAAQ3B,UAAU,gBAAgBqG,QAAS,kBAxG7C,SAAO3D,GAAP,SAAAtC,EAAAC,OAAA,6DAEbuB,OAAO0E,QAAP,2CAA6C5D,EAAKL,OAFrC,kCAAAjC,EAAA,MAGT0D,EAAuBpB,EAAKK,KAHnB,OAIfY,EAASO,EAAMwB,QAAO,SAAAa,GAAC,OAAIA,EAAExD,KAAOL,EAAKK,OAJ1B,uDAOjB/B,EAAgB,sBAChBmB,YAAW,WACTnB,EAAgB,QACf,KAVc,wDAwGmDwF,CAAa9D,KAA9D,iBCnMnBzC,EAAO,UAAMC,OAAN,SAwBE,EAjBC,SAAOC,GAAP,iBAAAC,EAAAC,OAAA,uDACRsC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,MAFd,WAAA7B,EAAA,MAISE,IAAMC,KAAKN,EAASE,EAAawC,IAJ1C,cAIRnC,EAJQ,yBAKPA,EAASC,MALF,sCAiBD,EAtBE,0BAAAL,EAAAC,OAAA,kEAAAD,EAAA,MACQE,IAAMwC,IAAI7C,IADlB,cACTO,EADS,yBAERA,EAASC,MAFD,sCAsBF,EATE,SAAOkB,GAAP,iBAAAvB,EAAAC,OAAA,uDACTsC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,MAFb,WAAA7B,EAAA,MAKQE,IAAM2C,IAAIhD,EAAS0B,EAAMgB,IALjC,cAKTnC,EALS,yBAMRA,EAASC,MAND,sCCwFFgG,EAtGE,WAAO,IAAD,EACS3F,mBAAS,MADlB,mBACdhB,EADc,KACL4G,EADK,OAEmB5F,mBAAS,MAF5B,mBAEdC,EAFc,KAEAC,EAFA,OAG2BF,mBAAS,MAHpC,mBAGd6F,EAHc,KAGIC,EAHJ,OAImC9F,mBAAS,MAJ5C,mBAId+F,EAJc,KAIQC,EAJR,OAKmChG,mBAAS,MAL5C,mBAKdiG,EALc,KAKQC,EALR,OAMGlG,mBAAS,IANZ,mBAMduB,EANc,KAMR4E,EANQ,OAOWnG,mBAAS,IAPpB,mBAOdG,EAPc,KAOJC,EAPI,OAQWJ,mBAAS,IARpB,mBAQdK,EARc,KAQJC,EARI,OASKN,mBAAS,IATd,mBASdoG,EATc,KASPC,EATO,KAWrBnC,qBAAU,WACRoC,IAAuBnC,MAAK,SAACzE,GAC3B2G,EAAS3G,QAEV,IA0CH,OACE,yBAAKR,UAAU,eACb,+DACA,kBAAC,EAAD,CAAcF,QAASA,EAASC,KAAK,YACrC,kBAAC,EAAD,CAAcD,QAASiB,EAAchB,KAAK,UAC1C,0BAAMwB,SA7Ca,SAAOC,GAAP,SAAApB,EAAAC,OAAA,mDACrBmB,EAAMC,iBACNmF,EAAoB,MACpBE,EAAwB,MACxBE,EAAwB,MACpB3E,EAAKgD,OAAS,GAChBuB,EAAoB,8DAElB3F,EAASoE,OAAS,GACpByB,EAAwB,gFAEtB3F,EAASkE,OAAS,GACpB2B,EAAwB,+DAEtBE,EAAMG,MAAK,SAAC1F,GAAD,OAAWA,EAAKV,WAAaA,MAC1C6F,EAAwB,wCAEtBzE,EAAKgD,OAAS,GAAKpE,EAASoE,OAAS,GAAKlE,EAASkE,OAAS,GAC3D6B,EAAMG,MAAK,SAAC1F,GAAD,OAAWA,EAAKV,WAAaA,MAlBxB,gFAAAb,EAAA,MAsBbgH,EAAoB,CACxB/E,OAAMpB,WAAUE,cAvBC,QAyBnB8F,EAAQ,IACR/F,EAAY,IACZE,EAAY,IACZsF,EAAW,mCACXvE,YAAW,WACTuE,EAAW,QACV,KA/BgB,mDAiCnB1F,EAAgB,mCAChBmB,YAAW,WACTnB,EAAgB,QACf,KApCgB,4DA8CjB,6BACE,kBAAC,EAAD,CAAclB,QAAS6G,EAAkB5G,KAAK,UAC9C,2BACEC,UAAU,OACVD,KAAK,OACLqC,MAAOC,EACPA,KAAK,OACLC,YAAY,OACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgByE,EAAQzE,EAAOJ,WAG7C,6BACE,kBAAC,EAAD,CAActC,QAAS+G,EAAsB9G,KAAK,UAClD,2BACEC,UAAU,WACVD,KAAK,OACLqC,MAAOnB,EACPoB,KAAK,WACLC,YAAY,0BACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBtB,EAAYsB,EAAOJ,WAGjD,6BACE,kBAAC,EAAD,CAActC,QAASiH,EAAsBhH,KAAK,UAClD,2BACEC,UAAU,WACVD,KAAK,WACLqC,MAAOjB,EACPkB,KAAK,WACLC,YAAY,WACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBpB,EAAYoB,EAAOJ,WAGjD,4BAAQrC,KAAK,SAASC,UAAU,iBAAhC,kB,UC6DOsH,GA5JF,SAAC,GAAqC,IAAnC3C,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAUH,EAAiB,EAAjBA,WAAiB,EACV3D,mBAAS,IADC,mBACzCyG,EADyC,KAC5BC,EAD4B,OAEA1G,mBAAS,IAFT,mBAEzC2G,EAFyC,KAEvBC,EAFuB,OAGJ5G,mBAAS,IAHL,mBAGzC6G,EAHyC,KAGzBC,EAHyB,OAIR9G,mBAAS,MAJD,mBAIzCC,EAJyC,KAI3BC,EAJ2B,OAKNF,oBAAS,GALH,mBAKzC+G,EALyC,KAK1BC,EAL0B,OAMIhH,mBAAS,IANb,mBAMzCiH,EANyC,KAMrBC,EANqB,OAOIlH,mBAAS,IAPb,mBAOzCmH,EAPyC,KAOrBC,EAPqB,OAQVpH,oBAAS,GARC,mBAQzC+D,EARyC,KA0C1CsD,GA1C0C,KA0CvB,SAAO3G,GAAP,eAAApB,EAAAC,OAAA,uDACvBmB,EAAMC,iBACA2G,EAAe,CAAErF,GAAI4E,EAAgBtF,KAAMoF,EAAkBM,mBAAoBE,GAFhE,oBAAA7H,EAAA,MAIfgF,EAAqB,CAAErC,GAAI4E,EAAgBtF,KAAMoF,EAAkBM,mBAAoBE,EAAmBnC,KAAI,SAAArC,GAAQ,OAAIA,EAASV,SAJpH,OAKrB+E,GAAiB,GACjBlD,EAASD,EAAMmB,KAAI,SAAAvC,GAAI,OAAIA,EAAKR,KAAOqF,EAAarF,GAAKQ,EAAO6E,MAN3C,gDAQrBpH,EAAgB,sBAChBmB,YAAW,WACTnB,EAAgB,QACf,KAXkB,0DA0BnBqH,EAAyB,SAAC5D,GAC9ByD,EAAsBzD,IAGxB,OACE,yBAAKzE,UAAU,aACb,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAEzC4E,GAASA,EAAMmB,KAAI,SAACvC,GAAD,OAClB,yBAAKvD,UAAU,iBAAiBmG,IAAK5C,EAAKR,IACvC8E,GAAiBF,IAAmBpE,EAAKR,GACxC,yBAAK/C,UAAU,kBACb,0BAAMuB,SAAU4G,GACd,6BACE,2BACEnI,UAAU,OACVD,KAAK,OACLqC,MAAOqF,EACPpF,KAAK,WACLE,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBkF,EAAoBlF,EAAOJ,UAEvD,4BAAQrC,KAAK,SAASC,UAAU,oBAAhC,YACA,4BAAQqG,QAAS,kBAAMyB,GAAiB,KAAxC,YAEF,yBAAK9H,UAAU,6BACb,kBAAC,IAAD,CACEqC,KAAK,sBACLD,MAAO6F,EACPtC,eAAgB,SAAAC,GAAM,gBAAOA,EAAOvD,OACpCwD,eAAgB,SAAAD,GAAM,gBAAOA,EAAO7C,KACpCR,SAAU8F,EACVrC,QAASvB,EACTI,YAAaA,EACbvC,YAAa,8BACb2D,SAAS,OAMnB,kBAAC,WAAD,KACE,2BAAI1C,EAAKlB,MACT,4BAAQgE,QAAS,kBArDF,SAAC9C,GACxBuE,GAAiB,GACjBF,EAAkBrE,EAAKR,IACvB2E,EAAoBnE,EAAKlB,MACzB6F,EAAsB3E,EAAKwE,oBAiDIO,CAAiB/E,IAAOvD,UAAU,iBAAzD,WACA,4BAAQqG,QAAS,kBAnFF,SAAO9C,GAAP,SAAAnD,EAAAC,OAAA,6DAEjBuB,OAAO0E,QAAP,6CAA4C/C,EAAKlB,OAFhC,kCAAAjC,EAAA,MAGbgF,EAAuB7B,EAAKR,KAHf,OAInB6B,EAASD,EAAMe,QAAO,SAAA6C,GAAC,OAAIA,EAAExF,KAAOQ,EAAKR,OAJtB,uDAOrB/B,EAAgB,sBAChBmB,YAAW,WACTnB,EAAgB,QACf,KAVkB,wDAmFQwH,CAAiBjF,IAAOvD,UAAU,iBAAzD,UACA,yBAAKA,UAAU,UACf,yBAAKA,UAAU,4BACZuD,EAAKwE,oBAAsBxE,EAAKwE,mBAAmBjC,KAAI,SAAArC,GAAQ,OAC5D,0BAAM0C,IAAK1C,EAASV,IAAKU,EAASpB,KAAlC,cAQZ,0BAAMd,SAjHY,SAAOC,GAAP,iBAAApB,EAAAC,OAAA,uDACpBmB,EAAMC,iBACAgH,EAAgBV,EAFF,oBAAA3H,EAAA,MAIMgF,EAAoB,CAC1CT,MAAO4C,EAAaQ,mBAAoBA,EAAmBjC,KAAI,SAAArC,GAAQ,OAAIA,EAASV,SALpE,OAIZ2F,EAJY,OAOlBlB,EAAe,IACfQ,EAAsB,IACtBpD,EAASD,EAAMgE,OAAN,gBAAkBD,EAAlB,CAA6BX,mBAAoBU,MATxC,kDAWlBzH,EAAgB,sBAChBmB,YAAW,WACTnB,EAAgB,QACf,KAde,0DAiHahB,UAAU,YACvC,6BACE,2BACEA,UAAU,OACVD,KAAK,OACLqC,MAAOmF,EACPlF,KAAK,QACLC,YAAY,uBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBgF,EAAehF,EAAOJ,UAElD,4BAAQrC,KAAK,SAASC,UAAU,mBAAhC,gBAGF,yBAAKA,UAAU,0BACb,kBAAC,IAAD,CACEqC,KAAK,sBACLD,MAAO2F,EACPpC,eAAgB,SAAAC,GAAM,gBAAOA,EAAOvD,OACpCwD,eAAgB,SAAAD,GAAM,gBAAOA,EAAO7C,KACpCR,SA9EkB,SAACkC,GAC3BuD,EAAsBvD,IA8EduB,QAASvB,EACTI,YAAaA,EACbvC,YAAa,oCACb2D,SAAS,QCpJfhG,GAAO,UAAMC,OAAN,aAoCE,GA7BK,SAAO0I,GAAP,iBAAAxI,EAAAC,OAAA,uDACZsC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,MAFV,WAAA7B,EAAA,MAKKE,IAAMC,KAAKN,GAAS2I,EAAUjG,IALnC,cAKZnC,EALY,yBAMXA,EAASC,MANE,sCA6BL,GAlCM,0BAAAL,EAAAC,OAAA,kEAAAD,EAAA,MACIE,IAAMwC,IAAI7C,KADd,cACbO,EADa,yBAEZA,EAASC,MAFG,sCAkCN,GATQ,SAAOsC,GAAP,iBAAA3C,EAAAC,OAAA,uDACfsC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,MAFP,WAAA7B,EAAA,MAKEE,IAAM4C,OAAN,UAAgBjD,GAAhB,YAA2B8C,GAAMJ,IALnC,cAKfnC,EALe,yBAMdA,EAASC,MANK,sCASR,GApBM,SAAOmI,GAAP,iBAAAxI,EAAAC,OAAA,uDACbsC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,MAFT,WAAA7B,EAAA,MAKIE,IAAM2C,IAAN,UAAahD,GAAb,YAAwB2I,EAAS7F,IAAM6F,EAAUjG,IALrD,cAKbnC,EALa,yBAMZA,EAASC,MANG,sCC8FNoI,GA7GE,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAAmB,EACRjI,mBAAS,IADD,mBACzCkI,EADyC,KAC3BC,EAD2B,OAEQnI,mBAAS,IAFjB,mBAEzCoI,EAFyC,KAEnBC,EAFmB,OAGIrI,mBAAS,IAHb,mBAGzCsI,EAHyC,KAGrBC,EAHqB,OAIRvI,mBAAS,MAJD,mBAIzCC,EAJyC,KAI3BC,EAJ2B,OAKNF,oBAAS,GALH,mBAKzC+G,EALyC,KAK1BC,EAL0B,KAqC1CwB,EAAuB,SAAO9H,GAAP,eAAApB,EAAAC,OAAA,uDAC3BmB,EAAMC,iBACA8H,EAAmB,CAAExG,GAAIqG,EAAoB/G,KAAM6G,GAF9B,oBAAA9I,EAAA,MAInBoJ,GAA6BD,IAJV,OAKzBzB,GAAiB,GACjBiB,EAAaD,EAAUhD,KAAI,SAAA8C,GAAQ,OAAIA,EAAS7F,KAAOwG,EAAiBxG,GAAK6F,EAAWW,MAN/D,gDAQzBvI,EAAgB,sBAChBmB,YAAW,WACTnB,EAAgB,QACf,KAXsB,yDAqB7B,OACE,yBAAKhB,UAAU,iBACb,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAEzC+I,GAAaA,EAAUhD,KAAI,SAAC8C,GAAD,OAC1B,yBAAK5I,UAAU,qBAAqBmG,IAAKyC,EAAS7F,IAC/C8E,GAAiBuB,IAAuBR,EAAS7F,GAChD,yBAAK/C,UAAU,sBACb,0BAAMuB,SAAU+H,GACd,6BACE,2BACEtJ,UAAU,WACVD,KAAK,OACLqC,MAAO8G,EACP7G,KAAK,WACLE,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB2G,EAAwB3G,EAAOJ,UAE3D,4BAAQrC,KAAK,SAASC,UAAU,wBAAhC,YACA,4BAAQqG,QAAS,kBAAMyB,GAAiB,KAAxC,cAKN,kBAAC,WAAD,KACE,2BAAIc,EAASvG,MACb,4BAAQgE,QAAS,kBA/BJ,SAACuC,GACxBd,GAAiB,GACjBuB,EAAsBT,EAAS7F,IAC/BoG,EAAwBP,EAASvG,MA4BAiG,CAAiBM,IAAW5I,UAAU,iBAA7D,WACA,4BAAQqG,QAAS,kBA7DA,SAAOuC,GAAP,SAAAxI,EAAAC,OAAA,6DAErBuB,OAAO0E,QAAP,mCAA2CsC,EAASvG,OAF/B,kCAAAjC,EAAA,MAGjBoJ,GAA+BZ,EAAS7F,KAHvB,OAIvBgG,EAAaD,EAAUpD,QAAO,SAAA+D,GAAC,OAAIA,EAAE1G,KAAO6F,EAAS7F,OAJ9B,uDAOzB/B,EAAgB,sBAChBmB,YAAW,WACTnB,EAAgB,QACf,KAVsB,wDA6DM0I,CAAqBd,IAAW5I,UAAU,iBAAjE,eAMR,0BAAMuB,SAnFgB,SAAOC,GAAP,eAAApB,EAAAC,OAAA,uDACxBmB,EAAMC,iBADkB,oBAAArB,EAAA,MAGMoJ,GAA4B,CACtDZ,SAAUI,KAJU,OAGhBW,EAHgB,OAMtBV,EAAgB,IAChBF,EAAaD,EAAUH,OAAOgB,IAPR,gDAStB3I,EAAgB,yCAChBmB,YAAW,WACTnB,EAAgB,QACf,KAZmB,yDAmFahB,UAAU,YAC3C,6BACE,2BACEA,UAAU,WACVD,KAAK,OACLqC,MAAO4G,EACP3G,KAAK,WACLC,YAAY,aACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgByG,EAAgBzG,EAAOJ,UAEnD,4BAAQrC,KAAK,SAASC,UAAU,uBAAhC,mB,SC2BK4J,GA9HA,SAAC,GAA2B,IAAzBzG,EAAwB,EAAxBA,OAAQ0G,EAAgB,EAAhBA,UAAgB,EAChB/I,mBAAS,IADO,mBACjCuB,EADiC,KAC3B4E,EAD2B,OAEUnG,mBAAS,IAFnB,mBAEjCgJ,EAFiC,KAEdC,EAFc,OAGMjJ,mBAAS,IAHf,mBAGjCkJ,EAHiC,KAGhBC,EAHgB,OAIYnJ,mBAAS,IAJrB,mBAIjCoJ,EAJiC,KAIbC,EAJa,OAKdrJ,mBAAS,WALK,mBAKjCsJ,EALiC,KAK1BC,EAL0B,OAMAvJ,mBAAS,MANT,mBAMjCC,EANiC,KAMnBC,EANmB,OAOEF,oBAAS,GAPX,mBAOjC+G,EAPiC,KAOlBC,EAPkB,KAsClCwC,EAAoB,SAAO9I,GAAP,eAAApB,EAAAC,OAAA,uDACxBmB,EAAMC,iBACA8I,EAAgB,CAAExH,GAAIiH,EAAiB3H,KAAMyH,EAAmBM,MAAOF,GAFrD,oBAAA9J,EAAA,MAIhB+E,EAAwBoF,IAJR,OAKtBzC,GAAiB,GACjB+B,EAAU1G,EAAO2C,KAAI,SAAA1C,GAAK,OAAIA,EAAML,KAAOwH,EAAcxH,GAAKK,EAAQmH,MANhD,gDAQtBvJ,EAAgB,sBAChBmB,YAAW,WACTnB,EAAgB,QACf,KAXmB,yDAsB1B,OACE,yBAAKhB,UAAU,eACb,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAEzCoD,GAAUA,EAAO2C,KAAI,SAAC1C,GAAD,OACpB,yBAAKpD,UAAU,kBAAkBmG,IAAK/C,EAAML,IACzC8E,GAAiBmC,IAAoB5G,EAAML,GAC1C,yBAAK/C,UAAU,mBACb,0BAAMuB,SAAU+I,GACd,6BACE,2BACEtK,UAAU,QACVD,KAAK,OACLqC,MAAO0H,EACPzH,KAAK,QACLE,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBuH,EAAqBvH,EAAOJ,UAExD,4BAAQrC,KAAK,SAASC,UAAU,qBAAhC,YACA,4BAAQqG,QAAS,kBAAMyB,GAAiB,KAAxC,WACA,yBAAK9H,UAAU,gBACb,kBAAC,gBAAD,CACEoK,MAAOF,EACPM,iBAAkB,SAAAJ,GAAK,OAAID,EAAsBC,EAAMK,MACvDC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAC9D,UAAW,UAAW,UAAW,UAAW,UAAW,iBAOrE,kBAAC,WAAD,KACE,2BAAItH,EAAMf,KAAK,0BAAMsI,MAAO,CAAEC,gBAAiBxH,EAAMgH,MAAOS,QAAS,eAAgBC,aAAc,MAAOC,OAAQ,OAAQC,MAAO,WACjI,4BAAQ3E,QAAS,kBAxCF,SAACjD,GACxB0E,GAAiB,GACjBmC,EAAmB7G,EAAML,IACzBgH,EAAqB3G,EAAMf,MAC3B8H,EAAsB/G,EAAMgH,OAoCG9B,CAAiBlF,IAAQpD,UAAU,iBAA1D,WACA,4BAAQqG,QAAS,kBAtED,SAAOjD,GAAP,SAAAhD,EAAAC,OAAA,6DAElBuB,OAAO0E,QAAP,mCAA2ClD,EAAMf,OAF/B,kCAAAjC,EAAA,MAGd+E,EAA0B/B,EAAML,KAHlB,OAIpB8G,EAAU1G,EAAOuC,QAAO,SAAAK,GAAC,OAAIA,EAAEhD,KAAOK,EAAML,OAJxB,uDAOtB/B,EAAgB,sBAChBmB,YAAW,WACTnB,EAAgB,QACf,KAVmB,wDAsEOiK,CAAkB7H,IAAQpD,UAAU,iBAA3D,eAMN,0BAAMuB,SA3Fc,SAAOC,GAAP,eAAApB,EAAAC,OAAA,uDACtBmB,EAAMC,iBADgB,oBAAArB,EAAA,MAGK+E,EAAwB,CAAE9C,OAAM+H,WAHrC,OAGdc,EAHc,OAIpBjE,EAAQ,IACRoD,EAAS,IACTR,EAAU1G,EAAOwF,OAAOuC,IANJ,kDAQpBlK,EAAgB,sBAChBmB,YAAW,WACTnB,EAAgB,QACf,KAXiB,0DA2FahB,UAAU,YACzC,6BACE,2BACEA,UAAU,OACVD,KAAK,OACLqC,MAAOC,EACPA,KAAK,OACLC,YAAY,aACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgByE,EAAQzE,EAAOJ,UAE3C,4BAAQrC,KAAK,SAASC,UAAU,wBAAhC,gBAEF,yBAAKA,UAAU,gBACb,kBAAC,gBAAD,CACEoK,MAAOA,EACPI,iBAAkB,SAAAJ,GAAK,OAAIC,EAASD,EAAMK,MAC1CC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAC9D,UAAW,UAAW,UAAW,UAAW,UAAW,iBCVtDS,GA5GE,SAAC,GAAmC,IAAjC1G,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAAoB,EACJ5D,mBAAS,IADL,mBAC3CsK,EAD2C,KAC1BC,EAD0B,OAEMvK,mBAAS,IAFf,mBAE3CwK,EAF2C,KAErBC,EAFqB,OAGEzK,mBAAS,IAHX,mBAG3C0K,EAH2C,KAGvBC,EAHuB,OAIV3K,mBAAS,MAJC,mBAI3CC,EAJ2C,KAI7BC,EAJ6B,OAKRF,oBAAS,GALD,mBAK3C+G,EAL2C,KAK5BC,EAL4B,KAqC5C4D,EAAuB,SAAOlK,GAAP,eAAApB,EAAAC,OAAA,uDAC3BmB,EAAMC,iBACAkK,EAAmB,CAAE5I,GAAIyI,EAAoBnJ,KAAMiJ,GAF9B,oBAAAlL,EAAA,MAInB8E,EAA6ByG,IAJV,OAKzB7D,GAAiB,GACjBpD,EAAcD,EAAWqB,KAAI,SAAArC,GAAQ,OAAIA,EAASV,KAAO4I,EAAiB5I,GAAKU,EAAWkI,MANjE,gDAQzB3K,EAAgB,sBAChBmB,YAAW,WACTnB,EAAgB,QACf,KAXsB,yDAqB7B,OACE,yBAAKhB,UAAU,iBACb,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAEzC0E,GAAcA,EAAWqB,KAAI,SAACrC,GAAD,OAC5B,yBAAKzD,UAAU,qBAAqBmG,IAAK1C,EAASV,IAC/C8E,GAAiB2D,IAAuB/H,EAASV,GAChD,yBAAK/C,UAAU,sBACb,0BAAMuB,SAAUmK,GACd,6BACE,2BACE1L,UAAU,WACVD,KAAK,OACLqC,MAAOkJ,EACPjJ,KAAK,WACLE,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB+I,EAAwB/I,EAAOJ,UAE3D,4BAAQrC,KAAK,SAASC,UAAU,wBAAhC,YACA,4BAAQqG,QAAS,kBAAMyB,GAAiB,KAAxC,cAKN,kBAAC,WAAD,KACE,2BAAIrE,EAASpB,MACb,4BAAQgE,QAAS,kBA/BJ,SAAC5C,GACxBqE,GAAiB,GACjB2D,EAAsBhI,EAASV,IAC/BwI,EAAwB9H,EAASpB,MA4BAiG,CAAiB7E,IAAWzD,UAAU,iBAA7D,WACA,4BAAQqG,QAAS,kBA7DA,SAAO5C,GAAP,SAAArD,EAAAC,OAAA,6DAErBuB,OAAO0E,QAAP,uCAA+C7C,EAASpB,OAFnC,kCAAAjC,EAAA,MAGjB8E,EAA+BzB,EAASV,KAHvB,OAIvB2B,EAAcD,EAAWiB,QAAO,SAAAQ,GAAC,OAAIA,EAAEnD,KAAOU,EAASV,OAJhC,uDAOzB/B,EAAgB,sBAChBmB,YAAW,WACTnB,EAAgB,QACf,KAVsB,wDA6DM4K,CAAqBnI,IAAWzD,UAAU,iBAAjE,eAMR,0BAAMuB,SAnFgB,SAAOC,GAAP,eAAApB,EAAAC,OAAA,uDACxBmB,EAAMC,iBADkB,oBAAArB,EAAA,MAGM8E,EAA4B,CACtDzB,SAAU2H,KAJU,OAGhBS,EAHgB,OAMtBR,EAAmB,IACnB3G,EAAcD,EAAWkE,OAAOkD,IAPV,gDAStB7K,EAAgB,sBAChBmB,YAAW,WACTnB,EAAgB,QACf,KAZmB,yDAmFahB,UAAU,YAC3C,6BACE,2BACEA,UAAU,WACVD,KAAK,OACLqC,MAAOgJ,EACP/I,KAAK,WACLC,YAAY,iBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB6I,EAAmB7I,EAAOJ,UAEtD,4BAAQrC,KAAK,SAASC,UAAU,uBAAhC,mBCvBK8L,GAvES,WAAO,IAAD,EACFhL,mBAAS,IADP,mBACrB6D,EADqB,KACdC,EADc,OAEQ9D,mBAAS,IAFjB,mBAErB2D,EAFqB,KAETC,EAFS,OAGM5D,mBAAS,IAHf,mBAGrBgI,EAHqB,KAGVC,EAHU,OAIAjI,mBAAS,IAJT,mBAIrBqC,EAJqB,KAIb0G,EAJa,OAKgB/I,oBAAS,GALzB,mBAKrBiL,EALqB,KAKLC,EALK,OAMMlL,oBAAS,GANf,mBAMrBmL,EANqB,KAMVC,EANU,OAOcpL,oBAAS,GAPvB,mBAOrBqL,EAPqB,KAONC,EAPM,OAQQtL,oBAAS,GARjB,mBAQrBuL,EARqB,KAQTC,EARS,KAyB5B,OAfAtH,qBAAU,WACRI,IAAuBH,MAAK,SAACzE,GAC3BoE,EAASpE,MAEX0E,IAAgCD,MAAK,SAACzE,GACpCkE,EAAclE,MAEhB2E,IAA0BF,MAAK,SAACzE,GAC9BqJ,EAAUrJ,MAEZgJ,KAA+BvE,MAAK,SAACzE,GACnCuI,EAAavI,QAEd,IAGD,yBAAKR,UAAU,kBACb,yBAAKA,UAAU,mBACZ+L,EACC,kBAAC,WAAD,KACE,4BAAQ/L,UAAU,aAAaqG,QAAS,kBAAM2F,GAAmBD,KAAjE,oBACA,kBAAC,GAAD,CAAUtH,WAAYA,EAAYC,cAAeA,KAGnD,4BAAQ1E,UAAU,aAAaqG,QAAS,kBAAM2F,GAAmBD,KAAjE,eAGJ,yBAAK/L,UAAU,mBACZmM,EACC,kBAAC,WAAD,KACE,4BAAQnM,UAAU,aAAaqG,QAAS,kBAAM+F,GAAkBD,KAAhE,gBACA,kBAAC,GAAD,CAAUrD,UAAWA,EAAWC,aAAcA,KAGhD,4BAAQ/I,UAAU,aAAaqG,QAAS,kBAAM+F,GAAkBD,KAAhE,WAGJ,yBAAKnM,UAAU,mBACZqM,EACC,kBAAC,WAAD,KACE,4BAAQrM,UAAU,aAAaqG,QAAS,kBAAMiG,GAAeD,KAA7D,gBACA,kBAAC,GAAD,CAAQlJ,OAAQA,EAAQ0G,UAAWA,KAGrC,4BAAQ7J,UAAU,aAAaqG,QAAS,kBAAMiG,GAAeD,KAA7D,WAGJ,yBAAKrM,UAAU,mBACZiM,EACC,kBAAC,WAAD,KACE,4BAAQjM,UAAU,aAAaqG,QAAS,kBAAM6F,GAAcD,KAA5D,0BACA,kBAAC,GAAD,CAAMtH,MAAOA,EAAOC,SAAUA,EAAUH,WAAYA,KAGtD,4BAAQzE,UAAU,aAAaqG,QAAS,kBAAM6F,GAAcD,KAA5D,uBCxEJhM,GAAO,UAAMC,OAAN,SAWE,GATK,SAAOqM,GAAP,iBAAAnM,EAAAC,OAAA,uDACZsC,EAAS,CACbC,QAAS,CAAE,eAAgB,wBAFX,WAAAxC,EAAA,MAKKE,IAAMC,KAAKN,GAASsM,EAAO5J,IALhC,cAKZnC,EALY,yBAMXA,EAASC,MANE,sC,0CCkBL+L,I,OAjBE,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,MAAOtK,EAAY,EAAZA,MAC5BuK,EAAW,IAAIC,KAOrB,OACE,kBAAC,KAAD,CACExK,MAAOA,EACPyK,WAAY,SAACC,GAAD,OAAUH,EAASI,OAAOD,IACtCvK,SATuB,SAAC,GAAoB,IAAlByK,EAAiB,EAAjBA,KAAMF,EAAW,EAAXA,KAClCL,EAAQO,GACRN,EAAMI,Q,SC8PKG,GA9PC,WAAO,IAAD,EAEUnM,mBAAS,IAFnB,mBAEbhB,EAFa,KAEJ4G,EAFI,OAGoB5F,mBAAS,IAH7B,mBAGbC,EAHa,KAGCC,EAHD,OAIIF,mBAAS,IAJb,mBAIbuB,EAJa,KAIP4E,EAJO,OAKwBnG,mBAAS,IALjC,mBAKboM,EALa,KAKGC,EALH,OAMoBrM,mBAAS,IAN7B,mBAMbsM,EANa,KAMCC,EAND,OAOwCvM,mBAAS,IAPjD,mBAObwM,EAPa,KAOWC,EAPX,OAQ4BzM,mBAAS,IARrC,mBAQb0M,EARa,KAQKC,EARL,OASwB3M,mBAAS,IATjC,mBASb4M,EATa,KASGC,EATH,OAU4C7M,mBAAS,IAVrD,mBAUb8M,EAVa,KAUaC,EAVb,OAWM/M,mBAAS,IAXf,mBAWb6D,EAXa,KAWNC,EAXM,OAYI9D,mBAAS,IAZb,mBAYbyC,EAZa,KAYPuK,EAZO,OAagBhN,mBAAS,IAbzB,mBAab2D,GAba,KAaDC,GAbC,QAcY5D,mBAAS,IAdrB,qBAcb2C,GAda,MAcHsK,GAdG,SAeUjN,mBAAS,IAfnB,qBAebgE,GAfa,MAeJC,GAfI,SAgBQjE,mBAAS,IAhBjB,qBAgBbqC,GAhBa,MAgBL0G,GAhBK,SAiBc/I,mBAAS,IAjBvB,qBAiBbgI,GAjBa,MAiBFC,GAjBE,SAkBYjI,mBAAS,IAlBrB,qBAkBb8H,GAlBa,MAkBHoF,GAlBG,SAmBkBlN,mBAAS,IAnB3B,qBAmBbmN,GAnBa,MAmBAC,GAnBA,SAoBoBpN,mBAAS,IApB7B,qBAoBbqN,GApBa,MAoBCC,GApBD,SAqB4BtN,mBAAS,MArBrC,qBAqBb6F,GArBa,MAqBKC,GArBL,SAsBgD9F,mBAAS,MAtBzD,qBAsBbuN,GAtBa,MAsBeC,GAtBf,SAuB0CxN,mBAAS,MAvBnD,qBAuBbyN,GAvBa,MAuBYC,GAvBZ,SAwB4C1N,mBAAS,MAxBrD,qBAwBb2N,GAxBa,MAwBaC,GAxBb,SAyBoC5N,mBAAS,MAzB7C,qBAyBb6N,GAzBa,MAyBSC,GAzBT,SA0BM9N,mBAAS,IA1Bf,qBA0BbyL,GA1Ba,MA0BNsC,GA1BM,MA4BpB7J,qBAAU,WACRI,IAAuBH,MAAK,SAAAzE,GAC1BoE,EAASpE,MAEX2E,IAA0BF,MAAK,SAAAzE,GAC7BuE,GAAWvE,MAEbgJ,KAA+BvE,MAAK,SAAAzE,GAClCuI,GAAavI,QAEd,IAiHH,OACE,yBAAKR,UAAU,sBACb,yDACA,kBAAC,EAAD,CAAcF,QAASA,EAASC,KAAK,YACrC,kBAAC,EAAD,CAAcD,QAASiB,EAAchB,KAAK,UAC1C,0BAAMwB,SAtFY,SAAOC,GAAP,mBAAApB,EAAAC,OAAA,mDACpBmB,EAAMC,iBACNmF,GAAoB,MACpB0H,GAA8B,MAC9BE,GAA2B,MAC3BE,GAA4B,MAC5BE,GAAwB,MACpBvM,EAAKgD,OAAS,GAChBuB,GAAoB,6BAElBsG,EAAe7H,OAAS,GAC1BiJ,GAA8B,2CAE5BL,GAAY5I,OAAS,GACvBmJ,GAA2B,+CAEzBL,GAAa9I,OAAS,GACxBqJ,GAA4B,2DAEb,KAAb9F,IAA4B,KAATrF,GAA0B,KAAXJ,IAA8B,KAAbM,IACrDmL,GAAwB,gDAEtBvM,EAAKgD,OAAS,GAAK6H,EAAe7H,OAAS,GAAK4I,GAAY5I,OAAS,GAAK8I,GAAa9I,OAAS,GAC5E,KAAbuD,IAA4B,KAATrF,GAA0B,KAAXJ,IAA8B,KAAbM,IAvB1C,mDAgCpB,GANA0J,EAAkBpL,KAAKC,UAAUkL,IACjCG,EAAgBtL,KAAKC,UAAUoL,IAC/BG,EAA0BxL,KAAKC,UAAUsL,IAErCwB,EAAW,IAAIC,SAEfxC,GAAMlH,OAAS,EACjB,IAASE,EAAI,EAAGA,EAAIgH,GAAMlH,OAAQE,IAC9BuJ,EAASE,OAAO,aAAczC,GAAMhH,GAAIgH,GAAMhH,GAAGlD,MAlCnC,OAsChB4M,EAAa,GAtCG,sBAAA7O,EAAA,MAyCC8O,GAAwBJ,IAzCzB,eAyClBG,EAzCkB,mBAAA7O,EAAA,MA0CZ0D,EAAoB,CACxBzB,OAAMkB,OAAME,YAAUN,UACtByF,YAAUsE,iBAAgBE,eAC1Ba,eAAaE,gBAAcb,yBAC3BE,mBAAkBE,iBAAgBE,2BAClCrB,MAAO0C,KA/CS,QAiDlBhI,EAAQ,IACR6G,EAAQ,IACRC,GAAY,IACZlE,GAAU,IACVmE,GAAY,IACZb,EAAkB,IAClBE,EAAgB,IAChBe,GAAgB,IAChBF,GAAe,IACfX,EAA0B,IAC1B7G,EAAW,6BACXvE,YAAW,WACTuE,EAAW,MACX9E,OAAOuN,SAASC,WACf,KA/De,mDAiElBpO,EAAgB,sBAChBmB,YAAW,WACTnB,EAAgB,QACf,KApEe,4DAuFhB,6BACE,kBAAC,EAAD,CAAclB,QAAS6G,GAAkB5G,KAAK,UAC9C,2BACEC,UAAU,aACVD,KAAK,OACLqC,MAAOC,EACPA,KAAK,OACLC,YAAY,sBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgByE,EAAQzE,EAAOJ,WAG7C,6BACE,kDACA,kBAAC,EAAD,CAActC,QAASuO,GAA4BtO,KAAK,UACxD,kBAAC,GAAD,CAAU0M,QAASU,EAAmBT,MAAOe,KAE/C,6BACE,yCACA,kBAAC,GAAD,CAAUhB,QAASY,EAAiBX,MAAOiB,KAE7C,yBAAK3N,UAAU,gBACb,gDACA,kBAAC,GAAD,CAAUyM,QAASc,EAA2Bb,MAAOmB,KAEvD,kBAAC,EAAD,CAAc/N,QAAS6O,GAAsB5O,KAAK,UAClD,yBAAKC,UAAU,aACb,6BACE,4BAAQqP,UAAQ,EAACjN,MAAOe,GAAQZ,SAAU,SAAC+M,GAAD,OAjIzB,SAACA,GAG1B,IAFA,IAAItJ,EAAUsJ,EAAE9M,OAAOwD,QACnBuJ,EAAS,GACJhK,EAAI,EAAGkE,EAAIzD,EAAQX,OAAQE,EAAIkE,EAAGlE,IACrCS,EAAQT,GAAGiK,UAAiC,KAArBxJ,EAAQT,GAAGnD,OACpCmN,EAAOrN,KAAK8D,EAAQT,GAAGnD,OAG3ByH,GAAU0F,GAyH+CE,CAAmBH,IAAItP,UAAU,mBAChF,4BAAQoC,MAAM,GAAGpC,UAAU,eAA3B,kCACC8E,GAAQgB,KAAI,SAAA3C,GAAM,OAAI,4BAAQgD,IAAKhD,EAAOJ,GAAIX,MAAOe,EAAOJ,IAAKI,EAAOd,WAG7E,6BACE,4BAAQrC,UAAU,cAAcoC,MAAOmB,EAAMhB,SAAU,SAAC+M,GAAD,OAtJxC,SAACA,GAGxB,GAFAxB,EAAQwB,EAAE9M,OAAOJ,OACjB2L,GAAY,IACRuB,EAAE9M,OAAOJ,MAAO,CAClB,IAAMsN,EAAY/K,EAAMgL,MAAK,SAAApH,GAAC,OAAIA,EAAExF,KAAOuM,EAAE9M,OAAOJ,SACpDsC,GAAcgL,EAAU3H,yBAExBrD,GAAc,IA+IsDkL,CAAiBN,KAC7E,4BAAQlN,MAAM,IAAd,oBACCuC,EAAMmB,KAAI,SAAAvC,GAAI,OAAI,4BAAQvD,UAAU,eAAemG,IAAK5C,EAAKR,GAAIX,MAAOmB,EAAKR,IAAKQ,EAAKlB,UAE1F,6BACA,4BAAQrC,UAAU,kBAAkBoC,MAAOqB,GAAUlB,SAAU,SAAC+M,GAAD,OAhJ5C,SAACA,GAC5BvB,GAAYuB,EAAE9M,OAAOJ,OA+IyDyN,CAAqBP,KACzF,4BAAQlN,MAAM,IAAd,aACCqC,GAAWqB,KAAI,SAAArC,GAAQ,OAAI,4BAAQzD,UAAU,mBAAmBmG,IAAK1C,EAASV,GAAIX,MAAOqB,EAASV,IAAKU,EAASpB,UAEnH,6BACA,4BAAQrC,UAAU,kBAAkBoC,MAAOwG,GAAUrG,SAAU,SAAC+M,GAAD,OAtI5C,SAACA,GAC5BtB,GAAYsB,EAAE9M,OAAOJ,OAqIyD0N,CAAqBR,KACzF,4BAAQlN,MAAM,IAAd,SACC0G,GAAUhD,KAAI,SAAA8C,GAAQ,OAAI,4BAAQ5I,UAAU,mBAAmBmG,IAAKyC,EAAS7F,GAAIX,MAAOwG,EAAS7F,IAAK6F,EAASvG,YAItH,yBAAKrC,UAAU,WACb,6BACE,kBAAC,EAAD,CAAcF,QAASyO,GAAyBxO,KAAK,UACrD,2BACEC,UAAU,GACVD,KAAK,OACLqC,MAAO6L,GACP5L,KAAK,cACLC,YAAY,yBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB0L,GAAe1L,EAAOJ,WAGpD,6BACE,kBAAC,EAAD,CAActC,QAAS2O,GAA0B1O,KAAK,UACtD,2BACEC,UAAU,GACVD,KAAK,OACLqC,MAAO+L,GACP9L,KAAK,eACLC,YAAY,2CACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB4L,GAAgB5L,EAAOJ,YAKvD,kBAAC,KAAD,CAAU2N,OAzFD,SAACC,GACdnB,GAAStC,GAAM5D,OAAOqH,OAyFf,gBAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACC,wBAASD,IACP,0BAAWC,KACX,yBAAKlQ,UAAU,SACb,yBAAKA,UAAU,SAAf,kBACCuM,GAAMlH,OAAS,GACd,kBAAC,IAAM8K,SAAP,KACG5D,GAAMzG,KAAI,SAACsK,GAAD,OACT,yBAAKjK,IAAKiK,EAAK/N,MAAO+N,EAAK/N,KAAK,uBAAGgE,QAAS,SAACiJ,GAAD,OA9FvC,SAACA,EAAGjN,GAC3BiN,EAAEe,kBACFxB,GAAStC,GAAM7G,QAAO,SAAA0K,GAAI,OAAIA,EAAK/N,OAASA,MA4FyBiO,CAAiBhB,EAAGc,EAAK/N,QAA5C,eAS9C,4BAAQtC,KAAK,SAASC,UAAU,mBAAhC,gCC1KOuQ,GAlFS,WAAO,IAAD,EACFzP,mBAAS,IADP,mBACrBoD,EADqB,KACdP,EADc,OAEE7C,mBAAS,MAFX,mBAErBhB,EAFqB,KAEZ4G,EAFY,OAGY5F,mBAAS,MAHrB,mBAGrBC,EAHqB,KAGPC,EAHO,KAK5BgE,qBAAU,WACR,IAAK/C,IAAyB,CAC5B,IAAMuO,EAAiB5O,OAAOC,aAAa4O,QAAQ,cACnD,GAAID,EAAgB,CAClB,IAAME,EAAa3O,KAAK4O,MAAMH,GAC9BvO,EAAsByO,EAAWhQ,QAGrCoD,IAA8BmB,MAAK,SAACzE,GAClCmD,EAASnD,QAEV,IAgCH,OACE,yBAAKR,UAAU,aACb,iFACA,kBAAC,EAAD,CAAcF,QAASA,EAASC,KAAK,YACrC,kBAAC,EAAD,CAAcD,QAASiB,EAAchB,KAAK,UACzCmE,GAASA,EAAMmB,OAAS,GACvB,yBAAKrF,UAAU,mBACb,qDACA,uCACA,2CACA,gCAGHkE,EAAM4B,KAAI,SAACpD,GAAD,OACT,yBAAK1C,UAAS,yBAA4BmG,IAAKzD,EAAKK,IAClD,8BACE,kBAAC,IAAD,CAAMqD,GAAE,mBAAc1D,EAAKK,KACxBL,EAAKL,OAGV,8BAAOK,EAAKS,OAAO2C,KAAI,SAAAC,GAAC,OAAI,yBAAKI,IAAKzD,EAAKK,GAAKgD,EAAEhD,IAAKgD,EAAE1D,KAA7B,SAC5B,8BAAOK,EAAKe,UAAYf,EAAKe,SAASpB,MACtC,8BACE,4BAAQrC,UAAU,gBAAgBqG,QAAS,kBArDhC,SAACtD,GACpB,IACEe,EAAuBf,GACvBY,EAASO,EAAMwB,QAAO,SAAAa,GAAC,OAAIA,EAAExD,KAAOA,MACpC2D,EAAW,+BACXvE,YAAW,WACTuE,EAAW,QACV,KACH,MAAOkK,GACP5P,EAAgB,sBAChBmB,YAAW,WACTnB,EAAgB,QACf,MAyCoD6P,CAAanO,EAAKK,MAAnE,cACA,4BAAQ/C,UAAU,gBAAgBqG,QAAS,kBAtCzBtD,EAsC4CL,EAAKK,GAtCxD,EAAA3C,EAAAC,OAAA,6DAEbuB,OAAO0E,QAAP,2CAA6CpC,EAAMyL,MAAK,SAAApJ,GAAC,OAAIA,EAAExD,KAAOA,KAAIV,OAF7D,kCAAAjC,EAAA,MAGT0D,EAAuBf,IAHd,OAIfY,EAASO,EAAMwB,QAAO,SAAAa,GAAC,OAAIA,EAAExD,KAAOA,MAJrB,uDAOjB/B,EAAgB,sBAChBmB,YAAW,WACTnB,EAAgB,QACf,KAVc,4DAAO+B,IAsClB,iBChEG+N,GAXD,kBACZ,6BACE,kBAAC,GAAD,MACA,kBAAC,IAAD,CAAM1K,GAAG,YAAT,eACA,6BACA,kBAAC,IAAD,CAAMA,GAAG,gBAAT,mCACA,6BACA,kBAAC,IAAD,CAAMA,GAAG,2BAAT,mEC0EW2K,GAjFE,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAarP,EAAgC,EAAhCA,KAAMd,EAA0B,EAA1BA,QAAS6F,EAAiB,EAAjBA,WAAiB,EACvB5F,mBAAS,MADc,mBACxDC,EADwD,KAC1CC,EAD0C,OAEfF,mBAAS,MAFM,mBAExD6F,EAFwD,KAEtCC,EAFsC,OAGP9F,mBAAS,MAHF,mBAGxD+F,EAHwD,KAGlCC,EAHkC,OAIvChG,mBAASa,EAAKU,MAJyB,mBAIxDA,EAJwD,KAIlD4E,EAJkD,OAK/BnG,mBAASa,EAAKV,UALiB,mBAKxDA,EALwD,KAK9CC,EAL8C,KA6C/D,OACE,yBAAKlB,UAAU,kBACb,2CACA,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAC1C,0BAAMwB,SA1Ca,SAAOC,GAAP,eAAApB,EAAAC,OAAA,mDACrBmB,EAAMC,iBACNmF,EAAoB,MACpBE,EAAwB,MACpBzE,EAAKgD,OAAS,GAChBuB,EAAoB,8DAElB3F,EAASoE,OAAS,GACpByB,EAAwB,kFAEtBzE,EAAKgD,OAAS,GAAKpE,EAASoE,OAAS,GAVpB,6EAAAjF,EAAA,MAcMgH,EAAqB,CAC5C/E,OAAMpB,cAfW,QAcbgQ,EAda,OAiBnBpQ,EAAQoQ,GACRrP,OAAOC,aAAaC,QAClB,aAAcC,KAAKC,UAAUiP,IAE/BD,GAAY,GACZtK,EAAW,qBACXvE,YAAW,WACTuE,EAAW,QACV,KAzBgB,kDA2Bf,KAAMlG,UAAY,KAAMA,SAASC,MAAQ,KAAMD,SAASC,KAAKyQ,OAAuC,4BAA9B,KAAM1Q,SAASC,KAAKyQ,MAC5FlQ,EAAgB,sCAEhBA,EAAgB,+BAElBmB,YAAW,WACTnB,EAAgB,QACf,KAlCgB,2DA2CjB,6BACE,kBAAC,EAAD,CAAclB,QAAS6G,EAAkB5G,KAAK,UAC9C,uCAAmB,6BACnB,2BACEC,UAAU,OACVD,KAAK,OACLqC,MAAOC,EACPA,KAAK,OACLC,YAAY,OACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgByE,EAAQzE,EAAOJ,WAG7C,6BACE,kBAAC,EAAD,CAActC,QAAS+G,EAAsB9G,KAAK,UAClD,0DAA6B,6BAC7B,2BACEC,UAAU,WACVD,KAAK,OACLqC,MAAOnB,EACPoB,KAAK,WACLC,YAAY,0BACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBtB,EAAYsB,EAAOJ,WAGjD,4BAAQrC,KAAK,SAASC,UAAU,eAAhC,YACA,4BAAQqG,QAAS,kBAAM2K,GAAY,IAAQhR,UAAU,iBAArD,cCKOmR,GAhFQ,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,sBAAuB1K,EAAiB,EAAjBA,WAAiB,EACxB5F,mBAAS,MADe,mBACzDC,EADyD,KAC3CC,EAD2C,OAE1BF,mBAAS,IAFiB,mBAEzDuQ,EAFyD,KAE5CC,EAF4C,OAG1BxQ,mBAAS,IAHiB,mBAGzDyQ,EAHyD,KAG5CC,EAH4C,OAIhB1Q,mBAAS,IAJO,mBAIzD2Q,EAJyD,KAIvCC,EAJuC,KAyChE,OACE,yBAAK1R,UAAU,wBACb,+CACA,kBAAC,EAAD,CAAcF,QAASiB,EAAchB,KAAK,UAC1C,0BAAMwB,SAvCmB,SAAOC,GAAP,SAAApB,EAAAC,OAAA,mDAC3BmB,EAAMC,iBACNT,EAAgB,QACZuQ,EAAYlM,OAAS,GAHE,uBAIzBrE,EAAgB,+DAJS,6BAOvBuQ,IAAgBE,EAPO,uBAQzBzQ,EAAgB,sCARS,sDAAAZ,EAAA,MAYnBgH,EAAqB,CACzBiK,cAAaE,iBAbU,QAezBD,EAAe,IACfE,EAAe,IACfE,EAAoB,IACpBN,GAAsB,GACtB1K,EAAW,uBACXvE,YAAW,WACTuE,EAAW,QACV,KAtBsB,kDAwBrB,KAAMlG,UAAY,KAAMA,SAASC,MAAQ,KAAMD,SAASC,KAAKyQ,OAAuC,uBAA9B,KAAM1Q,SAASC,KAAKyQ,MAC5FlQ,EAAgB,qCAEhBA,EAAgB,wCAElBmB,YAAW,WACTnB,EAAgB,QACf,KA/BsB,2DAwCvB,6BACE,2BACEhB,UAAU,eACVD,KAAK,WACLqC,MAAOiP,EACP/O,YAAY,iBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB8O,EAAe9O,EAAOJ,WAGpD,6BACE,2BACEpC,UAAU,eACVD,KAAK,WACLqC,MAAOmP,EACPjP,YAAY,gBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBgP,EAAehP,EAAOJ,WAGpD,6BACE,2BACEpC,UAAU,qBACVD,KAAK,WACLqC,MAAOqP,EACPnP,YAAY,0BACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBkP,EAAoBlP,EAAOJ,WAGzD,4BAAQrC,KAAK,SAASC,UAAU,0BAAhC,YACA,4BAAQqG,QAAS,kBAAM+K,GAAsB,IAAQpR,UAAU,iBAA/D,cC5BO2R,GA7CF,SAAC,GAAuB,IAArBhQ,EAAoB,EAApBA,KAAMd,EAAc,EAAdA,QAAc,EACJC,mBAAS,MADL,mBAC3BhB,EAD2B,KAClB4G,EADkB,OAEF5F,oBAAS,GAFP,mBAE3B8Q,EAF2B,KAEjBZ,EAFiB,OAGkBlQ,oBAAS,GAH3B,mBAG3B+Q,EAH2B,KAGPT,EAHO,KAelC,OACE,6BACGzP,GAEG,yBAAK3B,UAAU,cACX4R,IAAaC,GAEb,6BACE,kBAAC,EAAD,CAAc/R,QAASA,EAASC,KAAK,YACrC,2CACA,2BACE,qCACC4B,EAAKU,MAER,2BACE,wDACCV,EAAKV,UAER,4BAAQjB,UAAU,mBAAmBqG,QAAS,kBA3B1D+K,GAAsB,QACtBJ,GAAY,KA0BA,WACA,4BAAQhR,UAAU,yBAAyBqG,QAAS,kBAvBhE2K,GAAY,QACZI,GAAsB,KAsBV,oBAGHQ,GAAY,kBAAC,GAAD,CAAUZ,YAAaA,EAAarP,KAAMA,EAAMd,QAASA,EAAS6F,WAAYA,IAC1FmL,GAAsB,kBAAC,GAAD,CAAgBT,sBAAuBA,EAAuB1K,WAAYA,OCiP9FoL,GAlRI,SAAC,GAAyC,IAAvChK,EAAsC,EAAtCA,iBAAkBpF,EAAoB,EAApBA,KAAMqP,EAAc,EAAdA,QAAc,EAE5BjR,mBAAS,IAFmB,mBAEnDhB,EAFmD,KAE1C4G,EAF0C,OAGlB5F,mBAAS,IAHS,mBAGnDC,EAHmD,KAGrCC,EAHqC,OAIlCF,mBAAS4B,EAAKL,MAJoB,mBAInDA,EAJmD,KAI7C4E,EAJ6C,OAKdnG,mBAAS4B,EAAKwK,gBALA,mBAKnDA,EALmD,KAKnCC,EALmC,OAMlBrM,mBAAS4B,EAAK0K,cANI,mBAMnDA,EANmD,KAMrCC,EANqC,OAOEvM,mBAAS4B,EAAK4K,wBAPhB,mBAOnDA,EAPmD,KAO3BC,EAP2B,OAQVzM,mBAAS4B,EAAK8K,kBARJ,mBAQnDA,EARmD,KAQjCC,EARiC,OASd3M,mBAAS4B,EAAKgL,gBATA,mBASnDA,EATmD,KASnCC,EATmC,OAUM7M,mBAAS4B,EAAKkL,0BAVpB,mBAUnDA,EAVmD,KAUzBC,EAVyB,OAWhC/M,mBAAS,IAXuB,mBAWnD6D,EAXmD,KAW5CC,EAX4C,OAYlC9D,mBAAS4B,EAAKiC,MAAQjC,EAAKiC,MAAM5B,GAAK,MAZJ,mBAYnDQ,GAZmD,KAY7CuK,GAZ6C,QAatBhN,mBAAS,IAba,qBAanD2D,GAbmD,MAavCC,GAbuC,SAc1B5D,mBAAS4B,EAAKe,SAAWf,EAAKe,SAASV,GAAK,MAdlB,qBAcnDU,GAdmD,MAczCsK,GAdyC,SAe5BjN,mBAAS,IAfmB,qBAenDgE,GAfmD,MAe1CC,GAf0C,SAgB9BjE,mBAAS4B,EAAKS,OAAO2C,KAAI,SAAAC,GAAC,OAAIA,EAAEhD,OAhBF,qBAgBnDI,GAhBmD,MAgB3C0G,GAhB2C,SAiBxB/I,mBAAS,IAjBe,qBAiBnDgI,GAjBmD,MAiBxCC,GAjBwC,SAkB1BjI,mBAAS4B,EAAKkG,SAAWlG,EAAKkG,SAAS7F,GAAK,MAlBlB,qBAkBnD6F,GAlBmD,MAkBzCoF,GAlByC,SAmBpBlN,mBAAS4B,EAAKuL,aAnBM,qBAmBnDA,GAnBmD,MAmBtCC,GAnBsC,SAoBlBpN,mBAAS4B,EAAKyL,cApBI,qBAoBnDA,GApBmD,MAoBrCC,GApBqC,SAqBVtN,mBAAS,MArBC,qBAqBnD6F,GArBmD,MAqBjCC,GArBiC,SAsBU9F,mBAAS,MAtBnB,qBAsBnDuN,GAtBmD,MAsBvBC,GAtBuB,SAuBIxN,mBAAS,MAvBb,qBAuBnDyN,GAvBmD,MAuB1BC,GAvB0B,SAwBM1N,mBAAS,MAxBf,qBAwBnD2N,GAxBmD,MAwBzBC,GAxByB,SAyBF5N,mBAAS,MAzBP,qBAyBnD6N,GAzBmD,MAyB7BC,GAzB6B,SA0B1B9N,mBAAS4B,EAAK6J,OAAS,IA1BG,qBA0BnDyF,GA1BmD,MA0BzCC,GA1ByC,SA2B1BnR,mBAAS,IA3BiB,qBA2BnDkP,GA3BmD,MA2BzCkC,GA3ByC,SA4BhBpR,mBAAS,IA5BO,qBA4BnDqR,GA5BmD,MA4BpCC,GA5BoC,MA8BtDrP,GAAKL,EAAKK,GAEdiC,qBAAU,WACRI,IAAuBH,MAAK,SAAAzE,GAE1B,GADAoE,EAASpE,GACLkC,EAAKiC,OAASjC,EAAKiC,MAAM5B,GAAI,CAC/B,IAAM2M,EAAYlP,EAASmP,MAAK,SAAApH,GAAC,OAAIA,EAAExF,KAAOL,EAAKiC,MAAM5B,MACrD2M,GACFhL,GAAcgL,EAAU3H,wBAI9B5C,IAA0BF,MAAK,SAAAzE,GAC7BuE,GAAWvE,MAEbgJ,KAA+BvE,MAAK,SAAAzE,GAClCuI,GAAavI,QAEd,IAiHH,OACE,yBAAKR,UAAU,yBACb,yDACA,kBAAC,EAAD,CAAcF,QAASA,EAASC,KAAK,YACrC,kBAAC,EAAD,CAAcD,QAASiB,EAAchB,KAAK,UAC1C,0BAAMwB,SAtFe,SAAOC,GAAP,qBAAApB,EAAAC,OAAA,mDACvBmB,EAAMC,iBACNmF,GAAoB,MACpB0H,GAA8B,MAC9BE,GAA2B,MAC3BE,GAA4B,MAC5BE,GAAwB,MACpBvM,EAAKgD,OAAS,GAChBuB,GAAoB,6BAElBsG,EAAe7H,OAAS,GAC1BiJ,GAA8B,2CAE5BL,GAAY5I,OAAS,GACvBmJ,GAA2B,+CAEzBL,GAAa9I,OAAS,GACxBqJ,GAA4B,2DAEb,KAAb9F,IAA4B,KAATrF,IAA0B,KAAXJ,IAA8B,KAAbM,IACrDmL,GAAwB,gDAEtBvM,EAAKgD,OAAS,GAAK6H,EAAe7H,OAAS,GAAK4I,GAAY5I,OAAS,GAAK8I,GAAa9I,OAAS,GAClF,KAAbuD,IAA4B,KAATrF,IAA0B,KAAXJ,IAA8B,KAAbM,IAvBjC,mDA+BvB,IAJIqL,EAAW,IAAIC,UAEVC,OAAO,gBAAiBmD,IAE7BnC,GAAS3K,OAAS,EACpB,IAASE,EAAI,EAAGA,EAAIyK,GAAS3K,OAAQE,IACjCuJ,EAASE,OAAO,aAAcgB,GAASzK,GAAIyK,GAASzK,GAAGlD,MAjCtC,OAqCnB4M,EAAa,GArCM,sBAAA7O,EAAA,MAwCF8O,GAAwBJ,IAxCtB,eAwCrBG,EAxCqB,mBAAA7O,EAAA,MAyCM0D,EAAuB,CAChDzB,OAAMkB,QAAME,YAAUN,UACtByF,YAAUsE,iBAAgBE,eAC1Ba,eAAaE,gBAAcb,yBAAwBvK,MACnDyK,mBAAkBE,iBAAgBE,2BAClCrB,MAAOyF,GAASrJ,OAAOsG,MA9CJ,QAyCfoD,EAzCe,OAgDrB3L,EAAW,8BACXqL,EAAQM,GACRlQ,YAAW,WACTuE,EAAW,MACX9E,OAAOuN,SAASC,WACf,KArDkB,mDAuDrBpO,EAAgB,sBAChBmB,YAAW,WACTnB,EAAgB,QACf,KA1DkB,2DAsFahB,UAAU,eAC1C,6BACE,kBAAC,EAAD,CAAcF,QAAS6G,GAAkB5G,KAAK,UAC9C,2BACEC,UAAU,aACVD,KAAK,OACLgE,aAAc1B,EACdA,KAAK,OACLC,YAAY,sBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgByE,EAAQzE,EAAOJ,WAG7C,6BACE,kDACA,kBAAC,EAAD,CAActC,QAASuO,GAA4BtO,KAAK,UACxD,kBAAC,GAAD,CAAU0M,QAASU,EAAmBT,MAAOe,EAAqBrL,MAAOoL,EAAkB8E,YAAY,wBAEzG,6BACE,yCACA,kBAAC,GAAD,CAAU7F,QAASY,EAAiBX,MAAOiB,EAAmBvL,MAAOsL,EAAgB4E,YAAY,eAEnG,yBAAKtS,UAAU,gBACb,gDACA,kBAAC,GAAD,CAAUyM,QAASc,EAA2Bb,MAAOmB,EAA6BzL,MAAOwL,EAA0B0E,YAAY,sBAEjI,kBAAC,EAAD,CAAcxS,QAAS6O,GAAsB5O,KAAK,UAClD,yBAAKC,UAAU,aACb,6BACE,4BAAQqP,UAAQ,EAACjN,MAAOe,GAAQZ,SAAU,SAAC+M,GAAD,OAjIzB,SAACA,GAG1B,IAFA,IAAItJ,EAAUsJ,EAAE9M,OAAOwD,QACnBuJ,EAAS,GACJhK,EAAI,EAAGkE,EAAIzD,EAAQX,OAAQE,EAAIkE,EAAGlE,IACrCS,EAAQT,GAAGiK,UAAiC,KAArBxJ,EAAQT,GAAGnD,OACpCmN,EAAOrN,KAAK8D,EAAQT,GAAGnD,OAG3ByH,GAAU0F,GAyH+CE,CAAmBH,IAAItP,UAAU,mBAChF,4BAAQoC,MAAM,GAAGpC,UAAU,eAA3B,kCACC8E,GAAQgB,KAAI,SAAA3C,GAAM,OAAI,4BAAQgD,IAAKhD,EAAOJ,GAAIX,MAAOe,EAAOJ,IAAKI,EAAOd,WAG7E,6BACE,4BAAQD,MAAOmB,GAAMhB,SAAU,SAAC+M,GAAD,OAtJhB,SAACA,GAGxB,GAFAxB,GAAQwB,EAAE9M,OAAOJ,OACjB2L,GAAY,IACRuB,EAAE9M,OAAOJ,MAAO,CAClB,IAAMsN,EAAY/K,EAAMgL,MAAK,SAAApH,GAAC,OAAIA,EAAExF,KAAOuM,EAAE9M,OAAOJ,SACpDsC,GAAcgL,EAAU3H,yBAExBrD,GAAc,IA+I8BkL,CAAiBN,KACrD,4BAAQlN,MAAM,IAAd,oBACCuC,EAAMmB,KAAI,SAAAvC,GAAI,OAAI,4BAAQ4C,IAAK5C,EAAKR,GAAIX,MAAOmB,EAAKR,IAAKQ,EAAKlB,UAEjE,6BACA,4BAAQD,MAAOqB,GAAUlB,SAAU,SAAC+M,GAAD,OAhJhB,SAACA,GAC5BvB,GAAYuB,EAAE9M,OAAOJ,OA+I6ByN,CAAqBP,KAC7D,4BAAQlN,MAAM,IAAd,aACCqC,GAAWqB,KAAI,SAAArC,GAAQ,OAAI,4BAAQ0C,IAAK1C,EAASV,GAAIX,MAAOqB,EAASV,IAAKU,EAASpB,UAEtF,6BACA,4BAAQD,MAAOwG,GAAUrG,SAAU,SAAC+M,GAAD,OAtIhB,SAACA,GAC5BtB,GAAYsB,EAAE9M,OAAOJ,OAqI6B0N,CAAqBR,KAC7D,4BAAQlN,MAAM,IAAd,SACC0G,GAAUhD,KAAI,SAAA8C,GAAQ,OAAI,4BAAQzC,IAAKyC,EAAS7F,GAAIX,MAAOwG,EAAS7F,IAAK6F,EAASvG,YAIzF,yBAAKrC,UAAU,WACb,6BACE,kBAAC,EAAD,CAAcF,QAASyO,GAAyBxO,KAAK,UACrD,2BACEC,UAAU,GACVD,KAAK,OACLgE,aAAckK,GACd5L,KAAK,cACLC,YAAY,kBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB0L,GAAe1L,EAAOJ,WAGpD,6BACE,kBAAC,EAAD,CAActC,QAAS2O,GAA0B1O,KAAK,UACtD,2BACEC,UAAU,GACVD,KAAK,OACLgE,aAAcoK,GACd9L,KAAK,eACLC,YAAY,oCACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB4L,GAAgB5L,EAAOJ,YAKvD,kBAAC,KAAD,CAAU2N,OA/FD,SAACxD,GACd2F,GAAYlC,GAASrH,OAAO4D,OA+FrB,gBAAE0D,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACC,wBAASD,IACP,0BAAWC,KACX,yBAAKlQ,UAAU,SACb,yBAAKA,UAAU,SAAf,kBACCgS,IAAYA,GAAS3M,OAAS,GAC7B,kBAAC,IAAM8K,SAAP,KACG6B,GAASlM,KAAI,SAACsK,GAAD,OACZ,yBAAKjK,IAAKiK,GAAOA,EAAKmC,UAAUnC,EAAKoC,QAAQ,KAAO,EAAGpC,EAAK/K,QAAQ,uBAAGgB,QAAS,SAACiJ,GAAD,OApGxE,SAACA,EAAGjN,GAC9BiN,EAAEe,kBACF4B,GAAYD,GAAStM,QAAO,SAAA0K,GAAI,OAAIA,IAAS/N,MAC7C+P,GAAiBD,GAAcxJ,OAAOtG,IAiGmEoQ,CAAoBnD,EAAGc,KAA1C,UAIzEJ,IAAYA,GAAS3K,OAAS,GAC7B,kBAAC,IAAM8K,SAAP,KACGH,GAASlK,KAAI,SAACsK,GAAD,OACZ,yBAAKjK,IAAKiK,EAAK/N,MAAO+N,EAAK/N,KAAK,uBAAGgE,QAAS,SAACiJ,GAAD,OArGpC,SAACA,EAAGjN,GAC9BiN,EAAEe,kBACF6B,GAAYlC,GAAStK,QAAO,SAAA0K,GAAI,OAAIA,EAAK/N,OAASA,MAmGmBqQ,CAAoBpD,EAAGc,EAAK/N,QAA/C,eAS9C,6BACE,4BAAQtC,KAAK,SAASC,UAAU,oBAAhC,YACA,4BAAQqG,QAAS,WA7HvByB,GAAiB,IA6H4B9H,UAAU,iBAAjD,eC1QK2S,GAVS,SAAC,GAAc,IAAZ7F,EAAW,EAAXA,KAKzB,OACE,yBAAK8F,wBAJE,CAAEC,OAAO,GAAD,OAAK/F,OCwGTgG,GArGF,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOpR,EAAW,EAAXA,KAAW,EAERb,mBAAS,MAFD,mBAEzB4B,EAFyB,KAEnBqP,EAFmB,OAGUjR,oBAAS,GAHnB,mBAGzB+G,EAHyB,KAGVC,EAHU,OAIFhH,mBAAS,MAJP,mBAIzBhB,EAJyB,KAIhB4G,EAJgB,OAKQ5F,mBAAS,MALjB,mBAKzBC,EALyB,KAKXC,EALW,KAM1BK,EAAUC,cAEhB0D,qBAAU,WACRlB,EAAuBiP,EAAMC,OAAOjQ,IAAIkC,MAAK,SAACzE,GAC5CuR,EAAQvR,QAET,IAwCH,OACE,6BACGqH,EACC,kBAAC,GAAD,CAAYC,iBAAkBA,EAAkBpF,KAAMA,EAAMqP,QAASA,IAErE,yBAAK/R,UAAU,6BACb,kBAAC,EAAD,CAAcF,QAASA,EAASC,KAAK,YACrC,kBAAC,EAAD,CAAcD,QAASiB,EAAchB,KAAK,UACzC2C,GACC,yBAAK1C,UAAU,kBACb,4BAAK0C,EAAKL,MACV,mDACA,kBAAC,GAAD,CAAiByK,KAAMpK,EAAKwK,iBAC5B,mDACA,kBAAC,GAAD,CAAiBJ,KAAMpK,EAAK4K,yBAC5B,kDACA,kBAAC,GAAD,CAAiBR,KAAMpK,EAAK0K,eAC5B,sCACC1K,EAAKS,OAAO2C,KAAI,SAAAC,GAAC,OAAI,0BAAMI,IAAKzD,EAAKK,GAAKgD,EAAEhD,IAAKgD,EAAE1D,KAAK,iCACzD,0CACA,2BAAIK,EAAKe,UAAYf,EAAKe,SAASpB,MACnC,sDACA,2BAAIK,EAAKiC,OAASjC,EAAKiC,MAAMtC,MAC7B,mEACA,2BAAIK,EAAKuL,YAAY,6BAAOvL,EAAKyL,cACjC,+CACCzL,EAAK6J,OAAS7J,EAAK6J,MAAMzG,KAAI,SAACsK,GAAD,OAC5B,yBAAKjK,IAAKiK,GACR,uBAAG6C,KAAI,yDAAoD7C,IACxDA,EAAKmC,UAAUnC,EAAKoC,QAAQ,KAAO,EAAGpC,EAAK/K,aAIjD1D,GACC,yBAAK3B,UAAU,WACb,4BAAQqG,QAAS,kBAAMyB,GAAiB,IAAO9H,UAAU,sBAAzD,WACC0C,EAAKwQ,SAAW,4BAAQlT,UAAU,gBAAgBqG,QAAS,kBApDvD,WACnB,IACEvC,EAAuBpB,EAAKK,IAC5B2D,EAAW,+BACXvE,YAAW,WACTuE,EAAW,MACXrF,EAAQa,KAAK,YACZ,KACH,MAAO0O,GACP5P,EAAgB,sBAChBmB,YAAW,WACTnB,EAAgB,QACf,MAwC2E6P,KAAjD,cACjB,4BAAQ7Q,UAAU,gBAAgBqG,QAAS,kBA3EtC,WACnB,IACMzE,OAAO0E,QAAP,2CAA6C5D,EAAKL,SACpDyB,EAAuBpB,EAAKK,IAC5B2D,EAAW,2BACXvE,YAAW,WACTuE,EAAW,MACPhE,EAAKwQ,QACP7R,EAAQa,KAAK,UAEbb,EAAQa,KAAK,OAEd,MAEL,MAAO0O,GACP5P,EAAgB,sBAChBmB,YAAW,WACTnB,EAAgB,QACf,MAyD0DwF,KAAjD,eCxBH2M,GA5DH,WAAO,IAAD,EACQrS,mBAAS,MADjB,mBACTa,EADS,KACHd,EADG,KAEVQ,EAAUC,cAEhB0D,qBAAU,WACR,IAAMwL,EAAiB5O,OAAOC,aAAa4O,QAAQ,cACnD,GAAID,EAAgB,CAClB,IAAME,EAAa3O,KAAK4O,MAAMH,GAC9B3P,EAAQ6P,GACRzO,EAAsByO,EAAWhQ,UAElC,IAUH,OACE,6BACE,yBAAKV,UAAU,UACb,kBAAC,IAAD,CAAMoG,GAAG,KAAI,yBAAKpG,UAAU,UAC5B,kBAAC,IAAD,CAAMoG,GAAG,kBAAiB,4BAAQpG,UAAU,yBAAlB,8BAEhB,OAAT2B,EACC,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAMyE,GAAG,kBAAiB,4BAAQpG,UAAU,uBAAlB,cAG5B,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAMoG,GAAG,UAAS,4BAAQpG,UAAU,uBAAlB,UAClB,6BACE,yBAAKA,UAAU,UAAf,iBAAsC,kBAAC,IAAD,CAAMoG,GAAG,WAAWpG,UAAU,mBAAmB2B,EAAKV,WAC5F,yBAAKjB,UAAU,UAAS,4BAAQA,UAAU,uBAAuBqG,QAAS,kBAtBpFzE,OAAOC,aAAauR,WAAW,cAC/BvS,EAAQ,MACRoB,EAAsB,MACtBZ,EAAQa,KAAK,UACbN,OAAOuN,SAASC,WAkBkB,qBAMhC,yBAAKpP,UAAU,6BACH,OAAT2B,GAAiB,kBAAC,IAAD,CAAMyE,GAAG,UAAS,4BAAQpG,UAAU,uBAAlB,UACpC,kBAAC,IAAD,CAAMoG,GAAG,kBAAiB,4BAAQpG,UAAU,yBAAlB,+BAE5B,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAOqT,OAAK,EAACC,KAAK,IAAIvG,OAAQ,kBAAM,kBAAC,EAAD,CAAUpL,KAAMA,OACpD,kBAAC,IAAD,CAAO0R,OAAK,EAACC,KAAK,eAAevG,OAAQ,SAACgG,GAAD,OAAW,kBAAC,GAAD,iBAAUA,EAAV,CAAiBpR,KAAMA,QAC3E,kBAAC,IAAD,CAAO2R,KAAK,iBAAiBvG,OAAQ,kBAAM,kBAAC,EAAD,CAAOlM,QAASA,OAC3D,kBAAC,IAAD,CAAOyS,KAAK,iBAAiBvG,OAAQ,kBAAM,kBAAC,GAAD,SAC3C,kBAAC,IAAD,CAAOuG,KAAK,WAAWvG,OAAQ,kBAAOlL,aAAa4O,QAAQ,cAAgB,kBAAC,GAAD,CAAM9O,KAAMA,EAAMd,QAASA,IAAc,kBAAC,IAAD,CAAUuF,GAAG,SACjI,kBAAC,IAAD,CAAOkN,KAAK,SAASvG,OAAQ,kBAAOlL,aAAa4O,QAAQ,cAAgB,kBAAC,GAAD,MAAY,kBAAC,IAAD,CAAUrK,GAAG,SAClG,kBAAC,IAAD,CAAOkN,KAAK,eAAevG,OAAQ,kBAAOlL,aAAa4O,QAAQ,cAAgB,kBAAC,EAAD,MAAe,kBAAC,IAAD,CAAUrK,GAAG,SAC3G,kBAAC,IAAD,CAAOkN,KAAK,0BAA0BvG,OAAQ,kBAAOlL,aAAa4O,QAAQ,cAAgB,kBAAC,GAAD,MAAsB,kBAAC,IAAD,CAAUrK,GAAG,Y,OC5DrImN,IAASxG,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEFyG,SAASC,eAAe,W","file":"static/js/main.ad8a037d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={type}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/login`\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","let token = null\r\n\r\nconst getToken = () => token\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nexport default { getToken, setToken }\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Notification from './Notification'\r\nimport loginService from '../services/login'\r\nimport tokenService from '../services/token'\r\n\r\nconst Login = ({ setUser }) => {\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const history = useHistory()\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n      window.localStorage.setItem(\r\n        'loggedUser', JSON.stringify(user),\r\n      )\r\n      setUser(user)\r\n      tokenService.setToken(user.token)\r\n      setUsername('')\r\n      setPassword('')\r\n      history.push('/')\r\n    } catch (exception) {\r\n      setErrorMessage('Väärä käyttäjätunnus/salasana')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      <h2>Kirjaudu sisään</h2>\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          <input\r\n            className=\"username\"\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"Username\"\r\n            placeholder=\"Käyttäjätunnus\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Password\"\r\n            placeholder=\"Salasana\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"login-button\">Kirjaudu</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/task`\r\nconst baseUrlPending = `${process.env.REACT_APP_API_URL}/task/pending`\r\n\r\n\r\nconst getTasks = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst getPendingTasks = async () => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n  const response = await axios.get(baseUrlPending, config)\r\n  return response.data\r\n}\r\n\r\nconst getSearchedTasks = async (search) => {\r\n  const response = await axios.post(`${baseUrl}/search`, search)\r\n  return response.data\r\n}\r\n\r\nconst getOneTask = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`)\r\n  return response.data\r\n}\r\n\r\nconst addtask = async (task) => {\r\n  let config = null\r\n  const token = tokenService.getToken()\r\n\r\n  if (token) {\r\n    config = {\r\n      headers: { Authorization: token }\r\n    }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, task, config)\r\n  return response.data\r\n}\r\n\r\nconst updateTask = async (task) => {\r\n  let config = null\r\n  const token = tokenService.getToken()\r\n\r\n  if (token) {\r\n    config = {\r\n      headers: { Authorization: token },\r\n    }\r\n  }\r\n\r\n  const response = await axios.put(`${baseUrl}/${task.id}`, task, config)\r\n  return response.data\r\n}\r\n\r\nconst deleteTask = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nconst acceptTask = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n  const response = await axios.put(`${baseUrl}/${id}/accept`, id, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addtask, getTasks, getOneTask, getSearchedTasks, updateTask, deleteTask, getPendingTasks, acceptTask }\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/series`\r\n\r\nconst getSeries = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addSeries = async (series) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, series, config)\r\n  return response.data\r\n}\r\n\r\nconst editSerie = async (serie) => {\r\n  console.log(serie)\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n  \r\n  const response = await axios.put(`${baseUrl}/${serie.id}`, serie, config)\r\n  return response.data\r\n\r\n}\r\n\r\nconst deleteSerie = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addSeries, getSeries, deleteSerie, editSerie }\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/rule`\r\n\r\nconst getRules = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addRule = async (rule) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, rule, config)\r\n  return response.data\r\n}\r\n\r\nconst editRule = async (rule) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n  \r\n  const response = await axios.put(`${baseUrl}/${rule.id}`, rule, config)\r\n  return response.data\r\n\r\n}\r\n\r\nconst deleteRule = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addRule, getRules, editRule, deleteRule }\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/category`\r\n\r\nconst getCategories = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addCategory = async (cat) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, cat, config)\r\n  return response.data\r\n}\r\n\r\nconst editCategory = async (category) => {\r\n  console.log(category)\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n  \r\n  const response = await axios.put(`${baseUrl}/${category.id}`, category, config)\r\n  return response.data\r\n\r\n}\r\n\r\nconst deleteCategory = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\n\r\nexport default { addCategory, getCategories, editCategory, deleteCategory }\r\n","import React, { useState } from 'react'\r\nimport taskService from '../services/task'\r\nimport Notification from './Notification'\r\n\r\nconst Search = ({ setTasks, setAllTasks }) => {\r\n\r\n  const [search, setSearch] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  const handleSearch = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const response = await taskService.getSearchedTasks({ search })\r\n      setTasks(response)\r\n      setAllTasks(response)\r\n    } catch (exception) {\r\n      setErrorMessage('Haku ei onnistunut')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleSearch} className=\"search-form\">\r\n        <input\r\n          className=\"search-input\"\r\n          type=\"text\"\r\n          defaultValue=''\r\n          name=\"search\"\r\n          placeholder=\"Hakutermi\"\r\n          onChange={({ target }) => setSearch(target.value)}\r\n        />\r\n        <button type=\"submit\" className=\"search-tasks-button\">Hae</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport taskService from '../services/task'\r\nimport seriesService from '../services/series'\r\nimport ruleService from '../services/rule'\r\nimport categoryService from '../services/category'\r\nimport Notification from './Notification'\r\nimport Select from 'react-select'\r\nimport Search from './Search'\r\n\r\nconst TaskList = ({ user }) => {\r\n  const [allTasks, setAllTasks] = useState([])\r\n  const [tasks, setTasks] = useState([])\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [selectedCategory, setSelectedCategory] = useState([])\r\n  const [selectedSeries, setSelectedSeries] = useState([])\r\n  const [selectedRules, setSelectedRules] = useState('')\r\n  const [categories, setCategories] = useState([])\r\n  const [series, setSeries] = useState([])\r\n  const [rules, setRules] = useState([])\r\n  const [isClearable, setIsClearable] = useState(true)\r\n  const [seriess, setSeriess] = useState([])\r\n\r\n  useEffect(() => {\r\n    taskService.getTasks().then((response) => {\r\n      setTasks(response)\r\n      setAllTasks(response)\r\n    })\r\n\r\n    categoryService.getCategories().then((response) => {\r\n      setCategories(response)\r\n    })\r\n\r\n    seriesService.getSeries().then((response) => {\r\n      setSeriess(response)\r\n    })\r\n\r\n    ruleService.getRules().then((response) => {\r\n      setRules(response)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedSeries.length > 0 && selectedCategory.length > 0 && selectedRules) {\r\n      let array = []\r\n      for (let i = 0; i < allTasks.length; i++) {\r\n        for (let j = 0; j < allTasks[i].series.length; j++) {\r\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\r\n            array.push(allTasks[i])\r\n          }\r\n        }\r\n      }\r\n      setTasks(array)\r\n    } else if (selectedSeries.length > 0 && selectedCategory.length > 0) {\r\n      let array = []\r\n      for (let i = 0; i < allTasks.length; i++) {\r\n        for (let j = 0; j < allTasks[i].series.length; j++) {\r\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && !array.includes(allTasks[i])) {\r\n            array.push(allTasks[i])\r\n          }\r\n        }\r\n      }\r\n      setTasks(array)\r\n    } else if (selectedSeries.length > 0 && selectedRules) {\r\n      let array = []\r\n      for (let i = 0; i < allTasks.length; i++) {\r\n        for (let j = 0; j < allTasks[i].series.length; j++) {\r\n          if (selectedSeries.includes(allTasks[i].series[j].id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\r\n            array.push(allTasks[i])\r\n          }\r\n        }\r\n      }\r\n      setTasks(array)\r\n    } else if (selectedCategory.length > 0 && selectedRules) {\r\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id) && task.rules.id === selectedRules.id))\r\n    } else if (selectedSeries.length > 0) {\r\n      let array = []\r\n      for (let i = 0; i < allTasks.length; i++) {\r\n        for (let j = 0; j < allTasks[i].series.length; j++) {\r\n          if (selectedSeries.includes(allTasks[i].series[j].id) && !array.includes(allTasks[i])) {\r\n            array.push(allTasks[i])\r\n          }\r\n        }\r\n      }\r\n      setTasks(array)\r\n    } else if (selectedCategory.length > 0) {\r\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id)))\r\n    } else if (selectedRules) {\r\n      setTasks(allTasks.filter(task => task.rules.id === selectedRules.id))\r\n    } else {\r\n      setTasks(allTasks)\r\n    }\r\n  }, [selectedCategory, selectedSeries, selectedRules])\r\n\r\n  const handleDelete = async (task) => {\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\r\n        await taskService.deleteTask(task.id)\r\n        setTasks(tasks.filter(t => t.id !== task.id))\r\n      }\r\n    } catch (exeption) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleSeriesFiltering = (series) => {\r\n    if (series && series.length > 0) {\r\n      setSelectedSeries(series.map(s => s.id))\r\n    } else {\r\n      setSelectedSeries([])\r\n      setTasks(allTasks)\r\n    }\r\n  }\r\n\r\n  const handleCategoryFiltering = (category) => {\r\n    if (category && category.length > 0) {\r\n      setSelectedCategory(category.map(c => c.id))\r\n    } else {\r\n      setSelectedCategory([])\r\n      setTasks(allTasks)\r\n    }\r\n  }\r\n\r\n  const handleRuleFiltering = (rules) => {\r\n    if (rules) {\r\n      setSelectedRules(rules)\r\n    } else {\r\n      setSelectedRules('')\r\n      setTasks(allTasks)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-list\">\r\n      <h1>Kisatehtäväpankki</h1>\r\n      <div className=\"search-filter-container\">\r\n        <div className=\"search\"><Search setTasks={setTasks} setAllTasks={setAllTasks} /></div>\r\n\r\n        <div className=\"filter\">\r\n          <Select\r\n            name=\"filter-series\"\r\n            getOptionLabel={option => `${option.name}`}\r\n            getOptionValue={option => `${option.id}`}\r\n            onChange={handleSeriesFiltering}\r\n            options={seriess}\r\n            isClearable={isClearable}\r\n            placeholder={\"Sarja\"}\r\n            isMulti={true}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"filter\">\r\n          <Select\r\n            name=\"filter-category\"\r\n            getOptionLabel={option => `${option.name}`}\r\n            getOptionValue={option => `${option.id}`}\r\n            onChange={handleCategoryFiltering}\r\n            options={categories}\r\n            isClearable={isClearable}\r\n            placeholder={\"Kategoria\"}\r\n            isMulti={true}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"filter\">\r\n          <Select\r\n            name=\"filter-rules\"\r\n            getOptionLabel={option => `${option.name}`}\r\n            getOptionValue={option => `${option.id}`}\r\n            onChange={handleRuleFiltering}\r\n            options={rules}\r\n            isClearable={isClearable}\r\n            placeholder={\"Säännöt\"}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Notification message={errorMessage} />\r\n      {tasks && tasks.length > 0 &&\r\n        <div className=\"task-list-title\">\r\n          <span>Tehtävän nimi</span>\r\n          <span>Sarja</span>\r\n          <span>Kategoria</span>\r\n          {user && <span></span>}\r\n        </div>\r\n      }\r\n      {tasks.map((task) => (\r\n        <div className=\"task-list-item\" key={task.id}>\r\n          <span>\r\n            <Link to={`/tehtava/${task.id}`}>\r\n              {task.name}\r\n            </Link>\r\n          </span>\r\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\r\n          <span>{task.category && task.category.name}</span>\r\n          {user && <span><button className=\"delete-button\" onClick={() => handleDelete(task)}>Poista</button></span>\r\n          }\r\n        </div>\r\n      ))}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default TaskList\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/user`\r\n\r\nconst getUsers = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addUser = async (credentials) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() }\r\n  }\r\n  const response = await axios.post(baseUrl, credentials, config)\r\n  return response.data\r\n}\r\n\r\nconst editUser = async (user) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() }\r\n  }\r\n\r\n  const response = await axios.put(baseUrl, user, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addUser, getUsers, editUser }\r\n","import React, { useState, useEffect } from 'react'\r\nimport Notification from './Notification'\r\nimport userService from '../services/user'\r\n\r\nconst AddAdmin = () => {\r\n  const [message, setMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\r\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\r\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(null)\r\n  const [name, setName] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [users, setUsers] = useState([])\r\n\r\n  useEffect(() => {\r\n    userService.getUsers().then((response) => {\r\n      setUsers(response)\r\n    })\r\n  }, [])\r\n\r\n  const handleAddAdmin = async (event) => {\r\n    event.preventDefault()\r\n    setNameErrorMessage(null)\r\n    setUsernameErrorMessage(null)\r\n    setPasswordErrorMessage(null)\r\n    if (name.length < 3) {\r\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\r\n    }\r\n    if (username.length < 3) {\r\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\r\n    }\r\n    if (password.length < 3) {\r\n      setPasswordErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\r\n    }\r\n    if (users.some((user) => (user.username === username))) {\r\n      setUsernameErrorMessage('Käyttäjätunnus on varattu')\r\n    }\r\n    if (name.length < 3 || username.length < 3 || password.length < 3\r\n      || users.some((user) => (user.username === username))) {\r\n      return\r\n    }\r\n    try {\r\n      await userService.addUser({\r\n        name, username, password,\r\n      })\r\n      setName('')\r\n      setUsername('')\r\n      setPassword('')\r\n      setMessage('Ylläpitäjä lisätty!')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    } catch (exception) {\r\n      setErrorMessage('Lisääminen epäonnistui')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"signup-form\">\r\n      <h2>Lisää ylläpitäjä</h2>\r\n      <Notification message={message} type=\"success\" />\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleAddAdmin}>\r\n        <div>\r\n          <Notification message={nameErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"Name\"\r\n            placeholder=\"Nimi\"\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Notification message={usernameErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"username\"\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"Username\"\r\n            placeholder=\"Käyttäjätunnus\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Notification message={passwordErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Password\"\r\n            placeholder=\"Salasana\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"signup-button\">Lisää</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddAdmin\r\n","import React, { useState, Fragment } from 'react'\r\nimport Notification from './Notification'\r\nimport ruleService from '../services/rule'\r\nimport Select from 'react-select'\r\n\r\nconst Rule = ({ rules, setRules, categories }) => {\r\n  const [newRuleName, setNewRuleName] = useState('')\r\n  const [modifiedRuleName, setModifiedRuleName] = useState('')\r\n  const [modifiedRuleId, setModifiedRuleId] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [modifyVisible, setModifyVisible] = useState(false)\r\n  const [acceptedCategories, setAcceptedCategories] = useState([])\r\n  const [modifiedCategories, setModifiedCategories] = useState([])\r\n  const [isClearable, setIsClearable] = useState(true)\r\n\r\n  const handleRuleAdd = async (event) => {\r\n    event.preventDefault()\r\n    const newCategories = acceptedCategories\r\n    try {\r\n      const addedRule = await ruleService.addRule({\r\n        rules: newRuleName, acceptedCategories: acceptedCategories.map(category => category.id)\r\n      })\r\n      setNewRuleName('')\r\n      setAcceptedCategories([])\r\n      setRules(rules.concat({ ...addedRule, acceptedCategories: newCategories }))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleRuleDelete = async (rule) => {\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa säännön: ${rule.name}`)) {\r\n        await ruleService.deleteRule(rule.id)\r\n        setRules(rules.filter(r => r.id !== rule.id))\r\n      }\r\n    } catch (exeption) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleRuleModify = async (event) => {\r\n    event.preventDefault()\r\n    const modifiedRule = { id: modifiedRuleId, name: modifiedRuleName, acceptedCategories: modifiedCategories }\r\n    try {\r\n      await ruleService.editRule({ id: modifiedRuleId, name: modifiedRuleName, acceptedCategories: modifiedCategories.map(category => category.id) })\r\n      setModifyVisible(false)\r\n      setRules(rules.map(rule => rule.id !== modifiedRule.id ? rule : modifiedRule))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleShowModify = (rule) => {\r\n    setModifyVisible(true)\r\n    setModifiedRuleId(rule.id)\r\n    setModifiedRuleName(rule.name)\r\n    setModifiedCategories(rule.acceptedCategories)\r\n  }\r\n\r\n  const handleAddCategories = (categories) => {\r\n    setAcceptedCategories(categories)\r\n  }\r\n\r\n  const handleModifyCategories = (categories) => {\r\n    setModifiedCategories(categories)\r\n  }\r\n\r\n  return (\r\n    <div className=\"rule-form\">\r\n      <Notification message={errorMessage} type=\"error\" />\r\n\r\n      {rules && rules.map((rule) => (\r\n        <div className=\"rule-list-item\" key={rule.id}>\r\n          {modifyVisible && modifiedRuleId === rule.id ?\r\n            <div className=\"rule-form-item\">\r\n              <form onSubmit={handleRuleModify}>\r\n                <div>\r\n                  <input\r\n                    className=\"rule\"\r\n                    type=\"text\"\r\n                    value={modifiedRuleName}\r\n                    name=\"Category\"\r\n                    onChange={({ target }) => setModifiedRuleName(target.value)}\r\n                  />\r\n                  <button type=\"submit\" className=\"rule-save-button\">Tallenna</button>\r\n                  <button onClick={() => setModifyVisible(false)}>Peruuta</button>\r\n                </div>\r\n                <div className=\"modify-acceptedCategories\">\r\n                  <Select\r\n                    name=\"accepted-categories\"\r\n                    value={modifiedCategories}\r\n                    getOptionLabel={option => `${option.name}`}\r\n                    getOptionValue={option => `${option.id}`}\r\n                    onChange={handleModifyCategories}\r\n                    options={categories}\r\n                    isClearable={isClearable}\r\n                    placeholder={\"Säännön kategoriat\"}\r\n                    isMulti={true}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n          :\r\n          <Fragment>\r\n            <p>{rule.name}</p>\r\n            <button onClick={() => handleShowModify(rule)} className=\"modify-button\">Muokkaa</button>\r\n            <button onClick={() => handleRuleDelete(rule)} className=\"delete-button\">Poista</button>\r\n            <div className=\"break\"></div>\r\n            <div className=\"accepted-categories-list\">\r\n              {rule.acceptedCategories && rule.acceptedCategories.map(category => (\r\n                  <span key={category.id}>{category.name} </span>\r\n                ))}\r\n            </div>\r\n          </Fragment>\r\n          }\r\n        </div>))\r\n      }\r\n\r\n      <form onSubmit={handleRuleAdd} className=\"add-form\">\r\n        <div>\r\n          <input\r\n            className=\"rule\"\r\n            type=\"text\"\r\n            value={newRuleName}\r\n            name=\"Rules\"\r\n            placeholder=\"Uusi sääntö\"\r\n            onChange={({ target }) => setNewRuleName(target.value)}\r\n          />\r\n          <button type=\"submit\" className=\"rule-add-button\">Lisää</button>\r\n        </div>\r\n\r\n        <div className=\"add-acceptedCategories\">\r\n          <Select\r\n            name=\"accepted-categories\"\r\n            value={acceptedCategories}\r\n            getOptionLabel={option => `${option.name}`}\r\n            getOptionValue={option => `${option.id}`}\r\n            onChange={handleAddCategories}\r\n            options={categories}\r\n            isClearable={isClearable}\r\n            placeholder={\"Uuden säännön kategoriat\"}\r\n            isMulti={true}\r\n          />\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Rule\r\n","import axios from 'axios'\r\nimport tokenService from './token'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/language`\r\n\r\nconst getLanguages = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addLanguage = async (language) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, language, config)\r\n  return response.data\r\n}\r\n\r\nconst editLanguage = async (language) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.put(`${baseUrl}/${language.id}`, language, config)\r\n  return response.data\r\n\r\n}\r\n\r\n\r\nconst deleteLanguage = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: tokenService.getToken() },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addLanguage, getLanguages, deleteLanguage, editLanguage }\r\n","import React, { useState, Fragment } from 'react'\r\nimport Notification from './Notification'\r\nimport languageService from '../services/language'\r\n\r\nconst Language = ({ languages, setLanguages }) => {\r\n  const [languageName, setLanguageName] = useState('')\r\n  const [modifiedLanguageName, setModifiedLanguageName] = useState('')\r\n  const [modifiedLanguageId, setModifiedLanguageId] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [modifyVisible, setModifyVisible] = useState(false)\r\n\r\n  const handleLanguageAdd = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const addedLanguage = await languageService.addLanguage({\r\n        language: languageName,\r\n      })\r\n      setLanguageName('')\r\n      setLanguages(languages.concat(addedLanguage))\r\n    } catch (exception) {\r\n      setErrorMessage('Kielen lisääminen ei onnistunut')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleLanguageDelete = async (language) => {\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa kielen: ${language.name}`)) {\r\n        await languageService.deleteLanguage(language.id)\r\n        setLanguages(languages.filter(l => l.id !== language.id))\r\n      }\r\n    } catch (exeption) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleLanguageModify = async (event) => {\r\n    event.preventDefault()\r\n    const modifiedLanguage = { id: modifiedLanguageId, name: modifiedLanguageName }\r\n    try {\r\n      await languageService.editLanguage(modifiedLanguage)\r\n      setModifyVisible(false)\r\n      setLanguages(languages.map(language => language.id !== modifiedLanguage.id ? language : modifiedLanguage))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleShowModify = (language) => {\r\n    setModifyVisible(true)\r\n    setModifiedLanguageId(language.id)\r\n    setModifiedLanguageName(language.name)\r\n  }\r\n\r\n  return (\r\n    <div className=\"language-form\">\r\n      <Notification message={errorMessage} type=\"error\" />\r\n\r\n      {languages && languages.map((language) => (\r\n        <div className=\"language-list-item\" key={language.id}>\r\n          {modifyVisible && modifiedLanguageId === language.id ?\r\n            <div className=\"language-form-item\">\r\n              <form onSubmit={handleLanguageModify} >\r\n                <div>\r\n                  <input\r\n                    className=\"language\"\r\n                    type=\"text\"\r\n                    value={modifiedLanguageName}\r\n                    name=\"Language\"\r\n                    onChange={({ target }) => setModifiedLanguageName(target.value)}\r\n                  />\r\n                  <button type=\"submit\" className=\"language-save-button\">Tallenna</button>\r\n                  <button onClick={() => setModifyVisible(false)}>Peruuta</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            :\r\n            <Fragment>\r\n              <p>{language.name}</p>\r\n              <button onClick={() => handleShowModify(language)} className=\"modify-button\">Muokkaa</button>\r\n              <button onClick={() => handleLanguageDelete(language)} className=\"delete-button\">Poista</button>\r\n            </Fragment>\r\n            }\r\n        </div>))\r\n      }\r\n\r\n      <form onSubmit={handleLanguageAdd} className=\"add-form\">\r\n        <div>\r\n          <input\r\n            className=\"language\"\r\n            type=\"text\"\r\n            value={languageName}\r\n            name=\"Language\"\r\n            placeholder=\"Uusi kieli\"\r\n            onChange={({ target }) => setLanguageName(target.value)}\r\n          />\r\n          <button type=\"submit\" className=\"language-add-button\">Lisää</button>\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Language\r\n","import React, { useState, Fragment } from 'react'\r\nimport { CirclePicker } from 'react-color'\r\nimport Notification from './Notification'\r\nimport seriesService from '../services/series'\r\n\r\nconst Series = ({ series, setSeries }) => {\r\n  const [name, setName] = useState('')\r\n  const [modifiedSerieName, setModifiedSerieName] = useState('')\r\n  const [modifiedSerieId, setModifiedSerieId] = useState('')\r\n  const [modifiedSerieColor, setModifiedSerieColor] = useState('')\r\n  const [color, setColor] = useState('#ffffff')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [modifyVisible, setModifyVisible] = useState(false)\r\n\r\n  const handleSeriesAdd = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const addedSerie = await seriesService.addSeries({ name, color })\r\n      setName('')\r\n      setColor('')\r\n      setSeries(series.concat(addedSerie))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleSerieDelete = async (serie) => {\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa sarjan: ${serie.name}`)) {\r\n        await seriesService.deleteSerie(serie.id)\r\n        setSeries(series.filter(s => s.id !== serie.id))\r\n      }\r\n    } catch (exeption) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleSerieModify = async (event) => {\r\n    event.preventDefault()\r\n    const modifiedSerie = { id: modifiedSerieId, name: modifiedSerieName, color: modifiedSerieColor }\r\n    try {\r\n      await seriesService.editSerie(modifiedSerie)\r\n      setModifyVisible(false)\r\n      setSeries(series.map(serie => serie.id !== modifiedSerie.id ? serie : modifiedSerie))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleShowModify = (serie) => {\r\n    setModifyVisible(true)\r\n    setModifiedSerieId(serie.id)\r\n    setModifiedSerieName(serie.name)\r\n    setModifiedSerieColor(serie.color)\r\n  }\r\n\r\n  return (\r\n    <div className=\"series-form\">\r\n      <Notification message={errorMessage} type=\"error\" />\r\n\r\n      {series && series.map((serie) => (\r\n        <div className=\"serie-list-item\" key={serie.id}>\r\n          {modifyVisible && modifiedSerieId === serie.id ?\r\n            <div className=\"serie-form-item\">\r\n              <form onSubmit={handleSerieModify} >\r\n                <div>\r\n                  <input\r\n                    className=\"serie\"\r\n                    type=\"text\"\r\n                    value={modifiedSerieName}\r\n                    name=\"Serie\"\r\n                    onChange={({ target }) => setModifiedSerieName(target.value)}\r\n                  />\r\n                  <button type=\"submit\" className=\"serie-save-button\">Tallenna</button>\r\n                  <button onClick={() => setModifyVisible(false)}>Peruuta</button>\r\n                  <div className=\"color-picker\">\r\n                    <CirclePicker\r\n                      color={modifiedSerieColor}\r\n                      onChangeComplete={color => setModifiedSerieColor(color.hex)}\r\n                      colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\r\n                        \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          :\r\n          <Fragment>\r\n            <p>{serie.name}<span style={{ backgroundColor: serie.color, display: 'inline-block', borderRadius: '50%', height: '27px', width: '27px' }} /></p>\r\n            <button onClick={() => handleShowModify(serie)} className=\"modify-button\">Muokkaa</button>\r\n            <button onClick={() => handleSerieDelete(serie)} className=\"delete-button\">Poista</button>\r\n          </Fragment>\r\n          }\r\n        </div>))\r\n      }\r\n\r\n      <form onSubmit={handleSeriesAdd} className=\"add-form\">\r\n        <div>\r\n          <input\r\n            className=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"Name\"\r\n            placeholder=\"Uusi sarja\"\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n          <button type=\"submit\" className=\"series-submit-button\">Lisää</button>\r\n        </div>\r\n        <div className=\"color-picker\">\r\n          <CirclePicker\r\n            color={color}\r\n            onChangeComplete={color => setColor(color.hex)}\r\n            colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\r\n              \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\r\n          />\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Series\r\n","import React, { useState, Fragment } from 'react'\r\nimport Notification from './Notification'\r\nimport categoryService from '../services/category'\r\n\r\nconst Category = ({ categories, setCategories }) => {\r\n  const [newCategoryName, setNewCategoryName] = useState('')\r\n  const [modifiedCategoryName, setModifiedCategoryName] = useState('')\r\n  const [modifiedCategoryId, setModifiedCategoryId] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [modifyVisible, setModifyVisible] = useState(false)\r\n\r\n  const handleCategoryAdd = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const addedCategory = await categoryService.addCategory({\r\n        category: newCategoryName\r\n      })\r\n      setNewCategoryName('')\r\n      setCategories(categories.concat(addedCategory))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleCategoryDelete = async (category) => {\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa kategorian: ${category.name}`)) {\r\n        await categoryService.deleteCategory(category.id)\r\n        setCategories(categories.filter(c => c.id !== category.id))\r\n      }\r\n    } catch (exeption) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleCategoryModify = async (event) => {\r\n    event.preventDefault()\r\n    const modifiedCategory = { id: modifiedCategoryId, name: modifiedCategoryName }\r\n    try {\r\n      await categoryService.editCategory(modifiedCategory)\r\n      setModifyVisible(false)\r\n      setCategories(categories.map(category => category.id !== modifiedCategory.id ? category : modifiedCategory))\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleShowModify = (category) => {\r\n    setModifyVisible(true)\r\n    setModifiedCategoryId(category.id)\r\n    setModifiedCategoryName(category.name)\r\n  }\r\n\r\n  return (\r\n    <div className=\"category-form\" >\r\n      <Notification message={errorMessage} type=\"error\" />\r\n\r\n      {categories && categories.map((category) => (\r\n        <div className=\"category-list-item\" key={category.id}>\r\n          {modifyVisible && modifiedCategoryId === category.id ?\r\n            <div className=\"category-form-item\">\r\n              <form onSubmit={handleCategoryModify} >\r\n                <div>\r\n                  <input\r\n                    className=\"category\"\r\n                    type=\"text\"\r\n                    value={modifiedCategoryName}\r\n                    name=\"Category\"\r\n                    onChange={({ target }) => setModifiedCategoryName(target.value)}\r\n                  />\r\n                  <button type=\"submit\" className=\"category-save-button\">Tallenna</button>\r\n                  <button onClick={() => setModifyVisible(false)}>Peruuta</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            :\r\n            <Fragment>\r\n              <p>{category.name}</p>\r\n              <button onClick={() => handleShowModify(category)} className=\"modify-button\">Muokkaa</button>\r\n              <button onClick={() => handleCategoryDelete(category)} className=\"delete-button\">Poista</button>\r\n            </Fragment>\r\n          }\r\n        </div>))\r\n      }\r\n\r\n      <form onSubmit={handleCategoryAdd} className=\"add-form\">\r\n        <div>\r\n          <input\r\n            className=\"category\"\r\n            type=\"text\"\r\n            value={newCategoryName}\r\n            name=\"Category\"\r\n            placeholder=\"Uusi kategoria\"\r\n            onChange={({ target }) => setNewCategoryName(target.value)}\r\n          />\r\n          <button type=\"submit\" className=\"category-add-button\">Lisää</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Category\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport Rule from './Rule'\r\nimport Language from './Language'\r\nimport Series from './Series'\r\nimport Category from './Category'\r\nimport ruleService from '../services/rule'\r\nimport seriesService from '../services/series'\r\nimport languageService from '../services/language'\r\nimport categoryService from '../services/category'\r\n\r\nconst AddTaskDropdown = () => {\r\n  const [rules, setRules] = useState([])\r\n  const [categories, setCategories] = useState([])\r\n  const [languages, setLanguages] = useState([])\r\n  const [series, setSeries] = useState([])\r\n  const [showCategories, setShowCategories] = useState(false)\r\n  const [showRules, setShowRules] = useState(false)\r\n  const [showLanguages, setShowLanguages] = useState(false)\r\n  const [showSeries, setShowSeries] = useState(false)\r\n\r\n  useEffect(() => {\r\n    ruleService.getRules().then((response) => {\r\n      setRules(response)\r\n    })\r\n    categoryService.getCategories().then((response) => {\r\n      setCategories(response)\r\n    })\r\n    seriesService.getSeries().then((response) => {\r\n      setSeries(response)\r\n    })\r\n    languageService.getLanguages().then((response) => {\r\n      setLanguages(response)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"crls-container\">\r\n      <div className=\"task-types-menu\">\r\n        {showCategories ?\r\n          <Fragment>\r\n            <button className=\"task-types\" onClick={() => setShowCategories(!showCategories)}>Sulje kategoriat</button>\r\n            <Category categories={categories} setCategories={setCategories} />\r\n          </Fragment>\r\n          :\r\n          <button className=\"task-types\" onClick={() => setShowCategories(!showCategories)}>Kategoriat</button>\r\n        }\r\n      </div>\r\n      <div className=\"task-types-menu\">\r\n        {showLanguages ?\r\n          <Fragment>\r\n            <button className=\"task-types\" onClick={() => setShowLanguages(!showLanguages)}>Sulje kielet</button>\r\n            <Language languages={languages} setLanguages={setLanguages} />\r\n          </Fragment>\r\n          :\r\n          <button className=\"task-types\" onClick={() => setShowLanguages(!showLanguages)}>Kielet</button>\r\n        }\r\n      </div>\r\n      <div className=\"task-types-menu\">\r\n        {showSeries ?\r\n          <Fragment>\r\n            <button className=\"task-types\" onClick={() => setShowSeries(!showSeries)}>Sulje sarjat</button>\r\n            <Series series={series} setSeries={setSeries} />\r\n          </Fragment>\r\n          :\r\n          <button className=\"task-types\" onClick={() => setShowSeries(!showSeries)}>Sarjat</button>\r\n        }\r\n      </div>\r\n      <div className=\"task-types-menu\">\r\n        {showRules ?\r\n          <Fragment>\r\n            <button className=\"task-types\" onClick={() => setShowRules(!showRules)}>Sulje säännöt</button>\r\n            <Rule rules={rules} setRules={setRules} categories={categories} />\r\n          </Fragment>\r\n          :\r\n          <button className=\"task-types\" onClick={() => setShowRules(!showRules)}>Säännöt</button>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddTaskDropdown\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = `${process.env.REACT_APP_API_URL}/file`\r\n\r\nconst updateFiles = async (files) => {\r\n  const config = {\r\n    headers: { 'Content-Type': 'multipart/form-data' }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, files, config)\r\n  return response.data\r\n}\r\n\r\nexport default { updateFiles }\r\n","import React from 'react'\r\nimport MarkdownIt from 'markdown-it'\r\nimport MdEditor from 'react-markdown-editor-lite'\r\nimport 'react-markdown-editor-lite/lib/index.css'\r\n\r\nconst MDEditor = ({ setText, setMD, value }) => {\r\n  const mdParser = new MarkdownIt()\r\n\r\n  const handleEditorChange = ({ html, text }) => {\r\n    setText(html)\r\n    setMD(text)\r\n  }\r\n\r\n  return (\r\n    <MdEditor\r\n      value={value}\r\n      renderHTML={(text) => mdParser.render(text)}\r\n      onChange={handleEditorChange}\r\n    />\r\n  )\r\n}\r\n\r\nexport default MDEditor\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport Notification from './Notification'\r\nimport taskService from '../services/task'\r\nimport fileService from '../services/file'\r\nimport ruleService from '../services/rule'\r\nimport seriesService from '../services/series'\r\nimport languageService from '../services/language'\r\nimport MDEditor from './MDEditor'\r\nimport Dropzone from 'react-dropzone'\r\n\r\nconst AddTask = () => {\r\n\r\n  const [message, setMessage] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [assignmentText, setAssignmentText] = useState('')\r\n  const [gradingScale, setGradingScale] = useState('')\r\n  const [supervisorInstructions, setSupervisorInstructions] = useState('')\r\n  const [assignmentTextMD, setAssignmentTextMD] = useState('')\r\n  const [gradingScaleMD, setGradingScaleMD] = useState('')\r\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState('')\r\n  const [rules, setRules] = useState([])\r\n  const [rule, setRule] = useState('')\r\n  const [categories, setCategories] = useState([])\r\n  const [category, setCategory] = useState('')\r\n  const [seriess, setSeriess] = useState([])\r\n  const [series, setSeries] = useState([])\r\n  const [languages, setLanguages] = useState([])\r\n  const [language, setLanguage] = useState('')\r\n  const [creatorName, setCreatorName] = useState('')\r\n  const [creatorEmail, setCreatorEmail] = useState('')\r\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\r\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\r\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\r\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\r\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\r\n  const [files, setFiles] = useState([])\r\n\r\n  useEffect(() => {\r\n    ruleService.getRules().then(response => {\r\n      setRules(response)\r\n    })\r\n    seriesService.getSeries().then(response => {\r\n      setSeriess(response)\r\n    })\r\n    languageService.getLanguages().then(response => {\r\n      setLanguages(response)\r\n    })\r\n  }, [])\r\n\r\n  const handleRuleChange = (e) => {\r\n    setRule(e.target.value)\r\n    setCategory('')\r\n    if (e.target.value) {\r\n      const foundRule = rules.find(r => r.id === e.target.value)\r\n      setCategories(foundRule.acceptedCategories)\r\n    } else {\r\n      setCategories([])\r\n    }\r\n  }\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setCategory(e.target.value)\r\n  }\r\n\r\n  const handleSeriesChange = (e) => {\r\n    let options = e.target.options\r\n    let values = []\r\n    for (var i = 0, l = options.length; i < l; i++) {\r\n      if (options[i].selected && options[i].value !== '') {\r\n        values.push(options[i].value)\r\n      }\r\n    }\r\n    setSeries(values)\r\n  }\r\n\r\n  const handleLanguageChange = (e) => {\r\n    setLanguage(e.target.value)\r\n  }\r\n\r\n  const handleAddTask = async (event) => {\r\n    event.preventDefault()\r\n    setNameErrorMessage(null)\r\n    setAssignmentTextErrorMessage(null)\r\n    setCreatorNameErrorMessage(null)\r\n    setCreatorEmailErrorMessage(null)\r\n    setDropDownErrorMessage(null)\r\n    if (name.length < 1) {\r\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\r\n    }\r\n    if (assignmentText.length < 1) {\r\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\r\n    }\r\n    if (creatorName.length < 1) {\r\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\r\n    }\r\n    if (creatorEmail.length < 1) {\r\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\r\n    }\r\n    if (language === '' || rule === '' || series === '' || category === '') {\r\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\r\n    }\r\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\r\n            || language === '' || rule === '' || series === '' || category === '') {\r\n      return\r\n    }\r\n    setAssignmentText(JSON.stringify(assignmentText))\r\n    setGradingScale(JSON.stringify(gradingScale))\r\n    setSupervisorInstructions(JSON.stringify(supervisorInstructions))\r\n\r\n    let formData = new FormData()\r\n\r\n    if (files.length > 0) {\r\n      for (let i = 0; i < files.length; i++) {\r\n          formData.append('filesToAdd', files[i], files[i].name)\r\n      }\r\n    }\r\n\r\n    let addedFiles = []\r\n\r\n    try {\r\n      addedFiles = await fileService.updateFiles(formData)\r\n      await taskService.addtask({\r\n        name, rule, category, series,\r\n        language, assignmentText, gradingScale,\r\n        creatorName, creatorEmail, supervisorInstructions,\r\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD,\r\n        files: addedFiles\r\n      })\r\n      setName('')\r\n      setRule('')\r\n      setCategory('')\r\n      setSeries('')\r\n      setLanguage('')\r\n      setAssignmentText('')\r\n      setGradingScale('')\r\n      setCreatorEmail('')\r\n      setCreatorName('')\r\n      setSupervisorInstructions('')\r\n      setMessage('Tehtävä lisätty!')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n        window.location.reload()\r\n      }, 2000)\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const onDrop = (newFiles) => {\r\n    setFiles(files.concat(newFiles))\r\n  }\r\n\r\n  const handleDeleteFile = (e, name) => {\r\n    e.stopPropagation()\r\n    setFiles(files.filter(file => file.name !== name))\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-task-container\">\r\n      <h2>Lisää tehtävä</h2>\r\n      <Notification message={message} type=\"success\" />\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleAddTask}>\r\n        <div>\r\n          <Notification message={nameErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"task-title\"\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"Name\"\r\n            placeholder=\"Tehtävän nimi\"\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h4>Tehtävänanto</h4>\r\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\r\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} />\r\n        </div>\r\n        <div>\r\n          <h4>Arvostelu</h4>\r\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} />\r\n        </div>\r\n        <div className=\"instructions\">\r\n          <h4>Rastimiehen ohje</h4>\r\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} />\r\n        </div>\r\n        <Notification message={dropDownErrorMessage} type=\"error\" />\r\n        <div className=\"dropdowns\">\r\n          <div>\r\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\r\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\r\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <select className=\"rule-select\" value={rule} onChange={(e) => handleRuleChange(e)}>\r\n              <option value=\"\">Säännöt</option>\r\n              {rules.map(rule => <option className=\"rule-options\" key={rule.id} value={rule.id}>{rule.name}</option>)}\r\n            </select>\r\n            <br/>\r\n            <select className=\"category-select\" value={category} onChange={(e) => handleCategoryChange(e)}>\r\n              <option value=\"\">Kategoria</option>\r\n              {categories.map(category => <option className=\"category-options\" key={category.id} value={category.id}>{category.name}</option>)}\r\n            </select>\r\n            <br/>\r\n            <select className=\"language-select\" value={language} onChange={(e) => handleLanguageChange(e)}>\r\n              <option value=\"\">Kieli</option>\r\n              {languages.map(language => <option className=\"language-options\" key={language.id} value={language.id}>{language.name}</option>)}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"creator\">\r\n          <div>\r\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\r\n            <input\r\n              className=\"\"\r\n              type=\"text\"\r\n              value={creatorName}\r\n              name=\"CreatorName\"\r\n              placeholder=\"Lisääjän nimi\"\r\n              onChange={({ target }) => setCreatorName(target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\r\n            <input\r\n              className=\"\"\r\n              type=\"text\"\r\n              value={creatorEmail}\r\n              name=\"CreatorEmail\"\r\n              placeholder=\"Lisääjän sähköpostiosoite\"\r\n              onChange={({ target }) => setCreatorEmail(target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <Dropzone onDrop={onDrop}>\r\n          {({getRootProps, getInputProps}) => (\r\n            <div {...getRootProps()}>\r\n              <input {...getInputProps()} />\r\n              <div className=\"files\">\r\n                <div className=\"title\">Liitetiedostot</div>\r\n                {files.length > 0 &&\r\n                  <React.Fragment>\r\n                    {files.map((file) => (\r\n                      <div key={file.name}>{file.name}<b onClick={(e) => handleDeleteFile(e, file.name)}>x</b></div>\r\n                    ))}\r\n                  </React.Fragment>\r\n                }\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Dropzone>\r\n\r\n        <button type=\"submit\" className=\"add-task-button\">Lisää tehtävä</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default AddTask","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport taskService from '../services/task'\r\nimport Notification from './Notification'\r\nimport tokenService from '../services/token'\r\n\r\n\r\nconst TaskListPending = () => {\r\n  const [tasks, setTasks] = useState([])\r\n  const [message, setMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (!tokenService.getToken()) {\r\n      const loggedUserJSON = window.localStorage.getItem('loggedUser')\r\n      if (loggedUserJSON) {\r\n        const loggedUser = JSON.parse(loggedUserJSON)\r\n        tokenService.setToken(loggedUser.token)\r\n      }\r\n    }\r\n    taskService.getPendingTasks().then((response) => {\r\n      setTasks(response)\r\n    })\r\n  }, [])\r\n\r\n  const handleAccept = (id) => {\r\n    try {\r\n      taskService.acceptTask(id)\r\n      setTasks(tasks.filter(t => t.id !== id))\r\n      setMessage('Tehtävä hyväksytty')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa tehtävän: ${tasks.find(t => t.id === id).name}`)) {\r\n        await taskService.deleteTask(id)\r\n        setTasks(tasks.filter(t => t.id !== id))\r\n      }\r\n    } catch (exeption) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-list\">\r\n      <h1>Hyväksyntää odottavat kisatehtävät</h1>\r\n      <Notification message={message} type=\"success\" />\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      {tasks && tasks.length > 0 &&\r\n        <div className=\"task-list-title\">\r\n          <span>Tehtävän nimi</span>\r\n          <span>Sarja</span>\r\n          <span>Kategoria</span>\r\n          <span></span>\r\n        </div>\r\n      }\r\n      {tasks.map((task) => (\r\n        <div className={`task-list-item pending`} key={task.id}>\r\n          <span>\r\n            <Link to={`/tehtava/${task.id}`}>\r\n              {task.name}\r\n            </Link>\r\n          </span>\r\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\r\n          <span>{task.category && task.category.name}</span>\r\n          <span>\r\n            <button className=\"accept-button\" onClick={() => handleAccept(task.id)}>Hyväksy</button>\r\n            <button className=\"delete-button\" onClick={() => handleDelete(task.id)}>Poista</button>\r\n          </span>\r\n        </div>\r\n      ))}\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default TaskListPending\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport TaskListPending from './TaskListPending'\r\n\r\nconst Admin = () => (\r\n  <div>\r\n    <TaskListPending />\r\n    <Link to=\"/omasivu\">Omat tiedot</Link>\r\n    <br />\r\n    <Link to=\"/lisaa_admin\">Lisää ylläpitäjä</Link>\r\n    <br />\r\n    <Link to=\"/lisaa_pudotusvalikkoon\">Hallinnoi sääntöjä/kieliä/sarjoja/kategorioita</Link>\r\n  </div>\r\n)\r\n\r\nexport default Admin\r\n","import React, { useState } from 'react'\r\nimport Notification from './Notification'\r\nimport userService from '../services/user'\r\n\r\nconst EditUser = ({ setShowEdit, user, setUser, setMessage }) => {\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\r\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\r\n  const [name, setName] = useState(user.name)\r\n  const [username, setUsername] = useState(user.username)\r\n\r\n  const handleEditUser = async (event) => {\r\n    event.preventDefault()\r\n    setNameErrorMessage(null)\r\n    setUsernameErrorMessage(null)\r\n    if (name.length < 3) {\r\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\r\n    }\r\n    if (username.length < 3) {\r\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\r\n    }\r\n    if (name.length < 3 || username.length < 3) {\r\n      return\r\n    }\r\n    try {\r\n      const editedUser = await userService.editUser({\r\n        name, username\r\n      })\r\n      setUser(editedUser)\r\n      window.localStorage.setItem(\r\n        'loggedUser', JSON.stringify(editedUser),\r\n      )\r\n      setShowEdit(false)\r\n      setMessage('Tietoja muokattu!')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    } catch (error) {\r\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"username already exists\") {\r\n        setErrorMessage('Käyttäjätunnus on varattu')\r\n      } else {\r\n        setErrorMessage('Muokkaaminen epäonnistui')\r\n      }\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"edit-user-form\">\r\n      <h2>Omat tiedot</h2>\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleEditUser}>\r\n        <div>\r\n          <Notification message={nameErrorMessage} type=\"error\" />\r\n          <label>Nimi</label><br/>\r\n          <input\r\n            className=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"Name\"\r\n            placeholder=\"Nimi\"\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Notification message={usernameErrorMessage} type=\"error\" />\r\n          <label>Käyttäjätunnus</label><br/>\r\n          <input\r\n            className=\"username\"\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"Username\"\r\n            placeholder=\"Käyttäjätunnus\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"edit-button\">Tallenna</button>\r\n        <button onClick={() => setShowEdit(false)} className=\"cancel-button\">Peruuta</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditUser\r\n","import React, { useState } from 'react'\r\nimport Notification from './Notification'\r\nimport userService from '../services/user'\r\n\r\nconst ChangePassword = ({ setShowChangePassword, setMessage }) => {\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [oldPassword, setOldPassword] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const [newPasswordAgain, setNewPasswordAgain] = useState('')\r\n\r\n  const handleChangePassword = async (event) => {\r\n    event.preventDefault()\r\n    setErrorMessage(null)\r\n    if (newPassword.length < 3) {\r\n      setErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\r\n      return\r\n    }\r\n    if (newPassword !== newPasswordAgain) {\r\n      setErrorMessage('Salasanat eivät täsmää')\r\n      return\r\n    }\r\n    try {\r\n      await userService.editUser({\r\n        oldPassword, newPassword\r\n      })\r\n      setOldPassword('')\r\n      setNewPassword('')\r\n      setNewPasswordAgain('')\r\n      setShowChangePassword(false)\r\n      setMessage('Salasana vaihdettu!')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    } catch (error) {\r\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"incorrect password\") {\r\n        setErrorMessage('Vanha salasana ei täsmää')\r\n      } else {\r\n        setErrorMessage('Salasanan vaihtaminen epäonnistui')\r\n      }\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"change-password-form\">\r\n      <h2>Vaihda salasana</h2>\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleChangePassword}>\r\n        <div>\r\n          <input\r\n            className=\"old-password\"\r\n            type=\"password\"\r\n            value={oldPassword}\r\n            placeholder=\"Vanha salasana\"\r\n            onChange={({ target }) => setOldPassword(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"new-password\"\r\n            type=\"password\"\r\n            value={newPassword}\r\n            placeholder=\"Uusi salasana\"\r\n            onChange={({ target }) => setNewPassword(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"new-password-again\"\r\n            type=\"password\"\r\n            value={newPasswordAgain}\r\n            placeholder=\"Uusi salasana uudelleen\"\r\n            onChange={({ target }) => setNewPasswordAgain(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"change-password-button\">Tallenna</button>\r\n        <button onClick={() => setShowChangePassword(false)} className=\"cancel-button\">Peruuta</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChangePassword\r\n","import React, { useState } from 'react'\r\nimport Notification from './Notification'\r\nimport EditUser from './EditUser'\r\nimport ChangePassword from './ChangePassword'\r\n\r\nconst User = ({ user, setUser }) => {\r\n  const [message, setMessage] = useState(null)\r\n  const [showEdit, setShowEdit] = useState(false)\r\n  const [showChangePassword, setShowChangePassword] = useState(false)\r\n\r\n  const editUser = () => {\r\n    setShowChangePassword(false)\r\n    setShowEdit(true)\r\n  }\r\n\r\n  const changePassword = () => {\r\n    setShowEdit(false)\r\n    setShowChangePassword(true)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {user\r\n        && (\r\n          <div className=\"user-info\">\r\n            {!showEdit && !showChangePassword\r\n            && (\r\n              <div>\r\n                <Notification message={message} type=\"success\" />\r\n                <h2>Omat tiedot</h2>\r\n                <p>\r\n                  <b>Nimi: </b>\r\n                  {user.name}\r\n                </p>\r\n                <p>\r\n                  <b>Käyttäjätunnus: </b>\r\n                  {user.username}\r\n                </p>\r\n                <button className=\"edit-user-button\" onClick={() => editUser()}>Muokkaa</button>\r\n                <button className=\"change-password-button\" onClick={() => changePassword()}>Vaihda salasana</button>\r\n              </div>\r\n            )}\r\n            {showEdit && <EditUser setShowEdit={setShowEdit} user={user} setUser={setUser} setMessage={setMessage} />}\r\n            {showChangePassword && <ChangePassword setShowChangePassword={setShowChangePassword} setMessage={setMessage} />}\r\n          </div>\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import React, { useState, useEffect } from 'react'\r\nimport Notification from './Notification'\r\nimport taskService from '../services/task'\r\nimport fileService from '../services/file'\r\nimport ruleService from '../services/rule'\r\nimport seriesService from '../services/series'\r\nimport languageService from '../services/language'\r\nimport MDEditor from './MDEditor'\r\nimport Dropzone from 'react-dropzone'\r\n\r\nconst ModifyTask = ({ setModifyVisible, task, setTask }) => {\r\n\r\n  const [message, setMessage] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [name, setName] = useState(task.name)\r\n  const [assignmentText, setAssignmentText] = useState(task.assignmentText)\r\n  const [gradingScale, setGradingScale] = useState(task.gradingScale)\r\n  const [supervisorInstructions, setSupervisorInstructions] = useState(task.supervisorInstructions)\r\n  const [assignmentTextMD, setAssignmentTextMD] = useState(task.assignmentTextMD)\r\n  const [gradingScaleMD, setGradingScaleMD] = useState(task.gradingScaleMD)\r\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState(task.supervisorInstructionsMD)\r\n  const [rules, setRules] = useState([])\r\n  const [rule, setRule] = useState(task.rules ? task.rules.id : null)\r\n  const [categories, setCategories] = useState([])\r\n  const [category, setCategory] = useState(task.category ? task.category.id : null)\r\n  const [seriess, setSeriess] = useState([])\r\n  const [series, setSeries] = useState(task.series.map(s => s.id))\r\n  const [languages, setLanguages] = useState([])\r\n  const [language, setLanguage] = useState(task.language ? task.language.id : null)\r\n  const [creatorName, setCreatorName] = useState(task.creatorName)\r\n  const [creatorEmail, setCreatorEmail] = useState(task.creatorEmail)\r\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\r\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\r\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\r\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\r\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\r\n  const [oldFiles, setOldFiles] = useState(task.files || [])\r\n  const [newFiles, setNewFiles] = useState([])\r\n  const [filesToDelete, setFilesToDelete] = useState([])\r\n\r\n  let id = task.id\r\n\r\n  useEffect(() => {\r\n    ruleService.getRules().then(response => {\r\n      setRules(response)\r\n      if (task.rules && task.rules.id) {\r\n        const foundRule = response.find(r => r.id === task.rules.id)\r\n        if (foundRule) {\r\n          setCategories(foundRule.acceptedCategories)\r\n        }\r\n      }\r\n    })\r\n    seriesService.getSeries().then(response => {\r\n      setSeriess(response)\r\n    })\r\n    languageService.getLanguages().then(response => {\r\n      setLanguages(response)\r\n    })\r\n  }, [])\r\n\r\n  const handleRuleChange = (e) => {\r\n    setRule(e.target.value)\r\n    setCategory('')\r\n    if (e.target.value) {\r\n      const foundRule = rules.find(r => r.id === e.target.value)\r\n      setCategories(foundRule.acceptedCategories)\r\n    } else {\r\n      setCategories([])\r\n    }\r\n  }\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setCategory(e.target.value)\r\n  }\r\n\r\n  const handleSeriesChange = (e) => {\r\n    let options = e.target.options\r\n    let values = []\r\n    for (var i = 0, l = options.length; i < l; i++) {\r\n      if (options[i].selected && options[i].value !== '') {\r\n        values.push(options[i].value)\r\n      }\r\n    }\r\n    setSeries(values)\r\n  }\r\n\r\n  const handleLanguageChange = (e) => {\r\n    setLanguage(e.target.value)\r\n  }\r\n\r\n  const handleModifyTask = async (event) => {\r\n    event.preventDefault()\r\n    setNameErrorMessage(null)\r\n    setAssignmentTextErrorMessage(null)\r\n    setCreatorNameErrorMessage(null)\r\n    setCreatorEmailErrorMessage(null)\r\n    setDropDownErrorMessage(null)\r\n    if (name.length < 1) {\r\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\r\n    }\r\n    if (assignmentText.length < 1) {\r\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\r\n    }\r\n    if (creatorName.length < 1) {\r\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\r\n    }\r\n    if (creatorEmail.length < 1) {\r\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\r\n    }\r\n    if (language === '' || rule === '' || series === '' || category === '') {\r\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\r\n    }\r\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\r\n      || language === '' || rule === '' || series === '' || category === '') {\r\n      return\r\n    }\r\n\r\n    let formData = new FormData()\r\n\r\n    formData.append('filesToDelete', filesToDelete)\r\n\r\n    if (newFiles.length > 0) {\r\n      for (let i = 0; i < newFiles.length; i++) {\r\n          formData.append('filesToAdd', newFiles[i], newFiles[i].name)\r\n      }\r\n    }\r\n\r\n    let addedFiles = []\r\n\r\n    try {\r\n      addedFiles = await fileService.updateFiles(formData)\r\n      const modifiedTask = await taskService.updateTask({\r\n        name, rule, category, series,\r\n        language, assignmentText, gradingScale,\r\n        creatorName, creatorEmail, supervisorInstructions, id,\r\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD,\r\n        files: oldFiles.concat(addedFiles)\r\n      })\r\n      setMessage('Tehtävä tallennettu!')\r\n      setTask(modifiedTask)\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n        window.location.reload()\r\n      }, 1000)\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setModifyVisible(false)\r\n  }\r\n\r\n  const onDrop = (files) => {\r\n    setNewFiles(newFiles.concat(files))\r\n  }\r\n\r\n  const handleDeleteOldFile = (e, name) => {\r\n    e.stopPropagation()\r\n    setOldFiles(oldFiles.filter(file => file !== name))\r\n    setFilesToDelete(filesToDelete.concat(name))\r\n  }\r\n\r\n  const handleDeleteNewFile = (e, name) => {\r\n    e.stopPropagation()\r\n    setNewFiles(newFiles.filter(file => file.name !== name))\r\n  }\r\n\r\n  return (\r\n    <div className=\"modify-task-container\">\r\n      <h2>Muokkaa tehtävää</h2>\r\n      <Notification message={message} type=\"success\" />\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <form onSubmit={handleModifyTask} className=\"modify-form\">\r\n        <div>\r\n          <Notification message={nameErrorMessage} type=\"error\" />\r\n          <input\r\n            className=\"task-title\"\r\n            type=\"text\"\r\n            defaultValue={name}\r\n            name=\"Name\"\r\n            placeholder=\"Tehtävän nimi\"\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h4>Tehtävänanto</h4>\r\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\r\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} value={assignmentTextMD} placeHolder=\"Tehtävänanto\" />\r\n        </div>\r\n        <div>\r\n          <h4>Arvostelu</h4>\r\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} value={gradingScaleMD} placeHolder=\"Arvostelu\" />\r\n        </div>\r\n        <div className=\"instructions\">\r\n          <h4>Rastimiehen ohje</h4>\r\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} value={supervisorInstructionsMD} placeHolder=\"Rastimiehen ohje\" />\r\n        </div>\r\n        <Notification message={dropDownErrorMessage} type=\"error\" />\r\n        <div className=\"dropdowns\">\r\n          <div>\r\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\r\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\r\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <select value={rule} onChange={(e) => handleRuleChange(e)}>\r\n              <option value=\"\">Säännöt</option>\r\n              {rules.map(rule => <option key={rule.id} value={rule.id}>{rule.name}</option>)}\r\n            </select>\r\n            <br/>\r\n            <select value={category} onChange={(e) => handleCategoryChange(e)}>\r\n              <option value=\"\">Kategoria</option>\r\n              {categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)}\r\n            </select>\r\n            <br/>\r\n            <select value={language} onChange={(e) => handleLanguageChange(e)}>\r\n              <option value=\"\">Kieli</option>\r\n              {languages.map(language => <option key={language.id} value={language.id}>{language.name}</option>)}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"creator\">\r\n          <div>\r\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\r\n            <input\r\n              className=\"\"\r\n              type=\"text\"\r\n              defaultValue={creatorName}\r\n              name=\"CreatorName\"\r\n              placeholder=\"Muokkaajan nimi\"\r\n              onChange={({ target }) => setCreatorName(target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\r\n            <input\r\n              className=\"\"\r\n              type=\"text\"\r\n              defaultValue={creatorEmail}\r\n              name=\"CreatorEmail\"\r\n              placeholder=\"Muokkaajan sähköpostiosoite\"\r\n              onChange={({ target }) => setCreatorEmail(target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <Dropzone onDrop={onDrop}>\r\n          {({getRootProps, getInputProps}) => (\r\n            <div {...getRootProps()}>\r\n              <input {...getInputProps()} />\r\n              <div className=\"files\">\r\n                <div className=\"title\">Liitetiedostot</div>\r\n                {oldFiles && oldFiles.length > 0 &&\r\n                  <React.Fragment>\r\n                    {oldFiles.map((file) => (\r\n                      <div key={file}>{file.substring(file.indexOf('-') + 1, file.length)}<b onClick={(e) => handleDeleteOldFile(e, file)}>x</b></div>\r\n                    ))}\r\n                  </React.Fragment>\r\n                }\r\n                {newFiles && newFiles.length > 0 &&\r\n                  <React.Fragment>\r\n                    {newFiles.map((file) => (\r\n                      <div key={file.name}>{file.name}<b onClick={(e) => handleDeleteNewFile(e, file.name)}>x</b></div>\r\n                    ))}\r\n                  </React.Fragment>\r\n                }\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Dropzone>\r\n\r\n        <div>\r\n          <button type=\"submit\" className=\"save-task-button\">Tallenna</button>\r\n          <button onClick={() => handleCancel()} className=\"return-button\">Peruuta</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default ModifyTask","import React from 'react'\r\n\r\nconst TaskTextDisplay = ({ text }) => {\r\n  const htmlConverter = () => {\r\n    return { __html: `${text}` }\r\n  }\r\n\r\n  return (\r\n    <div dangerouslySetInnerHTML={htmlConverter()} />\r\n  )\r\n}\r\n\r\nexport default TaskTextDisplay","import React, { useState, useEffect } from 'react'\r\nimport taskService from '../services/task'\r\nimport ModifyTask from './ModifyTask'\r\nimport Notification from './Notification'\r\nimport TaskTextDisplay from './TaskTextDisplay'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Task = ({ match, user }) => {\r\n\r\n  const [task, setTask] = useState(null)\r\n  const [modifyVisible, setModifyVisible] = useState(false)\r\n  const [message, setMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    taskService.getOneTask(match.params.id).then((response) => {\r\n      setTask(response)\r\n    })\r\n  }, [])\r\n\r\n  const handleDelete = () => {\r\n    try {\r\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\r\n        taskService.deleteTask(task.id)\r\n        setMessage('Tehtävä poistettu')\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n          if (task.pending) {\r\n            history.push('/admin')\r\n          } else {\r\n            history.push('/')\r\n          }\r\n        }, 2000)\r\n      }\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleAccept = () => {\r\n    try {\r\n      taskService.acceptTask(task.id)\r\n      setMessage('Tehtävä hyväksytty')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n        history.push('/admin')\r\n      }, 2000)\r\n    } catch (exception) {\r\n      setErrorMessage('Jotain meni vikaan')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {modifyVisible ?\r\n        <ModifyTask setModifyVisible={setModifyVisible} task={task} setTask={setTask} />\r\n        :\r\n        <div className=\"task-view-info-background\">\r\n          <Notification message={message} type=\"success\" />\r\n          <Notification message={errorMessage} type=\"error\" />\r\n          {task &&\r\n            <div className=\"task-view-info\">\r\n              <h2>{task.name}</h2>\r\n              <h3>Tehtävänanto:</h3>\r\n              <TaskTextDisplay text={task.assignmentText} />\r\n              <h3>Rastimiehen ohjeet:</h3>\r\n              <TaskTextDisplay text={task.supervisorInstructions} />\r\n              <h3>Arvosteluasteikko:</h3>\r\n              <TaskTextDisplay text={task.gradingScale} />\r\n              <h3>Sarja:</h3>\r\n              {task.series.map(s => <span key={task.id + s.id}>{s.name}<br /></span>)}\r\n              <h3>Kategoria:</h3>\r\n              <p>{task.category && task.category.name}</p>\r\n              <h3>Sääntöluokka:</h3>\r\n              <p>{task.rules && task.rules.name}</p>\r\n              <h3>Tehtävän viimeisin muokkaaja:</h3>\r\n              <p>{task.creatorName}<br />{task.creatorEmail}</p>\r\n              <h3>Liitetiedostot:</h3>\r\n              {task.files && task.files.map((file) => (\r\n                <div key={file}>\r\n                  <a href={`https://kisapankki.blob.core.windows.net/files/${file}`}>\r\n                    {file.substring(file.indexOf('-') + 1, file.length)}\r\n                  </a>\r\n                </div>\r\n              ))}\r\n              {user &&\r\n                <div className=\"buttons\">\r\n                  <button onClick={() => setModifyVisible(true)} className=\"modify-view-button\">Muokkaa</button>\r\n                  {task.pending && <button className=\"accept-button\" onClick={() => handleAccept()}>Hyväksy</button>}\r\n                  <button className=\"delete-button\" onClick={() => handleDelete()}>Poista</button>\r\n                </div>}\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n      }\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { Route, Link, Redirect, useHistory } from 'react-router-dom'\r\nimport Login from './components/Login'\r\nimport TaskList from './components/TaskList'\r\nimport AddAdmin from './components/AddAdmin'\r\nimport AddTaskDropdown from './components/AddTaskDropdown'\r\nimport AddTask from './components/AddTask'\r\nimport Admin from './components/Admin'\r\nimport User from './components/User'\r\nimport Task from './components/Task'\r\nimport tokenService from './services/token'\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(null)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\r\n    if (loggedUserJSON) {\r\n      const loggedUser = JSON.parse(loggedUserJSON)\r\n      setUser(loggedUser)\r\n      tokenService.setToken(loggedUser.token)\r\n    }\r\n  }, [])\r\n\r\n  const logout = () => {\r\n    window.localStorage.removeItem('loggedUser')\r\n    setUser(null)\r\n    tokenService.setToken(null)\r\n    history.push('/')\r\n    window.location.reload()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <Link to=\"/\"><div className=\"logo\" /></Link>\r\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-header\">Lisää tehtävä</button></Link>\r\n\r\n        {user === null ?\r\n          <Fragment>\r\n            <Link to=\"/kirjautuminen\"><button className=\"login-button-header\">Kirjaudu</button></Link>\r\n          </Fragment>\r\n          :\r\n          <Fragment>\r\n            <Link to=\"/admin\"><button className=\"admin-button-header\">Admin</button></Link>\r\n            <div>\r\n              <div className=\"logged\">Kirjautuneena <Link to=\"/omasivu\" className=\"username-header\">{user.username}</Link></div>\r\n              <div className=\"logout\"><button className=\"logout-button-header\" onClick={() => logout()}>Kirjaudu ulos</button></div>\r\n            </div>\r\n          </Fragment>\r\n        }\r\n\r\n      </div>\r\n      <div className=\"admin-task-buttons-mobile\">\r\n        {user !== null && <Link to=\"/admin\"><button className=\"admin-button-mobile\">Admin</button></Link>}\r\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-mobile\">Lisää tehtävä</button></Link>\r\n      </div>\r\n      <div className=\"container\">\r\n        <Route exact path=\"/\" render={() => <TaskList user={user} />} />\r\n        <Route exact path=\"/tehtava/:id\" render={(match) => <Task {...match} user={user} />} />\r\n        <Route path=\"/kirjautuminen\" render={() => <Login setUser={setUser} />} />\r\n        <Route path=\"/lisaa_tehtava\" render={() => <AddTask />} />\r\n        <Route path=\"/omasivu\" render={() => (localStorage.getItem('loggedUser') ? <User user={user} setUser={setUser} /> : <Redirect to=\"/\" />)} />\r\n        <Route path=\"/admin\" render={() => (localStorage.getItem('loggedUser') ? <Admin /> : <Redirect to=\"/\" />)} />\r\n        <Route path=\"/lisaa_admin\" render={() => (localStorage.getItem('loggedUser') ? <AddAdmin /> : <Redirect to=\"/\" />)} />\r\n        <Route path=\"/lisaa_pudotusvalikkoon\" render={() => (localStorage.getItem('loggedUser') ? <AddTaskDropdown /> : <Redirect to=\"/\" />)} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root'),\r\n)\r\n"],"sourceRoot":""}