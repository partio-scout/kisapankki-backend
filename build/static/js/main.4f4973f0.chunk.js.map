{"version":3,"sources":["components/Notification.js","services/login.js","services/token.js","components/Login.js","services/task.js","services/series.js","services/rule.js","services/category.js","components/Search.js","components/TaskList.js","services/user.js","components/AddAdmin.js","components/Rule.js","services/language.js","components/Language.js","components/Series.js","components/Category.js","components/AddTaskDropdown.js","services/file.js","components/MDEditor.js","components/AddTask.js","components/TaskListPending.js","components/Admin.js","components/EditUser.js","components/ChangePassword.js","components/User.js","components/ModifyTask.js","components/TaskTextDisplay.js","components/Task.js","App.js","index.js"],"names":["Notification","message","type","className","baseUrl","process","credentials","a","async","axios","post","response","data","token","newToken","Login","setUser","useState","errorMessage","setErrorMessage","username","setUsername","email","setEmail","password","setPassword","history","useHistory","onSubmit","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","tokenService","push","setTimeout","value","name","placeholder","onChange","target","baseUrlPending","task","config","headers","Authorization","get","id","search","put","delete","series","serie","console","log","rule","cat","category","Search","setTasks","setAllTasks","setSearch","taskService","defaultValue","TaskList","allTasks","tasks","selectedCategory","setSelectedCategory","selectedSeries","setSelectedSeries","selectedRules","setSelectedRules","categories","setCategories","rules","setRules","isClearable","seriess","setSeriess","useEffect","then","categoryService","seriesService","ruleService","length","array","i","j","includes","filter","getOptionLabel","option","getOptionValue","map","s","options","isMulti","c","key","to","onClick","views","confirm","t","handleDelete","AddAdmin","setMessage","nameErrorMessage","setNameErrorMessage","usernameErrorMessage","setUsernameErrorMessage","passwordErrorMessage","setPasswordErrorMessage","emailErrorMessage","setEmailErrorMessage","setName","users","setUsers","userService","some","Rule","newRuleName","setNewRuleName","modifiedRuleName","setModifiedRuleName","modifiedRuleId","setModifiedRuleId","modifyVisible","setModifyVisible","acceptedCategories","setAcceptedCategories","modifiedCategories","setModifiedCategories","handleRuleModify","modifiedRule","handleModifyCategories","handleShowModify","r","handleRuleDelete","newCategories","addedRule","concat","language","Language","languages","setLanguages","languageName","setLanguageName","modifiedLanguageName","setModifiedLanguageName","modifiedLanguageId","setModifiedLanguageId","handleLanguageModify","modifiedLanguage","languageService","l","handleLanguageDelete","addedLanguage","Series","setSeries","modifiedSerieName","setModifiedSerieName","modifiedSerieId","setModifiedSerieId","modifiedSerieColor","setModifiedSerieColor","color","setColor","handleSerieModify","modifiedSerie","onChangeComplete","hex","colors","style","backgroundColor","display","borderRadius","height","width","marginLeft","handleSerieDelete","addedSerie","Category","newCategoryName","setNewCategoryName","modifiedCategoryName","setModifiedCategoryName","modifiedCategoryId","setModifiedCategoryId","handleCategoryModify","modifiedCategory","handleCategoryDelete","addedCategory","AddTaskDropdown","showCategories","setShowCategories","showRules","setShowRules","showLanguages","setShowLanguages","showSeries","setShowSeries","files","MDEditor","setText","setMD","mdParser","MarkdownIt","renderHTML","text","render","html","AddTask","assignmentText","setAssignmentText","gradingScale","setGradingScale","supervisorInstructions","setSupervisorInstructions","assignmentTextMD","setAssignmentTextMD","gradingScaleMD","setGradingScaleMD","supervisorInstructionsMD","setSupervisorInstructionsMD","setRule","setCategory","setLanguage","creatorName","setCreatorName","creatorEmail","setCreatorEmail","assignmentTextErrorMessage","setAssignmentTextErrorMessage","creatorNameErrorMessage","setCreatorNameErrorMessage","creatorEmailErrorMessage","setCreatorEmailErrorMessage","dropDownErrorMessage","setDropDownErrorMessage","setFiles","formData","FormData","append","addedFiles","fileService","location","reload","multiple","e","values","selected","handleSeriesChange","foundRule","find","handleRuleChange","handleCategoryChange","handleLanguageChange","onDrop","newFiles","getRootProps","getInputProps","Fragment","file","stopPropagation","handleDeleteFile","TaskListPending","loggedUserJSON","getItem","loggedUser","parse","exception","handleAccept","Admin","EditUser","setShowEdit","editedUser","error","ChangePassword","setShowChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","newPasswordAgain","setNewPasswordAgain","User","showEdit","showChangePassword","ModifyTask","setTask","oldFiles","setOldFiles","setNewFiles","filesToDelete","setFilesToDelete","modifiedTask","placeHolder","substring","indexOf","handleDeleteOldFile","handleDeleteNewFile","TaskTextDisplay","dangerouslySetInnerHTML","__html","Task","match","params","href","pending","App","removeItem","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4f4973f0.chunk.js","sourcesContent":["import React from 'react'\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/login`\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","let token = null\n\nconst getToken = () => token\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nexport default { getToken, setToken }\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Notification from './Notification'\nimport loginService from '../services/login'\nimport tokenService from '../services/token'\n\nconst Login = ({ setUser }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const history = useHistory()\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, email, password,\n      })\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user),\n      )\n      setUser(user)\n      tokenService.setToken(user.token)\n      setUsername('')\n      setEmail('')\n      setPassword('')\n      history.push('/')\n    } catch (exception) {\n      setErrorMessage('Väärä käyttäjätunnus/salasana')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"login-form\">\n      <h2>Kirjaudu sisään</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleLogin}>\n        <div>\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            placeholder=\"Salasana\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"login-button\">Kirjaudu</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Login\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/task`\nconst baseUrlPending = `${process.env.REACT_APP_API_URL}/task/pending`\n\n\nconst getTasks = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getPendingTasks = async () => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  const response = await axios.get(baseUrlPending, config)\n  return response.data\n}\n\nconst getSearchedTasks = async (search) => {\n  const response = await axios.post(`${baseUrl}/search`, search)\n  return response.data\n}\n\nconst getOneTask = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst addtask = async (task) => {\n  let config = null\n  const token = tokenService.getToken()\n\n  if (token) {\n    config = {\n      headers: { Authorization: token }\n    }\n  }\n\n  const response = await axios.post(baseUrl, task, config)\n  return response.data\n}\n\nconst updateTask = async (task) => {\n  let config = null\n  const token = tokenService.getToken()\n\n  if (token) {\n    config = {\n      headers: { Authorization: token },\n    }\n  }\n\n  const response = await axios.put(`${baseUrl}/${task.id}`, task, config)\n  return response.data\n}\n\nconst deleteTask = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nconst acceptTask = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  const response = await axios.put(`${baseUrl}/${id}/accept`, id, config)\n  return response.data\n}\n\nconst updateViews = async (id) => {\n  const response = await axios.post(`${baseUrl}/${id}/views`)\n  return response.data\n}\n\nexport default { addtask, getTasks, getOneTask, getSearchedTasks, updateTask, deleteTask, getPendingTasks, acceptTask, updateViews }\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/series`\n\nconst getSeries = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addSeries = async (series) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, series, config)\n  return response.data\n}\n\nconst editSerie = async (serie) => {\n  console.log(serie)\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${serie.id}`, serie, config)\n  return response.data\n\n}\n\nconst deleteSerie = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addSeries, getSeries, deleteSerie, editSerie }\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/rule`\n\nconst getRules = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addRule = async (rule) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, rule, config)\n  return response.data\n}\n\nconst editRule = async (rule) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${rule.id}`, rule, config)\n  return response.data\n\n}\n\nconst deleteRule = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addRule, getRules, editRule, deleteRule }\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/category`\n\nconst getCategories = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addCategory = async (cat) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, cat, config)\n  return response.data\n}\n\nconst editCategory = async (category) => {\n  console.log(category)\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  \n  const response = await axios.put(`${baseUrl}/${category.id}`, category, config)\n  return response.data\n\n}\n\nconst deleteCategory = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\n\nexport default { addCategory, getCategories, editCategory, deleteCategory }\n","import React, { useState } from 'react'\nimport taskService from '../services/task'\nimport Notification from './Notification'\n\nconst Search = ({ setTasks, setAllTasks }) => {\n\n  const [search, setSearch] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const handleSearch = async (event) => {\n    event.preventDefault()\n    try {\n      const response = await taskService.getSearchedTasks({ search })\n      setTasks(response)\n      setAllTasks(response)\n    } catch (exception) {\n      setErrorMessage('Haku ei onnistunut')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleSearch} className=\"search-form\">\n        <input\n          className=\"search-input\"\n          type=\"text\"\n          defaultValue=''\n          name=\"search\"\n          placeholder=\"Hakutermi\"\n          onChange={({ target }) => setSearch(target.value)}\n        />\n        <button type=\"submit\" className=\"search-tasks-button\">Hae</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Search","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport taskService from '../services/task'\nimport seriesService from '../services/series'\nimport ruleService from '../services/rule'\nimport categoryService from '../services/category'\nimport Notification from './Notification'\nimport Select from 'react-select'\nimport Search from './Search'\n\nconst TaskList = ({ user }) => {\n  const [allTasks, setAllTasks] = useState([])\n  const [tasks, setTasks] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [selectedCategory, setSelectedCategory] = useState([])\n  const [selectedSeries, setSelectedSeries] = useState([])\n  const [selectedRules, setSelectedRules] = useState('')\n  const [categories, setCategories] = useState([])\n  const [series, setSeries] = useState([])\n  const [rules, setRules] = useState([])\n  const [isClearable, setIsClearable] = useState(true)\n  const [seriess, setSeriess] = useState([])\n\n  useEffect(() => {\n    taskService.getTasks().then((response) => {\n      setTasks(response)\n      setAllTasks(response)\n    })\n\n    categoryService.getCategories().then((response) => {\n      setCategories(response)\n    })\n\n    seriesService.getSeries().then((response) => {\n      setSeriess(response)\n    })\n\n    ruleService.getRules().then((response) => {\n      setRules(response)\n    })\n  }, [])\n\n  useEffect(() => {\n    if (selectedSeries.length > 0 && selectedCategory.length > 0 && selectedRules) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedSeries.length > 0 && selectedCategory.length > 0) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && selectedCategory.includes(allTasks[i].category.id) && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedSeries.length > 0 && selectedRules) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && allTasks[i].rules.id === selectedRules.id && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedCategory.length > 0 && selectedRules) {\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id) && task.rules.id === selectedRules.id))\n    } else if (selectedSeries.length > 0) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (selectedSeries.includes(allTasks[i].series[j].id) && !array.includes(allTasks[i])) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedCategory.length > 0) {\n      setTasks(allTasks.filter(task => selectedCategory.includes(task.category.id)))\n    } else if (selectedRules) {\n      setTasks(allTasks.filter(task => task.rules.id === selectedRules.id))\n    } else {\n      setTasks(allTasks)\n    }\n  }, [selectedCategory, selectedSeries, selectedRules])\n\n  const handleDelete = async (task) => {\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\n        await taskService.deleteTask(task.id)\n        setTasks(tasks.filter(t => t.id !== task.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSeriesFiltering = (series) => {\n    if (series && series.length > 0) {\n      setSelectedSeries(series.map(s => s.id))\n    } else {\n      setSelectedSeries([])\n      setTasks(allTasks)\n    }\n  }\n\n  const handleCategoryFiltering = (category) => {\n    if (category && category.length > 0) {\n      setSelectedCategory(category.map(c => c.id))\n    } else {\n      setSelectedCategory([])\n      setTasks(allTasks)\n    }\n  }\n\n  const handleRuleFiltering = (rules) => {\n    if (rules) {\n      setSelectedRules(rules)\n    } else {\n      setSelectedRules('')\n      setTasks(allTasks)\n    }\n  }\n\n  return (\n    <div className=\"task-list\">\n      <h1>Kisatehtäväpankki</h1>\n      <div className=\"search-filter-container\">\n        <div className=\"search\"><Search setTasks={setTasks} setAllTasks={setAllTasks} /></div>\n\n        <div className=\"filter\">\n          <Select\n            name=\"filter-series\"\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleSeriesFiltering}\n            options={seriess}\n            isClearable={isClearable}\n            placeholder={\"Sarja\"}\n            isMulti={true}\n          />\n        </div>\n\n        <div className=\"filter\">\n          <Select\n            name=\"filter-category\"\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleCategoryFiltering}\n            options={categories}\n            isClearable={isClearable}\n            placeholder={\"Kategoria\"}\n            isMulti={true}\n          />\n        </div>\n\n        <div className=\"filter\">\n          <Select\n            name=\"filter-rules\"\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleRuleFiltering}\n            options={rules}\n            isClearable={isClearable}\n            placeholder={\"Säännöt\"}\n          />\n        </div>\n      </div>\n\n      <Notification message={errorMessage} />\n      {tasks && tasks.length > 0 &&\n        <div className=\"task-list-title\">\n          <span>Tehtävän nimi</span>\n          <span>Sarja</span>\n          <span>Kategoria</span>\n          {user && <span></span>}\n        </div>\n      }\n      {tasks.map((task) => (\n        <div className=\"task-list-item\" key={task.id}>\n          <span>\n            <Link to={`/tehtava/${task.id}`} onClick={() => taskService.updateViews(task.id)}>\n              {task.name}\n            </Link>\n            <p>Katselukertoja: {task.views}</p>\n          </span>\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n          <span>{task.category && task.category.name}</span>\n          {user && <span><button className=\"delete-button\" onClick={() => handleDelete(task)}>Poista</button></span>\n          }\n        </div>\n      ))}\n    </div>\n\n  )\n}\n\nexport default TaskList\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/user`\n\nconst getUsers = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addUser = async (credentials) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() }\n  }\n  const response = await axios.post(baseUrl, credentials, config)\n  return response.data\n}\n\nconst editUser = async (user) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() }\n  }\n\n  const response = await axios.put(baseUrl, user, config)\n  return response.data\n}\n\nexport default { addUser, getUsers, editUser }\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst AddAdmin = () => {\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(null)\n  const [emailErrorMessage, setEmailErrorMessage] = useState(null)\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [users, setUsers] = useState([])\n  const [email, setEmail] = useState('')\n\n  useEffect(() => {\n    userService.getUsers().then((response) => {\n      setUsers(response)\n    })\n  }, [])\n\n  const handleAddAdmin = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setUsernameErrorMessage(null)\n    setPasswordErrorMessage(null)\n    setEmailErrorMessage(null)\n    if (name.length < 3) {\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\n    }\n    if (username.length < 3) {\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\n    }\n    if (password.length < 3) {\n      setPasswordErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\n    }\n    if (users.some((user) => (user.username === username))) {\n      setUsernameErrorMessage('Käyttäjätunnus on varattu')\n    }\n\n    if (name.length < 3 || username.length < 3 || password.length < 3\n      || users.some((user) => (user.username === username))) {\n      return\n    }\n    try {\n      await userService.addUser({\n        name, username, email, password,\n      })\n      setName('')\n      setUsername('')\n      setEmail('')\n      setPassword('')\n      setMessage('Ylläpitäjä lisätty!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setErrorMessage('Lisääminen epäonnistui')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"signup-form\">\n      <h2>Lisää ylläpitäjä</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleAddAdmin}>\n        <div className=\"Testi\">\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={usernameErrorMessage} type=\"error\" />\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={emailErrorMessage} type=\"error\" />\n          <input\n            className=\"email\"\n            type=\"email\"\n            value={email}\n            name=\"email\"\n            placeholder=\"Sähköpostiosoite\"\n            onChange={({ target }) => setEmail(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={passwordErrorMessage} type=\"error\" />\n          <input\n            className=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            placeholder=\"Salasana\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"signup-button\">Lisää</button>\n      </form>\n    </div>\n  )\n}\n\nexport default AddAdmin\n","import React, { useState, Fragment } from 'react'\nimport Notification from './Notification'\nimport ruleService from '../services/rule'\nimport Select from 'react-select'\n\nconst Rule = ({ rules, setRules, categories }) => {\n  const [newRuleName, setNewRuleName] = useState('')\n  const [modifiedRuleName, setModifiedRuleName] = useState('')\n  const [modifiedRuleId, setModifiedRuleId] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n  const [acceptedCategories, setAcceptedCategories] = useState([])\n  const [modifiedCategories, setModifiedCategories] = useState([])\n  const [isClearable, setIsClearable] = useState(true)\n\n  const handleRuleAdd = async (event) => {\n    event.preventDefault()\n    const newCategories = acceptedCategories\n    try {\n      const addedRule = await ruleService.addRule({\n        rules: newRuleName, acceptedCategories: acceptedCategories.map(category => category.id)\n      })\n      setNewRuleName('')\n      setAcceptedCategories([])\n      setRules(rules.concat({ ...addedRule, acceptedCategories: newCategories }))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleRuleDelete = async (rule) => {\n    try {\n      if (window.confirm(`Haluatko poistaa säännön: ${rule.name}`)) {\n        await ruleService.deleteRule(rule.id)\n        setRules(rules.filter(r => r.id !== rule.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleRuleModify = async (event) => {\n    event.preventDefault()\n    const modifiedRule = { id: modifiedRuleId, name: modifiedRuleName, acceptedCategories: modifiedCategories }\n    try {\n      await ruleService.editRule({ id: modifiedRuleId, name: modifiedRuleName, acceptedCategories: modifiedCategories.map(category => category.id) })\n      setModifyVisible(false)\n      setRules(rules.map(rule => rule.id !== modifiedRule.id ? rule : modifiedRule))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (rule) => {\n    setModifyVisible(true)\n    setModifiedRuleId(rule.id)\n    setModifiedRuleName(rule.name)\n    setModifiedCategories(rule.acceptedCategories)\n  }\n\n  const handleAddCategories = (categories) => {\n    setAcceptedCategories(categories)\n  }\n\n  const handleModifyCategories = (categories) => {\n    setModifiedCategories(categories)\n  }\n\n  return (\n    <div className=\"rule-form\">\n      <Notification message={errorMessage} type=\"error\" />\n\n      {rules && rules.map((rule) => (\n        <div className=\"rule-list-item\" key={rule.id}>\n          {modifyVisible && modifiedRuleId === rule.id ?\n            <div className=\"rule-form-item\">\n              <form onSubmit={handleRuleModify}>\n                <div className=\"item-modify\">\n                  <input\n                    className=\"rule\"\n                    type=\"text\"\n                    value={modifiedRuleName}\n                    name=\"Category\"\n                    onChange={({ target }) => setModifiedRuleName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"rule-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                </div>\n                <div className=\"modify-acceptedCategories\">\n                  <Select\n                    name=\"accepted-categories\"\n                    value={modifiedCategories}\n                    getOptionLabel={option => `${option.name}`}\n                    getOptionValue={option => `${option.id}`}\n                    onChange={handleModifyCategories}\n                    options={categories}\n                    isClearable={isClearable}\n                    placeholder={\"Säännön kategoriat\"}\n                    isMulti={true}\n                  />\n                </div>\n              </form>\n            </div>\n          :\n          <Fragment>\n            <p className=\"item-name\">{rule.name}</p>\n            <div className=\"item-buttons\">\n              <button onClick={() => handleShowModify(rule)} className=\"modify-button\">Muokkaa</button>\n              <button onClick={() => handleRuleDelete(rule)} className=\"delete-button\">Poista</button>\n            </div>\n            <div className=\"break\"></div>\n            <div className=\"accepted-categories-list\">\n              {rule.acceptedCategories && rule.acceptedCategories.map(category => (\n                  <span key={category.id}>{category.name} </span>\n                ))}\n            </div>\n          </Fragment>\n          }\n        </div>))\n      }\n\n      <form onSubmit={handleRuleAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"rule\"\n            type=\"text\"\n            value={newRuleName}\n            name=\"Rules\"\n            placeholder=\"Uusi sääntö\"\n            onChange={({ target }) => setNewRuleName(target.value)}\n          />\n          <button type=\"submit\" className=\"rule-add-button\">Lisää</button>\n        </div>\n\n        <div className=\"add-acceptedCategories\">\n          <Select\n            name=\"accepted-categories\"\n            value={acceptedCategories}\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleAddCategories}\n            options={categories}\n            isClearable={isClearable}\n            placeholder={\"Uuden säännön kategoriat\"}\n            isMulti={true}\n          />\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\n\nexport default Rule\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/language`\n\nconst getLanguages = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addLanguage = async (language) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, language, config)\n  return response.data\n}\n\nconst editLanguage = async (language) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.put(`${baseUrl}/${language.id}`, language, config)\n  return response.data\n\n}\n\n\nconst deleteLanguage = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { addLanguage, getLanguages, deleteLanguage, editLanguage }\n","import React, { useState, Fragment } from 'react'\nimport Notification from './Notification'\nimport languageService from '../services/language'\n\nconst Language = ({ languages, setLanguages }) => {\n  const [languageName, setLanguageName] = useState('')\n  const [modifiedLanguageName, setModifiedLanguageName] = useState('')\n  const [modifiedLanguageId, setModifiedLanguageId] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  const handleLanguageAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedLanguage = await languageService.addLanguage({\n        language: languageName,\n      })\n      setLanguageName('')\n      setLanguages(languages.concat(addedLanguage))\n    } catch (exception) {\n      setErrorMessage('Kielen lisääminen ei onnistunut')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLanguageDelete = async (language) => {\n    try {\n      if (window.confirm(`Haluatko poistaa kielen: ${language.name}`)) {\n        await languageService.deleteLanguage(language.id)\n        setLanguages(languages.filter(l => l.id !== language.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLanguageModify = async (event) => {\n    event.preventDefault()\n    const modifiedLanguage = { id: modifiedLanguageId, name: modifiedLanguageName }\n    try {\n      await languageService.editLanguage(modifiedLanguage)\n      setModifyVisible(false)\n      setLanguages(languages.map(language => language.id !== modifiedLanguage.id ? language : modifiedLanguage))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (language) => {\n    setModifyVisible(true)\n    setModifiedLanguageId(language.id)\n    setModifiedLanguageName(language.name)\n  }\n\n  return (\n    <div className=\"language-form\">\n      <Notification message={errorMessage} type=\"error\" />\n\n      {languages && languages.map((language) => (\n        <div className=\"language-list-item\" key={language.id}>\n          {modifyVisible && modifiedLanguageId === language.id ?\n            <div className=\"language-form-item\">\n              <form onSubmit={handleLanguageModify} >\n                <div className=\"item-modify\">\n                  <input\n                    className=\"language\"\n                    type=\"text\"\n                    value={modifiedLanguageName}\n                    name=\"Language\"\n                    onChange={({ target }) => setModifiedLanguageName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"language-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n            :\n            <Fragment>\n              <p className=\"item-name\">{language.name}</p>\n              <div className=\"item-buttons\">\n                <button onClick={() => handleShowModify(language)} className=\"modify-button\">Muokkaa</button>\n                <button onClick={() => handleLanguageDelete(language)} className=\"delete-button\">Poista</button>\n              </div>\n            </Fragment>\n            }\n        </div>))\n      }\n\n      <form onSubmit={handleLanguageAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"language\"\n            type=\"text\"\n            value={languageName}\n            name=\"Language\"\n            placeholder=\"Uusi kieli\"\n            onChange={({ target }) => setLanguageName(target.value)}\n          />\n          <button type=\"submit\" className=\"language-add-button\">Lisää</button>\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\n\nexport default Language\n","import React, { useState, Fragment } from 'react'\nimport { CirclePicker } from 'react-color'\nimport Notification from './Notification'\nimport seriesService from '../services/series'\n\nconst Series = ({ series, setSeries }) => {\n  const [name, setName] = useState('')\n  const [modifiedSerieName, setModifiedSerieName] = useState('')\n  const [modifiedSerieId, setModifiedSerieId] = useState('')\n  const [modifiedSerieColor, setModifiedSerieColor] = useState('')\n  const [color, setColor] = useState('#ffffff')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  const handleSeriesAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedSerie = await seriesService.addSeries({ name, color })\n      setName('')\n      setColor('')\n      setSeries(series.concat(addedSerie))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSerieDelete = async (serie) => {\n    try {\n      if (window.confirm(`Haluatko poistaa sarjan: ${serie.name}`)) {\n        await seriesService.deleteSerie(serie.id)\n        setSeries(series.filter(s => s.id !== serie.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleSerieModify = async (event) => {\n    event.preventDefault()\n    const modifiedSerie = { id: modifiedSerieId, name: modifiedSerieName, color: modifiedSerieColor }\n    try {\n      await seriesService.editSerie(modifiedSerie)\n      setModifyVisible(false)\n      setSeries(series.map(serie => serie.id !== modifiedSerie.id ? serie : modifiedSerie))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (serie) => {\n    setModifyVisible(true)\n    setModifiedSerieId(serie.id)\n    setModifiedSerieName(serie.name)\n    setModifiedSerieColor(serie.color)\n  }\n\n  return (\n    <div className=\"series-form\">\n      <Notification message={errorMessage} type=\"error\" />\n\n      {series && series.map((serie) => (\n        <div className=\"serie-list-item\" key={serie.id}>\n          {modifyVisible && modifiedSerieId === serie.id ?\n            <div className=\"serie-form-item\">\n              <form onSubmit={handleSerieModify} >\n                <div className=\"item-modify\">\n                  <input\n                    className=\"serie\"\n                    type=\"text\"\n                    value={modifiedSerieName}\n                    name=\"Serie\"\n                    onChange={({ target }) => setModifiedSerieName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"serie-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                  <div className=\"color-picker\">\n                    <CirclePicker\n                      color={modifiedSerieColor}\n                      onChangeComplete={color => setModifiedSerieColor(color.hex)}\n                      colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\n                        \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\n                    />\n                  </div>\n                </div>\n              </form>\n            </div>\n          :\n          <Fragment>\n            <p className=\"item-name\"><span>{serie.name}</span><span style={{ backgroundColor: serie.color, display: 'inline-block', borderRadius: '50%', height: '27px', width: '27px', marginLeft: '5px' }} /></p>\n            <div className=\"item-buttons\">\n              <button onClick={() => handleShowModify(serie)} className=\"modify-button\">Muokkaa</button>\n              <button onClick={() => handleSerieDelete(serie)} className=\"delete-button\">Poista</button>\n            </div>\n          </Fragment>\n          }\n        </div>))\n      }\n\n      <form onSubmit={handleSeriesAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Uusi sarja\"\n            onChange={({ target }) => setName(target.value)}\n          />\n          <button type=\"submit\" className=\"series-submit-button\">Lisää</button>\n        </div>\n        <div className=\"color-picker\">\n          <CirclePicker\n            color={color}\n            onChangeComplete={color => setColor(color.hex)}\n            colors={[\"#253764\", \"#28aae1\", \"#f04150\", \"#f0a01e\", \"#f0e105\", \"#14a54b\",\n              \"#f5ea2e\", \"#d4791e\", \"#5e0f75\", \"#33652e\", \"#6e470a\", \"#607d8b\"]}\n          />\n        </div>\n      </form>\n\n    </div>\n  )\n}\n\nexport default Series\n","import React, { useState, Fragment } from 'react'\nimport Notification from './Notification'\nimport categoryService from '../services/category'\n\nconst Category = ({ categories, setCategories }) => {\n  const [newCategoryName, setNewCategoryName] = useState('')\n  const [modifiedCategoryName, setModifiedCategoryName] = useState('')\n  const [modifiedCategoryId, setModifiedCategoryId] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n\n  const handleCategoryAdd = async (event) => {\n    event.preventDefault()\n    try {\n      const addedCategory = await categoryService.addCategory({\n        category: newCategoryName\n      })\n      setNewCategoryName('')\n      setCategories(categories.concat(addedCategory))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCategoryDelete = async (category) => {\n    try {\n      if (window.confirm(`Haluatko poistaa kategorian: ${category.name}`)) {\n        await categoryService.deleteCategory(category.id)\n        setCategories(categories.filter(c => c.id !== category.id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCategoryModify = async (event) => {\n    event.preventDefault()\n    const modifiedCategory = { id: modifiedCategoryId, name: modifiedCategoryName }\n    try {\n      await categoryService.editCategory(modifiedCategory)\n      setModifyVisible(false)\n      setCategories(categories.map(category => category.id !== modifiedCategory.id ? category : modifiedCategory))\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleShowModify = (category) => {\n    setModifyVisible(true)\n    setModifiedCategoryId(category.id)\n    setModifiedCategoryName(category.name)\n  }\n\n  return (\n    <div className=\"category-form\" >\n      <Notification message={errorMessage} type=\"error\" />\n\n      {categories && categories.map((category) => (\n        <div className=\"category-list-item\" key={category.id}>\n          {modifyVisible && modifiedCategoryId === category.id ?\n            <div className=\"category-form-item\">\n              <form onSubmit={handleCategoryModify} >\n                <div className=\"item-modify\">\n                  <input\n                    className=\"category\"\n                    type=\"text\"\n                    value={modifiedCategoryName}\n                    name=\"Category\"\n                    onChange={({ target }) => setModifiedCategoryName(target.value)}\n                  />\n                  <div className=\"item-buttons-save\">\n                    <button type=\"submit\" className=\"category-save-button\">Tallenna</button>\n                    <button onClick={() => setModifyVisible(false)}>Peruuta</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n            :\n            <Fragment>\n              <p className=\"item-name\">{category.name}</p>\n              <div className=\"item-buttons\">\n                <button onClick={() => handleShowModify(category)} className=\"modify-button\">Muokkaa</button>\n                <button onClick={() => handleCategoryDelete(category)} className=\"delete-button\">Poista</button>\n              </div>\n            </Fragment>\n          }\n        </div>))\n      }\n\n      <form onSubmit={handleCategoryAdd} className=\"add-form\">\n        <div className=\"item-add\">\n          <input\n            className=\"category\"\n            type=\"text\"\n            value={newCategoryName}\n            name=\"Category\"\n            placeholder=\"Uusi kategoria\"\n            onChange={({ target }) => setNewCategoryName(target.value)}\n          />\n          <button type=\"submit\" className=\"category-add-button\">Lisää</button>\n        </div>\n      </form>\n    </div>\n\n  )\n}\n\nexport default Category\n","import React, { useState, useEffect, Fragment } from 'react'\nimport Rule from './Rule'\nimport Language from './Language'\nimport Series from './Series'\nimport Category from './Category'\nimport ruleService from '../services/rule'\nimport seriesService from '../services/series'\nimport languageService from '../services/language'\nimport categoryService from '../services/category'\n\nconst AddTaskDropdown = () => {\n  const [rules, setRules] = useState([])\n  const [categories, setCategories] = useState([])\n  const [languages, setLanguages] = useState([])\n  const [series, setSeries] = useState([])\n  const [showCategories, setShowCategories] = useState(false)\n  const [showRules, setShowRules] = useState(false)\n  const [showLanguages, setShowLanguages] = useState(false)\n  const [showSeries, setShowSeries] = useState(false)\n\n  useEffect(() => {\n    ruleService.getRules().then((response) => {\n      setRules(response)\n    })\n    categoryService.getCategories().then((response) => {\n      setCategories(response)\n    })\n    seriesService.getSeries().then((response) => {\n      setSeries(response)\n    })\n    languageService.getLanguages().then((response) => {\n      setLanguages(response)\n    })\n  }, [])\n\n  return (\n    <div className=\"crls-container\">\n      <div className=\"task-types-menu\">\n        {showSeries ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowSeries(!showSeries)}>Sulje sarjat</button>\n            <Series series={series} setSeries={setSeries} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowSeries(!showSeries)}>Sarjat</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showRules ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowRules(!showRules)}>Sulje säännöt</button>\n            <Rule rules={rules} setRules={setRules} categories={categories} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowRules(!showRules)}>Säännöt</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showCategories ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowCategories(!showCategories)}>Sulje kategoriat</button>\n            <Category categories={categories} setCategories={setCategories} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowCategories(!showCategories)}>Kategoriat</button>\n        }\n      </div>\n      <div className=\"task-types-menu\">\n        {showLanguages ?\n          <Fragment>\n            <button className=\"task-types\" onClick={() => setShowLanguages(!showLanguages)}>Sulje kielet</button>\n            <Language languages={languages} setLanguages={setLanguages} />\n          </Fragment>\n          :\n          <button className=\"task-types\" onClick={() => setShowLanguages(!showLanguages)}>Kielet</button>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default AddTaskDropdown\n","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/file`\n\nconst updateFiles = async (files) => {\n  const config = {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }\n\n  const response = await axios.post(baseUrl, files, config)\n  return response.data\n}\n\nexport default { updateFiles }\n","import React from 'react'\nimport MarkdownIt from 'markdown-it'\nimport MdEditor from 'react-markdown-editor-lite'\nimport 'react-markdown-editor-lite/lib/index.css'\n\nconst MDEditor = ({ setText, setMD, value }) => {\n  const mdParser = new MarkdownIt()\n\n  const handleEditorChange = ({ html, text }) => {\n    setText(html)\n    setMD(text)\n  }\n\n  return (\n    <MdEditor\n      value={value}\n      renderHTML={(text) => mdParser.render(text)}\n      onChange={handleEditorChange}\n    />\n  )\n}\n\nexport default MDEditor\n\n\n\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport taskService from '../services/task'\nimport fileService from '../services/file'\nimport ruleService from '../services/rule'\nimport seriesService from '../services/series'\nimport languageService from '../services/language'\nimport MDEditor from './MDEditor'\nimport Dropzone from 'react-dropzone'\n\nconst AddTask = () => {\n\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [name, setName] = useState('')\n  const [assignmentText, setAssignmentText] = useState('')\n  const [gradingScale, setGradingScale] = useState('')\n  const [supervisorInstructions, setSupervisorInstructions] = useState('')\n  const [assignmentTextMD, setAssignmentTextMD] = useState('')\n  const [gradingScaleMD, setGradingScaleMD] = useState('')\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState('')\n  const [rules, setRules] = useState([])\n  const [rule, setRule] = useState('')\n  const [categories, setCategories] = useState([])\n  const [category, setCategory] = useState('')\n  const [seriess, setSeriess] = useState([])\n  const [series, setSeries] = useState([])\n  const [languages, setLanguages] = useState([])\n  const [language, setLanguage] = useState('')\n  const [creatorName, setCreatorName] = useState('')\n  const [creatorEmail, setCreatorEmail] = useState('')\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\n  const [files, setFiles] = useState([])\n\n  useEffect(() => {\n    ruleService.getRules().then(response => {\n      setRules(response)\n    })\n    seriesService.getSeries().then(response => {\n      setSeriess(response)\n    })\n    languageService.getLanguages().then(response => {\n      setLanguages(response)\n    })\n  }, [])\n\n  const handleRuleChange = (e) => {\n    setRule(e.target.value)\n    setCategory('')\n    if (e.target.value) {\n      const foundRule = rules.find(r => r.id === e.target.value)\n      setCategories(foundRule.acceptedCategories)\n    } else {\n      setCategories([])\n    }\n  }\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value)\n  }\n\n  const handleSeriesChange = (e) => {\n    let options = e.target.options\n    let values = []\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected && options[i].value !== '') {\n        values.push(options[i].value)\n      }\n    }\n    setSeries(values)\n  }\n\n  const handleLanguageChange = (e) => {\n    setLanguage(e.target.value)\n  }\n\n  const handleAddTask = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setAssignmentTextErrorMessage(null)\n    setCreatorNameErrorMessage(null)\n    setCreatorEmailErrorMessage(null)\n    setDropDownErrorMessage(null)\n    if (name.length < 1) {\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\n    }\n    if (assignmentText.length < 1) {\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\n    }\n    if (creatorName.length < 1) {\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\n    }\n    if (creatorEmail.length < 1) {\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\n    }\n    if (language === '' || rule === '' || series === '' || category === '') {\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\n    }\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\n            || language === '' || rule === '' || series === '' || category === '') {\n      return\n    }\n    setAssignmentText(JSON.stringify(assignmentText))\n    setGradingScale(JSON.stringify(gradingScale))\n    setSupervisorInstructions(JSON.stringify(supervisorInstructions))\n\n    let formData = new FormData()\n\n    if (files.length > 0) {\n      for (let i = 0; i < files.length; i++) {\n          formData.append('filesToAdd', files[i], files[i].name)\n      }\n    }\n\n    let addedFiles = []\n\n    try {\n      addedFiles = await fileService.updateFiles(formData)\n      await taskService.addtask({\n        name, rule, category, series,\n        language, assignmentText, gradingScale,\n        creatorName, creatorEmail, supervisorInstructions,\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD,\n        files: addedFiles\n      })\n      setName('')\n      setRule('')\n      setCategory('')\n      setSeries('')\n      setLanguage('')\n      setAssignmentText('')\n      setGradingScale('')\n      setCreatorEmail('')\n      setCreatorName('')\n      setSupervisorInstructions('')\n      setMessage('Tehtävä lisätty!')\n      setTimeout(() => {\n        setMessage(null)\n        window.location.reload()\n      }, 2000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const onDrop = (newFiles) => {\n    setFiles(files.concat(newFiles))\n  }\n\n  const handleDeleteFile = (e, name) => {\n    e.stopPropagation()\n    setFiles(files.filter(file => file.name !== name))\n  }\n\n  return (\n    <div className=\"add-task-container\">\n      <h2>Lisää tehtävä</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleAddTask}>\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"task-title\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Tehtävän nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <h4>Tehtävänanto</h4>\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} />\n        </div>\n        <div>\n          <h4>Arvostelu</h4>\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} />\n        </div>\n        <div className=\"instructions\">\n          <h4>Rastimiehen ohje</h4>\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} />\n        </div>\n        <Notification message={dropDownErrorMessage} type=\"error\" />\n        <div className=\"dropdowns\">\n          <div>\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <select className=\"rule-select\" value={rule} onChange={(e) => handleRuleChange(e)}>\n              <option value=\"\">Säännöt</option>\n              {rules.map(rule => <option className=\"rule-options\" key={rule.id} value={rule.id}>{rule.name}</option>)}\n            </select>\n            <br/>\n            <select className=\"category-select\" value={category} onChange={(e) => handleCategoryChange(e)}>\n              <option value=\"\">Kategoria</option>\n              {categories.map(category => <option className=\"category-options\" key={category.id} value={category.id}>{category.name}</option>)}\n            </select>\n            <br/>\n            <select className=\"language-select\" value={language} onChange={(e) => handleLanguageChange(e)}>\n              <option value=\"\">Kieli</option>\n              {languages.map(language => <option className=\"language-options\" key={language.id} value={language.id}>{language.name}</option>)}\n            </select>\n          </div>\n        </div>\n        <div className=\"creator\">\n          <div>\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              value={creatorName}\n              name=\"CreatorName\"\n              placeholder=\"Lisääjän nimi\"\n              onChange={({ target }) => setCreatorName(target.value)}\n            />\n          </div>\n          <div>\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              value={creatorEmail}\n              name=\"CreatorEmail\"\n              placeholder=\"Lisääjän sähköpostiosoite\"\n              onChange={({ target }) => setCreatorEmail(target.value)}\n            />\n          </div>\n        </div>\n\n        <Dropzone onDrop={onDrop}>\n          {({getRootProps, getInputProps}) => (\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              <div className=\"files\">\n                <div className=\"title\">Liitetiedostot</div>\n                {files.length > 0 &&\n                  <React.Fragment>\n                    {files.map((file) => (\n                      <div key={file.name}>{file.name}<b onClick={(e) => handleDeleteFile(e, file.name)}>x</b></div>\n                    ))}\n                  </React.Fragment>\n                }\n              </div>\n            </div>\n          )}\n        </Dropzone>\n\n        <button type=\"submit\" className=\"add-task-button\">Lisää tehtävä</button>\n      </form>\n    </div>\n  )\n}\nexport default AddTask","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport taskService from '../services/task'\nimport Notification from './Notification'\nimport tokenService from '../services/token'\n\n\nconst TaskListPending = () => {\n  const [tasks, setTasks] = useState([])\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    if (!tokenService.getToken()) {\n      const loggedUserJSON = window.localStorage.getItem('loggedUser')\n      if (loggedUserJSON) {\n        const loggedUser = JSON.parse(loggedUserJSON)\n        tokenService.setToken(loggedUser.token)\n      }\n    }\n    taskService.getPendingTasks().then((response) => {\n      setTasks(response)\n    })\n  }, [])\n\n  const handleAccept = (id) => {\n    try {\n      taskService.acceptTask(id)\n      setTasks(tasks.filter(t => t.id !== id))\n      setMessage('Tehtävä hyväksytty')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleDelete = async (id) => {\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${tasks.find(t => t.id === id).name}`)) {\n        await taskService.deleteTask(id)\n        setTasks(tasks.filter(t => t.id !== id))\n      }\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"task-list\">\n      <h1>Hyväksyntää odottavat kisatehtävät</h1>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      {tasks && tasks.length > 0 &&\n        <div className=\"task-list-title\">\n          <span>Tehtävän nimi</span>\n          <span>Sarja</span>\n          <span>Kategoria</span>\n          <span></span>\n        </div>\n      }\n      {tasks.map((task) => (\n        <div className={`task-list-item pending`} key={task.id}>\n          <span>\n            <Link to={`/tehtava/${task.id}`}>\n              {task.name}\n            </Link>\n          </span>\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n          <span>{task.category && task.category.name}</span>\n          <span>\n            <button className=\"accept-button\" onClick={() => handleAccept(task.id)}>Hyväksy</button>\n            <button className=\"delete-button\" onClick={() => handleDelete(task.id)}>Poista</button>\n          </span>\n        </div>\n      ))}\n\n    </div>\n\n  )\n}\n\nexport default TaskListPending\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport TaskListPending from './TaskListPending'\n\nconst Admin = () => (\n  <div>\n    <TaskListPending />\n    <Link to=\"/omasivu\">Omat tiedot</Link>\n    <br />\n    <Link to=\"/lisaa_admin\">Lisää ylläpitäjä</Link>\n    <br />\n    <Link to=\"/lisaa_pudotusvalikkoon\">Hallinnoi sääntöjä/kieliä/sarjoja/kategorioita</Link>\n  </div>\n)\n\nexport default Admin\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst EditUser = ({ setShowEdit, user, setUser, setMessage }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\n  const [emailErrorMessage, setEmailErrorMessage] = useState(null)\n  const [name, setName] = useState(user.name)\n  const [username, setUsername] = useState(user.username)\n  const [email, setEmail] = useState(user.email)\n\n  const handleEditUser = async (event) => {\n\n\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setUsernameErrorMessage(null)\n    setEmailErrorMessage(null)\n    if (name.length < 3) {\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\n    }\n    if (username.length < 3) {\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\n    }\n    if (email.length < 5) {\n      setEmailErrorMessage('Sähköpostissa pitää olla vähintään 5 kirjainta')\n    }\n    if (name.length < 3 || username.length < 3) {\n      return\n    }\n    try {\n      const editedUser = await userService.editUser({\n        name, username, email,\n      })\n      setUser(editedUser)\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(editedUser),\n      )\n      setShowEdit(false)\n      setMessage('Tietoja muokattu!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"username already exists\") {\n        setErrorMessage('Käyttäjätunnus on varattu')\n      } else {\n        setErrorMessage('Muokkaaminen epäonnistui')\n      }\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n\n    <div className=\"edit-user-form\">\n          {console.log(email)}\n          {console.log(email)}\n\n\n      <h2>Omat tiedot</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleEditUser}>\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <label>Nimi</label><br/>\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={usernameErrorMessage} type=\"error\" />\n          <label>Käyttäjätunnus</label><br/>\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={emailErrorMessage} type=\"error\" />\n          <label>Sähköposti</label><br/>\n          <input\n            className=\"email\"\n            type=\"text\"\n            value={email}\n            name=\"Email\"\n            placeholder=\"Sähköposti\"\n            onChange={({ target }) => setEmail(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"edit-button\">Tallenna</button>\n        <button onClick={() => setShowEdit(false)} className=\"cancel-button\">Peruuta</button>\n      </form>\n    </div>\n  )\n}\n\nexport default EditUser\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst ChangePassword = ({ setShowChangePassword, setMessage }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [newPasswordAgain, setNewPasswordAgain] = useState('')\n\n  const handleChangePassword = async (event) => {\n    event.preventDefault()\n    setErrorMessage(null)\n    if (newPassword.length < 3) {\n      setErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\n      return\n    }\n    if (newPassword !== newPasswordAgain) {\n      setErrorMessage('Salasanat eivät täsmää')\n      return\n    }\n    try {\n      await userService.editUser({\n        oldPassword, newPassword\n      })\n      setOldPassword('')\n      setNewPassword('')\n      setNewPasswordAgain('')\n      setShowChangePassword(false)\n      setMessage('Salasana vaihdettu!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"incorrect password\") {\n        setErrorMessage('Vanha salasana ei täsmää')\n      } else {\n        setErrorMessage('Salasanan vaihtaminen epäonnistui')\n      }\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"change-password-form\">\n      <h2>Vaihda salasana</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleChangePassword}>\n        <div>\n          <input\n            className=\"old-password\"\n            type=\"password\"\n            value={oldPassword}\n            placeholder=\"Vanha salasana\"\n            onChange={({ target }) => setOldPassword(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"new-password\"\n            type=\"password\"\n            value={newPassword}\n            placeholder=\"Uusi salasana\"\n            onChange={({ target }) => setNewPassword(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"new-password-again\"\n            type=\"password\"\n            value={newPasswordAgain}\n            placeholder=\"Uusi salasana uudelleen\"\n            onChange={({ target }) => setNewPasswordAgain(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"change-password-button\">Tallenna</button>\n        <button onClick={() => setShowChangePassword(false)} className=\"cancel-button\">Peruuta</button>\n      </form>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport EditUser from './EditUser'\nimport ChangePassword from './ChangePassword'\n\nconst User = ({ user, setUser }) => {\n  const [message, setMessage] = useState(null)\n  const [showEdit, setShowEdit] = useState(false)\n  const [showChangePassword, setShowChangePassword] = useState(false)\n\n  const editUser = () => {\n    setShowChangePassword(false)\n    setShowEdit(true)\n  }\n\n\n  const changePassword = () => {\n    setShowEdit(false)\n    setShowChangePassword(true)\n  }\n\n  return (\n    <div>\n      {user\n        && (\n          <div className=\"user-info\">\n            {!showEdit && !showChangePassword\n            && (\n              <div>\n                <Notification message={message} type=\"success\" />\n                <h2>Omat tiedot</h2>\n                <p>\n                  <b>Nimi: </b>\n                  {user.name}\n                </p>\n                <p>\n                  <b>Käyttäjätunnus: </b>\n                  {user.username}\n                </p>\n                <p>\n                  <b>Sähköpostiosoite: </b>\n                  {user.email}\n                </p>\n                <button className=\"edit-user-button\" onClick={() => editUser()}>Muokkaa</button>\n                <button className=\"change-password-button\" onClick={() => changePassword()}>Vaihda salasana</button>\n              </div>\n            )}\n            {showEdit && <EditUser setShowEdit={setShowEdit} user={user} setUser={setUser} setMessage={setMessage} />}\n            {showChangePassword && <ChangePassword setShowChangePassword={setShowChangePassword} setMessage={setMessage} />}\n          </div>\n        )}\n    </div>\n  )\n}\n\nexport default User\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport taskService from '../services/task'\nimport fileService from '../services/file'\nimport ruleService from '../services/rule'\nimport seriesService from '../services/series'\nimport languageService from '../services/language'\nimport MDEditor from './MDEditor'\nimport Dropzone from 'react-dropzone'\n\nconst ModifyTask = ({ setModifyVisible, task, setTask }) => {\n\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [name, setName] = useState(task.name)\n  const [assignmentText, setAssignmentText] = useState(task.assignmentText)\n  const [gradingScale, setGradingScale] = useState(task.gradingScale)\n  const [supervisorInstructions, setSupervisorInstructions] = useState(task.supervisorInstructions)\n  const [assignmentTextMD, setAssignmentTextMD] = useState(task.assignmentTextMD)\n  const [gradingScaleMD, setGradingScaleMD] = useState(task.gradingScaleMD)\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState(task.supervisorInstructionsMD)\n  const [rules, setRules] = useState([])\n  const [rule, setRule] = useState(task.rules ? task.rules.id : null)\n  const [categories, setCategories] = useState([])\n  const [category, setCategory] = useState(task.category ? task.category.id : null)\n  const [seriess, setSeriess] = useState([])\n  const [series, setSeries] = useState(task.series.map(s => s.id))\n  const [languages, setLanguages] = useState([])\n  const [language, setLanguage] = useState(task.language ? task.language.id : null)\n  const [creatorName, setCreatorName] = useState(task.creatorName)\n  const [creatorEmail, setCreatorEmail] = useState(task.creatorEmail)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\n  const [oldFiles, setOldFiles] = useState(task.files || [])\n  const [newFiles, setNewFiles] = useState([])\n  const [filesToDelete, setFilesToDelete] = useState([])\n\n  let id = task.id\n\n  useEffect(() => {\n    ruleService.getRules().then(response => {\n      setRules(response)\n      if (task.rules && task.rules.id) {\n        const foundRule = response.find(r => r.id === task.rules.id)\n        if (foundRule) {\n          setCategories(foundRule.acceptedCategories)\n        }\n      }\n    })\n    seriesService.getSeries().then(response => {\n      setSeriess(response)\n    })\n    languageService.getLanguages().then(response => {\n      setLanguages(response)\n    })\n  }, [])\n\n  const handleRuleChange = (e) => {\n    setRule(e.target.value)\n    setCategory('')\n    if (e.target.value) {\n      const foundRule = rules.find(r => r.id === e.target.value)\n      setCategories(foundRule.acceptedCategories)\n    } else {\n      setCategories([])\n    }\n  }\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value)\n  }\n\n  const handleSeriesChange = (e) => {\n    let options = e.target.options\n    let values = []\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected && options[i].value !== '') {\n        values.push(options[i].value)\n      }\n    }\n    setSeries(values)\n  }\n\n  const handleLanguageChange = (e) => {\n    setLanguage(e.target.value)\n  }\n\n  const handleModifyTask = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setAssignmentTextErrorMessage(null)\n    setCreatorNameErrorMessage(null)\n    setCreatorEmailErrorMessage(null)\n    setDropDownErrorMessage(null)\n    if (name.length < 1) {\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\n    }\n    if (assignmentText.length < 1) {\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\n    }\n    if (creatorName.length < 1) {\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\n    }\n    if (creatorEmail.length < 1) {\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\n    }\n    if (language === '' || rule === '' || series === '' || category === '') {\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\n    }\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\n      || language === '' || rule === '' || series === '' || category === '') {\n      return\n    }\n\n    let formData = new FormData()\n\n    formData.append('filesToDelete', filesToDelete)\n\n    if (newFiles.length > 0) {\n      for (let i = 0; i < newFiles.length; i++) {\n          formData.append('filesToAdd', newFiles[i], newFiles[i].name)\n      }\n    }\n\n    let addedFiles = []\n\n    try {\n      addedFiles = await fileService.updateFiles(formData)\n      const modifiedTask = await taskService.updateTask({\n        name, rule, category, series,\n        language, assignmentText, gradingScale,\n        creatorName, creatorEmail, supervisorInstructions, id,\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD,\n        files: oldFiles.concat(addedFiles)\n      })\n      setMessage('Tehtävä tallennettu!')\n      setTask(modifiedTask)\n      setTimeout(() => {\n        setMessage(null)\n        window.location.reload()\n      }, 1000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCancel = () => {\n    setModifyVisible(false)\n  }\n\n  const onDrop = (files) => {\n    setNewFiles(newFiles.concat(files))\n  }\n\n  const handleDeleteOldFile = (e, name) => {\n    e.stopPropagation()\n    setOldFiles(oldFiles.filter(file => file !== name))\n    setFilesToDelete(filesToDelete.concat(name))\n  }\n\n  const handleDeleteNewFile = (e, name) => {\n    e.stopPropagation()\n    setNewFiles(newFiles.filter(file => file.name !== name))\n  }\n\n  return (\n    <div className=\"modify-task-container\">\n      <h2>Muokkaa tehtävää</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleModifyTask} className=\"modify-form\">\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"task-title\"\n            type=\"text\"\n            defaultValue={name}\n            name=\"Name\"\n            placeholder=\"Tehtävän nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <h4>Tehtävänanto</h4>\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} value={assignmentTextMD} placeHolder=\"Tehtävänanto\" />\n        </div>\n        <div>\n          <h4>Arvostelu</h4>\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} value={gradingScaleMD} placeHolder=\"Arvostelu\" />\n        </div>\n        <div className=\"instructions\">\n          <h4>Rastimiehen ohje</h4>\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} value={supervisorInstructionsMD} placeHolder=\"Rastimiehen ohje\" />\n        </div>\n        <Notification message={dropDownErrorMessage} type=\"error\" />\n        <div className=\"dropdowns\">\n          <div>\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <select value={rule} onChange={(e) => handleRuleChange(e)}>\n              <option value=\"\">Säännöt</option>\n              {rules.map(rule => <option key={rule.id} value={rule.id}>{rule.name}</option>)}\n            </select>\n            <br/>\n            <select value={category} onChange={(e) => handleCategoryChange(e)}>\n              <option value=\"\">Kategoria</option>\n              {categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)}\n            </select>\n            <br/>\n            <select value={language} onChange={(e) => handleLanguageChange(e)}>\n              <option value=\"\">Kieli</option>\n              {languages.map(language => <option key={language.id} value={language.id}>{language.name}</option>)}\n            </select>\n          </div>\n        </div>\n        <div className=\"creator\">\n          <div>\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              defaultValue={creatorName}\n              name=\"CreatorName\"\n              placeholder=\"Muokkaajan nimi\"\n              onChange={({ target }) => setCreatorName(target.value)}\n            />\n          </div>\n          <div>\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              defaultValue={creatorEmail}\n              name=\"CreatorEmail\"\n              placeholder=\"Muokkaajan sähköpostiosoite\"\n              onChange={({ target }) => setCreatorEmail(target.value)}\n            />\n          </div>\n        </div>\n\n        <Dropzone onDrop={onDrop}>\n          {({getRootProps, getInputProps}) => (\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              <div className=\"files\">\n                <div className=\"title\">Liitetiedostot</div>\n                {oldFiles && oldFiles.length > 0 &&\n                  <React.Fragment>\n                    {oldFiles.map((file) => (\n                      <div key={file}>{file.substring(file.indexOf('-') + 1, file.length)}<b onClick={(e) => handleDeleteOldFile(e, file)}>x</b></div>\n                    ))}\n                  </React.Fragment>\n                }\n                {newFiles && newFiles.length > 0 &&\n                  <React.Fragment>\n                    {newFiles.map((file) => (\n                      <div key={file.name}>{file.name}<b onClick={(e) => handleDeleteNewFile(e, file.name)}>x</b></div>\n                    ))}\n                  </React.Fragment>\n                }\n              </div>\n            </div>\n          )}\n        </Dropzone>\n\n        <div>\n          <button type=\"submit\" className=\"save-task-button\">Tallenna</button>\n          <button onClick={() => handleCancel()} className=\"return-button\">Peruuta</button>\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default ModifyTask","import React from 'react'\n\nconst TaskTextDisplay = ({ text }) => {\n  const htmlConverter = () => {\n    return { __html: `${text}` }\n  }\n\n  return (\n    <div dangerouslySetInnerHTML={htmlConverter()} />\n  )\n}\n\nexport default TaskTextDisplay","import React, { useState, useEffect } from 'react'\nimport taskService from '../services/task'\nimport ModifyTask from './ModifyTask'\nimport Notification from './Notification'\nimport TaskTextDisplay from './TaskTextDisplay'\nimport { useHistory } from 'react-router-dom'\n\nconst Task = ({ match, user }) => {\n\n  const [task, setTask] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const history = useHistory()\n\n  useEffect(() => {\n    taskService.getOneTask(match.params.id).then((response) => {\n      setTask(response)\n    })\n  }, [])\n\n  const handleDelete = () => {\n    try {\n      if (window.confirm(`Haluatko poistaa tehtävän: ${task.name}`)) {\n        taskService.deleteTask(task.id)\n        setMessage('Tehtävä poistettu')\n        setTimeout(() => {\n          setMessage(null)\n          if (task.pending) {\n            history.push('/admin')\n          } else {\n            history.push('/')\n          }\n        }, 2000)\n      }\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleAccept = () => {\n    try {\n      taskService.acceptTask(task.id)\n      setMessage('Tehtävä hyväksytty')\n      setTimeout(() => {\n        setMessage(null)\n        history.push('/admin')\n      }, 2000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      {modifyVisible ?\n        <ModifyTask setModifyVisible={setModifyVisible} task={task} setTask={setTask} />\n        :\n        <div className=\"task-view-info-background\">\n          <Notification message={message} type=\"success\" />\n          <Notification message={errorMessage} type=\"error\" />\n          {task &&\n            <div className=\"task-view-info\">\n              <div>\n                <h2>{task.name}</h2>\n              </div>\n              <h3>Tehtävänanto:</h3>\n              <TaskTextDisplay text={task.assignmentText} />\n              <h3>Rastimiehen ohjeet:</h3>\n              <TaskTextDisplay text={task.supervisorInstructions} />\n              <h3>Arvosteluasteikko:</h3>\n              <TaskTextDisplay text={task.gradingScale} />\n              <h3>Sarja:</h3>\n              {task.series.map(s => <span key={task.id + s.id}>{s.name}<br /></span>)}\n              <h3>Kategoria:</h3>\n              <p>{task.category && task.category.name}</p>\n              <h3>Sääntöluokka:</h3>\n              <p>{task.rules && task.rules.name}</p>\n              <h3>Tehtävän viimeisin muokkaaja:</h3>\n              <p>{task.creatorName}<br />{task.creatorEmail}</p>\n              <h3>Liitetiedostot:</h3>\n              {task.files && task.files.map((file) => (\n                <div key={file}>\n                  <a href={`https://kisapankki.blob.core.windows.net/files/${file}`}>\n                    {file.substring(file.indexOf('-') + 1, file.length)}\n                  </a>\n                </div>\n              ))}\n              {user &&\n                <div className=\"buttons\">\n                  <button onClick={() => setModifyVisible(true)} className=\"modify-view-button\">Muokkaa</button>\n                  {task.pending && <button className=\"accept-button\" onClick={() => handleAccept()}>Hyväksy</button>}\n                  <button className=\"delete-button\" onClick={() => handleDelete()}>Poista</button>\n                </div>}\n            </div>\n          }\n        </div>\n\n      }\n    </div>\n\n  )\n}\n\nexport default Task\n","import React, { useState, useEffect, Fragment } from 'react'\nimport { Route, Link, Redirect, useHistory } from 'react-router-dom'\nimport Login from './components/Login'\nimport TaskList from './components/TaskList'\nimport AddAdmin from './components/AddAdmin'\nimport AddTaskDropdown from './components/AddTaskDropdown'\nimport AddTask from './components/AddTask'\nimport Admin from './components/Admin'\nimport User from './components/User'\nimport Task from './components/Task'\nimport tokenService from './services/token'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const history = useHistory()\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const loggedUser = JSON.parse(loggedUserJSON)\n      setUser(loggedUser)\n      tokenService.setToken(loggedUser.token)\n    }\n  }, [])\n\n  const logout = () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n    tokenService.setToken(null)\n    history.push('/')\n    window.location.reload()\n  }\n\n  return (\n    <div>\n      <div className=\"header\">\n        <Link to=\"/\"><div className=\"logo\" /></Link>\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-header\">Lisää tehtävä</button></Link>\n\n        {user === null ?\n          <Fragment>\n            <Link to=\"/kirjautuminen\"><button className=\"login-button-header\">Kirjaudu</button></Link>\n          </Fragment>\n          :\n          <Fragment>\n            <Link to=\"/admin\"><button className=\"admin-button-header\">Admin</button></Link>\n            <div>\n              <div className=\"logged\">Kirjautuneena <Link to=\"/omasivu\" className=\"username-header\">{user.username}</Link></div>\n              <div className=\"logout\"><button className=\"logout-button-header\" onClick={() => logout()}>Kirjaudu ulos</button></div>\n            </div>\n          </Fragment>\n        }\n\n      </div>\n      <div className=\"admin-task-buttons-mobile\">\n        {user !== null && <Link to=\"/admin\"><button className=\"admin-button-mobile\">Admin</button></Link>}\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-mobile\">Lisää tehtävä</button></Link>\n      </div>\n      <div className=\"container\">\n        <Route exact path=\"/\" render={() => <TaskList user={user} />} />\n        <Route exact path=\"/tehtava/:id\" render={(match) => <Task {...match} user={user} />} />\n        <Route path=\"/kirjautuminen\" render={() => <Login setUser={setUser} />} />\n        <Route path=\"/lisaa_tehtava\" render={() => <AddTask />} />\n        <Route path=\"/omasivu\" render={() => (localStorage.getItem('loggedUser') ? <User user={user} setUser={setUser} /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/admin\" render={() => (localStorage.getItem('loggedUser') ? <Admin /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/lisaa_admin\" render={() => (localStorage.getItem('loggedUser') ? <AddAdmin /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/lisaa_pudotusvalikkoon\" render={() => (localStorage.getItem('loggedUser') ? <AddTaskDropdown /> : <Redirect to=\"/\" />)} />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}