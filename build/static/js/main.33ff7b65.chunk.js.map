{"version":3,"sources":["components/Notification.js","services/login.js","services/token.js","components/Login.js","services/task.js","services/series.js","services/rule.js","services/category.js","components/Search.js","components/TaskList.js","services/user.js","components/AddAdmin.js","components/Rule.js","services/language.js","components/Language.js","components/Series.js","components/Category.js","components/AddTaskDropdown.js","components/MDEditor.js","components/AddTask.js","components/TaskListPending.js","components/Admin.js","components/EditUser.js","components/ChangePassword.js","components/User.js","components/ModifyTask.js","components/TaskTextDisplay.js","components/Task.js","App.js","index.js"],"names":["Notification","message","type","className","baseUrl","process","credentials","a","async","axios","post","response","data","token","newToken","Login","setUser","useState","errorMessage","setErrorMessage","username","setUsername","password","setPassword","history","useHistory","onSubmit","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","tokenService","push","setTimeout","value","name","placeholder","onChange","target","baseUrlPending","task","config","headers","Authorization","get","id","search","put","delete","series","rule","cat","Search","setTasks","setAllTasks","setSearch","taskService","defaultValue","TaskList","allTasks","tasks","selectedCategory","setSelectedCategory","selectedSeries","setSelectedSeries","selectedRules","setSelectedRules","categories","setCategories","seriess","setSeriess","rules","setRules","isClearable","useEffect","then","categoryService","seriesService","ruleService","array","i","length","j","category","filter","getOptionLabel","option","getOptionValue","options","map","key","to","s","onClick","t","handleDelete","AddAdmin","setMessage","nameErrorMessage","setNameErrorMessage","usernameErrorMessage","setUsernameErrorMessage","passwordErrorMessage","setPasswordErrorMessage","setName","users","setUsers","userService","some","Rule","language","Language","setLanguage","languageService","Series","color","setColor","onChangeComplete","hex","Category","setCategory","AddTaskDropdown","MDEditor","setText","setMD","mdParser","MarkdownIt","renderHTML","text","render","html","AddTask","assignmentText","setAssignmentText","gradingScale","setGradingScale","supervisorInstructions","setSupervisorInstructions","assignmentTextMD","setAssignmentTextMD","gradingScaleMD","setGradingScaleMD","supervisorInstructionsMD","setSupervisorInstructionsMD","setRule","setSeries","languages","setLanguages","creatorName","setCreatorName","creatorEmail","setCreatorEmail","assignmentTextErrorMessage","setAssignmentTextErrorMessage","creatorNameErrorMessage","setCreatorNameErrorMessage","creatorEmailErrorMessage","setCreatorEmailErrorMessage","dropDownErrorMessage","setDropDownErrorMessage","addtaskService","location","reload","multiple","e","values","l","selected","handleSeriesChange","handleCategoryChange","handleRuleChange","handleLanguageChange","TaskListPending","exception","handleAccept","Admin","EditUser","setShowEdit","editedUser","error","ChangePassword","setShowChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","newPasswordAgain","setNewPasswordAgain","User","showEdit","showChangePassword","ModifyTask","setModifyVisible","setTask","modifiedTask","placeHolder","TaskTextDisplay","dangerouslySetInnerHTML","__html","Task","match","modifyVisible","params","pending","App","loggedUserJSON","getItem","loggedUser","parse","removeItem","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.33ff7b65.chunk.js","sourcesContent":["import React from 'react'\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/login`\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","let token = null\n\nconst getToken = () => token\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nexport default { getToken, setToken }\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Notification from './Notification'\nimport loginService from '../services/login'\nimport tokenService from '../services/token'\n\nconst Login = ({ setUser }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const history = useHistory()\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user),\n      )\n      setUser(user)\n      tokenService.setToken(user.token)\n      setUsername('')\n      setPassword('')\n      history.push('/')\n    } catch (exception) {\n      setErrorMessage('Väärä käyttäjätunnus/salasana')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"login-form\">\n      <h2>Kirjaudu sisään</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleLogin}>\n        <div>\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            placeholder=\"Salasana\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"login-button\">Kirjaudu</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Login\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/task`\nconst baseUrlPending = `${process.env.REACT_APP_API_URL}/task/pending`\n\n\nconst getTasks = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getPendingTasks = async () => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  const response = await axios.get(baseUrlPending, config)\n  return response.data\n}\n\nconst getSearchedTasks = async (search) => {\n  const response = await axios.post(`${baseUrl}/search`, search)\n  return response.data\n}\n\nconst getOneTask = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst addtask = async (task) => {\n  let config = null\n  const token = tokenService.getToken()\n\n  if (token) {\n    config = {\n      headers: { Authorization: token },\n    }\n  }\n\n  const response = await axios.post(baseUrl, task, config)\n  return response.data\n}\n\nconst updateTask = async (task) => {\n  let config = null\n  const token = tokenService.getToken()\n\n  if (token) {\n    config = {\n      headers: { Authorization: token },\n    }\n  }\n\n  const response = await axios.put(`${baseUrl}/${task.id}`, task, config)\n  return response.data\n}\n\nconst deleteTask = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nconst acceptTask = async (id) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n  const response = await axios.put(`${baseUrl}/${id}/accept`, id, config)\n  return response.data\n}\n\nexport default { addtask, getTasks, getOneTask, getSearchedTasks, updateTask, deleteTask, getPendingTasks, acceptTask }\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/series`\n\nconst getSeries = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addSeries = async (series) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, series, config)\n  return response.data\n}\n\nexport default { addSeries, getSeries }\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/rule`\n\nconst getRules = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addRule = async (rule) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, rule, config)\n  return response.data\n}\n\nexport default { addRule, getRules }\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/category`\n\nconst getCategories = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addCategory = async (cat) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, cat, config)\n  return response.data\n}\n\nexport default { addCategory, getCategories }\n","import React, { useState } from 'react'\nimport taskService from '../services/task'\nimport Notification from './Notification'\n\nconst Search = ({ setTasks, setAllTasks }) => {\n\n  const [search, setSearch] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const handleSearch = async (event) => {\n    event.preventDefault()\n    try {\n      const response = await taskService.getSearchedTasks({ search })\n      setTasks(response)\n      setAllTasks(response)\n    } catch (exception) {\n      setErrorMessage('Haku ei onnistunut')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleSearch} className=\"search-form\">\n        <input\n          className=\"search-input\"\n          type=\"text\"\n          defaultValue=''\n          name=\"search\"\n          placeholder=\"Hakutermi\"\n          onChange={({ target }) => setSearch(target.value)}\n        />\n        <button type=\"submit\" className=\"search-tasks-button\">Hae</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Search","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport taskService from '../services/task'\nimport seriesService from '../services/series'\nimport ruleService from '../services/rule'\nimport categoryService from '../services/category'\nimport Notification from './Notification'\nimport Select from 'react-select'\nimport Search from './Search'\n\nconst TaskList = ({ user }) => {\n  const [allTasks, setAllTasks] = useState([])\n  const [tasks, setTasks] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [selectedCategory, setSelectedCategory] = useState('')\n  const [selectedSeries, setSelectedSeries] = useState('')\n  const [selectedRules, setSelectedRules] = useState('')\n  const [categories, setCategories] = useState([])\n  const [seriess, setSeriess] = useState([])\n  const [rules, setRules] = useState([])\n  const [isClearable, setIsClearable] = useState(true)\n\n  useEffect(() => {\n    taskService.getTasks().then((response) => {\n      setTasks(response)\n      setAllTasks(response)\n    })\n\n    categoryService.getCategories().then((response) => {\n      setCategories(response)\n    })\n\n    seriesService.getSeries().then((response) => {\n      setSeriess(response)\n    })\n\n    ruleService.getRules().then((response) => {\n      setRules(response)\n    })\n  }, [])\n\n  useEffect(() => {\n    if (selectedSeries && selectedCategory && selectedRules) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (allTasks[i].series[j].id === selectedSeries.id && allTasks[i].category.id === selectedCategory.id && allTasks[i].rules.id === selectedRules.id) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedSeries && selectedCategory) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (allTasks[i].series[j].id === selectedSeries.id && allTasks[i].category.id === selectedCategory.id) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedSeries && selectedRules) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (allTasks[i].series[j].id === selectedSeries.id && allTasks[i].rules.id === selectedRules.id) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedCategory && selectedRules) {\n      setTasks(allTasks.filter(task => task.category.id === selectedCategory.id && task.rules.id === selectedRules.id))\n    } else if (selectedSeries) {\n      let array = []\n      for (let i = 0; i < allTasks.length; i++) {\n        for (let j = 0; j < allTasks[i].series.length; j++) {\n          if (allTasks[i].series[j].id === selectedSeries.id) {\n            array.push(allTasks[i])\n          }\n        }\n      }\n      setTasks(array)\n    } else if (selectedCategory) {\n      setTasks(allTasks.filter(task => task.category.id === selectedCategory.id))\n    } else if (selectedRules) {\n      setTasks(allTasks.filter(task => task.rules.id === selectedRules.id))\n    } else {\n      setTasks(allTasks)\n    }\n  }, [selectedCategory, selectedSeries, selectedRules])\n\n  const handleDelete = async (task) => {\n    try {\n      await taskService.deleteTask(task.id)\n      setTasks(tasks.filter(t => t.id !== task.id))\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCategoryFiltering = (category) => {\n    if (category) {\n      setSelectedCategory(category)\n    } else {\n      setSelectedCategory('')\n      setTasks(allTasks)\n    }\n  }\n\n  const handleSeriesFiltering = (series) => {\n    if (series) {\n      setSelectedSeries(series)\n    } else {\n      setSelectedSeries('')\n      setTasks(allTasks)\n    }\n  }\n  const handleRuleFiltering = (rules) => {\n    if (rules) {\n      setSelectedRules(rules)\n    } else {\n      setSelectedRules('')\n      setTasks(allTasks)\n    }\n  }\n\n  return (\n    <div className=\"task-list\">\n      <h1>Kisatehtäväpankki</h1>\n\n      <div className=\"search-filter-container\">\n        <div className=\"search\"><Search setTasks={setTasks} setAllTasks={setAllTasks} /></div>\n\n        <div className=\"filter\">\n          <Select\n            name=\"filter-series\"\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleSeriesFiltering}\n            options={seriess}\n            isClearable={isClearable}\n            placeholder={\"Sarja\"}\n          />\n        </div>\n\n        <div className=\"filter\">\n          <Select\n            name=\"filter-category\"\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleCategoryFiltering}\n            options={categories}\n            isClearable={isClearable}\n            placeholder={\"Kategoria\"}\n          />\n        </div>\n\n        <div className=\"filter\">\n          <Select\n            name=\"filter-rules\"\n            getOptionLabel={option => `${option.name}`}\n            getOptionValue={option => `${option.id}`}\n            onChange={handleRuleFiltering}\n            options={rules}\n            isClearable={isClearable}\n            placeholder={\"Säännöt\"}\n          />\n        </div>\n      </div>\n\n      <Notification message={errorMessage} />\n      {tasks && tasks.length > 0 &&\n      <div className=\"task-list-title\">\n        <span>Tehtävän nimi</span>\n        <span>Sarja</span>\n        <span>Kategoria</span>\n        {user && <span></span>}\n      </div>\n      }\n      {tasks.map((task) => (\n        <div className=\"task-list-item\" key={task.id}>\n          <span>\n            <Link to={`/tehtava/${task.id}`}>\n              {task.name}\n            </Link>\n          </span>\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n          <span>{task.category.name}</span>\n          {user && <span><button className=\"delete-button\" onClick={() => handleDelete(task)}>Poista</button></span>\n          }\n        </div>\n      ))}\n    </div>\n\n  )\n}\n\nexport default TaskList\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/user`\n\nconst getUsers = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addUser = async (credentials) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() }\n  }\n  const response = await axios.post(baseUrl, credentials, config)\n  return response.data\n}\n\nconst editUser = async (user) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() }\n  }\n\n  const response = await axios.put(baseUrl, user, config)\n  return response.data\n}\n\nexport default { addUser, getUsers, editUser }\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst AddAdmin = () => {\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(null)\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [users, setUsers] = useState([])\n\n  useEffect(() => {\n    userService.getUsers().then((response) => {\n      setUsers(response)\n    })\n  }, [])\n\n  const handleAddAdmin = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setUsernameErrorMessage(null)\n    setPasswordErrorMessage(null)\n    if (name.length < 3) {\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\n    }\n    if (username.length < 3) {\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\n    }\n    if (password.length < 3) {\n      setPasswordErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\n    }\n    if (users.some((user) => (user.username === username))) {\n      setUsernameErrorMessage('Käyttäjätunnus on varattu')\n    }\n    if (name.length < 3 || username.length < 3 || password.length < 3\n      || users.some((user) => (user.username === username))) {\n      return\n    }\n    try {\n      await userService.addUser({\n        name, username, password,\n      })\n      setName('')\n      setUsername('')\n      setPassword('')\n      setMessage('Ylläpitäjä lisätty!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setErrorMessage('Lisääminen epäonnistui')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"signup-form\">\n      <h2>Lisää ylläpitäjä</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleAddAdmin}>\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={usernameErrorMessage} type=\"error\" />\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={passwordErrorMessage} type=\"error\" />\n          <input\n            className=\"password\"\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            placeholder=\"Salasana\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"signup-button\">Lisää</button>\n      </form>\n    </div>\n  )\n}\n\nexport default AddAdmin\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport ruleService from '../services/rule'\n\nconst Rule = () => {\n  const [rules, setRules] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const handleRuleAdd = async (event) => {\n    event.preventDefault()\n    try {\n      await ruleService.addRule({\n        rules,\n      })\n      setRules('')\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"rule-form\">\n      <h2>Lisää sääntö</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleRuleAdd}>\n        <div>\n          <input\n            className=\"rule\"\n            type=\"text\"\n            value={rules}\n            name=\"Rules\"\n            placeholder=\"Sääntö\"\n            onChange={({ target }) => setRules(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"task-add-button\">Lisää</button>\n      </form>\n    </div>\n  )\n}\n\n\nexport default Rule\n","import axios from 'axios'\nimport tokenService from './token'\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/language`\n\nconst getLanguages = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addLanguage = async (language) => {\n  const config = {\n    headers: { Authorization: tokenService.getToken() },\n  }\n\n  const response = await axios.post(baseUrl, language, config)\n  return response.data\n}\n\nexport default { addLanguage, getLanguages }\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport languageService from '../services/language'\n\nconst Language = () => {\n  const [language, setLanguage] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const handleLanguageAdd = async (event) => {\n    event.preventDefault()\n    try {\n      await languageService.addLanguage({\n        language,\n      })\n      setLanguage('')\n    } catch (exception) {\n      setErrorMessage('Kielen lisääminen ei onnistunut')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"language-form\">\n      <h2>Lisää kieli</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleLanguageAdd}>\n        <div>\n          <input\n            className=\"language\"\n            type=\"text\"\n            value={language}\n            name=\"Language\"\n            placeholder=\"Kieli\"\n            onChange={({ target }) => setLanguage(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"language-add-button\">Lisää</button>\n      </form>\n    </div>\n  )\n}\n\n\nexport default Language\n","import React, { useState } from 'react'\nimport { CirclePicker } from 'react-color'\nimport Notification from './Notification'\nimport seriesService from '../services/series'\n\nconst Series = () => {\n  const [name, setName] = useState('')\n  const [color, setColor] = useState('#ffffff')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const handleSeriesAdd = async (event) => {\n    event.preventDefault()\n    try {\n      await seriesService.addSeries({ name, color })\n      setName('')\n      setColor('')\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"series-form\">\n      <h2>Lisää sarja</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleSeriesAdd}>\n        <div>\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div className=\"color-picker\">\n          <CirclePicker \n            color={color}\n            onChangeComplete={color => setColor(color.hex)}\n          />\n        </div>\n        <button type=\"submit\" className=\"series-submit-button\">Lisää</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Series\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport categoryService from '../services/category'\n\nconst Category = () => {\n  const [category, setCategory] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const handleCategoryAdd = async (event) => {\n    event.preventDefault()\n    try {\n      await categoryService.addCategory({\n        category,\n      })\n      setCategory('')\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"category-form\">\n      <h2>Lisää kategoria</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleCategoryAdd}>\n        <div>\n          <input\n            className=\"category\"\n            type=\"text\"\n            value={category}\n            name=\"Category\"\n            placeholder=\"Kategoria\"\n            onChange={({ target }) => setCategory(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"category-add-button\">Lisää</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Category\n","import React from 'react'\nimport Rule from './Rule'\nimport Language from './Language'\nimport Series from './Series'\nimport Category from './Category'\n\nconst AddTaskDropdown = () => (\n  <div>\n    <Rule />\n    <Language />\n    <Series />\n    <Category />\n  </div>\n)\n\nexport default AddTaskDropdown\n","import React from 'react'\nimport MarkdownIt from 'markdown-it'\nimport MdEditor from 'react-markdown-editor-lite'\nimport 'react-markdown-editor-lite/lib/index.css'\n\nconst MDEditor = ({ setText, placeholder, setMD, value }) => {\n  const mdParser = new MarkdownIt()\n\n  const handleEditorChange = ({ html, text }) => {\n    setText(html)\n    setMD(text)\n  }\n\n  return (\n    <MdEditor\n      value={value}\n      placeholder={placeholder}\n      renderHTML={(text) => mdParser.render(text)}\n      onChange={handleEditorChange}\n    />\n  )\n}\n\nexport default MDEditor\n\n\n\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport addtaskService from '../services/task'\nimport ruleService from '../services/rule'\nimport categoryService from '../services/category'\nimport seriesService from '../services/series'\nimport languageService from '../services/language'\nimport MDEditor from './MDEditor'\n\n\nconst AddTask = () => {\n\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [name, setName] = useState('')\n  const [assignmentText, setAssignmentText] = useState('')\n  const [gradingScale, setGradingScale] = useState('')\n  const [supervisorInstructions, setSupervisorInstructions] = useState('')\n  const [assignmentTextMD, setAssignmentTextMD] = useState('')\n  const [gradingScaleMD, setGradingScaleMD] = useState('')\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState('')\n  const [rules, setRules] = useState([])\n  const [rule, setRule] = useState('')\n  const [categories, setCategories] = useState([])\n  const [category, setCategory] = useState('')\n  const [seriess, setSeriess] = useState([])\n  const [series, setSeries] = useState([])\n  const [languages, setLanguages] = useState([])\n  const [language, setLanguage] = useState('')\n  const [creatorName, setCreatorName] = useState('')\n  const [creatorEmail, setCreatorEmail] = useState('')\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\n\n  useEffect(() => {\n    ruleService.getRules().then(response => {\n      setRules(response)\n    })\n    categoryService.getCategories().then(response => {\n      setCategories(response)\n    })\n    seriesService.getSeries().then(response => {\n      setSeriess(response)\n    })\n    languageService.getLanguages().then(response => {\n      setLanguages(response)\n    })\n  }, [])\n\n  const handleRuleChange = (e) => {\n    setRule(e.target.value)\n  }\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value)\n  }\n\n  const handleSeriesChange = (e) => {\n    let options = e.target.options\n    let values = []\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected && options[i].value !== '') {\n        values.push(options[i].value)\n      }\n    }\n    setSeries(values)\n  }\n\n  const handleLanguageChange = (e) => {\n    setLanguage(e.target.value)\n  }\n\n  const handleAddTask = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setAssignmentTextErrorMessage(null)\n    setCreatorNameErrorMessage(null)\n    setCreatorEmailErrorMessage(null)\n    setDropDownErrorMessage(null)\n    if (name.length < 1) {\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\n    }\n    if (assignmentText.length < 1) {\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\n    }\n    if (creatorName.length < 1) {\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\n    }\n    if (creatorEmail.length < 1) {\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\n    }\n    if (language === '' || rule === '' || series === '' || category === '') {\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\n    }\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\n            || language === '' || rule === '' || series === '' || category === '') {\n      return\n    }\n    setAssignmentText(JSON.stringify(assignmentText))\n    setGradingScale(JSON.stringify(gradingScale))\n    setSupervisorInstructions(JSON.stringify(supervisorInstructions))\n\n    try {\n      await addtaskService.addtask({\n        name, rule, category, series,\n        language, assignmentText, gradingScale,\n        creatorName, creatorEmail, supervisorInstructions,\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD\n      })\n      setName('')\n      setRule('')\n      setCategory('')\n      setSeries('')\n      setLanguage('')\n      setAssignmentText('')\n      setGradingScale('')\n      setCreatorEmail('')\n      setCreatorName('')\n      setSupervisorInstructions('')\n      setMessage('Tehtävä lisätty!')\n      setTimeout(() => {\n        setMessage(null)\n        window.location.reload()\n      }, 2000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n\n  return (\n    <div className=\"add-task-container\">\n      <h2>Lisää tehtävä</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleAddTask}>\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"task-title\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Tehtävän nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <h4>Tehtävänanto</h4>\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} placeholder=\"Tehtävänanto\" />\n        </div>\n        <div>\n          <h4>Arvostelu</h4>\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} placeholder=\"Arvostelu\" />\n        </div>\n        <div className=\"instructions\">\n          <h4>Rastimiehen ohje</h4>\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} placeholder=\"Rastimiehen ohje\" />\n        </div>\n        <Notification message={dropDownErrorMessage} type=\"error\" />\n        <div className=\"dropdowns\">\n          <div>\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <select value={category} onChange={(e) => handleCategoryChange(e)}>\n              <option value=\"\">Kategoria</option>\n              {categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)}\n            </select>\n            <br/>\n            <select value={rule} onChange={(e) => handleRuleChange(e)}>\n              <option value=\"\">Säännöt</option>\n              {rules.map(rule => <option key={rule.id} value={rule.id}>{rule.name}</option>)}\n            </select>\n            <br/>\n            <select value={language} onChange={(e) => handleLanguageChange(e)}>\n              <option value=\"\">Kieli</option>\n              {languages.map(language => <option key={language.id} value={language.id}>{language.name}</option>)}\n            </select>\n          </div>\n        </div>\n        <div className=\"creator\">\n          <div>\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              value={creatorName}\n              name=\"CreatorName\"\n              placeholder=\"Lisääjän nimi\"\n              onChange={({ target }) => setCreatorName(target.value)}\n            />\n          </div>\n          <div>\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              value={creatorEmail}\n              name=\"CreatorEmail\"\n              placeholder=\"Lisääjän sähköpostiosoite\"\n              onChange={({ target }) => setCreatorEmail(target.value)}\n            />\n          </div>\n        </div>\n        <button type=\"submit\" className=\"add-task-button\">Lisää tehtävä</button>\n      </form>\n    </div>\n  )\n}\nexport default AddTask","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport taskService from '../services/task'\nimport Notification from './Notification'\n\n\nconst TaskListPending = () => {\n  const [tasks, setTasks] = useState([])\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    taskService.getPendingTasks().then((response) => {\n      setTasks(response)\n    })\n  }, [])\n\n  const handleAccept = (id) => {\n    try {\n      taskService.acceptTask(id)\n      setTasks(tasks.filter(t => t.id !== id))\n      setMessage('Tehtävä hyväksytty')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleDelete = async (id) => {\n    try {\n      await taskService.deleteTask(id)\n      setTasks(tasks.filter(t => t.id !== id))\n    } catch (exeption) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"task-list\">\n      <h1>Hyväksyntää odottavat kisatehtävät</h1>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      {tasks && tasks.length > 0 &&\n      <div className=\"task-list-title\">\n        <span>Tehtävän nimi</span>\n        <span>Sarja</span>\n        <span>Kategoria</span>\n        <span></span>\n      </div>\n      }\n      {tasks.map((task) => (\n        <div className={`task-list-item pending`} key={task.id}>\n          <span>\n            <Link to={`/tehtava/${task.id}`}>\n              {task.name}\n            </Link>\n          </span>\n          <span>{task.series.map(s => <div key={task.id + s.id}>{s.name} </div>)}</span>\n          <span>{task.category.name}</span>\n          <span>\n            <button className=\"accept-button\" onClick={() => handleAccept(task.id)}>Hyväksy</button>\n            <button className=\"delete-button\" onClick={() => handleDelete(task.id)}>Poista</button>\n          </span>\n        </div>\n      ))}\n\n    </div>\n\n  )\n}\n\nexport default TaskListPending\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport TaskListPending from './TaskListPending'\n\nconst Admin = () => (\n  <div>\n    <TaskListPending />\n    <Link to=\"/omasivu\">Omat tiedot</Link>\n    <br />\n    <Link to=\"/lisaa_admin\">Lisää ylläpitäjä</Link>\n    <br />\n    <Link to=\"/lisaa_pudotusvalikkoon\">Lisää sääntö/kieli/sarja/kategoria</Link>\n  </div>\n)\n\nexport default Admin\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst EditUser = ({ setShowEdit, user, setUser, setMessage }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState(null)\n  const [name, setName] = useState(user.name)\n  const [username, setUsername] = useState(user.username)\n\n  const handleEditUser = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setUsernameErrorMessage(null)\n    if (name.length < 3) {\n      setNameErrorMessage('Nimessä pitää olla vähintään 3 kirjainta')\n    }\n    if (username.length < 3) {\n      setUsernameErrorMessage('Käyttäjätunnuksessa pitää olla vähintään 3 kirjainta')\n    }\n    if (name.length < 3 || username.length < 3) {\n      return\n    }\n    try {\n      const editedUser = await userService.editUser({\n        name, username\n      })\n      setUser(editedUser)\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(editedUser),\n      )\n      setShowEdit(false)\n      setMessage('Tietoja muokattu!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"username already exists\") {\n        setErrorMessage('Käyttäjätunnus on varattu')\n      } else {\n        setErrorMessage('Muokkaaminen epäonnistui')\n      }\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"edit-user-form\">\n      <h2>Omat tiedot</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleEditUser}>\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <label>Nimi</label><br/>\n          <input\n            className=\"name\"\n            type=\"text\"\n            value={name}\n            name=\"Name\"\n            placeholder=\"Nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <Notification message={usernameErrorMessage} type=\"error\" />\n          <label>Käyttäjätunnus</label><br/>\n          <input\n            className=\"username\"\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            placeholder=\"Käyttäjätunnus\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"edit-button\">Tallenna</button>\n        <button onClick={() => setShowEdit(false)} className=\"cancel-button\">Peruuta</button>\n      </form>\n    </div>\n  )\n}\n\nexport default EditUser\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport userService from '../services/user'\n\nconst ChangePassword = ({ setShowChangePassword, setMessage }) => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [newPasswordAgain, setNewPasswordAgain] = useState('')\n\n  const handleChangePassword = async (event) => {\n    event.preventDefault()\n    setErrorMessage(null)\n    if (newPassword.length < 3) {\n      setErrorMessage('Salasanassa pitää olla vähintään 3 kirjainta')\n      return\n    }\n    if (newPassword !== newPasswordAgain) {\n      setErrorMessage('Salasanat eivät täsmää')\n      return\n    }\n    try {\n      await userService.editUser({\n        oldPassword, newPassword\n      })\n      setOldPassword('')\n      setNewPassword('')\n      setNewPasswordAgain('')\n      setShowChangePassword(false)\n      setMessage('Salasana vaihdettu!')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.error && error.response.data.error === \"incorrect password\") {\n        setErrorMessage('Vanha salasana ei täsmää')\n      } else {\n        setErrorMessage('Salasanan vaihtaminen epäonnistui')\n      }\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className=\"change-password-form\">\n      <h2>Vaihda salasana</h2>\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleChangePassword}>\n        <div>\n          <input\n            className=\"old-password\"\n            type=\"password\"\n            value={oldPassword}\n            placeholder=\"Vanha salasana\"\n            onChange={({ target }) => setOldPassword(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"new-password\"\n            type=\"password\"\n            value={newPassword}\n            placeholder=\"Uusi salasana\"\n            onChange={({ target }) => setNewPassword(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            className=\"new-password-again\"\n            type=\"password\"\n            value={newPasswordAgain}\n            placeholder=\"Uusi salasana uudelleen\"\n            onChange={({ target }) => setNewPasswordAgain(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"change-password-button\">Tallenna</button>\n        <button onClick={() => setShowChangePassword(false)} className=\"cancel-button\">Peruuta</button>\n      </form>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import React, { useState } from 'react'\nimport Notification from './Notification'\nimport EditUser from './EditUser'\nimport ChangePassword from './ChangePassword'\n\nconst User = ({ user, setUser }) => {\n  const [message, setMessage] = useState(null)\n  const [showEdit, setShowEdit] = useState(false)\n  const [showChangePassword, setShowChangePassword] = useState(false)\n\n  const editUser = () => {\n    setShowChangePassword(false)\n    setShowEdit(true)\n  }\n\n  const changePassword = () => {\n    setShowEdit(false)\n    setShowChangePassword(true)\n  }\n\n  return (\n    <div>\n      {user\n        && (\n          <div className=\"user-info\">\n            {!showEdit && !showChangePassword\n            && (\n              <div>\n                <Notification message={message} type=\"success\" />\n                <h2>Omat tiedot</h2>\n                <p>\n                  <b>Nimi: </b>\n                  {user.name}\n                </p>\n                <p>\n                  <b>Käyttäjätunnus: </b>\n                  {user.username}\n                </p>\n                <button className=\"edit-user-button\" onClick={() => editUser()}>Muokkaa</button>\n                <button className=\"change-password-button\" onClick={() => changePassword()}>Vaihda salasana</button>\n              </div>\n            )}\n            {showEdit && <EditUser setShowEdit={setShowEdit} user={user} setUser={setUser} setMessage={setMessage} />}\n            {showChangePassword && <ChangePassword setShowChangePassword={setShowChangePassword} setMessage={setMessage} />}\n          </div>\n        )}\n    </div>\n  )\n}\n\nexport default User\n","import React, { useState, useEffect } from 'react'\nimport Notification from './Notification'\nimport taskService from '../services/task'\nimport ruleService from '../services/rule'\nimport categoryService from '../services/category'\nimport seriesService from '../services/series'\nimport languageService from '../services/language'\nimport MDEditor from './MDEditor'\n\nconst ModifyTask = ({ setModifyVisible, task, setTask }) => {\n\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [name, setName] = useState(task.name)\n  const [assignmentText, setAssignmentText] = useState(task.assignmentText)\n  const [gradingScale, setGradingScale] = useState(task.gradingScale)\n  const [supervisorInstructions, setSupervisorInstructions] = useState(task.supervisorInstructions)\n  const [assignmentTextMD, setAssignmentTextMD] = useState(task.assignmentTextMD)\n  const [gradingScaleMD, setGradingScaleMD] = useState(task.gradingScaleMD)\n  const [supervisorInstructionsMD, setSupervisorInstructionsMD] = useState(task.supervisorInstructionsMD)\n  const [rules, setRules] = useState([])\n  const [rule, setRule] = useState(task.rules.id)\n  const [categories, setCategories] = useState([])\n  const [category, setCategory] = useState(task.category.id)\n  const [seriess, setSeriess] = useState([])\n  const [series, setSeries] = useState(task.series.map(s => s.id))\n  const [languages, setLanguages] = useState([])\n  const [language, setLanguage] = useState(task.language.id)\n  const [creatorName, setCreatorName] = useState(task.creatorName)\n  const [creatorEmail, setCreatorEmail] = useState(task.creatorEmail)\n  const [nameErrorMessage, setNameErrorMessage] = useState(null)\n  const [assignmentTextErrorMessage, setAssignmentTextErrorMessage] = useState(null)\n  const [creatorNameErrorMessage, setCreatorNameErrorMessage] = useState(null)\n  const [creatorEmailErrorMessage, setCreatorEmailErrorMessage] = useState(null)\n  const [dropDownErrorMessage, setDropDownErrorMessage] = useState(null)\n\n  let id = task.id\n\n  useEffect(() => {\n    ruleService.getRules().then(response => {\n      setRules(response)\n    })\n    categoryService.getCategories().then(response => {\n      setCategories(response)\n    })\n    seriesService.getSeries().then(response => {\n      setSeriess(response)\n    })\n    languageService.getLanguages().then(response => {\n      setLanguages(response)\n    })\n  }, [])\n\n  const handleRuleChange = (e) => {\n    setRule(e.target.value)\n  }\n\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value)\n  }\n\n  const handleSeriesChange = (e) => {\n    let options = e.target.options\n    let values = []\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected && options[i].value !== '') {\n        values.push(options[i].value)\n      }\n    }\n    setSeries(values)\n  }\n\n  const handleLanguageChange = (e) => {\n    setLanguage(e.target.value)\n  }\n\n  const handleModifyTask = async (event) => {\n    event.preventDefault()\n    setNameErrorMessage(null)\n    setAssignmentTextErrorMessage(null)\n    setCreatorNameErrorMessage(null)\n    setCreatorEmailErrorMessage(null)\n    setDropDownErrorMessage(null)\n    if (name.length < 1) {\n      setNameErrorMessage('Nimi ei saa olla tyhjä')\n    }\n    if (assignmentText.length < 1) {\n      setAssignmentTextErrorMessage('Tehtävänanto ei saa olla tyhjä')\n    }\n    if (creatorName.length < 1) {\n      setCreatorNameErrorMessage('Lisääjän nimi ei saa olla tyhjä')\n    }\n    if (creatorEmail.length < 1) {\n      setCreatorEmailErrorMessage('Lisääjän sähköposti ei saa olla tyhjä')\n    }\n    if (language === '' || rule === '' || series === '' || category === '') {\n      setDropDownErrorMessage('Valitsethan arvon kaikkiin pudotuskenttiin')\n    }\n    if (name.length < 1 || assignmentText.length < 1 || creatorName.length < 1 || creatorEmail.length < 1\n      || language === '' || rule === '' || series === '' || category === '') {\n      return\n    }\n    try {\n      const modifiedTask = await taskService.updateTask({\n        name, rule, category, series,\n        language, assignmentText, gradingScale,\n        creatorName, creatorEmail, supervisorInstructions, id,\n        assignmentTextMD, gradingScaleMD, supervisorInstructionsMD\n      })\n      setMessage('Tehtävä tallennettu!')\n      setTask(modifiedTask)\n      setTimeout(() => {\n        setMessage(null)\n        window.location.reload()\n      }, 1000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCancel = () => {\n    setModifyVisible(false)\n  }\n\n  return (\n    <div className=\"modify-task-container\">\n      <h2>Muokkaa tehtävää</h2>\n      <Notification message={message} type=\"success\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <form onSubmit={handleModifyTask} className=\"modify-form\">\n        <div>\n          <Notification message={nameErrorMessage} type=\"error\" />\n          <input\n            className=\"task-title\"\n            type=\"text\"\n            defaultValue={name}\n            name=\"Name\"\n            placeholder=\"Tehtävän nimi\"\n            onChange={({ target }) => setName(target.value)}\n          />\n        </div>\n        <div>\n          <h4>Tehtävänanto</h4>\n          <Notification message={assignmentTextErrorMessage} type=\"error\" />\n          <MDEditor setText={setAssignmentText} setMD={setAssignmentTextMD} value={assignmentTextMD} placeHolder=\"Tehtävänanto\" />\n        </div>\n        <div>\n          <h4>Arvostelu</h4>\n          <MDEditor setText={setGradingScale} setMD={setGradingScaleMD} value={gradingScaleMD} placeHolder=\"Arvostelu\" />\n        </div>\n        <div className=\"instructions\">\n          <h4>Rastimiehen ohje</h4>\n          <MDEditor setText={setSupervisorInstructions} setMD={setSupervisorInstructionsMD} value={supervisorInstructionsMD} placeHolder=\"Rastimiehen ohje\" />\n        </div>\n        <Notification message={dropDownErrorMessage} type=\"error\" />\n        <div className=\"dropdowns\">\n          <div>\n            <select multiple value={series} onChange={(e) => handleSeriesChange(e)} className=\"multiple-series\">\n              <option value=\"\" className=\"series-info\">Sarja (paina Ctrl, jos useita)</option>\n              {seriess.map(series => <option key={series.id} value={series.id}>{series.name}</option>)}\n            </select>\n          </div>\n          <div>\n            <select value={category} onChange={(e) => handleCategoryChange(e)}>\n              <option value=\"\">Kategoria</option>\n              {categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)}\n            </select>\n            <br/>\n            <select value={rule} onChange={(e) => handleRuleChange(e)}>\n              <option value=\"\">Säännöt</option>\n              {rules.map(rule => <option key={rule.id} value={rule.id}>{rule.name}</option>)}\n            </select>\n            <br/>\n            <select value={language} onChange={(e) => handleLanguageChange(e)}>\n              <option value=\"\">Kieli</option>\n              {languages.map(language => <option key={language.id} value={language.id}>{language.name}</option>)}\n            </select>\n          </div>\n        </div>\n        <div className=\"creator\">\n          <div>\n            <Notification message={creatorNameErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              defaultValue={creatorName}\n              name=\"CreatorName\"\n              placeholder=\"Muokkaajan nimi\"\n              onChange={({ target }) => setCreatorName(target.value)}\n            />\n          </div>\n          <div>\n            <Notification message={creatorEmailErrorMessage} type=\"error\" />\n            <input\n              className=\"\"\n              type=\"text\"\n              defaultValue={creatorEmail}\n              name=\"CreatorEmail\"\n              placeholder=\"Muokkaajan sähköpostiosoite\"\n              onChange={({ target }) => setCreatorEmail(target.value)}\n            />\n          </div>\n        </div>\n        <div>\n          <button type=\"submit\" className=\"save-task-button\">Tallenna</button>\n          <button onClick={() => handleCancel()} className=\"return-button\">Peruuta</button>\n        </div>\n      </form>\n    </div>\n  )\n}\nexport default ModifyTask","import React from 'react'\n\nconst TaskTextDisplay = ({ text }) => {\n  const htmlConverter = () => {\n    return { __html: `${text}` }\n  }\n\n  return (\n    <div dangerouslySetInnerHTML={htmlConverter()} />\n  )\n}\n\nexport default TaskTextDisplay","import React, { useState, useEffect } from 'react'\nimport taskService from '../services/task'\nimport ModifyTask from './ModifyTask'\nimport Notification from './Notification'\nimport TaskTextDisplay from './TaskTextDisplay'\nimport { useHistory } from 'react-router-dom'\n\nconst Task = ({ match, user }) => {\n  const [task, setTask] = useState(null)\n  const [modifyVisible, setModifyVisible] = useState(false)\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const history = useHistory()\n\n  useEffect(() => {\n    taskService.getOneTask(match.params.id).then((response) => {\n      setTask(response)\n    })\n  }, [])\n\n  const handleDelete = () => {\n    try {\n      taskService.deleteTask(task.id)\n      setMessage('Tehtävä poistettu')\n      setTimeout(() => {\n        setMessage(null)\n        if (task.pending) {\n          history.push('/admin')\n        } else {\n          history.push('/')\n        }\n      }, 2000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleAccept = () => {\n    try {\n      taskService.acceptTask(task.id)\n      setMessage('Tehtävä hyväksytty')\n      setTimeout(() => {\n        setMessage(null)\n        history.push('/admin')\n      }, 2000)\n    } catch (exception) {\n      setErrorMessage('Jotain meni vikaan')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n\n\n  return (\n    <div>\n      {modifyVisible ?\n        <ModifyTask setModifyVisible={setModifyVisible} task={task} setTask={setTask} />\n        :\n        <div className=\"task-view-info-background\">\n          <Notification message={message} type=\"success\" />\n          <Notification message={errorMessage} type=\"error\" />\n          {task &&\n            <div className=\"task-view-info\">\n              <h2>{task.name}</h2>\n              <h3>Tehtävänanto:</h3>\n              <TaskTextDisplay text={task.assignmentText} />\n              <h3>Rastimiehen ohjeet:</h3>\n              <TaskTextDisplay text={task.supervisorInstructions} />\n              <h3>Arvosteluasteikko:</h3>\n              <TaskTextDisplay text={task.gradingScale} />\n              <h3>Sarja:</h3>\n              {task.series.map(s => <span key={task.id + s.id}>{s.name}<br /></span>)}\n              <h3>Kategoria:</h3>\n              <p>{task.category.name}</p>\n              <h3>Sääntöluokka:</h3>\n              <p>{task.rules.name}</p>\n              <h3>Tehtävän viimeisin muokkaaja:</h3>\n              <p>{task.creatorName}<br />{task.creatorEmail}</p>\n\n              {user !== null &&\n                <div>\n                  <button onClick={() => setModifyVisible(true)} className=\"modify-view-button\">Muokkaa</button>\n                  {task.pending && <button className=\"accept-button\" onClick={() => handleAccept()}>Hyväksy</button>}\n                  <button className=\"delete-button\" onClick={() => handleDelete()}>Poista</button>\n                </div>}\n            </div>\n          }\n        </div>\n\n      }\n    </div>\n\n  )\n}\n\nexport default Task\n","import React, { useState, useEffect, Fragment } from 'react'\nimport { Route, Link, Redirect, useHistory } from 'react-router-dom'\nimport Login from './components/Login'\nimport TaskList from './components/TaskList'\nimport AddAdmin from './components/AddAdmin'\nimport AddTaskDropdown from './components/AddTaskDropdown'\nimport AddTask from './components/AddTask'\nimport Admin from './components/Admin'\nimport User from './components/User'\nimport Task from './components/Task'\nimport tokenService from './services/token'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const history = useHistory()\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const loggedUser = JSON.parse(loggedUserJSON)\n      setUser(loggedUser)\n      tokenService.setToken(loggedUser.token)\n    }\n  }, [])\n\n  const logout = () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n    tokenService.setToken(null)\n    history.push('/')\n    window.location.reload()\n  }\n\n  return (\n    <div>\n      <div className=\"header\">\n        <Link to=\"/\"><div className=\"logo\" /></Link>\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-header\">Lisää tehtävä</button></Link>\n\n        {user === null ?\n          <Fragment>\n            <Link to=\"/kirjautuminen\"><button className=\"login-button-header\">Kirjaudu</button></Link>\n          </Fragment>\n          :\n          <Fragment>\n            <Link to=\"/admin\"><button className=\"admin-button-header\">Admin</button></Link>\n            <div>\n              <div className=\"logged\">Kirjautuneena <Link to=\"/admin\" className=\"username-header\">{user.username}</Link></div>\n              <div className=\"logout\"><button className=\"logout-button-header\" onClick={() => logout()}>Kirjaudu ulos</button></div>\n            </div>\n          </Fragment>\n        }\n\n      </div>\n      <div className=\"admin-task-buttons-mobile\">\n        {user !== null && <Link to=\"/admin\"><button className=\"admin-button-mobile\">Admin</button></Link>}\n        <Link to=\"/lisaa_tehtava\"><button className=\"addtask-button-mobile\">Lisää tehtävä</button></Link>\n      </div>\n      <div className=\"container\">\n        <Route exact path=\"/\" render={() => <TaskList user={user} />} />\n        <Route exact path=\"/tehtava/:id\" render={(match) => <Task {...match} user={user} />} />\n        <Route path=\"/kirjautuminen\" render={() => <Login setUser={setUser} />} />\n        <Route path=\"/lisaa_tehtava\" render={() => <AddTask />} />\n        <Route path=\"/omasivu\" render={() => (user ? <User user={user} setUser={setUser} /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/admin\" render={() => (user ? <Admin /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/lisaa_admin\" render={() => (user ? <AddAdmin /> : <Redirect to=\"/\" />)} />\n        <Route path=\"/lisaa_pudotusvalikkoon\" render={() => (user ? <AddTaskDropdown /> : <Redirect to=\"/\" />)} />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}